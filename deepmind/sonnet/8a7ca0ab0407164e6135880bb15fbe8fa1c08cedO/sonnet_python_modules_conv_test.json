[{"lineNumber": 35, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 364, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 991, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 991, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1237, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1237, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1737, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1737, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2088, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2088, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2256, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2256, "col_offset": 48, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2312, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2312, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2625, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2625, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3024, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3024, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3585, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3585, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 36, "col_offset": 5, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 44, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 54, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "test", "type": "Any"}, {"lineNumber": 99, "col_offset": 2, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 100, "col_offset": 2, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 101, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 102, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 189, "col_offset": 2, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 190, "col_offset": 2, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 364, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 991, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 991, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1237, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1237, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 1737, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1737, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1740, "col_offset": 2, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1741, "col_offset": 2, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1742, "col_offset": 2, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1743, "col_offset": 2, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1744, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1745, "col_offset": 2, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1746, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1747, "col_offset": 2, "nodeName": "use_bias", "type": "List[bool]"}, {"lineNumber": 1748, "col_offset": 2, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1749, "col_offset": 2, "nodeName": "use_output_shape", "type": "List[bool]"}, {"lineNumber": 1757, "col_offset": 2, "nodeName": "in_shape", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1758, "col_offset": 2, "nodeName": "out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1759, "col_offset": 2, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1760, "col_offset": 2, "nodeName": "kernel_shape2", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1761, "col_offset": 2, "nodeName": "stride_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 2088, "col_offset": 23, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2088, "col_offset": 47, "nodeName": "test", "type": "Any"}, {"lineNumber": 2256, "col_offset": 24, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2256, "col_offset": 48, "nodeName": "test", "type": "Any"}, {"lineNumber": 2312, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2312, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 2625, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2625, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 3024, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 3024, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 3585, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 3585, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 3841, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "x", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "VALID", "type": "str"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "VALID", "type": "str"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 299, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 311, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 322, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 364, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 402, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "in_width", "type": "int"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 415, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 416, "col_offset": 21, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 630, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 647, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 704, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 741, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 785, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 787, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 826, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 849, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 872, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 873, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 881, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 902, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 910, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 911, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 919, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 920, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 923, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 933, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 936, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 945, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 946, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 959, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 962, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 971, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 972, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 983, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 991, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 998, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 999, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1000, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1001, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1002, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1003, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1004, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1005, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 1006, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 1006, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1011, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1013, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1040, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1050, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1056, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1065, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1066, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1076, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1077, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1100, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1101, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1102, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1106, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1107, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1108, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1115, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1116, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1137, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1148, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1157, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1162, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1163, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1164, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1165, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1179, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1190, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1201, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1210, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1215, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1216, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1217, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1218, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1232, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1237, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1245, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1246, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1247, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1248, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1250, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1264, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1274, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1287, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1297, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1308, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1309, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1310, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1310, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1311, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1326, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1350, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1364, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1386, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1399, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1418, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1429, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1430, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 1456, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1469, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1470, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1498, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1500, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1517, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1518, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1542, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1543, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1567, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1568, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1569, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1571, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1572, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1592, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1593, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1601, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1602, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1609, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1610, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1618, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1619, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1626, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1627, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1635, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1636, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1644, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1645, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1648, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1657, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1658, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1661, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1670, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1671, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1674, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1683, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1684, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1696, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1697, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1699, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1700, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1701, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 1702, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 1704, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 1729, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1730, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1737, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1746, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1746, "col_offset": 23, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1746, "col_offset": 33, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1746, "col_offset": 44, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1746, "col_offset": 55, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1751, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 1751, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1751, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1751, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1757, "col_offset": 13, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1758, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1758, "col_offset": 20, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1759, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1759, "col_offset": 23, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1760, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1761, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1761, "col_offset": 23, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1776, "col_offset": 7, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1789, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 1790, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1806, "col_offset": 7, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1823, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1833, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1861, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1892, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1928, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1952, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1953, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1954, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1956, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1957, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1992, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2001, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2018, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2039, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2048, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2065, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2072, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2073, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2088, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2103, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2104, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2105, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2129, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2130, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2131, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2156, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2157, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2158, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2182, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2183, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2184, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2186, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2187, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2189, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 2190, "col_offset": 4, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 2214, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2215, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2217, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2218, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2219, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 2220, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 2222, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 2247, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2248, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2256, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2264, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2265, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2266, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2270, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2284, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2285, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2286, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2287, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2288, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2289, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2303, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2304, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2306, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2312, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2319, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2319, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2320, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2320, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2321, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2321, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2322, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2322, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2323, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2323, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2324, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2324, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2325, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2325, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2326, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2326, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2328, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2329, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2330, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2340, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2340, "col_offset": 19, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2341, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2341, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2342, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2342, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2343, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2343, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2344, "col_offset": 4, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2344, "col_offset": 19, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2345, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2345, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2347, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2356, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2360, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2378, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2394, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2413, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2436, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2447, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2448, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2470, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2495, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2497, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2503, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2504, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2529, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2557, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2583, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2584, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2604, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2605, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2606, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2608, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2609, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2625, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2632, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2632, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2633, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2633, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2634, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2634, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2635, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2635, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2636, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2638, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2638, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2639, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2639, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2640, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2640, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2641, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2643, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2643, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2644, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2648, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 2656, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2656, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2657, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2657, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2658, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2658, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2659, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2659, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2660, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2660, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2661, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2661, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2662, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2662, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2664, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2673, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2680, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2698, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2723, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2750, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2775, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2787, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2788, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2789, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2815, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2828, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2829, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2859, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2862, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2881, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2912, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2941, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2942, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2959, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2960, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2961, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2971, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2972, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2973, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3000, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3001, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3002, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3004, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3005, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3024, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3032, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3033, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3034, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3035, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3036, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3037, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3038, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3039, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3040, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3054, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3064, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3075, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3076, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3076, "col_offset": 15, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3076, "col_offset": 27, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3077, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3077, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3078, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3078, "col_offset": 21, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3078, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3093, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3147, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 3160, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 3180, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3191, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 3192, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 3223, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3224, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3270, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3272, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3290, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3328, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3329, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3355, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3356, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3357, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3359, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3360, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3380, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3381, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3389, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3390, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3397, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3398, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3406, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3407, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3414, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3415, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3423, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3424, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3431, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3432, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3440, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3441, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3448, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3449, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3457, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3458, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3466, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3467, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3470, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3479, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3480, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3483, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3492, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3493, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3496, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3505, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3506, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3509, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3518, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3519, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3522, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3531, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3532, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3544, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3545, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3547, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3548, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3549, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 3550, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 3552, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 3577, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3578, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 3585, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3592, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3593, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3594, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3595, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3596, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3597, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3598, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3599, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3600, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3601, "col_offset": 4, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 3602, "col_offset": 4, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 3603, "col_offset": 4, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 3604, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 3604, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3609, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 3618, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 3641, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3651, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3657, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3666, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3667, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 3677, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3678, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 3693, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3703, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3737, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3738, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3739, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 3743, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3744, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3745, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 3764, "col_offset": 4, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3773, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 3791, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 3810, "col_offset": 4, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3819, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 3837, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 3842, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "snt", "type": "module"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv1DTranspose], Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose]]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "new_inputs", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 220, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 221, "col_offset": 7, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "CONV_1D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "CONV_2D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "CONV_3D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "DEPTHWISE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "IN_PLANE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "SEPARABLE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 246, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "conv", "type": "module"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "Transposable", "type": "Type[sonnet.python.modules.base.Transposable]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 263, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 266, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 271, "col_offset": 13, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 271, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 281, "col_offset": 40, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 293, "col_offset": 6, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 326, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 342, "col_offset": 11, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 342, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 345, "col_offset": 11, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 347, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 349, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 349, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 350, "col_offset": 26, "nodeName": "out2", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 353, "col_offset": 45, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 356, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 357, "col_offset": 6, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 358, "col_offset": 6, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 359, "col_offset": 6, "nodeName": "out3", "type": "Any"}, {"lineNumber": 360, "col_offset": 6, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 372, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 375, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 377, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 380, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 392, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 392, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 418, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 431, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 431, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 464, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 553, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 553, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 554, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 555, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 585, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 599, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 599, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 601, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 610, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 610, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 616, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 619, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 628, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 628, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 629, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 629, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 647, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 648, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 653, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 654, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 667, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 676, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 677, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 680, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 681, "col_offset": 6, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 695, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 704, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 704, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 705, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 705, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 707, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 707, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 708, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 708, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 719, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 731, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 741, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 764, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 765, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 770, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 771, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 780, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 784, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 785, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 787, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 787, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 788, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 788, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 789, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 789, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 790, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 790, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 792, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 793, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 796, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 799, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 803, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 803, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 803, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 804, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 804, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 805, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 805, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 819, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 825, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 826, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 826, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 832, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 833, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 833, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 834, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 834, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 835, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 840, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 841, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 842, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 849, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 849, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 861, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 864, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 865, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 872, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 872, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 873, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 880, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 881, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 882, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 889, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 889, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 901, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 902, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 903, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 910, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 910, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 911, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 919, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 920, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 923, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 932, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 933, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 936, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 945, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 946, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 949, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 958, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 959, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 962, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 971, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 974, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 982, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 984, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 984, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 984, "col_offset": 34, "nodeName": "SUPPORTED_2D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 996, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 998, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 999, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1000, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1001, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1002, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1003, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1004, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1005, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1006, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1006, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 1008, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1008, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1008, "col_offset": 38, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1008, "col_offset": 54, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1009, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1011, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1011, "col_offset": 22, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1011, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1013, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1013, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1013, "col_offset": 46, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1015, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1015, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1015, "col_offset": 47, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1016, "col_offset": 26, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1016, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1040, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1040, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1042, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1050, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1050, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1052, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1055, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1065, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1066, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1068, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1076, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1076, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1077, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1077, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1081, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1092, "col_offset": 10, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1100, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1101, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1101, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1106, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1107, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1107, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1108, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1108, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1109, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1116, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1116, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1118, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1126, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1128, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1128, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1128, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1137, "col_offset": 19, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 1139, "col_offset": 22, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1148, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1151, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1151, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1151, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1152, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1152, "col_offset": 64, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1153, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1153, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1159, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 1159, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1166, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1169, "col_offset": 4, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1169, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1170, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1170, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1170, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1173, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1173, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1173, "col_offset": 35, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1190, "col_offset": 19, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 1192, "col_offset": 22, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1201, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1204, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1204, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1204, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1205, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1205, "col_offset": 64, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1206, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1206, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1206, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1212, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 1212, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1219, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1222, "col_offset": 4, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1222, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1223, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1223, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1223, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1226, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1226, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1226, "col_offset": 35, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1245, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1246, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1247, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1248, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1250, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1252, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1253, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1256, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1264, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1264, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1266, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1270, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1279, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1287, "col_offset": 14, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1287, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1289, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1293, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1313, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1314, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1318, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1326, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1326, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1345, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1347, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1360, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1379, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1382, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1409, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1418, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 1418, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1419, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1420, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1429, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1430, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1432, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1441, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1451, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1470, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1470, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1472, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1479, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1481, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1481, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1481, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1487, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1488, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1490, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1496, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1498, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1498, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1499, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1499, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1508, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1517, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1518, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1519, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1520, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1533, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1542, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1543, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1544, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1545, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1559, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1567, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1568, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1568, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1569, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1569, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1571, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1571, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1572, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1572, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1583, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1592, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1593, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1594, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1601, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1601, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1602, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1609, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1610, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1611, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1618, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1618, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1619, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1626, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1627, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1628, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1635, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1635, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1636, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1644, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1645, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1648, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1657, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1658, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1661, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1670, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1671, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1674, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1683, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1684, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1686, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1688, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1692, "col_offset": 10, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1696, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 1697, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 1699, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1699, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1700, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1700, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1701, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1701, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1702, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1702, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1704, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 1705, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1706, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1708, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1709, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1711, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1712, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1715, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1715, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1715, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1716, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1716, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1717, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1717, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1718, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1719, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1720, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1721, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1723, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1729, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1731, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 1731, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1731, "col_offset": 34, "nodeName": "SUPPORTED_1D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 1746, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1746, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 1746, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1746, "col_offset": 44, "nodeName": "snt", "type": "module"}, {"lineNumber": 1746, "col_offset": 55, "nodeName": "snt", "type": "module"}, {"lineNumber": 1752, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1752, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1757, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1757, "col_offset": 23, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1757, "col_offset": 35, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1757, "col_offset": 46, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1760, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1760, "col_offset": 28, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1760, "col_offset": 42, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1760, "col_offset": 56, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1777, "col_offset": 6, "nodeName": "output_shape_arg", "type": "Any"}, {"lineNumber": 1777, "col_offset": 25, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1779, "col_offset": 6, "nodeName": "output_shape_arg", "type": "None"}, {"lineNumber": 1780, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1789, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1789, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1790, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1790, "col_offset": 19, "nodeName": "image", "type": "Any"}, {"lineNumber": 1791, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1794, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1807, "col_offset": 6, "nodeName": "output_shape_arg", "type": "Any"}, {"lineNumber": 1807, "col_offset": 25, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1809, "col_offset": 6, "nodeName": "output_shape_arg", "type": "None"}, {"lineNumber": 1811, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1812, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1815, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1823, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1823, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1825, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1829, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1844, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1852, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1883, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1919, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1928, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 1928, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1931, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1943, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1952, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1952, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1952, "col_offset": 36, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1952, "col_offset": 47, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1953, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1953, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1954, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1954, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1956, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1956, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1957, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1957, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1968, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1983, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1992, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1995, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1995, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1995, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1996, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1996, "col_offset": 56, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1997, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1997, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1997, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2003, "col_offset": 6, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2006, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2008, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2008, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 2009, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2009, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2009, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2012, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 2012, "col_offset": 18, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2012, "col_offset": 29, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2030, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 2039, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 2042, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2042, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2042, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2043, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2043, "col_offset": 56, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2044, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2044, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2044, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2050, "col_offset": 6, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2053, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2055, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2055, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 2056, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2056, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2056, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2059, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 2059, "col_offset": 18, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2059, "col_offset": 29, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2073, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2073, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2075, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 2083, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2085, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2085, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2085, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2095, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2103, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2104, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2106, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2108, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2110, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2112, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2114, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2114, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2114, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2121, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2129, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2130, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2132, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2134, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2136, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2138, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2140, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2140, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2140, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2147, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2156, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2157, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2159, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2161, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2163, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2165, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2167, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2167, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2167, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2175, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2182, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2183, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2183, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2184, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2184, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2186, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2186, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2187, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2187, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2189, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2190, "col_offset": 23, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2190, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 2192, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2195, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2197, "col_offset": 6, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 2198, "col_offset": 6, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 2203, "col_offset": 6, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 2204, "col_offset": 6, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 2206, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2206, "col_offset": 24, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 2206, "col_offset": 43, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 2207, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2207, "col_offset": 24, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 2207, "col_offset": 51, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 2210, "col_offset": 10, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2214, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 2215, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 2217, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2217, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2218, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2218, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2219, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2219, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2220, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2220, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2222, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 2223, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2224, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2226, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2227, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2229, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2230, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2233, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2233, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2233, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2234, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2234, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2235, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2235, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2236, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2237, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2238, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2239, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2241, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2247, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2249, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 2249, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2249, "col_offset": 34, "nodeName": "SUPPORTED_1D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 2264, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2265, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2265, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2266, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2272, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 2272, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2275, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2275, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2276, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2276, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2276, "col_offset": 44, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2284, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2285, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2286, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2286, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2287, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2287, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2288, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2288, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2289, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2289, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2296, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2304, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2304, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2306, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2308, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2309, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2309, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2309, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2317, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2319, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2319, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2320, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2320, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2321, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2321, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2322, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2322, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2323, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2323, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2324, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2324, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2325, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2325, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2326, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2326, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2326, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2328, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2328, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2328, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2328, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2328, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2329, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2329, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2329, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2330, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2330, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2330, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2330, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2330, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2331, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2331, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2331, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2332, "col_offset": 25, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2340, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2341, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2342, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2343, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2344, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2345, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2347, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2347, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2349, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2356, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2356, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2358, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2358, "col_offset": 41, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2359, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2359, "col_offset": 42, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2369, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2370, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2372, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2378, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2378, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2383, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2392, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2393, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2406, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2408, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2410, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2428, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2436, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2436, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2437, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2438, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2447, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2448, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2450, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2457, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2467, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2483, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2484, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2486, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2493, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2495, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2495, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2496, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2496, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2504, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2504, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2506, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2512, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2514, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2514, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2514, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2521, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2529, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2530, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2535, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2536, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2549, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2557, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2558, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2561, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2562, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2575, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2583, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2584, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2585, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2586, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2600, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2604, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2605, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2605, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2606, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2606, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2608, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2608, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2609, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2609, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2620, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2630, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2632, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2632, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2633, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2633, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2634, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2634, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2635, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2635, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2636, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2636, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2636, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2636, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2636, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2638, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2638, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2639, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2639, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2640, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2640, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2641, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2641, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2641, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2643, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2643, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2643, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2644, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2644, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2644, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2644, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2644, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2646, "col_offset": 8, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2646, "col_offset": 24, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2646, "col_offset": 40, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2646, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2648, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2648, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2648, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2656, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2657, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2658, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2659, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2660, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2661, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2662, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2664, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2664, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2666, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2673, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2673, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2675, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2676, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2678, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2689, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2690, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2692, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2698, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2698, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2704, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2714, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2720, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2737, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2740, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2743, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2766, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2775, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2775, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2776, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2777, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2787, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2788, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2789, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2790, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2798, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2812, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2829, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2829, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2831, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2838, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2840, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2840, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2840, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2846, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2847, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2849, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2857, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2859, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2859, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2860, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2860, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2861, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2861, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2871, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2881, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2882, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2887, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2888, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2903, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2912, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2913, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2916, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2917, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2932, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2941, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2942, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2943, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2944, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2961, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2961, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2962, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2971, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2972, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2974, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2975, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2977, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2996, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 3000, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3001, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3001, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3002, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3002, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3004, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3004, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3005, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3005, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3017, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3018, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3032, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3033, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3034, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3035, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3036, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3037, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3038, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3039, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3040, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3042, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3043, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3046, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3054, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3054, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3056, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3060, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3080, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3081, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3085, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3093, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3093, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3110, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3111, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3120, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3122, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3124, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3140, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3143, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3170, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3180, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 3180, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 3181, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 3191, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3192, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3193, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3201, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3211, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3224, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 3224, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3226, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3233, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3235, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 3235, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3235, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3240, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3245, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3258, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 3259, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3261, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3268, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3270, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3270, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 3271, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3271, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 3281, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3290, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3303, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3304, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3319, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3328, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3329, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3331, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3332, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3347, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3355, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3356, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3356, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3357, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3357, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3359, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3359, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3360, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3360, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3371, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 3381, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3382, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3389, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3389, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3397, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3398, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3399, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3406, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3406, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3414, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3415, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3416, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3423, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3423, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3431, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3432, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3433, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3440, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3440, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3448, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3449, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3450, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3457, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3457, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3466, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3467, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3470, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3479, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3480, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3483, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3492, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3493, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3496, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3505, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3506, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3509, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3518, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3519, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3522, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3531, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3532, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3534, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3536, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3540, "col_offset": 10, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3544, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 3545, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 3547, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3547, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3548, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3548, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3549, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3549, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3550, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3550, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3552, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 3553, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3554, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 3556, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3557, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 3559, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3560, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 3563, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3563, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3563, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3564, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3564, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 3565, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3565, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 3566, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3567, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3568, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3569, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3571, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3577, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3579, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 3579, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 3579, "col_offset": 34, "nodeName": "SUPPORTED_3D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 3590, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 3592, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3593, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3594, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3595, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3596, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3597, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3598, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3599, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3600, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3601, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3602, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3603, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3604, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3604, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 3606, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3606, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3606, "col_offset": 38, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3606, "col_offset": 53, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3607, "col_offset": 21, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3607, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3609, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3609, "col_offset": 22, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3609, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3609, "col_offset": 53, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3611, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3611, "col_offset": 25, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3611, "col_offset": 46, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3612, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3614, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3614, "col_offset": 26, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3614, "col_offset": 47, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3615, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3615, "col_offset": 47, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3616, "col_offset": 26, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3618, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3618, "col_offset": 20, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 3618, "col_offset": 35, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 3618, "col_offset": 50, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 3641, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3641, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3643, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3651, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3651, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3653, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3656, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3666, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3667, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3669, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3677, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3677, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3678, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3678, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 3680, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3682, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3693, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3695, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3703, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3703, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3705, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3710, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3715, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3729, "col_offset": 10, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3737, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3738, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3738, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3743, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3744, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3744, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3745, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3745, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3746, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3755, "col_offset": 22, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3764, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3767, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3767, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3767, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3768, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3768, "col_offset": 49, "nodeName": "stride", "type": "Any"}, {"lineNumber": 3769, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3769, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 3769, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 3775, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 3775, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3778, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3784, "col_offset": 4, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3784, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 3785, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3785, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 3785, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3801, "col_offset": 22, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3810, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3813, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3813, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3813, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3814, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3814, "col_offset": 44, "nodeName": "stride", "type": "Any"}, {"lineNumber": 3815, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3815, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 3815, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 3821, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 3821, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3824, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3830, "col_offset": 4, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3830, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 3831, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3831, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 3831, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3842, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "w", "type": "float"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "_default_transpose_size", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 63, "nodeName": "stride", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose]]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "stride", "type": "Any"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "padding", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "run", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 220, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 221, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 237, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 237, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 239, "col_offset": 38, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 239, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "snt", "type": "module"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 262, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 265, "col_offset": 53, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 268, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 269, "col_offset": 6, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 281, "col_offset": 40, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 282, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 282, "col_offset": 47, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 284, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 284, "col_offset": 46, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 286, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 286, "col_offset": 38, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 289, "col_offset": 64, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 291, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 294, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 300, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 305, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 305, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 305, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 306, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 312, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 312, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 316, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 316, "col_offset": 33, "nodeName": "UnderspecifiedError", "type": "Type[sonnet.python.modules.base_errors.UnderspecifiedError]"}, {"lineNumber": 316, "col_offset": 58, "nodeName": "err", "type": "str"}, {"lineNumber": 317, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 323, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 323, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 329, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 329, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 330, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "stop_gradient", "type": "Any"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 344, "col_offset": 37, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 344, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 349, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 349, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 350, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 352, "col_offset": 35, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 353, "col_offset": 30, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 357, "col_offset": 28, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 358, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 359, "col_offset": 33, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 360, "col_offset": 28, "nodeName": "out3", "type": "Any"}, {"lineNumber": 361, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 361, "col_offset": 47, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 372, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 375, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 377, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 380, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 386, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 390, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 403, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 418, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 425, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 427, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 429, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 433, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 437, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 440, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 441, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 459, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 462, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 473, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 475, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 478, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 478, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 478, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 479, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 491, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 494, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 497, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 499, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 499, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 500, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 513, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 516, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 532, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 532, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 532, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 533, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 535, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 535, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 535, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 536, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 547, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 549, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 553, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 553, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 554, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 572, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 575, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 575, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 577, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 581, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 591, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 591, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 591, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 592, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 598, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 601, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 606, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 608, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 608, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 617, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 619, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 623, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 624, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 626, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 626, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 628, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 628, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 629, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 631, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 631, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 644, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 647, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 648, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 656, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 660, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 660, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 667, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 671, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 673, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 676, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 677, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 683, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 687, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 687, "col_offset": 58, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 695, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 699, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 700, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 704, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 704, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 705, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 705, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 710, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 714, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 719, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 720, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 722, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 731, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 736, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 738, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 741, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 743, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 747, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 759, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 761, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 764, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 765, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 773, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 777, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 777, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 780, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 784, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 785, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 787, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 787, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 792, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 793, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 796, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 799, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 803, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 803, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 803, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 804, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 804, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 804, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 805, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 805, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 806, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 806, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 807, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 807, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 807, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 807, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 808, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 808, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 808, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 808, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 809, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 810, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 811, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 812, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 819, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 823, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 825, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 826, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 826, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 829, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 829, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 831, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 831, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 832, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 835, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 835, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 836, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 840, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 840, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 841, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 842, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 845, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 846, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 850, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 851, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 852, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 853, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 853, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 861, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 863, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 864, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 865, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 868, "col_offset": 13, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 869, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 873, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 874, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 875, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 876, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 876, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 880, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 880, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 881, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 882, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 885, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 886, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 890, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 891, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 892, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 893, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 893, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 900, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 902, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 903, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 906, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 907, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 911, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 912, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 913, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 914, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 914, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 919, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 920, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 923, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 923, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 924, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 926, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 932, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 933, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 936, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 936, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 937, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 939, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 945, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 946, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 949, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 949, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 950, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 952, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 958, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 959, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 962, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 962, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 963, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 965, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 971, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 971, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 974, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 974, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 975, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 976, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 982, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 984, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 984, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 986, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 986, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 988, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 1008, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1008, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1009, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1011, "col_offset": 22, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1011, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1013, "col_offset": 25, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1013, "col_offset": 46, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1015, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1016, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1016, "col_offset": 45, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1020, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1020, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1021, "col_offset": 6, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1040, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1040, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1040, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1042, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1043, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1044, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1045, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1046, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1048, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1052, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1052, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1055, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1055, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1055, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 1057, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1065, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1065, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1066, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1066, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1068, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1072, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1074, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1079, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1081, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1082, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1083, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1083, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1092, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1093, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1094, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1095, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1096, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1098, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1100, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1101, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1101, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1101, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1103, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1103, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1105, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1105, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1106, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1109, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1109, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1110, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1115, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1118, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1124, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1126, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1126, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1128, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1137, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1139, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1143, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1146, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1147, "col_offset": 20, "nodeName": "DATA_FORMAT_NHWC", "type": "str"}, {"lineNumber": 1148, "col_offset": 12, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1151, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1151, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1151, "col_offset": 51, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1152, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1152, "col_offset": 64, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1153, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1153, "col_offset": 46, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1158, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1158, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1158, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1159, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1166, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1166, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1166, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1166, "col_offset": 48, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1166, "col_offset": 59, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1167, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1168, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1170, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1170, "col_offset": 34, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1173, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1173, "col_offset": 35, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1180, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1180, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1180, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1181, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1181, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1181, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1190, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1192, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1196, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1199, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1200, "col_offset": 20, "nodeName": "DATA_FORMAT_NCHW", "type": "str"}, {"lineNumber": 1201, "col_offset": 12, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1204, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1204, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1204, "col_offset": 51, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1205, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1205, "col_offset": 64, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1206, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1206, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1206, "col_offset": 46, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1211, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1211, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1211, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1212, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1219, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1219, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1219, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1219, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1219, "col_offset": 61, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1220, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1221, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1223, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1223, "col_offset": 34, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1226, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1226, "col_offset": 35, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1233, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1233, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1233, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1234, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1234, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1234, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1245, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 1246, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 1247, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 1248, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1250, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1252, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1253, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1256, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1257, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1258, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1259, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1262, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1266, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1267, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1270, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1271, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1275, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1279, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1280, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1281, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1282, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1285, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1289, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1290, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1293, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1294, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1298, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1313, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1314, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1318, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1320, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1321, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1322, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1324, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1328, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1332, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1335, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1336, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1345, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1346, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1347, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1348, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1351, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1351, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1351, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1352, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1360, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1362, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1365, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1365, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1365, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1366, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1369, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1369, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1369, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1370, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1379, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1381, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1382, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1384, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1400, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1400, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 1400, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1401, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1409, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1412, "col_offset": 31, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1413, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1418, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1418, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1419, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1429, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1430, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1432, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1436, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1437, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1441, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1441, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1443, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1447, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1457, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1457, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1457, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 1458, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1469, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1472, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1477, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1479, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1479, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1481, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1488, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1490, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1494, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1496, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1496, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1498, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1498, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1499, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1501, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1501, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1508, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1512, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1513, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1517, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1518, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1522, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1526, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1526, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1533, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1537, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1538, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1542, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1543, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1547, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1551, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1551, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1559, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1563, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1564, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1567, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1568, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1568, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1569, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1569, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1574, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1578, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1583, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1584, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1586, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1592, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1592, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1593, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1594, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1597, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1598, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1602, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1602, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1603, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1604, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1605, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1605, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1609, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1609, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1610, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1611, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1614, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1615, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1619, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1619, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1620, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1621, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1622, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1622, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1626, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1626, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1627, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1628, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1631, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1632, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1636, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1636, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1637, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1638, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1639, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1639, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1644, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1645, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1648, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1648, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1649, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1651, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1657, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1658, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1661, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1661, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1662, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1664, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1670, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1671, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1674, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1674, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1675, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1677, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1683, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1683, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1684, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1686, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1686, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1687, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 1688, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1688, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1692, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1696, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1697, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1699, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1699, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1704, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1705, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1706, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1708, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1709, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1711, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1712, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1715, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1715, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1715, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1716, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1716, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1716, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1717, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1717, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1718, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1718, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1718, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 1719, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1719, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1719, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1719, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1719, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 1720, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1720, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1720, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1720, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1720, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 1721, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1721, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1722, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1723, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1723, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1724, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1729, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1731, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1731, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 1733, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1733, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1734, "col_offset": 77, "nodeName": "x", "type": "Any"}, {"lineNumber": 1752, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1753, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1754, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1754, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1765, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1765, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1766, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1780, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1780, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1781, "col_offset": 45, "nodeName": "output_shape_arg", "type": "Optional[Any]"}, {"lineNumber": 1782, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1783, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1784, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1786, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1789, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1789, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1791, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1791, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1794, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1795, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1796, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1796, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 1811, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1812, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1815, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1815, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1816, "col_offset": 45, "nodeName": "output_shape_arg", "type": "Optional[Any]"}, {"lineNumber": 1817, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1818, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1819, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1821, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1825, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1826, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1829, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1830, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1834, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1844, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1845, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1848, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1849, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1851, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1852, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1853, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1856, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1857, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1859, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1862, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1862, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1862, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1863, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1869, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1869, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1869, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1870, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1883, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1884, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1887, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1890, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1894, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1894, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1894, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1895, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1903, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1903, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1903, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1904, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1919, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1920, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1922, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1923, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1924, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1926, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1928, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1928, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1929, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1943, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1944, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1946, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1947, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1948, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1950, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1952, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1953, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1953, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1954, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1954, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1959, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1963, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1968, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1968, "col_offset": 29, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1968, "col_offset": 43, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1968, "col_offset": 57, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1969, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1971, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1983, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1984, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1986, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1987, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1988, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1990, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1991, "col_offset": 20, "nodeName": "DATA_FORMAT_NWC", "type": "str"}, {"lineNumber": 1992, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1995, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1995, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1995, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1996, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1996, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1997, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1997, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1997, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2002, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2002, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2002, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2003, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2006, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2006, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2006, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2006, "col_offset": 48, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 2006, "col_offset": 59, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2007, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2009, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2009, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2012, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2012, "col_offset": 29, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2019, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2019, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2019, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2020, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2020, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2020, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2030, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 2031, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2033, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2034, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2035, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 2037, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2038, "col_offset": 20, "nodeName": "DATA_FORMAT_NCW", "type": "str"}, {"lineNumber": 2039, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2042, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2042, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2042, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2043, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2043, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2044, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2044, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2044, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2049, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2049, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2049, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2050, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2053, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2053, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2053, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2053, "col_offset": 48, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2053, "col_offset": 61, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 2054, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2056, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2056, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2059, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2059, "col_offset": 29, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2066, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2066, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2066, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2067, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2067, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2067, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2072, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2075, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2081, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2083, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2083, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2085, "col_offset": 4, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 2095, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2099, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2103, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2104, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2104, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2108, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2109, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2110, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2111, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2111, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2112, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2112, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2114, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2121, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2125, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2129, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2130, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2130, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2134, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2135, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2136, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2137, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2137, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2138, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2138, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2140, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2147, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2152, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2156, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2157, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2157, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2161, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2162, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2163, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2164, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2164, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2165, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2165, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2167, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2175, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2179, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2182, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2183, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2183, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2184, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2184, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2189, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2190, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 2192, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2193, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2195, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2196, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2196, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2197, "col_offset": 26, "nodeName": "run", "type": "Any"}, {"lineNumber": 2197, "col_offset": 35, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2198, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 2198, "col_offset": 36, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2201, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2201, "col_offset": 15, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 2203, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 2203, "col_offset": 43, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2204, "col_offset": 35, "nodeName": "run", "type": "Any"}, {"lineNumber": 2204, "col_offset": 44, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2206, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2207, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2210, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 2214, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2215, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2217, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2217, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2222, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2223, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2224, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2226, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2227, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2229, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2230, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2233, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2233, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2233, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2234, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2234, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2234, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2235, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2235, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2236, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2236, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2236, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 2237, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2237, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2237, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2237, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2237, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 2238, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2238, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2238, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2238, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2238, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 2239, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2239, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2240, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2241, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2241, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2242, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2247, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2249, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2249, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 2251, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2251, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 2253, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 2264, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2265, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2265, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2266, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2266, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2271, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2271, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2271, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2272, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2276, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2276, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2284, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2284, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2285, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2286, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2286, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2287, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2287, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2291, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2294, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2296, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2297, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2298, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2303, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2306, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2306, "col_offset": 59, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2308, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2308, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2309, "col_offset": 4, "nodeName": "self", "type": "InPlaneConv2DTest"}, {"lineNumber": 2319, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2320, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2321, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2322, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2323, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2324, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2325, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2347, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2347, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2347, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2349, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2351, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2352, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2353, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2355, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2358, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2358, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2359, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2359, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2361, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2361, "col_offset": 44, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2369, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2370, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2372, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2373, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2374, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2375, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2377, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2380, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2383, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2384, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2384, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2392, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2393, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2396, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2396, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2396, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2397, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2406, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2407, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2408, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2409, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2410, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2411, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2416, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2416, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2416, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2417, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2428, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2432, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2433, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2436, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2436, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2437, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2447, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2448, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2450, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2454, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2457, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2457, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2459, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2463, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2471, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2471, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2471, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2472, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2484, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2486, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2490, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2491, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2493, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2493, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2495, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2495, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2496, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2498, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2498, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2503, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2506, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2510, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2512, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2512, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2514, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2521, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2525, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2526, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2529, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2530, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2538, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2542, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2542, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2549, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2553, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2554, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2557, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2558, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2564, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2568, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2568, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2575, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2579, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2580, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2583, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2584, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2588, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2592, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2593, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2600, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2601, "col_offset": 64, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2602, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2604, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2605, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2605, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2606, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2606, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2611, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2614, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2620, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2621, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2622, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2632, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2633, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2634, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2635, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2638, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2639, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2640, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2664, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2664, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2664, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2666, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2667, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2668, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2669, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2670, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2671, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2675, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2675, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2675, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2676, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2676, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2677, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2678, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2678, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2679, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2681, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2689, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2690, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2692, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2693, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2695, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2696, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2697, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2700, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2704, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2705, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2705, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2714, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2719, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2720, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2725, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2725, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2725, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2726, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2737, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2739, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2740, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2742, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2743, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2748, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2753, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2753, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2753, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2754, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2766, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2770, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2771, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2775, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2775, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2776, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2787, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2788, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2789, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2790, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2794, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2798, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2798, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2800, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2805, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2808, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2816, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2816, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2816, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2817, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2828, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2831, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2836, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2838, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2838, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2840, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2847, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2849, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2854, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2855, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2857, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2857, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2859, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2859, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2860, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2861, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2863, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2863, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2871, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2875, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2877, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2881, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2882, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2890, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2895, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2895, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2903, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2907, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2908, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2912, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2913, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2919, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2924, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2924, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2932, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2936, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2937, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2941, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2942, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2946, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2951, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2951, "col_offset": 61, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2962, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2963, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2964, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2966, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2967, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2971, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 2971, "col_offset": 35, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2971, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2972, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2972, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2973, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2977, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2977, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2980, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2985, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2986, "col_offset": 26, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2996, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2998, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3000, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3001, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3001, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3002, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3002, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3007, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3011, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3017, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3018, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3019, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3020, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3021, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3032, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 3033, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 3034, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 3035, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 3036, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 3037, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 3038, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3039, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3040, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3042, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3043, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3046, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3047, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3049, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3051, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3056, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3057, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3060, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3061, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3065, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3080, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3081, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3085, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3087, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3089, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3091, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3095, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3099, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3103, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3104, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3110, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3111, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3113, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3113, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3114, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3115, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3120, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3122, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3124, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3128, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3128, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3129, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3131, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3140, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3142, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3143, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3145, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3161, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3161, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 3161, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 3162, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3164, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3164, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 3164, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 3165, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3170, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3173, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3180, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3180, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3181, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3182, "col_offset": 6, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3182, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3183, "col_offset": 30, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3183, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 3191, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 3192, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 3193, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3198, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3201, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3201, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3203, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3207, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3216, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3216, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3217, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3223, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3226, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3231, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3233, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3233, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3235, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3240, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3245, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3245, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3247, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3248, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3250, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3259, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 3261, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3265, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 3266, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3268, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3268, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3270, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3270, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3271, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3273, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3273, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 3281, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3285, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3287, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3290, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3306, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3310, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3311, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3319, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3323, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3325, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3328, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3334, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3338, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3339, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3347, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3351, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3352, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3355, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3356, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3356, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3357, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3357, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3362, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3366, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3371, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3372, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3374, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3380, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3381, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3382, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3385, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3386, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3390, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3391, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3392, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3393, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3393, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3397, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3397, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3398, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3399, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3402, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3403, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3407, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3408, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3409, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3410, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3410, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3414, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3414, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3415, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3416, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3419, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3420, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3424, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3425, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3426, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3427, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3427, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3431, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3431, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3432, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3433, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3436, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3437, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3441, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3442, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3443, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3444, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3444, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3448, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3448, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3449, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3450, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3453, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3454, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3458, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3459, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3460, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3461, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3461, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3466, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3466, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3467, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3467, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3470, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3470, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3471, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3473, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3479, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3479, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3480, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3480, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3483, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3483, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3484, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3486, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3492, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3492, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3493, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3493, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3496, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3496, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3497, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3499, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3505, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3505, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3506, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3506, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3509, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3509, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3510, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3512, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3518, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3518, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3519, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3519, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3522, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3522, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3523, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3525, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3531, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3531, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 3532, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3534, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3534, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3535, "col_offset": 71, "nodeName": "x", "type": "Any"}, {"lineNumber": 3536, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3536, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3540, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 3544, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3545, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3547, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3547, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3552, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3553, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3554, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3556, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3557, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3559, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3560, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3563, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3563, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3563, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3564, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3564, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 3564, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3565, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3565, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3566, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3566, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3566, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 3567, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3567, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3567, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 3567, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3567, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 3568, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3568, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3568, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 3568, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3568, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 3569, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3569, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 3570, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 3571, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3571, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 3572, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 3577, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3579, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3579, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 3581, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3581, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 3582, "col_offset": 77, "nodeName": "x", "type": "Any"}, {"lineNumber": 3606, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3606, "col_offset": 38, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3607, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3607, "col_offset": 36, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3609, "col_offset": 22, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3609, "col_offset": 37, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3609, "col_offset": 53, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3611, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3612, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3614, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3615, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3615, "col_offset": 47, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3616, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3618, "col_offset": 20, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3618, "col_offset": 35, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3618, "col_offset": 50, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3621, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3621, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 3622, "col_offset": 6, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3641, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3641, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3641, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 3643, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3644, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3645, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 3646, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3647, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 3649, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3653, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3653, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3656, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3656, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3656, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 3658, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3666, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3666, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3667, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3667, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3669, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3673, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3675, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3680, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3680, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3682, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3683, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3684, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3684, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3693, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3693, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3695, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3699, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3701, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3705, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3705, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3710, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3715, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3715, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3717, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3718, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3720, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3729, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 3730, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3731, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 3732, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3733, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 3735, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3737, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3738, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3738, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3738, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 3740, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3740, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 3742, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3742, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3743, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3746, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3746, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3747, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3755, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 3756, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3757, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 3758, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3759, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 3760, "col_offset": 15, "nodeName": "strides", "type": "Any"}, {"lineNumber": 3762, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3763, "col_offset": 20, "nodeName": "DATA_FORMAT_NDHWC", "type": "str"}, {"lineNumber": 3764, "col_offset": 12, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3767, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3767, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3767, "col_offset": 51, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3768, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3768, "col_offset": 49, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3769, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3769, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3769, "col_offset": 46, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3774, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3774, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 3774, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 3775, "col_offset": 10, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3778, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3778, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3778, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 3779, "col_offset": 36, "nodeName": "in_depth", "type": "Any"}, {"lineNumber": 3780, "col_offset": 36, "nodeName": "in_height", "type": "Any"}, {"lineNumber": 3781, "col_offset": 36, "nodeName": "in_width", "type": "Any"}, {"lineNumber": 3782, "col_offset": 36, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 3783, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3785, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3785, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 3785, "col_offset": 39, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3792, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3792, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 3792, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 3793, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3793, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3793, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3801, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 3802, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3803, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 3804, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3805, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 3806, "col_offset": 15, "nodeName": "strides", "type": "Any"}, {"lineNumber": 3808, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3809, "col_offset": 20, "nodeName": "DATA_FORMAT_NCDHW", "type": "str"}, {"lineNumber": 3810, "col_offset": 12, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3813, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3813, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3813, "col_offset": 51, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3814, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3814, "col_offset": 30, "nodeName": "strides", "type": "Any"}, {"lineNumber": 3814, "col_offset": 44, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3815, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3815, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3815, "col_offset": 46, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3820, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3820, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 3820, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 3821, "col_offset": 10, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3824, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3824, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3824, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 3825, "col_offset": 36, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 3826, "col_offset": 36, "nodeName": "in_depth", "type": "Any"}, {"lineNumber": 3827, "col_offset": 36, "nodeName": "in_height", "type": "Any"}, {"lineNumber": 3828, "col_offset": 36, "nodeName": "in_width", "type": "Any"}, {"lineNumber": 3829, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3831, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3831, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 3831, "col_offset": 39, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3838, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3838, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 3838, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 3839, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3839, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3839, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3842, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "padding", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "padding", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 57, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 63, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "sess", "type": "Any"}, {"lineNumber": 177, "col_offset": 49, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 58, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 262, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 263, "col_offset": 48, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 263, "col_offset": 60, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 268, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 269, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 281, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 289, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 289, "col_offset": 53, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 291, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 293, "col_offset": 36, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 294, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 302, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 305, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 316, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 316, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 325, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 329, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 337, "col_offset": 30, "nodeName": "getter", "type": "Any"}, {"lineNumber": 339, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 349, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 350, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 352, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 352, "col_offset": 51, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 352, "col_offset": 56, "nodeName": "g", "type": "Any"}, {"lineNumber": 352, "col_offset": 63, "nodeName": "g", "type": "Any"}, {"lineNumber": 352, "col_offset": 68, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 357, "col_offset": 28, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 358, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 358, "col_offset": 52, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 360, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 361, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 361, "col_offset": 32, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 382, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 382, "col_offset": 27, "nodeName": "in_height", "type": "int"}, {"lineNumber": 382, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 382, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 387, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 387, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 396, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 396, "col_offset": 25, "nodeName": "in_height", "type": "int"}, {"lineNumber": 396, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 396, "col_offset": 46, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 400, "col_offset": 29, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 400, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 400, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 403, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 404, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 420, "col_offset": 33, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 426, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 426, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 427, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 433, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 437, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 438, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 440, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 441, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 442, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 442, "col_offset": 23, "nodeName": "in_height", "type": "int"}, {"lineNumber": 442, "col_offset": 34, "nodeName": "in_width", "type": "int"}, {"lineNumber": 442, "col_offset": 44, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 459, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 478, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 478, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 479, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 499, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 499, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 500, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 519, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 519, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 532, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 532, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 533, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 534, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 535, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 535, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 536, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 537, "col_offset": 63, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 547, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 550, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 551, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 554, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 554, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 554, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 556, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 556, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 556, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 557, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 573, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 573, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 573, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 573, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 575, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 575, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 577, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 581, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 582, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 583, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 583, "col_offset": 32, "nodeName": "w", "type": "float"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 591, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 592, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 598, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 608, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 608, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 617, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 626, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 626, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 628, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 629, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 631, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 645, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 645, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 647, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 647, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 656, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 660, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 660, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 671, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 674, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 674, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 676, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 676, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 683, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 687, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 687, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 699, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 704, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 705, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 710, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 714, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 715, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 716, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 719, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 722, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 723, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 724, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 736, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 739, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 739, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 741, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 741, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 743, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 747, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 747, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 759, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 762, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 762, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 764, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 764, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 773, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 777, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 777, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 795, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 798, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 801, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 804, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 806, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 806, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 829, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 829, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 830, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 830, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 840, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 846, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 848, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 850, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 851, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 853, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 853, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 863, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 869, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 871, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 874, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 876, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 876, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 880, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 886, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 888, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 890, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 891, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 893, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 893, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 900, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 907, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 909, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 912, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 914, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 914, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 923, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 924, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 924, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 925, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 926, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 926, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 936, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 937, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 937, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 938, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 939, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 939, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 949, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 950, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 950, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 951, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 952, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 952, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 962, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 963, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 963, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 964, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 965, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 965, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 971, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 974, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 975, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 986, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 987, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 996, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 996, "col_offset": 10, "nodeName": "Conv2DTransposeTest", "type": "Type[Conv2DTransposeTest]"}, {"lineNumber": 996, "col_offset": 31, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1020, "col_offset": 9, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1021, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1040, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1043, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 1044, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1045, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1046, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 1055, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 1057, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1057, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1065, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1066, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1070, "col_offset": 45, "nodeName": "Dimension", "type": "Any"}, {"lineNumber": 1072, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 1081, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1083, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1084, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1084, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 1085, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 1085, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1093, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1094, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1095, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1096, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 1101, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 1103, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1103, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1104, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1104, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1109, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1110, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1115, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1126, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1126, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1141, "col_offset": 37, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1141, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1143, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1147, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 1158, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1158, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1166, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1168, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1180, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1180, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1181, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1181, "col_offset": 23, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1181, "col_offset": 53, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1194, "col_offset": 37, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1194, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1196, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1200, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 1211, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1211, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1219, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1221, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1233, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1233, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1234, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1234, "col_offset": 23, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1234, "col_offset": 53, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1254, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1254, "col_offset": 27, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1254, "col_offset": 38, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1259, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1268, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1268, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1268, "col_offset": 36, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1272, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1272, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1272, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1275, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1276, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1282, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1291, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1291, "col_offset": 55, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1295, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1295, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1295, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1298, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1299, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1315, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1322, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1328, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1332, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1333, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1335, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1336, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1337, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1337, "col_offset": 23, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1337, "col_offset": 34, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1351, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1351, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1352, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1365, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1365, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1366, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1369, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1369, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1370, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1387, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1387, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1389, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1400, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1400, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1401, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1402, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1412, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 1415, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1416, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1419, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1419, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1419, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1421, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1421, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1421, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1422, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1422, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1436, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1439, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1439, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1439, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 1439, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1441, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1441, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1443, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1447, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1448, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1449, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 1449, "col_offset": 29, "nodeName": "w", "type": "float"}, {"lineNumber": 1452, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1457, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1458, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1461, "col_offset": 25, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1462, "col_offset": 26, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1469, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1479, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1479, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1488, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1496, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1496, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1498, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1499, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1501, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1512, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1515, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1515, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1517, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1517, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1522, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1526, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1526, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1537, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1540, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1540, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1542, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1542, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1547, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1551, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1551, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1563, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1567, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1568, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1569, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1574, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1578, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1579, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1580, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1583, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1586, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1587, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1588, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1592, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 1598, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1600, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1602, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1603, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1605, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1605, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1609, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 1615, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1617, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1619, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1620, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1622, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1622, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1626, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 1632, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1634, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1636, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1637, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1639, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1639, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1648, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1649, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1649, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1650, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1651, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1651, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1661, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1662, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1662, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1663, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1664, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1664, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1674, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1675, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1675, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1676, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1677, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1677, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1683, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1686, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1687, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1706, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1707, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1709, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1710, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1712, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1713, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1716, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1718, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1718, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1733, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1734, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1753, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1754, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1755, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1765, "col_offset": 9, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1766, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1792, "col_offset": 15, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1792, "col_offset": 26, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1794, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1796, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1813, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1813, "col_offset": 27, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1813, "col_offset": 38, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1827, "col_offset": 13, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1827, "col_offset": 25, "nodeName": "out_length", "type": "Any"}, {"lineNumber": 1827, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1831, "col_offset": 16, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1831, "col_offset": 30, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1831, "col_offset": 44, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1834, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1835, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1846, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1846, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1854, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1854, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1862, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1862, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1863, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1863, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1867, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1869, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1869, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1870, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1870, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1874, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1885, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1885, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1894, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1894, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1895, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1895, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1898, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1901, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1903, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1903, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1904, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1904, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1907, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1910, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1921, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1921, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1929, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1929, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1930, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1932, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1932, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1932, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1933, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1933, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1945, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1945, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1952, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1953, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1954, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1959, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1963, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1964, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1965, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1968, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1971, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1972, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1973, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1985, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1985, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1991, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 1996, "col_offset": 25, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2002, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2002, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2006, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 2007, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2019, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2019, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2020, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2020, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2020, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2032, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 2032, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2038, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 2043, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2049, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2049, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2053, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 2054, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2066, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2066, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2067, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2067, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2067, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2072, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2076, "col_offset": 21, "nodeName": "Dimension", "type": "Any"}, {"lineNumber": 2083, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2083, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2101, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2101, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2103, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2103, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2104, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2109, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2109, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2109, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2110, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2111, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2112, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2127, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2127, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2129, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2129, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2130, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2135, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2135, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2135, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2136, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2137, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2138, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2154, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2154, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2156, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2156, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2157, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2162, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2162, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2162, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2163, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2164, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2165, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2182, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2183, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2184, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2189, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2190, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2193, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2193, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2193, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2195, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2196, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2197, "col_offset": 26, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2198, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2201, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2203, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2204, "col_offset": 35, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2224, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2225, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2227, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2228, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2230, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2231, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2234, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2236, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2236, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2251, "col_offset": 9, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2252, "col_offset": 6, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2265, "col_offset": 58, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2271, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2271, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2285, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2286, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2287, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2291, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2294, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2294, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2294, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2296, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2298, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2298, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2298, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2303, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2308, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2308, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2317, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2317, "col_offset": 10, "nodeName": "DepthwiseConv2DTest", "type": "Type[DepthwiseConv2DTest]"}, {"lineNumber": 2317, "col_offset": 31, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2353, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2358, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 2359, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2361, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2361, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2370, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2373, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 2374, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2375, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2380, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2383, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2383, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2384, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2384, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2384, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2384, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2396, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2396, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2397, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2398, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2416, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2416, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2417, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2420, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2432, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2434, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2434, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2437, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2437, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2437, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2439, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2439, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2439, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2440, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2440, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2448, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2455, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2455, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2455, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 2455, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2457, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2457, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2459, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2463, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2464, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2464, "col_offset": 26, "nodeName": "full", "type": "Any"}, {"lineNumber": 2465, "col_offset": 28, "nodeName": "w", "type": "float"}, {"lineNumber": 2468, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2468, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2471, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2472, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2476, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2484, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2493, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2493, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2495, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2496, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2498, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2503, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2512, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2512, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2525, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2527, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2527, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2529, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2529, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2538, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2542, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2542, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2553, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2555, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2555, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2557, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2557, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2564, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2568, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2568, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2579, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2581, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2581, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2583, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2583, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2588, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2592, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2593, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2601, "col_offset": 64, "nodeName": "snt", "type": "module"}, {"lineNumber": 2604, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2605, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2606, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2611, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2614, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2614, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2614, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2620, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2622, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2622, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2622, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2630, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2630, "col_offset": 10, "nodeName": "SeparableConv2DTest", "type": "Type[SeparableConv2DTest]"}, {"lineNumber": 2630, "col_offset": 31, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2670, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2681, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2681, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2690, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2693, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 2695, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2696, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2700, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2704, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2704, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2705, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2705, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2705, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2705, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2725, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2725, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2726, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2729, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2753, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2753, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2754, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2759, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2770, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2772, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2773, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2776, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2776, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2776, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2778, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2778, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2778, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2779, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2779, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2789, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2795, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2796, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2796, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2796, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 2796, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2798, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2798, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2800, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2805, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2806, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2806, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2807, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2808, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2809, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2809, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2810, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2813, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2813, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2816, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2817, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2822, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2828, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2838, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2838, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2847, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2857, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2857, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2859, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2860, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2861, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2863, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2875, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2878, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2879, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2881, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2881, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2890, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2895, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2895, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2907, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2909, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2910, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2912, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2912, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2919, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2924, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2924, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2936, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2938, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2939, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2941, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2941, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2946, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2951, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2951, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2966, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2968, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2969, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2971, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 2972, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2973, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2973, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2977, "col_offset": 65, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2980, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2985, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2985, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3000, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3001, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3002, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3007, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3011, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3011, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3011, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3017, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3018, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3021, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3021, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3021, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3044, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3044, "col_offset": 27, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3044, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3044, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3044, "col_offset": 58, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3048, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3048, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3048, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3049, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3058, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3058, "col_offset": 25, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3058, "col_offset": 35, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3058, "col_offset": 46, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3058, "col_offset": 56, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3062, "col_offset": 13, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3062, "col_offset": 29, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3062, "col_offset": 45, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3062, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3063, "col_offset": 13, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3065, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3066, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3082, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3088, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3088, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3088, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3089, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3095, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3099, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 3100, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3103, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3104, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 3105, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3105, "col_offset": 23, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3105, "col_offset": 33, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3105, "col_offset": 44, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3105, "col_offset": 54, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3113, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3113, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3114, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3115, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3128, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3128, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3129, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3131, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3148, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3148, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 3150, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3161, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3161, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3162, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3163, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3164, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3164, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3165, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3166, "col_offset": 66, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3173, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 3181, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3181, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3181, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3182, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3199, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3199, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 3199, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 3199, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3201, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3201, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3203, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3207, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3208, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3209, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 3209, "col_offset": 35, "nodeName": "w", "type": "float"}, {"lineNumber": 3212, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3216, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3217, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3223, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3233, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3233, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3245, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3245, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3247, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3250, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3251, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3252, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3259, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 3268, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3268, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3270, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3271, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3273, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3285, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3288, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3288, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3290, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3290, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3291, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3306, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3310, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3311, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3323, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3326, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3326, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3328, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3328, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3329, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3334, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3338, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3339, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3351, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3355, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3356, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3357, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3362, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3366, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3367, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3368, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3371, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 3374, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3375, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3376, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3380, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 3380, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3386, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3388, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3390, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 3390, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3391, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3393, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3393, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3397, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 3403, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3405, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3407, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3407, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3408, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3410, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3410, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3414, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 3420, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3422, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3424, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3424, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3425, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3427, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3427, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3431, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 3437, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3439, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3441, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3441, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3442, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3444, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3444, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3448, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 3454, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3456, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3458, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3458, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3459, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3461, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3461, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3466, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 3467, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3470, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3471, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3471, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3472, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3473, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3473, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3479, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 3480, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3483, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3484, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3484, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3485, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3486, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3486, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3492, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 3493, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3496, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3497, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3497, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3498, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3499, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3499, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3505, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 3506, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3509, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3510, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3510, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3511, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3512, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3512, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3518, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 3519, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3522, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3523, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3523, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3524, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3525, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3525, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3531, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3534, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3535, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3554, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3555, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 3557, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3558, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 3560, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3561, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 3564, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3566, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3566, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 3581, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3582, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3590, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 3590, "col_offset": 10, "nodeName": "Conv3DTransposeTest", "type": "Type[Conv3DTransposeTest]"}, {"lineNumber": 3590, "col_offset": 31, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3621, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3622, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3641, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3644, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 3645, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 3646, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 3647, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 3656, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 3658, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3658, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3666, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3667, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3673, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 3682, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3684, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3685, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3685, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 3686, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 3686, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 3693, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3699, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 3715, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3715, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3717, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3720, "col_offset": 6, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3721, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3722, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3730, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3731, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 3732, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 3733, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 3738, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 3740, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3740, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3741, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3741, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 3746, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 3747, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3756, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 3757, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 3758, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 3759, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 3760, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 3763, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 3768, "col_offset": 28, "nodeName": "strides", "type": "Any"}, {"lineNumber": 3774, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3774, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3778, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 3778, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 3779, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 3780, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 3781, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 3782, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 3783, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 3792, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3792, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3793, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3793, "col_offset": 23, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3793, "col_offset": 53, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3802, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 3803, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 3804, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 3805, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 3806, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 3809, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 3814, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 3820, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3820, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3824, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 3824, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 3825, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 3826, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 3827, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 3828, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 3829, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 3838, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3838, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3839, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3839, "col_offset": 23, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3839, "col_offset": 53, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "y", "type": "int"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 36, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 243, "col_offset": 49, "nodeName": "key", "type": "Any"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 294, "col_offset": 42, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 314, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 337, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 337, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 349, "col_offset": 37, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 350, "col_offset": 37, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 352, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 358, "col_offset": 52, "nodeName": "out2", "type": "Any"}, {"lineNumber": 360, "col_offset": 39, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 405, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 434, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 438, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 519, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 519, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 523, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 554, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 556, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 578, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 582, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 583, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 583, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 588, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 617, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 631, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 647, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 647, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 657, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 660, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 660, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 676, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 676, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 684, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 687, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 687, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 711, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 715, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 716, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 719, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 720, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 720, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 723, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 724, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 741, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 741, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 744, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 747, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 747, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 764, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 764, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 774, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 777, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 777, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 795, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 798, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 801, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 809, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 810, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 811, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 812, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 830, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 830, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 835, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 836, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 852, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 853, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 875, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 876, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 876, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 892, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 893, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 913, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 914, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 914, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 924, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 924, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 925, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 927, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 927, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 937, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 937, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 938, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 940, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 940, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 950, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 950, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 951, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 953, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 953, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 963, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 963, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 964, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 966, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 966, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 975, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 975, "col_offset": 62, "nodeName": "mask", "type": "Any"}, {"lineNumber": 976, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 976, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 987, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 988, "col_offset": 29, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1052, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1053, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1053, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1055, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1058, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1070, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1079, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1082, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1084, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1084, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 1085, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1104, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 1104, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1152, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1166, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1205, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1219, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1267, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1271, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1277, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1290, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1294, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1300, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1329, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1333, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1387, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1387, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 1389, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1391, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1419, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1421, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1444, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1448, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1449, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1449, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1452, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1453, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1454, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 1461, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 1488, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1501, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1517, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1517, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1523, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1526, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1526, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1542, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1542, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1548, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1551, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1551, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1575, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1579, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1580, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1583, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1584, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1584, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1587, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1588, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1604, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1605, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1621, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1622, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1638, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1639, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1649, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1649, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1650, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1652, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1652, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1662, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1662, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1663, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1665, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1665, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1675, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1675, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1676, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1678, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1678, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1687, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1687, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1688, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1688, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1707, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1710, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1713, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1721, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1722, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1723, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1724, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1734, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1734, "col_offset": 64, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1753, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1753, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1755, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1789, "col_offset": 55, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1791, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1795, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1796, "col_offset": 34, "nodeName": "image", "type": "Any"}, {"lineNumber": 1826, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1830, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1836, "col_offset": 15, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1864, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1864, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1871, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1871, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1896, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1896, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1905, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1905, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1929, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1929, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1929, "col_offset": 43, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1930, "col_offset": 31, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1932, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1960, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1964, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1965, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1968, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1969, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1969, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1972, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1973, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1996, "col_offset": 25, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2006, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 2043, "col_offset": 28, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2053, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 2076, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2103, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2103, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2109, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2109, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2109, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2129, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2129, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2135, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2135, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2135, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2156, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2156, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2162, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2162, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2162, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2193, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2193, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2193, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2225, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2228, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2231, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2239, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2240, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2241, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2242, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2252, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2253, "col_offset": 35, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2292, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2294, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2294, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2296, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2297, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2297, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2298, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2298, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2359, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2361, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 2370, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2381, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2383, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2383, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2384, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2437, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2439, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2460, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2464, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2464, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2465, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2468, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2468, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2484, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2498, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2529, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2529, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2539, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2542, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2542, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2557, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2557, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2565, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2568, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2568, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2583, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2583, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2589, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2593, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2593, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2612, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2614, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2614, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2620, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2621, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2621, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2622, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2622, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2675, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2676, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2678, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2681, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2690, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2701, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2704, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2704, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2705, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2776, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2778, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2801, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2806, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2806, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2807, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2809, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2809, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2810, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2813, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2813, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2847, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2863, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2881, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2881, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2891, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2895, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2895, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2912, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2912, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2920, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2924, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2924, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2941, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2941, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2947, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2951, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2951, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2977, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2981, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2985, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2985, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2985, "col_offset": 56, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3008, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3011, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3011, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3017, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3018, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3019, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3019, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3020, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3020, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3021, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3021, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3057, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3061, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3067, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3096, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3100, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3148, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3148, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 3150, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3152, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 3176, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3177, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3181, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 3204, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3208, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 3209, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3209, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3212, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 3213, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3214, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 3248, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3251, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 3252, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3252, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3259, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 3273, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3290, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3290, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3291, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3307, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3311, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3311, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3328, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3328, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3329, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3335, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3339, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3339, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3363, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3367, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3368, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3371, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3372, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3372, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 3375, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3376, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3380, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 3390, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 3392, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3393, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3407, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3409, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3410, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3424, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3426, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3427, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3441, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3443, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3444, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3458, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3460, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3461, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3471, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3471, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3472, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3474, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3474, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3484, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3484, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3485, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3487, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3487, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3497, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3497, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3498, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3500, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3500, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3510, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3510, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3511, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3513, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3513, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3523, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3523, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3524, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3526, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3526, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3535, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3535, "col_offset": 65, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3536, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3536, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3555, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 3558, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 3561, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 3569, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3570, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3571, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3572, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3582, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3582, "col_offset": 64, "nodeName": "data_format", "type": "str"}, {"lineNumber": 3653, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3654, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 3654, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3656, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3659, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3680, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3683, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 3685, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3685, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 3686, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3705, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3718, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3721, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 3722, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3722, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3741, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 3741, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3768, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 3778, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 3824, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "y", "type": "int"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "z", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 360, "col_offset": 39, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 404, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 434, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 435, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 438, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 438, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 438, "col_offset": 40, "nodeName": "in_height", "type": "int"}, {"lineNumber": 438, "col_offset": 51, "nodeName": "in_width", "type": "int"}, {"lineNumber": 438, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 578, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 579, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 582, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 583, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 593, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 617, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 647, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 657, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 658, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 660, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 676, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 684, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 685, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 687, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 711, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 712, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 720, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 741, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 744, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 745, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 747, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 764, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 774, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 775, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 777, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 795, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 798, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 801, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 809, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 810, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 811, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 812, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 835, "col_offset": 24, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 836, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 852, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 852, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 875, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 875, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 876, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 892, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 892, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 913, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 913, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 914, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 925, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 925, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 926, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 926, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 927, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 938, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 938, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 939, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 939, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 940, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 951, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 951, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 952, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 952, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 953, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 964, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 964, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 965, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 965, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 966, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 976, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1052, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1053, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1053, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 1053, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1055, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 1057, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1058, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1079, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1082, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1084, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1152, "col_offset": 28, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1205, "col_offset": 28, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1267, "col_offset": 8, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1271, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1276, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1290, "col_offset": 8, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1291, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1291, "col_offset": 37, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1294, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1299, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1329, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1330, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1333, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1333, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1333, "col_offset": 40, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1333, "col_offset": 51, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1444, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1445, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1448, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1449, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 1453, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 1464, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1488, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1517, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1523, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1524, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1526, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1542, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1548, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1549, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1551, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1575, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1576, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1584, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1604, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1604, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1621, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1621, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1638, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1638, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1650, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1650, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1651, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1651, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1652, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1663, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1663, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1664, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1664, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1665, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1676, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1676, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1677, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1677, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1678, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1688, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1707, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1710, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1713, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1721, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1722, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 1723, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1724, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 1753, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1753, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1791, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1795, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1796, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1826, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 1830, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1835, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1960, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1961, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1969, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2103, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2129, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2156, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2225, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2228, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2231, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2239, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2240, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 2241, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2242, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 2292, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2293, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2297, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2361, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2381, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2382, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2383, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2383, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2460, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2461, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2464, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2465, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 2468, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2477, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2484, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2529, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2539, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2540, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2542, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2557, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2565, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2566, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2568, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2583, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2589, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2590, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2593, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2612, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2613, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2621, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2675, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2676, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2678, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2681, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2701, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2702, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2704, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2704, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2801, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2802, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2806, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2807, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2809, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2810, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2813, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2823, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2847, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2881, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2891, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2892, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2895, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2912, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2920, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2921, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2924, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2941, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2947, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2948, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2951, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2977, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 2981, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2982, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2985, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 3008, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3009, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3019, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3020, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3057, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 3061, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 3066, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3096, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3097, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3100, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 3100, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3100, "col_offset": 40, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3100, "col_offset": 50, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3100, "col_offset": 61, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3101, "col_offset": 28, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3176, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3177, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3204, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3205, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3208, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3209, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 3213, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 3218, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3248, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3248, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3248, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 3251, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3252, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3259, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3290, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 3307, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3308, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3311, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 3328, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 3335, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3336, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3339, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 3363, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3364, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3372, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 3392, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3392, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3409, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3409, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3426, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3426, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3443, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3443, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3460, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3460, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3472, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3472, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3473, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3473, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3474, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3485, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3485, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3486, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3486, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3487, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3498, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3498, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3499, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3499, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3500, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3511, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3511, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3512, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3512, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3513, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3524, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3524, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3525, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3525, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3526, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3536, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3555, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3558, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3561, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3569, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3570, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 3571, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3572, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 3653, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3654, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 3654, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 3654, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3656, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 3658, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3659, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3680, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3683, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3685, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3705, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3718, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3718, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3718, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 3721, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3722, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 107, "col_offset": 65, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 404, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 435, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 435, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 435, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 579, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 579, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 593, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 658, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 658, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 658, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 685, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 685, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 685, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 712, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 712, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 712, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 720, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 745, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 745, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 745, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 775, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 775, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 775, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 852, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 875, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 892, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 913, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 926, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 939, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 952, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 965, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1053, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1055, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1057, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 1271, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1276, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1294, "col_offset": 8, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1299, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1330, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1330, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1330, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1445, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1445, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1445, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1453, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1464, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1524, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1524, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1524, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1549, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1549, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1549, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1576, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1576, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1576, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1584, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1604, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1621, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1638, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1651, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1664, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1677, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1755, "col_offset": 51, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1796, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1830, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1835, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1961, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1961, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1961, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1969, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2293, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2293, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2293, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2297, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2382, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2382, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2382, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2461, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2461, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2461, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2468, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2477, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2540, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2540, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2540, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2566, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2566, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2566, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2590, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2590, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2590, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2613, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2613, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2613, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2621, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2676, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2678, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2681, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 2702, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2702, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2702, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2703, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2703, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2802, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2802, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2802, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2803, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2803, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2813, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2823, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2892, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2892, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2892, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2893, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2893, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2921, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2921, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2921, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2922, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2922, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2948, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2948, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2948, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2949, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2949, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2982, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2982, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2982, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2983, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2983, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3009, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3009, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3009, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3010, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3010, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3019, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3020, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3061, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3066, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 3097, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3097, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3097, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3205, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3205, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3205, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3213, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3218, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3248, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3248, "col_offset": 41, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3308, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3308, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3308, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3336, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3336, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3336, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3364, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3364, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3364, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3372, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3392, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3409, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3426, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3443, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3460, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3473, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3486, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3499, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3512, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3525, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3654, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 3656, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3658, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 3718, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3718, "col_offset": 41, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 107, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 404, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 435, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 435, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 435, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 579, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 579, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 658, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 658, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 658, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 685, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 685, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 685, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 712, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 712, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 712, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 745, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 745, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 745, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 775, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 775, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 775, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1057, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1276, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1299, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1330, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1330, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1330, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1445, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1445, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1445, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1524, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1524, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1524, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1549, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1549, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1549, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1576, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1576, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1576, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1755, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1755, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1755, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 1796, "col_offset": 58, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1835, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1961, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1961, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1961, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2293, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2293, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2293, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2382, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2382, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2382, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2461, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2461, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2461, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2540, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2540, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2540, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2566, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2566, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2566, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2590, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2590, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2590, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2613, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2613, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2613, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2681, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2702, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2702, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2702, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2703, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2703, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2802, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2802, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2802, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2803, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2803, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2892, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2892, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2892, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2893, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2893, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2921, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2921, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2921, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2922, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2922, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2948, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2948, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2948, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2949, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2949, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2982, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2982, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2982, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2983, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2983, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3009, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3009, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3009, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3010, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3010, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3066, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3097, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3097, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3097, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3205, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3205, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3205, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3308, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3308, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3308, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3336, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3336, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3336, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3364, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3364, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3364, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3658, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 1755, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1755, "col_offset": 46, "nodeName": "i", "type": "int"}]