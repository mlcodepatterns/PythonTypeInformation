[{"lineNumber": 29, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 136, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "module1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "module2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "seq", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "module1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "module2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "err_str", "type": "str"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "PY3", "type": "bool"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "modules", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "sequential", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "sequential", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "seq_with_identity", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "seq_with_no_layers", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "identity_output", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "no_layers_output", "type": "Any"}, {"lineNumber": 137, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "seq", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "_", "type": "Any"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "six", "type": "module"}, {"lineNumber": 67, "col_offset": 6, "nodeName": "err_str", "type": "str"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "modules", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "modules", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "sequential", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "seq", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 102, "col_offset": 53, "nodeName": "mocked_logging_warning", "type": "Any"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "first_call_args", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "seq_with_identity", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "seq_with_no_layers", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 128, "col_offset": 10, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "seq", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 137, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "module1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "relu", "type": "Any"}, {"lineNumber": 35, "col_offset": 47, "nodeName": "module2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "layers", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "err_str", "type": "str"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "a", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "b", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "a", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "b", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "c", "type": "Any"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "err_str", "type": "str"}, {"lineNumber": 71, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "_", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 53, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "snt", "type": "module"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "snt", "type": "module"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 93, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 94, "col_offset": 6, "nodeName": "sequential", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "sequential", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 102, "col_offset": 9, "nodeName": "object", "type": "Callable[..., mock._patch]"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "logging", "type": "Any"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "called", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "snt", "type": "module"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "identity", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "identity_output", "type": "Any"}, {"lineNumber": 119, "col_offset": 49, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "no_layers_output", "type": "Any"}, {"lineNumber": 120, "col_offset": 50, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 122, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 123, "col_offset": 48, "nodeName": "run", "type": "Any"}, {"lineNumber": 125, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "identity_output_np", "type": "Any"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "no_layers_output_np", "type": "Any"}, {"lineNumber": 128, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "trainable_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "non_trainable_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 137, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "seq", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "seq", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "module1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "module2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "module1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "module2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "module1", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "module1", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 74, "col_offset": 53, "nodeName": "snt", "type": "module"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 93, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 102, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "mocked_logging_warning", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "mocked_logging_warning", "type": "Any"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 119, "col_offset": 49, "nodeName": "collections", "type": "module"}, {"lineNumber": 120, "col_offset": 50, "nodeName": "collections", "type": "module"}, {"lineNumber": 122, "col_offset": 9, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 123, "col_offset": 48, "nodeName": "session", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "identity_output", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "no_layers_output", "type": "Any"}, {"lineNumber": 125, "col_offset": 6, "nodeName": "self", "type": "SequentialTest"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "seq", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "seq", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "seq", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "module1", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "module2", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "snt", "type": "module"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "snt", "type": "module"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 9, "nodeName": "mock", "type": "module"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "seq", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 107, "col_offset": 61, "nodeName": "first_call_args", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "snt", "type": "module"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "snt", "type": "module"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "tf", "type": "Any"}]