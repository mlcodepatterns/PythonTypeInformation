[{"lineNumber": 26, "col_offset": 0, "nodeName": "_suffix_custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 87, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "getter", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 88, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "override_args", "type": "Any"}, {"lineNumber": 40, "col_offset": 6, "nodeName": "local_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "local_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "w", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "w", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "override_args", "type": "Any"}, {"lineNumber": 58, "col_offset": 6, "nodeName": "local_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "local_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "w", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "override_args", "type": "Any"}, {"lineNumber": 75, "col_offset": 6, "nodeName": "local_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "local_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "w", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 88, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "custom_getters", "type": "module"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "self", "type": "OverrideArgsTest"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "global_variables", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "self", "type": "OverrideArgsTest"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "local_variables", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "self", "type": "OverrideArgsTest"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "local_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "local_variables", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "self", "type": "OverrideArgsTest"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "local_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "global_variables", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "custom_getters", "type": "module"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "self", "type": "OverrideArgsTest"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "local_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "local_variables", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "OverrideArgsTest"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "local_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "global_variables", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "self", "type": "OverrideArgsTest"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "op", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "custom_getters", "type": "module"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "self", "type": "OverrideArgsTest"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "local_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "local_variables", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "self", "type": "OverrideArgsTest"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "local_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "global_variables", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "self", "type": "OverrideArgsTest"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "op", "type": "Any"}, {"lineNumber": 88, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "snt", "type": "module"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "LOCAL_VARIABLES", "type": "Any"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "local_custom_getter", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "snt", "type": "module"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "LOCAL_VARIABLES", "type": "Any"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 57, "col_offset": 45, "nodeName": "_suffix_custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 58, "col_offset": 50, "nodeName": "local_custom_getter", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "snt", "type": "module"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "LOCAL_VARIABLES", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "local_custom_getter", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 75, "col_offset": 50, "nodeName": "_suffix_custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "local_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "local_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "tf", "type": "Any"}]