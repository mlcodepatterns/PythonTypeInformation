[{"lineNumber": 34, "col_offset": 0, "nodeName": "_CONSTANT_REWARD_VALUE", "type": "float"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "_CONSTANT_OBSERVATION", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "_OBSERVATION_SPEC", "type": "Dict[str, dm_control.rl.specs.ArraySpec]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "BoundedArraySpec", "type": "Type[dm_control.rl.specs.BoundedArraySpec]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 142, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 52, "nodeName": "_CONSTANT_REWARD_VALUE", "type": "float"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "specs", "type": "module"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "float", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "ArraySpec", "type": "Type[dm_control.rl.specs.ArraySpec]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "initialize_episode", "type": "mock.Mock"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "get_observation", "type": "mock.Mock"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "get_reward", "type": "mock.Mock"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "get_termination", "type": "mock.Mock"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "action_spec", "type": "mock.Mock"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "side_effect", "type": "NotImplementedError"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "_physics", "type": "mock.Mock"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "time", "type": "mock.Mock"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "reset_context", "type": "mock.MagicMock"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "_env", "type": "dm_control.rl.control.Environment"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "action", "type": "List[int]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "physics_timestep", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "time_limit", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "time_step", "type": "dm_control.rl.environment.TimeStep"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "steps", "type": "int"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "observation_spec", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "return_value", "type": "float"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "multimodal_obs", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "get_observation", "type": "mock.Mock"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "timestep", "type": "dm_control.rl.environment.TimeStep"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "steps", "type": "int"}, {"lineNumber": 143, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "specs", "type": "module"}, {"lineNumber": 39, "col_offset": 69, "nodeName": "float", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "observation_spec", "type": "Any"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "_physics", "type": "mock.Mock"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "_physics", "type": "mock.Mock"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "Environment", "type": "Type[dm_control.rl.control.Environment]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "action_spec", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assert_called_with", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 46, "nodeName": "_physics", "type": "mock.Mock"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "reset", "type": "Callable[[], dm_control.rl.environment.TimeStep]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assert_called_with", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 53, "nodeName": "_physics", "type": "mock.Mock"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "assert_called_with", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "_physics", "type": "mock.Mock"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "step", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "action", "type": "List[int]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "assert_called", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "_physics", "type": "mock.Mock"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assert_called_with", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "_physics", "type": "mock.Mock"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "_CONSTANT_REWARD_VALUE", "type": "float"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "reward", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "timestep", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "expected_steps", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "Environment", "type": "Type[dm_control.rl.control.Environment]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "reset", "type": "Callable[[], dm_control.rl.environment.TimeStep]"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 94, "col_offset": 6, "nodeName": "steps", "type": "int"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "steps", "type": "int"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "expected_steps", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "step", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "observation_spec", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "_OBSERVATION_SPEC", "type": "Dict[str, dm_control.rl.specs.ArraySpec]"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "observation_spec", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "timestep", "type": "Any"}, {"lineNumber": 113, "col_offset": 10, "nodeName": "Environment", "type": "Type[dm_control.rl.control.Environment]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "_CONSTANT_OBSERVATION", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "multimodal_obs", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "Environment", "type": "Type[dm_control.rl.control.Environment]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "reset", "type": "Callable[[], dm_control.rl.environment.TimeStep]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "observation", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "compute_n_steps", "type": "Callable[..., int]"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "control_timestep", "type": "Any"}, {"lineNumber": 134, "col_offset": 54, "nodeName": "physics_timestep", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "expected", "type": "Any"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "steps", "type": "int"}, {"lineNumber": 143, "col_offset": 2, "nodeName": "absltest", "type": "Any"}, {"lineNumber": 39, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "mock", "type": "module"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "Task", "type": "Type[dm_control.rl.control.Task]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "mock", "type": "module"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "mock", "type": "module"}, {"lineNumber": 48, "col_offset": 56, "nodeName": "_CONSTANT_OBSERVATION", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "mock", "type": "module"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "_CONSTANT_REWARD_VALUE", "type": "float"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "mock", "type": "module"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "mock", "type": "module"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "_ACTION_SPEC", "type": "dm_control.rl.specs.BoundedArraySpec"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "mock", "type": "module"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "Physics", "type": "Type[dm_control.rl.control.Physics]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "mock", "type": "module"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "mock", "type": "module"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "control", "type": "module"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "_physics", "type": "mock.Mock"}, {"lineNumber": 59, "col_offset": 64, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "_env", "type": "dm_control.rl.control.Environment"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "action_spec", "type": "mock.Mock"}, {"lineNumber": 63, "col_offset": 46, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "_env", "type": "dm_control.rl.control.Environment"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "initialize_episode", "type": "mock.Mock"}, {"lineNumber": 66, "col_offset": 53, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "get_observation", "type": "mock.Mock"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "_env", "type": "dm_control.rl.control.Environment"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "before_step", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "after_step", "type": "Any"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "get_termination", "type": "mock.Mock"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "_physics", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "control_timestep", "type": "Any"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "physics_timestep", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "control", "type": "module"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "_physics", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "_task", "type": "Any"}, {"lineNumber": 87, "col_offset": 59, "nodeName": "time_limit", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "control_timestep", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "env", "type": "dm_control.rl.control.Environment"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "last", "type": "Callable[[], bool]"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "step", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "last", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "env", "type": "dm_control.rl.control.Environment"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "first", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "_env", "type": "dm_control.rl.control.Environment"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "Environment", "type": "Type[dm_control.rl.control.Environment]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "_physics", "type": "mock.Mock"}, {"lineNumber": 113, "col_offset": 10, "nodeName": "control", "type": "module"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "_physics", "type": "mock.Mock"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "control_timestep", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 49, "nodeName": "bool", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "mock", "type": "module"}, {"lineNumber": 120, "col_offset": 56, "nodeName": "multimodal_obs", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "control", "type": "module"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "_physics", "type": "mock.Mock"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "env", "type": "dm_control.rl.control.Environment"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "timestep", "type": "dm_control.rl.environment.TimeStep"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "control", "type": "module"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 140, "col_offset": 6, "nodeName": "compute_n_steps", "type": "Callable[..., int]"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "control_timestep", "type": "Any"}, {"lineNumber": 140, "col_offset": 48, "nodeName": "physics_timestep", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "EnvironmentTest", "type": "Type[EnvironmentTest]"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "control", "type": "module"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "control", "type": "module"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 59, "col_offset": 64, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "time_step", "type": "dm_control.rl.environment.TimeStep"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "env", "type": "dm_control.rl.control.Environment"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "control", "type": "module"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "_physics", "type": "mock.Mock"}, {"lineNumber": 108, "col_offset": 54, "nodeName": "_task", "type": "mock.Mock"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "env", "type": "dm_control.rl.control.Environment"}, {"lineNumber": 119, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "observation", "type": "Any"}, {"lineNumber": 139, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 6, "nodeName": "control", "type": "module"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 108, "col_offset": 54, "nodeName": "self", "type": "EnvironmentTest"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "timestep", "type": "dm_control.rl.environment.TimeStep"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "FLAT_OBSERVATION_KEY", "type": "str"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "control", "type": "module"}]