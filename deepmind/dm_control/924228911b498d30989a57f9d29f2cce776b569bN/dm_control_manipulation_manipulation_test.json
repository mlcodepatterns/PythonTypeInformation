[{"lineNumber": 39, "col_offset": 0, "nodeName": "_get_fix_seed", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "_FIX_SEED", "type": "None"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "_NUM_EPISODES", "type": "int"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "_NUM_STEPS_PER_EPISODE", "type": "int"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "DEFINE_boolean", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "flags", "type": "Any"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "_FIX_SEED", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 91, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "flags", "type": "Any"}, {"lineNumber": 41, "col_offset": 5, "nodeName": "_FIX_SEED", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "env", "type": "dm_control.composer.environment.Environment"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "observation_spec", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 92, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 42, "col_offset": 7, "nodeName": "is_parsed", "type": "Any"}, {"lineNumber": 43, "col_offset": 6, "nodeName": "_FIX_SEED", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "fix_seed", "type": "Any"}, {"lineNumber": 45, "col_offset": 6, "nodeName": "_FIX_SEED", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "default", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "array_spec", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "items", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "reward", "type": "Any"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "assertBetween", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "reward", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "discount", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assertBetween", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "discount", "type": "Any"}, {"lineNumber": 69, "col_offset": 10, "nodeName": "load", "type": "Callable[..., dm_control.composer.environment.Environment]"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "task_name", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "observation_spec", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "action_spec", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "_NUM_EPISODES", "type": "int"}, {"lineNumber": 79, "col_offset": 6, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 80, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 92, "col_offset": 2, "nodeName": "absltest", "type": "Any"}, {"lineNumber": 42, "col_offset": 7, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "self", "type": "ManipulationTest"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "observation_spec", "type": "Any"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "validate", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "self", "type": "ManipulationTest"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "self", "type": "ManipulationTest"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "self", "type": "ManipulationTest"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "self", "type": "ManipulationTest"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "_get_fix_seed", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 10, "nodeName": "manipulation", "type": "module"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "env", "type": "dm_control.composer.environment.Environment"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "env", "type": "dm_control.composer.environment.Environment"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "_NUM_STEPS_PER_EPISODE", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 53, "col_offset": 52, "nodeName": "keys", "type": "Any"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "array_spec", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "observation", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "isfinite", "type": "Any"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "isfinite", "type": "Any"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "env", "type": "dm_control.composer.environment.Environment"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "_validate_observation", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "observation", "type": "Any"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "observation_spec", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "first", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "step", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "action", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "observation", "type": "Any"}, {"lineNumber": 53, "col_offset": 52, "nodeName": "observation_spec", "type": "Any"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "reward", "type": "Any"}, {"lineNumber": 84, "col_offset": 10, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "discount", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "_validate_reward_range", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "reward", "type": "Any"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "_validate_discount", "type": "Any"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "discount", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "env", "type": "dm_control.composer.environment.Environment"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 84, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "time_step", "type": "Any"}]