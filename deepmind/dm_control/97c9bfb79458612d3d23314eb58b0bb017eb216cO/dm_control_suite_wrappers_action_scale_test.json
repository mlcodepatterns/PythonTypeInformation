[{"lineNumber": 32, "col_offset": 0, "nodeName": "make_action_spec", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "make_mock_env", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 47, "col_offset": 2, "nodeName": "assertStepCalledOnceWithCorrectAction", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 2, "nodeName": "test_method_delegated_to_underlying_env", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 2, "nodeName": "test_invalid_action_spec_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 2, "nodeName": "action_spec", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "action_spec", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "action_spec", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 162, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 2, "nodeName": "lower", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "upper", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "broadcast_arrays", "type": "Any"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "lower", "type": "Tuple[float]"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "upper", "type": "Tuple[float]"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "BoundedArray", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "actual_action", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "wrapped_env", "type": "dm_control.suite.wrappers.action_scale.Wrapper"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "new_action_spec", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "wrapped_env", "type": "dm_control.suite.wrappers.action_scale.Wrapper"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "env_method", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "wrapper_method", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "action_spec", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 163, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "specs", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 35, "col_offset": 46, "nodeName": "lower", "type": "Any"}, {"lineNumber": 35, "col_offset": 61, "nodeName": "upper", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "mock", "type": "module"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "Environment", "type": "Type[dm_control.rl.control.Environment]"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "expected_action", "type": "Any"}, {"lineNumber": 51, "col_offset": 51, "nodeName": "actual_action", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "make_action_spec", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "make_mock_env", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "Wrapper", "type": "Type[dm_control.suite.wrappers.action_scale.Wrapper]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "step", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "scaled_minimum", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "assertStepCalledOnceWithCorrectAction", "type": "Any"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 86, "col_offset": 52, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "step", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "scaled_maximum", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "assertStepCalledOnceWithCorrectAction", "type": "Any"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "make_action_spec", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "make_mock_env", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "Wrapper", "type": "Type[dm_control.suite.wrappers.action_scale.Wrapper]"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "action_spec", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 111, "col_offset": 59, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 112, "col_offset": 59, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 116, "col_offset": 10, "nodeName": "make_mock_env", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "Wrapper", "type": "Type[dm_control.suite.wrappers.action_scale.Wrapper]"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "wrapped_env", "type": "dm_control.suite.wrappers.action_scale.Wrapper"}, {"lineNumber": 119, "col_offset": 42, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 120, "col_offset": 10, "nodeName": "wrapper_method", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "out", "type": "Any"}, {"lineNumber": 126, "col_offset": 10, "nodeName": "make_mock_env", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 140, "col_offset": 10, "nodeName": "make_mock_env", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "make_action_spec", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 10, "nodeName": "make_mock_env", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 2, "nodeName": "absltest", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "lower", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "control", "type": "module"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "step", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 80, "col_offset": 56, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "action_scale", "type": "module"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "scaled_minimum", "type": "Any"}, {"lineNumber": 83, "col_offset": 45, "nodeName": "scaled_maximum", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "wrapped_env", "type": "dm_control.suite.wrappers.action_scale.Wrapper"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "step", "type": "Any"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "wrapped_env", "type": "dm_control.suite.wrappers.action_scale.Wrapper"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "step", "type": "Any"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "original_action_spec", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "action_scale", "type": "module"}, {"lineNumber": 109, "col_offset": 52, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 109, "col_offset": 69, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "wrapped_env", "type": "dm_control.suite.wrappers.action_scale.Wrapper"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "new_action_spec", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "new_action_spec", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "action_scale", "type": "module"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "env_method", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "env_method", "type": "Any"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "action_spec", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "assertRaisesWithLiteralMatch", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "Wrapper", "type": "Type[dm_control.suite.wrappers.action_scale.Wrapper]"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "r_", "type": "Any"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "r_", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 141, "col_offset": 9, "nodeName": "assertRaisesWithLiteralMatch", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 144, "col_offset": 6, "nodeName": "Wrapper", "type": "Type[dm_control.suite.wrappers.action_scale.Wrapper]"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 152, "col_offset": 34, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "ones", "type": "Any"}, {"lineNumber": 152, "col_offset": 61, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 156, "col_offset": 9, "nodeName": "assertRaisesWithLiteralMatch", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "Wrapper", "type": "Type[dm_control.suite.wrappers.action_scale.Wrapper]"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "env", "type": "mock.Mock"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "r_", "type": "Any"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "r_", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "make_action_spec", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "make_action_spec", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "self", "type": "ActionScaleTest"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 129, "col_offset": 63, "nodeName": "action_spec", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "action_scale", "type": "module"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "make_action_spec", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 144, "col_offset": 6, "nodeName": "action_scale", "type": "module"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "action_scale", "type": "module"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "step", "type": "Any"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "_ACTION_SPEC_MUST_BE_BOUNDED_ARRAY", "type": "str"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "_MUST_BE_FINITE", "type": "str"}, {"lineNumber": 143, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 143, "col_offset": 62, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "_MUST_BROADCAST", "type": "str"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "name", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 159, "col_offset": 44, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "action_scale", "type": "module"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "action_scale", "type": "module"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "action_scale", "type": "module"}]