[{"lineNumber": 39, "col_offset": 28, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 2, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "Generic", "type": "Type[dm_control.composer.observation.observable.base.Generic]"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "array_spec", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 68, "col_offset": 2, "nodeName": "testNestedSpecsAndValues", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 2, "nodeName": "assertCorrectSpec", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 2, "nodeName": "testObservationSpecInference", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 2, "nodeName": "testObservation", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 2, "nodeName": "testVariableRatesAndDelays", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "observable", "type": "module"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "make_spec", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "make_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "_iter", "type": "itertools.cycle[nothing]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "_bounds", "type": "Tuple[Any, Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "datum", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "actual_specs", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "actual_values", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "buffer_size", "type": "int"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "buffer_size", "type": "int"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "spec", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "buffer_size", "type": "int"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "delay", "type": "int"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "physics_steps_per_control_step", "type": "int"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "control_step", "type": "int"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "physics_steps_per_control_step", "type": "int"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 279, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "self", "type": "DeterministicSequence"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "cycle", "type": "Type[itertools.cycle[Any]]"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "next", "type": "Callable"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "_iter", "type": "itertools.cycle[nothing]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "self", "type": "BoundedGeneric"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "BoundedArray", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "list_or_tuple", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "Updater", "type": "Type[dm_control.composer.observation.updater.Updater]"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "observables", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "reset", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 6, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "list_or_tuple", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "observation_spec", "type": "Callable[[], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "actual_dict", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "expected_dict", "type": "Any"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 117, "col_offset": 42, "nodeName": "actual_specs", "type": "Any"}, {"lineNumber": 117, "col_offset": 56, "nodeName": "expected_specs", "type": "Any"}, {"lineNumber": 122, "col_offset": 6, "nodeName": "value", "type": "Any"}, {"lineNumber": 123, "col_offset": 9, "nodeName": "aggregator", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "list_or_tuple", "type": "Any"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "get_observation", "type": "Callable[[], Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "actual_dict", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "expected_dict", "type": "Any"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 142, "col_offset": 42, "nodeName": "actual_values", "type": "Any"}, {"lineNumber": 142, "col_offset": 57, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "expected_shape", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "expected_dtype", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "expected_name", "type": "Any"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "FakePhysics", "type": "Type[dm_control.composer.observation.fake_physics.FakePhysics]"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "Generic", "type": "Type[dm_control.composer.observation.observable.base.Generic]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "sqrt", "type": "Callable[[dm_control.composer.observation.fake_physics.FakePhysics], Any]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "itervalues", "type": "Callable"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "observables", "type": "Any"}, {"lineNumber": 166, "col_offset": 6, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "Updater", "type": "Type[dm_control.composer.observation.updater.Updater]"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "observables", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "reset", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "observation_spec", "type": "Callable[[], Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "assertCorrectSpec", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 53, "nodeName": "int", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "assertCorrectSpec", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 54, "nodeName": "int", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "assertCorrectSpec", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 47, "nodeName": "float", "type": "Any"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "FakePhysics", "type": "Type[dm_control.composer.observation.fake_physics.FakePhysics]"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "Generic", "type": "Type[dm_control.composer.observation.observable.base.Generic]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "sqrt", "type": "Callable[[dm_control.composer.observation.fake_physics.FakePhysics], Any]"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "itervalues", "type": "Callable"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "observables", "type": "Any"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "enabled", "type": "bool"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "Updater", "type": "Type[dm_control.composer.observation.updater.Updater]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "observables", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "physics_steps_per_control_step", "type": "int"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "reset", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 199, "col_offset": 6, "nodeName": "step_counter", "type": "int"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "observation", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "FakePhysics", "type": "Type[dm_control.composer.observation.fake_physics.FakePhysics]"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "Generic", "type": "Type[dm_control.composer.observation.observable.base.Generic]"}, {"lineNumber": 253, "col_offset": 26, "nodeName": "Updater", "type": "Type[dm_control.composer.observation.updater.Updater]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "observables", "type": "Any"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "physics_steps_per_control_step", "type": "int"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "reset", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 261, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 269, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 279, "col_offset": 2, "nodeName": "absltest", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "itertools", "type": "module"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "six", "type": "module"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "self", "type": "DeterministicSequence"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "raw_observation_callable", "type": "Any"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "specs", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "updater", "type": "module"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "aggregator", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "actual_specs", "type": "Any"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "expected_specs", "type": "Any"}, {"lineNumber": 118, "col_offset": 6, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 119, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "actual_dict", "type": "Any"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "expected_dict", "type": "Any"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "obs", "type": "Any"}, {"lineNumber": 123, "col_offset": 9, "nodeName": "obs", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "value", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "actual_values", "type": "Any"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 144, "col_offset": 6, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "actual_dict", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 147, "col_offset": 36, "nodeName": "actual", "type": "Tuple[Any, Any]"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "expected", "type": "Tuple[Any, Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "self", "type": "UpdaterTest"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "spec", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "self", "type": "UpdaterTest"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "spec", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "self", "type": "UpdaterTest"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "spec", "type": "Any"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "fake_physics", "type": "module"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "observables", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "observables", "type": "Any"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "observable", "type": "module"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "FakePhysics", "type": "Type[dm_control.composer.observation.fake_physics.FakePhysics]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "six", "type": "module"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 166, "col_offset": 6, "nodeName": "obs", "type": "Any"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "updater", "type": "module"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "self", "type": "UpdaterTest"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "spec", "type": "Any"}, {"lineNumber": 172, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "self", "type": "UpdaterTest"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "spec", "type": "Any"}, {"lineNumber": 173, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "self", "type": "UpdaterTest"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "spec", "type": "Any"}, {"lineNumber": 174, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "fake_physics", "type": "module"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "observables", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "observables", "type": "Any"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "observable", "type": "module"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "FakePhysics", "type": "Type[dm_control.composer.observation.fake_physics.FakePhysics]"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "six", "type": "module"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "obs", "type": "Any"}, {"lineNumber": 185, "col_offset": 9, "nodeName": "reset_context", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "updater", "type": "module"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 194, "col_offset": 6, "nodeName": "prepare_for_next_control_step", "type": "Callable[[], None]"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "physics_steps_per_control_step", "type": "int"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "physics_steps_per_control_step", "type": "int"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "get_observation", "type": "Callable[[], Any]"}, {"lineNumber": 203, "col_offset": 44, "nodeName": "observation", "type": "Any"}, {"lineNumber": 204, "col_offset": 45, "nodeName": "step_counter", "type": "int"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "buffer_range", "type": "xrange"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "expected_value_spec", "type": "Any"}, {"lineNumber": 236, "col_offset": 6, "nodeName": "assert_correct_buffer", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 6, "nodeName": "assert_correct_buffer", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 6, "nodeName": "assert_correct_buffer", "type": "Callable[..., Any]"}, {"lineNumber": 239, "col_offset": 6, "nodeName": "assert_correct_buffer", "type": "Callable[..., Any]"}, {"lineNumber": 239, "col_offset": 36, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "fake_physics", "type": "module"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "observable", "type": "module"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "observables", "type": "Any"}, {"lineNumber": 253, "col_offset": 26, "nodeName": "updater", "type": "module"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "prepare_for_next_control_step", "type": "Callable[[], None]"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "physics_steps_per_control_step", "type": "int"}, {"lineNumber": 264, "col_offset": 6, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 268, "col_offset": 6, "nodeName": "prepare_for_next_control_step", "type": "Callable[[], None]"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 269, "col_offset": 21, "nodeName": "physics_steps_per_control_step", "type": "int"}, {"lineNumber": 274, "col_offset": 6, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "BoundedGeneric", "type": "Type[BoundedGeneric]"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "self", "type": "BoundedGeneric"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "datum", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "datum", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "_bounds", "type": "Any"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "_bounds", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "observables", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "observables", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "observables", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "observables", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "observables", "type": "Any"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "FakePhysics", "type": "Type[dm_control.composer.observation.fake_physics.FakePhysics]"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "obs", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 56, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "obs", "type": "Any"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "BoundedGeneric", "type": "Type[BoundedGeneric]"}, {"lineNumber": 97, "col_offset": 10, "nodeName": "aggregator", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "BoundedArray", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "Array", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 118, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "actual_dict", "type": "Any"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 118, "col_offset": 44, "nodeName": "expected_dict", "type": "Any"}, {"lineNumber": 119, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "value", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "actual_dict", "type": "Any"}, {"lineNumber": 143, "col_offset": 39, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 143, "col_offset": 44, "nodeName": "expected_dict", "type": "Any"}, {"lineNumber": 144, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "expected_dict", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 145, "col_offset": 48, "nodeName": "actual_dict", "type": "Any"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "expected_dict", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "actual_name", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "actual_value", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "expected_name", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "expected_value", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "actual_name", "type": "Any"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "expected_name", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "actual_value", "type": "Any"}, {"lineNumber": 150, "col_offset": 52, "nodeName": "expected_value", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "fake_physics", "type": "module"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "fake_physics", "type": "module"}, {"lineNumber": 185, "col_offset": 9, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 194, "col_offset": 6, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "step", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "update", "type": "Callable[[], None]"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "control_step", "type": "int"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "DEFAULT_UPDATE_INTERVAL", "type": "int"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "buffer_size", "type": "Any"}, {"lineNumber": 208, "col_offset": 26, "nodeName": "DEFAULT_BUFFER_SIZE", "type": "int"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "delay", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "DEFAULT_DELAY", "type": "int"}, {"lineNumber": 214, "col_offset": 14, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "end", "type": "Any"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 222, "col_offset": 61, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "timestamp", "type": "int"}, {"lineNumber": 231, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 234, "col_offset": 61, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 239, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 24, "nodeName": "time", "type": "Any"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "DeterministicSequence", "type": "Type[DeterministicSequence]"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "DeterministicSequence", "type": "Type[DeterministicSequence]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "step", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "update", "type": "Callable[[], None]"}, {"lineNumber": 264, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 268, "col_offset": 6, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "step", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "update", "type": "Callable[[], None]"}, {"lineNumber": 274, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "Generic", "type": "Type[dm_control.composer.observation.observable.base.Generic]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "Generic", "type": "Type[dm_control.composer.observation.observable.base.Generic]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "collections", "type": "module"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "fake_physics", "type": "module"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "observation_callable", "type": "Any"}, {"lineNumber": 94, "col_offset": 56, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 10, "nodeName": "obs", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "AGGREGATORS", "type": "Dict[str, functools.partial[nothing]]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "specs", "type": "Any"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "specs", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "make_spec", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "collections", "type": "module"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "make_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "collections", "type": "module"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "six", "type": "module"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "six", "type": "module"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "updater", "type": "module"}, {"lineNumber": 208, "col_offset": 26, "nodeName": "updater", "type": "module"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "updater", "type": "module"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 219, "col_offset": 42, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "max", "type": "Callable"}, {"lineNumber": 222, "col_offset": 36, "nodeName": "start", "type": "Any"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "max", "type": "Callable"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "observation_spec", "type": "Callable[[], Any]"}, {"lineNumber": 225, "col_offset": 69, "nodeName": "obs_name", "type": "str"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 231, "col_offset": 42, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 231, "col_offset": 51, "nodeName": "buffer_range", "type": "xrange"}, {"lineNumber": 232, "col_offset": 10, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 232, "col_offset": 40, "nodeName": "expected_callable", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 58, "nodeName": "timestamp", "type": "int"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 234, "col_offset": 38, "nodeName": "observation", "type": "Any"}, {"lineNumber": 236, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 238, "col_offset": 51, "nodeName": "x", "type": "int"}, {"lineNumber": 238, "col_offset": 54, "nodeName": "x", "type": "int"}, {"lineNumber": 244, "col_offset": 24, "nodeName": "physics", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 264, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 10, "nodeName": "get_observation", "type": "Callable[[], Any]"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "i", "type": "int"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 274, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 10, "nodeName": "get_observation", "type": "Callable[[], Any]"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "i", "type": "int"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "observable", "type": "module"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "observable", "type": "module"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "obs", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "base", "type": "module"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "array_spec", "type": "Any"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "array_spec", "type": "Any"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "observables", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "observables", "type": "Any"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "observables", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "floor", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "buffer_size", "type": "Any"}, {"lineNumber": 222, "col_offset": 51, "nodeName": "end", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 226, "col_offset": 41, "nodeName": "expected_value_spec", "type": "Any"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "expected_value_spec", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 50, "nodeName": "obs_name", "type": "str"}, {"lineNumber": 265, "col_offset": 10, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 10, "nodeName": "observation_updater", "type": "dm_control.composer.observation.updater.Updater"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "Generic", "type": "Type[dm_control.composer.observation.observable.base.Generic]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "Generic", "type": "Type[dm_control.composer.observation.observable.base.Generic]"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "Generic", "type": "Type[dm_control.composer.observation.observable.base.Generic]"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "BoundedGeneric", "type": "Type[BoundedGeneric]"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "BoundedGeneric", "type": "Type[BoundedGeneric]"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "observable", "type": "module"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "obs", "type": "Any"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "obs", "type": "Any"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "observables", "type": "Any"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "make_spec", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "make_spec", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "make_spec", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "make_spec", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "observables", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "make_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "make_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "make_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "make_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 205, "col_offset": 47, "nodeName": "obs_name", "type": "str"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 207, "col_offset": 43, "nodeName": "obs_name", "type": "str"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "physics", "type": "dm_control.composer.observation.fake_physics.FakePhysics"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "obs_name", "type": "str"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "math", "type": "module"}, {"lineNumber": 215, "col_offset": 48, "nodeName": "update_interval", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "observable", "type": "module"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "observable", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "observable", "type": "module"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "step_counter", "type": "int"}, {"lineNumber": 215, "col_offset": 39, "nodeName": "delay", "type": "Any"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "index", "type": "int"}, {"lineNumber": 237, "col_offset": 50, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "full", "type": "Any"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "observables", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "observables", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "observables", "type": "Any"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "observables", "type": "Any"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "observables", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "observables", "type": "Any"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "observables", "type": "Any"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "observables", "type": "Any"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "np", "type": "module"}]