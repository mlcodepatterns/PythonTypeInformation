[{"lineNumber": 33, "col_offset": 0, "nodeName": "_make_random_state", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "RANDOM_SEED", "type": "int"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "NUM_ITERATIONS", "type": "int"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 39, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 2, "nodeName": "testUniform", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "testUniformChoice", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 2, "nodeName": "testUniformPointOnSphere", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 2, "nodeName": "testNormal", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 2, "nodeName": "testExponential", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 2, "nodeName": "testPoisson", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 2, "nodeName": "testBiasedRandomWalk", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 114, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "RANDOM_SEED", "type": "int"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "_variation_random_state", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "_np_random_state", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "variation", "type": "dm_control.composer.variation.distributions.Uniform"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "choices", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "variation", "type": "dm_control.composer.variation.distributions.UniformChoice"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "variation", "type": "dm_control.composer.variation.distributions.UniformPointOnSphere"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "variation", "type": "dm_control.composer.variation.distributions.Normal"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "scale", "type": "int"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "variation", "type": "dm_control.composer.variation.distributions.Exponential"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "lam", "type": "int"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "variation", "type": "dm_control.composer.variation.distributions.Poisson"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "stdev", "type": "float"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "variation", "type": "dm_control.composer.variation.distributions.BiasedRandomWalk"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "bad_value", "type": "float"}, {"lineNumber": 115, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "_make_random_state", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "_make_random_state", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "lower", "type": "List[int]"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "upper", "type": "List[int]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "Uniform", "type": "Type[dm_control.composer.variation.distributions.Uniform]"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "NUM_ITERATIONS", "type": "int"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "UniformChoice", "type": "Type[dm_control.composer.variation.distributions.UniformChoice]"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "choices", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "NUM_ITERATIONS", "type": "int"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "UniformPointOnSphere", "type": "Type[dm_control.composer.variation.distributions.UniformPointOnSphere]"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "NUM_ITERATIONS", "type": "int"}, {"lineNumber": 64, "col_offset": 6, "nodeName": "sample", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "loc", "type": "int"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "scale", "type": "int"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "Normal", "type": "Type[dm_control.composer.variation.distributions.Normal]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "NUM_ITERATIONS", "type": "int"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "Exponential", "type": "Type[dm_control.composer.variation.distributions.Exponential]"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "NUM_ITERATIONS", "type": "int"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "Poisson", "type": "Type[dm_control.composer.variation.distributions.Poisson]"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "NUM_ITERATIONS", "type": "int"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "BiasedRandomWalk", "type": "Type[dm_control.composer.variation.distributions.BiasedRandomWalk]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 103, "col_offset": 45, "nodeName": "stdev", "type": "float"}, {"lineNumber": 112, "col_offset": 6, "nodeName": "_", "type": "dm_control.composer.variation.distributions.BiasedRandomWalk"}, {"lineNumber": 115, "col_offset": 2, "nodeName": "absltest", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "distributions", "type": "module"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "lower", "type": "List[int]"}, {"lineNumber": 46, "col_offset": 54, "nodeName": "upper", "type": "List[int]"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "distributions", "type": "module"}, {"lineNumber": 56, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "distributions", "type": "module"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "variation", "type": "dm_control.composer.variation.distributions.UniformPointOnSphere"}, {"lineNumber": 65, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 66, "col_offset": 6, "nodeName": "assert_approx_equal", "type": "Any"}, {"lineNumber": 67, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "sample", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 70, "col_offset": 54, "nodeName": "NUM_ITERATIONS", "type": "int"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "distributions", "type": "module"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "loc", "type": "int"}, {"lineNumber": 74, "col_offset": 52, "nodeName": "scale", "type": "int"}, {"lineNumber": 76, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "distributions", "type": "module"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "scale", "type": "int"}, {"lineNumber": 84, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "distributions", "type": "module"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "lam", "type": "int"}, {"lineNumber": 92, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "distributions", "type": "module"}, {"lineNumber": 99, "col_offset": 53, "nodeName": "stdev", "type": "float"}, {"lineNumber": 99, "col_offset": 70, "nodeName": "timescale", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "_", "type": "int"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "mean", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "sequence", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "std", "type": "Any"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "sequence", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 9, "nodeName": "assertRaisesWithLiteralMatch", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 112, "col_offset": 10, "nodeName": "BiasedRandomWalk", "type": "Type[dm_control.composer.variation.distributions.BiasedRandomWalk]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "DistributionsTest", "type": "Type[DistributionsTest]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 49, "col_offset": 10, "nodeName": "variation", "type": "dm_control.composer.variation.distributions.Uniform"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 50, "col_offset": 40, "nodeName": "lower", "type": "List[int]"}, {"lineNumber": 50, "col_offset": 47, "nodeName": "upper", "type": "List[int]"}, {"lineNumber": 56, "col_offset": 6, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "variation", "type": "dm_control.composer.variation.distributions.UniformChoice"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "choice", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "choices", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "_variation_random_state", "type": "Any"}, {"lineNumber": 65, "col_offset": 6, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 66, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "norm", "type": "Any"}, {"lineNumber": 66, "col_offset": 52, "nodeName": "sample", "type": "Any"}, {"lineNumber": 67, "col_offset": 6, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 76, "col_offset": 6, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "variation", "type": "dm_control.composer.variation.distributions.Normal"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "normal", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "loc", "type": "int"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "scale", "type": "int"}, {"lineNumber": 84, "col_offset": 6, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "variation", "type": "dm_control.composer.variation.distributions.Exponential"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "exponential", "type": "Any"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "scale", "type": "int"}, {"lineNumber": 92, "col_offset": 6, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "variation", "type": "dm_control.composer.variation.distributions.Poisson"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "poisson", "type": "Any"}, {"lineNumber": 94, "col_offset": 40, "nodeName": "lam", "type": "int"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "format", "type": "Any"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "bad_value", "type": "float"}, {"lineNumber": 112, "col_offset": 10, "nodeName": "distributions", "type": "module"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "_variation_random_state", "type": "Any"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "_np_random_state", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "_variation_random_state", "type": "Any"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "_np_random_state", "type": "Any"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 66, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "_variation_random_state", "type": "Any"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "_np_random_state", "type": "Any"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "_variation_random_state", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "_np_random_state", "type": "Any"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "_variation_random_state", "type": "Any"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "_np_random_state", "type": "Any"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "template", "type": "Any"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "arg_name", "type": "Any"}, {"lineNumber": 112, "col_offset": 54, "nodeName": "bad_value", "type": "float"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "self", "type": "DistributionsTest"}, {"lineNumber": 101, "col_offset": 53, "nodeName": "NUM_ITERATIONS", "type": "int"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "max", "type": "Callable"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "timescale", "type": "Any"}]