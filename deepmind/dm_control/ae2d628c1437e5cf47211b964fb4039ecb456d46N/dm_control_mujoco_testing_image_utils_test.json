[{"lineNumber": 32, "col_offset": 0, "nodeName": "SEED", "type": "int"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 88, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "image1", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "image2", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "rms", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "image1", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "image2", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "image1", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "image2", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "diff", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "message", "type": "str"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 89, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 45, "col_offset": 6, "nodeName": "frames", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "frames", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "frames", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "compute_rms", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "image1", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "image2", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "rms", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "expected_rms", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "SEED", "type": "int"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "randint", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "randint", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assert_images_close", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "image1", "type": "Any"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "image1", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "SEED", "type": "int"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "randint", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "randint", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 64, "col_offset": 67, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "get_default_test_tmpdir", "type": "Any"}, {"lineNumber": 77, "col_offset": 6, "nodeName": "path", "type": "str"}, {"lineNumber": 79, "col_offset": 6, "nodeName": "image", "type": "Any"}, {"lineNumber": 80, "col_offset": 6, "nodeName": "actual_contents", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "validate_saved_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "image1", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "validate_saved_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "image2", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "validate_saved_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "diff", "type": "Any"}, {"lineNumber": 89, "col_offset": 2, "nodeName": "absltest", "type": "Any"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "object", "type": "Callable[..., mock._patch]"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "image_utils", "type": "module"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "index1", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "index2", "type": "Any"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "image_utils", "type": "module"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 53, "col_offset": 66, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 54, "col_offset": 66, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "image_utils", "type": "module"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "ImagesNotClose", "type": "Type[dm_control.mujoco.testing.image_utils.ImagesNotClose]"}, {"lineNumber": 58, "col_offset": 6, "nodeName": "assert_images_close", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "image1", "type": "Any"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "image2", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 62, "col_offset": 66, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 63, "col_offset": 66, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 64, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "absltest", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "ImagesNotClose", "type": "Type[dm_control.mujoco.testing.image_utils.ImagesNotClose]"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "message", "type": "str"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "image1", "type": "Any"}, {"lineNumber": 70, "col_offset": 56, "nodeName": "image2", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "ImagesNotClose", "type": "Type[dm_control.mujoco.testing.image_utils.ImagesNotClose]"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "func", "type": "Any"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "open", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "path", "type": "str"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "image", "type": "Any"}, {"lineNumber": 81, "col_offset": 6, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "expected_contents", "type": "Any"}, {"lineNumber": 81, "col_offset": 55, "nodeName": "actual_contents", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "iter_load", "type": "Callable[[], Generator[Any, Any, None]]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "self", "type": "ImageUtilsTest"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "image_utils", "type": "module"}, {"lineNumber": 58, "col_offset": 6, "nodeName": "image_utils", "type": "module"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "image_utils", "type": "module"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "self", "type": "ImageUtilsTest"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "image_utils", "type": "module"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "message", "type": "str"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "name", "type": "str"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "self", "type": "ImageUtilsTest"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "isfile", "type": "Callable[[Union[bytes, str, _PathLike[Any]]], bool]"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "path", "type": "str"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "Image", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "mock", "type": "module"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "humanoid", "type": "dm_control.mujoco.testing.image_utils._FrameSequence"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 81, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "image_utils", "type": "module"}, {"lineNumber": 64, "col_offset": 45, "nodeName": "image1", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "int16", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "image2", "type": "Any"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "np", "type": "module"}]