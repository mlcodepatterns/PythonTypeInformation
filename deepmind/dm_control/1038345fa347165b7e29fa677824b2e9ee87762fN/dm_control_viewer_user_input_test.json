[{"lineNumber": 26, "col_offset": 20, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "absltest", "type": "Any"}, {"lineNumber": 174, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "mouse", "type": "mock.MagicMock"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "keyboard", "type": "mock.MagicMock"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "_active_exclusive", "type": "int"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "_action_callbacks", "type": "Dict[int, int]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "_double_click_callbacks", "type": "Dict[int, int]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "_plane_callback", "type": "List[int]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "_z_axis_callback", "type": "List[int]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "_action_callbacks", "type": "Dict[Tuple[int, int], Tuple[bool, mock.MagicMock]]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "_action_callbacks", "type": "Dict[Tuple[int, int], Tuple[bool, mock.MagicMock]]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "activation_modifiers", "type": "int"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "no_modifiers", "type": "int"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "_double_click_callbacks", "type": "Dict[Tuple[int, int], mock.MagicMock]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "_action_callbacks", "type": "Dict[Tuple[int, int], Tuple[bool, mock.MagicMock]]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "position", "type": "List[int]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "translation", "type": "List[int]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "_plane_callback", "type": "List[mock.MagicMock]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "value", "type": "int"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "_z_axis_callback", "type": "List[mock.MagicMock]"}, {"lineNumber": 175, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "InputMap", "type": "Type[dm_control.viewer.user_input.InputMap]"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "mouse", "type": "mock.MagicMock"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "keyboard", "type": "mock.MagicMock"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "clear_bindings", "type": "Callable[[], None]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "_action_callbacks", "type": "Dict[int, int]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "_double_click_callbacks", "type": "Dict[int, int]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "_plane_callback", "type": "List[int]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "_z_axis_callback", "type": "List[int]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_NO_EXCLUSIVE_KEY", "type": "Tuple[None, None]"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "_active_exclusive", "type": "int"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "bind", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "expected_dict", "type": "Dict[Tuple[int, int], Tuple[bool, mock.MagicMock]]"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "_action_callbacks", "type": "Dict[nothing, nothing]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "bind", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "expected_dict", "type": "Dict[Tuple[int, int], Tuple[bool, mock.MagicMock]]"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "_action_callbacks", "type": "Dict[nothing, nothing]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "bind", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "MOD_NONE", "type": "int"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "MOD_ALT", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "bind_plane", "type": "Callable[[Any], None]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "_plane_callback", "type": "List[nothing]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "bind_z_axis", "type": "Callable[[Any], None]"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "_z_axis_callback", "type": "List[nothing]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "RELEASE", "type": "int"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "RELEASE", "type": "int"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "RELEASE", "type": "int"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "RELEASE", "type": "int"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 142, "col_offset": 52, "nodeName": "activation_modifiers", "type": "int"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "RELEASE", "type": "int"}, {"lineNumber": 146, "col_offset": 54, "nodeName": "no_modifiers", "type": "int"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 150, "col_offset": 54, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "_handle_double_click", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "_handle_double_click", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "_handle_mouse_move", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "position", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 48, "nodeName": "translation", "type": "List[int]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 42, "nodeName": "position", "type": "List[int]"}, {"lineNumber": 165, "col_offset": 52, "nodeName": "translation", "type": "List[int]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "_handle_mouse_scroll", "type": "Callable[[Any], None]"}, {"lineNumber": 170, "col_offset": 40, "nodeName": "value", "type": "int"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "value", "type": "int"}, {"lineNumber": 175, "col_offset": 2, "nodeName": "absltest", "type": "Any"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "mock", "type": "module"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "mock", "type": "module"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "user_input", "type": "module"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "mock", "type": "module"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "user_input", "type": "module"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "user_input", "type": "module"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "MOD_NONE", "type": "int"}, {"lineNumber": 55, "col_offset": 58, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "Exclusive", "type": "Type[dm_control.viewer.user_input.Exclusive]"}, {"lineNumber": 59, "col_offset": 60, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "MOD_NONE", "type": "int"}, {"lineNumber": 61, "col_offset": 57, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "Range", "type": "Type[dm_control.viewer.user_input.Range]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "user_input", "type": "module"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "user_input", "type": "module"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "user_input", "type": "module"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "user_input", "type": "module"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "user_input", "type": "module"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "user_input", "type": "module"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "_plane_callback", "type": "List[nothing]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "_z_axis_callback", "type": "List[nothing]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 88, "col_offset": 56, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 98, "col_offset": 55, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 109, "col_offset": 55, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "activation_modifiers", "type": "int"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 150, "col_offset": 54, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 155, "col_offset": 55, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "callback", "type": "mock.MagicMock"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "InputMapTests", "type": "Type[InputMapTests]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "user_input", "type": "module"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "user_input", "type": "module"}, {"lineNumber": 55, "col_offset": 58, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "user_input", "type": "module"}, {"lineNumber": 59, "col_offset": 60, "nodeName": "user_input", "type": "module"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "user_input", "type": "module"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "user_input", "type": "module"}, {"lineNumber": 61, "col_offset": 57, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "user_input", "type": "module"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 88, "col_offset": 56, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 98, "col_offset": 55, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 109, "col_offset": 55, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 155, "col_offset": 55, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "user_input", "type": "module"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "MOD_ALT", "type": "int"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "user_input", "type": "module"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "user_input", "type": "module"}]