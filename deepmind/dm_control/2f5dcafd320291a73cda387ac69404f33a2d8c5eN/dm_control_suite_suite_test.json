[{"lineNumber": 40, "col_offset": 0, "nodeName": "uniform_random_policy", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "step_environment", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "make_trajectory", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 79, "col_offset": 2, "nodeName": "test_constants", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 2, "nodeName": "_validate_observation", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 2, "nodeName": "_validate_reward_range", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 2, "nodeName": "_validate_discount", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 2, "nodeName": "_validate_control_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 2, "nodeName": "test_components_have_names", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 2, "nodeName": "test_model_has_at_least_2_cameras", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 2, "nodeName": "test_task_conforms_to_spec", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 179, "col_offset": 2, "nodeName": "test_environment_is_deterministic", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 197, "col_offset": 2, "nodeName": "assertCorrectColors", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 209, "col_offset": 2, "nodeName": "test_visualize_reward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 239, "col_offset": 2, "nodeName": "test_task_supports_environment_kwargs", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 247, "col_offset": 2, "nodeName": "test_observation_arrays_dont_share_memory", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 259, "col_offset": 2, "nodeName": "test_observations_dont_contain_constant_elements", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 290, "col_offset": 2, "nodeName": "test_initial_state_is_randomized", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "lower_bounds", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 42, "col_offset": 2, "nodeName": "upper_bounds", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 49, "col_offset": 2, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "policy", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 71, "col_offset": 2, "nodeName": "env", "type": "Any"}, {"lineNumber": 72, "col_offset": 2, "nodeName": "policy", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 300, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "ALL_TASKS", "type": "Tuple[Tuple[nothing, nothing], ...]"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "where", "type": "Any"}, {"lineNumber": 46, "col_offset": 56, "nodeName": "lower_bounds", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "where", "type": "Any"}, {"lineNumber": 48, "col_offset": 55, "nodeName": "upper_bounds", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "num_episodes", "type": "int"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "step_count", "type": "int"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "domain", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "task", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "uniform_random_policy", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "step_environment", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "env", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "policy", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "obs", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "lower_bounds", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "upper_bounds", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "object_types_and_size_fields", "type": "List[Tuple[str, str]]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "is_benchmark", "type": "bool"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "observation_spec", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 167, "col_offset": 7, "nodeName": "is_benchmark", "type": "bool"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "policy", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "trajectory1", "type": "Generator[Any, Any, None]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "trajectory2", "type": "Generator[Any, Any, None]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "colors", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "mat_rgba", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "material_name", "type": "str"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "visualize_reward", "type": "bool"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "action", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "first_timestep", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "action", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "second_timestep", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "observations", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "trajectory", "type": "Generator[Any, Any, None]"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "failures", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "observation", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 294, "col_offset": 11, "nodeName": "observation", "type": "Any"}, {"lineNumber": 301, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "domain", "type": "nothing"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "task", "type": "nothing"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "domain", "type": "nothing"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "task", "type": "nothing"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "suite", "type": "module"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "mjMAXVAL", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "mjMAXVAL", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "lower_bounds", "type": "Any"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "upper_bounds", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "reset", "type": "Any"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 62, "col_offset": 6, "nodeName": "action", "type": "Any"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 64, "col_offset": 6, "nodeName": "step_count", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "suite", "type": "module"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 72, "col_offset": 59, "nodeName": "seed", "type": "Any"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "trajectory_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "ALL_TASKS", "type": "Tuple[Tuple[nothing, nothing], ...]"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "num_tasks", "type": "int"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "copy", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "spec", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "observation_spec", "type": "Any"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "arr", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 100, "col_offset": 7, "nodeName": "first", "type": "Any"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "first", "type": "Any"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "task", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "physics", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "object_type", "type": "str"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "size_field", "type": "str"}, {"lineNumber": 144, "col_offset": 10, "nodeName": "idx", "type": "int"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "task", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "physics", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "ncam", "type": "Any"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "BENCHMARKING", "type": "Tuple[Tuple[nothing, nothing], ...]"}, {"lineNumber": 162, "col_offset": 10, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "task", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "observation_spec", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "uniform_random_policy", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 35, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "step_environment", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 38, "nodeName": "env", "type": "Any"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "policy", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 9, "nodeName": "is_benchmark", "type": "bool"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "make_trajectory", "type": "Callable[..., Any]"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "make_trajectory", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "time_step1", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "time_step2", "type": "Any"}, {"lineNumber": 188, "col_offset": 34, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "trajectory1", "type": "Generator[Any, Any, None]"}, {"lineNumber": 188, "col_offset": 51, "nodeName": "trajectory2", "type": "Generator[Any, Any, None]"}, {"lineNumber": 192, "col_offset": 10, "nodeName": "key", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 200, "col_offset": 6, "nodeName": "highlight", "type": "Any"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "default", "type": "Any"}, {"lineNumber": 202, "col_offset": 6, "nodeName": "blend_coef", "type": "Any"}, {"lineNumber": 203, "col_offset": 6, "nodeName": "expected", "type": "Any"}, {"lineNumber": 204, "col_offset": 6, "nodeName": "actual", "type": "Any"}, {"lineNumber": 211, "col_offset": 10, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "task", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 215, "col_offset": 54, "nodeName": "mock_get_reward", "type": "Any"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "return_value", "type": "float"}, {"lineNumber": 222, "col_offset": 6, "nodeName": "return_value", "type": "float"}, {"lineNumber": 228, "col_offset": 6, "nodeName": "return_value", "type": "float"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "return_value", "type": "float"}, {"lineNumber": 241, "col_offset": 10, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 241, "col_offset": 29, "nodeName": "task", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 249, "col_offset": 10, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "task", "type": "Any"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "reset", "type": "Any"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "step", "type": "Any"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "action", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "first_array", "type": "Any"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 253, "col_offset": 43, "nodeName": "observation", "type": "Any"}, {"lineNumber": 254, "col_offset": 6, "nodeName": "second_array", "type": "Any"}, {"lineNumber": 261, "col_offset": 10, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 261, "col_offset": 29, "nodeName": "task", "type": "Any"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "make_trajectory", "type": "Callable[..., Any]"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "array_list", "type": "List[Any]"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 271, "col_offset": 42, "nodeName": "observations", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 277, "col_offset": 6, "nodeName": "stacked_arrays", "type": "numpy.ndarray"}, {"lineNumber": 278, "col_offset": 6, "nodeName": "is_constant", "type": "Any"}, {"lineNumber": 281, "col_offset": 9, "nodeName": "has_constant_elements", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "failures", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 292, "col_offset": 10, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 292, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 292, "col_offset": 29, "nodeName": "task", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 301, "col_offset": 2, "nodeName": "absltest", "type": "Any"}, {"lineNumber": 46, "col_offset": 6, "nodeName": "abs", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "lower_bounds", "type": "Any"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "constants", "type": "Any"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "abs", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "upper_bounds", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "constants", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "last", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "policy", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "step", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "action", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "step_count", "type": "int"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "max_steps_per_episode", "type": "int"}, {"lineNumber": 71, "col_offset": 56, "nodeName": "seed", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "env", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "self", "type": "SuiteTest"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "suite", "type": "module"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "observation_dict", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "six", "type": "module"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 90, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "self", "type": "SuiteTest"}, {"lineNumber": 100, "col_offset": 7, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "reward", "type": "Any"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "reward", "type": "Any"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "assertBetween", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "reward", "type": "Any"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "discount", "type": "Any"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "discount", "type": "Any"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "assertBetween", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "discount", "type": "Any"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 117, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "suite", "type": "module"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "object_name", "type": "Any"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "suite", "type": "module"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 156, "col_offset": 48, "nodeName": "ncam", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "domain", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "task", "type": "Any"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "suite", "type": "module"}, {"lineNumber": 162, "col_offset": 10, "nodeName": "suite", "type": "module"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "env", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 168, "col_offset": 6, "nodeName": "_validate_control_range", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 168, "col_offset": 56, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 174, "col_offset": 6, "nodeName": "_validate_observation", "type": "Any"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "observation", "type": "Any"}, {"lineNumber": 174, "col_offset": 56, "nodeName": "observation_spec", "type": "Any"}, {"lineNumber": 175, "col_offset": 6, "nodeName": "_validate_discount", "type": "Any"}, {"lineNumber": 175, "col_offset": 30, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "domain", "type": "Any"}, {"lineNumber": 186, "col_offset": 54, "nodeName": "task", "type": "Any"}, {"lineNumber": 186, "col_offset": 65, "nodeName": "seed", "type": "int"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "domain", "type": "Any"}, {"lineNumber": 187, "col_offset": 54, "nodeName": "task", "type": "Any"}, {"lineNumber": 187, "col_offset": 65, "nodeName": "seed", "type": "int"}, {"lineNumber": 189, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "step_type", "type": "Any"}, {"lineNumber": 189, "col_offset": 45, "nodeName": "step_type", "type": "Any"}, {"lineNumber": 190, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "reward", "type": "Any"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "reward", "type": "Any"}, {"lineNumber": 191, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "discount", "type": "Any"}, {"lineNumber": 191, "col_offset": 44, "nodeName": "discount", "type": "Any"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "iterkeys", "type": "Callable"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "observation", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "named", "type": "Any"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "colors", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "colors", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "reward", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "colors", "type": "Any"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "material_name", "type": "str"}, {"lineNumber": 206, "col_offset": 54, "nodeName": "expected", "type": "Any"}, {"lineNumber": 206, "col_offset": 64, "nodeName": "actual", "type": "Any"}, {"lineNumber": 207, "col_offset": 6, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 207, "col_offset": 43, "nodeName": "expected", "type": "Any"}, {"lineNumber": 207, "col_offset": 53, "nodeName": "actual", "type": "Any"}, {"lineNumber": 211, "col_offset": 10, "nodeName": "suite", "type": "module"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 9, "nodeName": "object", "type": "Callable[..., mock._patch]"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "task", "type": "Any"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "mock_get_reward", "type": "Any"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "reset", "type": "Any"}, {"lineNumber": 218, "col_offset": 6, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 218, "col_offset": 41, "nodeName": "physics", "type": "Any"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "assertCorrectColors", "type": "Any"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "physics", "type": "Any"}, {"lineNumber": 221, "col_offset": 6, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 222, "col_offset": 6, "nodeName": "mock_get_reward", "type": "Any"}, {"lineNumber": 223, "col_offset": 6, "nodeName": "step", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 224, "col_offset": 6, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "physics", "type": "Any"}, {"lineNumber": 225, "col_offset": 6, "nodeName": "assertCorrectColors", "type": "Any"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "physics", "type": "Any"}, {"lineNumber": 227, "col_offset": 6, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 228, "col_offset": 6, "nodeName": "mock_get_reward", "type": "Any"}, {"lineNumber": 229, "col_offset": 6, "nodeName": "step", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 230, "col_offset": 6, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 230, "col_offset": 41, "nodeName": "physics", "type": "Any"}, {"lineNumber": 231, "col_offset": 6, "nodeName": "assertCorrectColors", "type": "Any"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "physics", "type": "Any"}, {"lineNumber": 233, "col_offset": 6, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "mock_get_reward", "type": "Any"}, {"lineNumber": 235, "col_offset": 6, "nodeName": "reset", "type": "Any"}, {"lineNumber": 236, "col_offset": 6, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 236, "col_offset": 41, "nodeName": "physics", "type": "Any"}, {"lineNumber": 237, "col_offset": 6, "nodeName": "assertCorrectColors", "type": "Any"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "physics", "type": "Any"}, {"lineNumber": 241, "col_offset": 10, "nodeName": "suite", "type": "module"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "FLAT_OBSERVATION_KEY", "type": "str"}, {"lineNumber": 249, "col_offset": 10, "nodeName": "suite", "type": "module"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "env", "type": "Any"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "six", "type": "module"}, {"lineNumber": 253, "col_offset": 43, "nodeName": "first_timestep", "type": "Any"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "observation", "type": "Any"}, {"lineNumber": 255, "col_offset": 6, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 261, "col_offset": 10, "nodeName": "suite", "type": "module"}, {"lineNumber": 262, "col_offset": 40, "nodeName": "domain", "type": "Any"}, {"lineNumber": 262, "col_offset": 53, "nodeName": "task", "type": "Any"}, {"lineNumber": 264, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 266, "col_offset": 10, "nodeName": "name", "type": "Any"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "observation", "type": "Any"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "six", "type": "module"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 277, "col_offset": 32, "nodeName": "array_list", "type": "List[Any]"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 280, "col_offset": 10, "nodeName": "is_constant", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 292, "col_offset": 10, "nodeName": "suite", "type": "module"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "reset", "type": "Any"}, {"lineNumber": 294, "col_offset": 11, "nodeName": "reset", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 298, "col_offset": 39, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 298, "col_offset": 45, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 46, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "tasks", "type": "Tuple[Any, ...]"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "tasks", "type": "Tuple[Any, ...]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "self", "type": "SuiteTest"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "arr", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "spec", "type": "Any"}, {"lineNumber": 90, "col_offset": 6, "nodeName": "self", "type": "SuiteTest"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "arr", "type": "Any"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "spec", "type": "Any"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "self", "type": "SuiteTest"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "all", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "obs", "type": "Any"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "self", "type": "SuiteTest"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "self", "type": "SuiteTest"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "self", "type": "SuiteTest"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "self", "type": "SuiteTest"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "self", "type": "SuiteTest"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "self", "type": "SuiteTest"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "self", "type": "SuiteTest"}, {"lineNumber": 117, "col_offset": 6, "nodeName": "self", "type": "SuiteTest"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "size_field", "type": "str"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "id2name", "type": "Any"}, {"lineNumber": 145, "col_offset": 36, "nodeName": "idx", "type": "int"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "object_type", "type": "str"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "object_name", "type": "Any"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 156, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 168, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 168, "col_offset": 56, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 174, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 175, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "_validate_reward_range", "type": "Any"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 189, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "time_step1", "type": "Any"}, {"lineNumber": 189, "col_offset": 45, "nodeName": "time_step2", "type": "Any"}, {"lineNumber": 190, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "time_step1", "type": "Any"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "time_step2", "type": "Any"}, {"lineNumber": 191, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "time_step1", "type": "Any"}, {"lineNumber": 191, "col_offset": 44, "nodeName": "time_step2", "type": "Any"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "time_step1", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "physics", "type": "Any"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "blend_coef", "type": "Any"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "highlight", "type": "Any"}, {"lineNumber": 203, "col_offset": 63, "nodeName": "default", "type": "Any"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "material_name", "type": "str"}, {"lineNumber": 207, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 207, "col_offset": 69, "nodeName": "err_msg", "type": "str"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 215, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "env", "type": "Any"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "env", "type": "Any"}, {"lineNumber": 218, "col_offset": 6, "nodeName": "mock_get_reward", "type": "Any"}, {"lineNumber": 218, "col_offset": 41, "nodeName": "env", "type": "Any"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 221, "col_offset": 6, "nodeName": "mock_get_reward", "type": "Any"}, {"lineNumber": 223, "col_offset": 6, "nodeName": "env", "type": "Any"}, {"lineNumber": 224, "col_offset": 6, "nodeName": "mock_get_reward", "type": "Any"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "env", "type": "Any"}, {"lineNumber": 225, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 225, "col_offset": 51, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 227, "col_offset": 6, "nodeName": "mock_get_reward", "type": "Any"}, {"lineNumber": 229, "col_offset": 6, "nodeName": "env", "type": "Any"}, {"lineNumber": 230, "col_offset": 6, "nodeName": "mock_get_reward", "type": "Any"}, {"lineNumber": 230, "col_offset": 41, "nodeName": "env", "type": "Any"}, {"lineNumber": 231, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 233, "col_offset": 6, "nodeName": "mock_get_reward", "type": "Any"}, {"lineNumber": 235, "col_offset": 6, "nodeName": "env", "type": "Any"}, {"lineNumber": 236, "col_offset": 6, "nodeName": "mock_get_reward", "type": "Any"}, {"lineNumber": 236, "col_offset": 41, "nodeName": "env", "type": "Any"}, {"lineNumber": 237, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 237, "col_offset": 51, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 242, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "observation_spec", "type": "Any"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "control", "type": "module"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "action_spec", "type": "Any"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "second_timestep", "type": "Any"}, {"lineNumber": 254, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 255, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 10, "nodeName": "may_share_memory", "type": "Any"}, {"lineNumber": 256, "col_offset": 30, "nodeName": "first_array", "type": "Any"}, {"lineNumber": 256, "col_offset": 43, "nodeName": "second_array", "type": "Any"}, {"lineNumber": 264, "col_offset": 41, "nodeName": "observation_spec", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "six", "type": "module"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "time_step", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 267, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "stacked_arrays", "type": "numpy.ndarray"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "isscalar", "type": "Any"}, {"lineNumber": 280, "col_offset": 37, "nodeName": "is_constant", "type": "Any"}, {"lineNumber": 280, "col_offset": 55, "nodeName": "any", "type": "Any"}, {"lineNumber": 280, "col_offset": 62, "nodeName": "is_constant", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "env", "type": "Any"}, {"lineNumber": 294, "col_offset": 11, "nodeName": "env", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "itervalues", "type": "Callable"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "TASKS_BY_DOMAIN", "type": "Dict[nothing, Tuple[Any, ...]]"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "isfinite", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "arr", "type": "Any"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 93, "col_offset": 58, "nodeName": "name", "type": "Any"}, {"lineNumber": 93, "col_offset": 64, "nodeName": "arr", "type": "Any"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "observation", "type": "Any"}, {"lineNumber": 194, "col_offset": 41, "nodeName": "observation", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "material_name", "type": "str"}, {"lineNumber": 201, "col_offset": 23, "nodeName": "material_name", "type": "str"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "blend_coef", "type": "Any"}, {"lineNumber": 207, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 215, "col_offset": 9, "nodeName": "mock", "type": "module"}, {"lineNumber": 225, "col_offset": 51, "nodeName": "mock_get_reward", "type": "Any"}, {"lineNumber": 237, "col_offset": 51, "nodeName": "mock_get_reward", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "env", "type": "Any"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 256, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 257, "col_offset": 74, "nodeName": "name", "type": "Any"}, {"lineNumber": 264, "col_offset": 41, "nodeName": "env", "type": "Any"}, {"lineNumber": 274, "col_offset": 10, "nodeName": "domain", "type": "Any"}, {"lineNumber": 274, "col_offset": 51, "nodeName": "name", "type": "Any"}, {"lineNumber": 275, "col_offset": 10, "nodeName": "domain", "type": "Any"}, {"lineNumber": 275, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 278, "col_offset": 45, "nodeName": "stacked_arrays", "type": "numpy.ndarray"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 280, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "failures", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 282, "col_offset": 31, "nodeName": "is_constant", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "all", "type": "Any"}, {"lineNumber": 296, "col_offset": 43, "nodeName": "k", "type": "Any"}, {"lineNumber": 296, "col_offset": 48, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "six", "type": "module"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "suite", "type": "module"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 148, "col_offset": 48, "nodeName": "object_type", "type": "str"}, {"lineNumber": 148, "col_offset": 61, "nodeName": "idx", "type": "int"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "time_step1", "type": "Any"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 194, "col_offset": 41, "nodeName": "time_step2", "type": "Any"}, {"lineNumber": 194, "col_offset": 64, "nodeName": "key", "type": "Any"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 195, "col_offset": 60, "nodeName": "key", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "observations", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 288, "col_offset": 53, "nodeName": "failures", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "obs1", "type": "Any"}, {"lineNumber": 296, "col_offset": 30, "nodeName": "obs2", "type": "Any"}, {"lineNumber": 288, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 288, "col_offset": 37, "nodeName": "is_constant", "type": "Any"}, {"lineNumber": 296, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 296, "col_offset": 35, "nodeName": "k", "type": "Any"}]