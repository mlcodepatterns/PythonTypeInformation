[{"lineNumber": 37, "col_offset": 0, "nodeName": "make_valid_model", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "make_broken_model", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "break_valid_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "_parse_line_refs", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "SourceLine", "type": "Type[namedtuple_SourceLine_line_number_text]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "LINE_REF", "type": "Dict[str, namedtuple_SourceLine_line_number_text]"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 39, "col_offset": 2, "nodeName": "mjcf_model", "type": "dm_control.mjcf.element.RootElement"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "my_body", "type": "Any"}, {"lineNumber": 44, "col_offset": 2, "nodeName": "my_joint", "type": "Any"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "mjcf_model", "type": "dm_control.mjcf.element.RootElement"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "mjcf_model", "type": "dm_control.mjcf.element.RootElement"}, {"lineNumber": 54, "col_offset": 2, "nodeName": "my_body", "type": "Any"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "mjcf_model", "type": "dm_control.mjcf.element.RootElement"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "joint", "type": "str"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "mjcf_model", "type": "Any"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "line_ref_pattern", "type": "Pattern[str]"}, {"lineNumber": 74, "col_offset": 2, "nodeName": "src_lines", "type": "List[str]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "_parse_line_refs", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "collections", "type": "module"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "RootElement", "type": "Type[dm_control.mjcf.element.RootElement]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 42, "col_offset": 2, "nodeName": "add", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "add", "type": "Any"}, {"lineNumber": 46, "col_offset": 2, "nodeName": "add", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "RootElement", "type": "Type[dm_control.mjcf.element.RootElement]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "add", "type": "Any"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "add", "type": "Any"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "add", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 71, "col_offset": 2, "nodeName": "filename", "type": "str"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "_", "type": "str"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "__file__", "type": "str"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "src", "type": "str"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 75, "col_offset": 6, "nodeName": "line_number", "type": "int"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "line", "type": "str"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "src_lines", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "mjcf", "type": "module"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "worldbody", "type": "Any"}, {"lineNumber": 42, "col_offset": 2, "nodeName": "my_body", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "my_body", "type": "Any"}, {"lineNumber": 46, "col_offset": 2, "nodeName": "actuator", "type": "Any"}, {"lineNumber": 46, "col_offset": 64, "nodeName": "my_joint", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "mjcf", "type": "module"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "worldbody", "type": "Any"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "my_body", "type": "Any"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "my_body", "type": "Any"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "actuator", "type": "Any"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "find", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "re", "type": "module"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 72, "col_offset": 7, "nodeName": "open", "type": "Callable"}, {"lineNumber": 73, "col_offset": 10, "nodeName": "read", "type": "Callable"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "src", "type": "str"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "match", "type": "Callable"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "line", "type": "str"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "mjcf_model", "type": "dm_control.mjcf.element.RootElement"}, {"lineNumber": 46, "col_offset": 2, "nodeName": "mjcf_model", "type": "dm_control.mjcf.element.RootElement"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "mjcf_model", "type": "dm_control.mjcf.element.RootElement"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "mjcf_model", "type": "dm_control.mjcf.element.RootElement"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "mjcf_model", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "filename", "type": "str"}, {"lineNumber": 73, "col_offset": 10, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "line_ref_pattern", "type": "Pattern[str]"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "LINE_REF", "type": "Dict[str, namedtuple_SourceLine_line_number_text]"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "line_number", "type": "int"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "src_lines", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "line_number", "type": "int"}]