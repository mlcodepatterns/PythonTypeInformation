[{"lineNumber": 29, "col_offset": 0, "nodeName": "mjlib", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "mjlib", "type": "Any"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "_NUM_RANDOM_SAMPLES", "type": "int"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 2, "nodeName": "test_quat_to_mat_mujoco_special", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 2, "nodeName": "test_quat_to_mat_mujoco_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 2, "nodeName": "test_mat_to_quat_mujoco", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 2, "nodeName": "test_quat_mul_vs_mat_mul_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 2, "nodeName": "test_quat_mul_mujoco_special", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 2, "nodeName": "test_quat_mul_mujoco_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 2, "nodeName": "test_quat_rotate_mujoco_special", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 2, "nodeName": "test_quat_rotate_mujoco_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 2, "nodeName": "test_quat_diff_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 2, "nodeName": "test_quat_dist_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 2, "nodeName": "_random_quaternion", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "mjbindings", "type": "module"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 200, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "_random_state", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "mat", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "rng", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "euler_tup", "type": "Union[Tuple[Any, Any, Any], Tuple[int, int, int]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "subsamps", "type": "int"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "rng", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "euler_tup", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "angles", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "ordering", "type": "str"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "rng", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "quat1", "type": "numpy.ndarray"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "euler_tup", "type": "Union[Tuple[Any, Any, Any], Tuple[int, int, int]]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "rng", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "vec", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "euler_tup", "type": "Union[Tuple[Any, Any, Any], Tuple[int, int, int]]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "rand", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "r1", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "r2", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "pi2", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "t1", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "t2", "type": "Any"}, {"lineNumber": 201, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "quat_to_mat", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "quat", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "truemat", "type": "Any"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "pi", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "product", "type": "Callable"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "rng", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 44, "nodeName": "rng", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "rng", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 6, "nodeName": "euler_vec", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 6, "nodeName": "mat", "type": "Any"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "quat", "type": "Any"}, {"lineNumber": 75, "col_offset": 6, "nodeName": "tr_mat", "type": "Any"}, {"lineNumber": 76, "col_offset": 6, "nodeName": "mj_mat", "type": "Any"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "mj_mat", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "_NUM_RANDOM_SAMPLES", "type": "int"}, {"lineNumber": 84, "col_offset": 6, "nodeName": "quat", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 6, "nodeName": "tr_mat", "type": "Any"}, {"lineNumber": 86, "col_offset": 6, "nodeName": "mj_mat", "type": "Any"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "mj_mat", "type": "Any"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "pi", "type": "Any"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "subsamps", "type": "int"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "product", "type": "Callable"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "rng", "type": "Any"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "rng", "type": "Any"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "rng", "type": "Any"}, {"lineNumber": 95, "col_offset": 6, "nodeName": "euler_vec", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 6, "nodeName": "mat", "type": "Any"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "mj_quat", "type": "Any"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "tr_quat", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "r1", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "r2", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "r3", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "r", "type": "Any"}, {"lineNumber": 112, "col_offset": 6, "nodeName": "euler_angles", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "_NUM_RANDOM_SAMPLES", "type": "int"}, {"lineNumber": 117, "col_offset": 6, "nodeName": "quat1", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 6, "nodeName": "quat2", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 6, "nodeName": "rmat1", "type": "Any"}, {"lineNumber": 120, "col_offset": 6, "nodeName": "rmat2", "type": "Any"}, {"lineNumber": 121, "col_offset": 6, "nodeName": "quat_prod", "type": "Any"}, {"lineNumber": 122, "col_offset": 6, "nodeName": "rmat_prod_q", "type": "Any"}, {"lineNumber": 123, "col_offset": 6, "nodeName": "rmat_prod", "type": "Any"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "pi", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "product", "type": "Callable"}, {"lineNumber": 130, "col_offset": 39, "nodeName": "rng", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "rng", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 49, "nodeName": "rng", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "euler_vec", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "quat2", "type": "Any"}, {"lineNumber": 133, "col_offset": 6, "nodeName": "quat_prod_tr", "type": "Any"}, {"lineNumber": 134, "col_offset": 6, "nodeName": "quat_prod_mj", "type": "Any"}, {"lineNumber": 137, "col_offset": 6, "nodeName": "quat1", "type": "Any"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "quat2", "type": "Any"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "_NUM_RANDOM_SAMPLES", "type": "int"}, {"lineNumber": 141, "col_offset": 6, "nodeName": "quat1", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 6, "nodeName": "quat2", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "quat_prod_tr", "type": "Any"}, {"lineNumber": 144, "col_offset": 6, "nodeName": "quat_prod_mj", "type": "Any"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "pi", "type": "Any"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "product", "type": "Callable"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "rng", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "rng", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 49, "nodeName": "rng", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "euler_vec", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "quat", "type": "Any"}, {"lineNumber": 155, "col_offset": 6, "nodeName": "rotated_vec_tr", "type": "Any"}, {"lineNumber": 156, "col_offset": 6, "nodeName": "rotated_vec_mj", "type": "Any"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "_NUM_RANDOM_SAMPLES", "type": "int"}, {"lineNumber": 162, "col_offset": 6, "nodeName": "quat", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 6, "nodeName": "vec", "type": "Any"}, {"lineNumber": 164, "col_offset": 6, "nodeName": "rotated_vec_tr", "type": "Any"}, {"lineNumber": 165, "col_offset": 6, "nodeName": "rotated_vec_mj", "type": "Any"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "_NUM_RANDOM_SAMPLES", "type": "int"}, {"lineNumber": 171, "col_offset": 6, "nodeName": "source", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 6, "nodeName": "target", "type": "numpy.ndarray"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "_NUM_RANDOM_SAMPLES", "type": "int"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "source", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 6, "nodeName": "target", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 6, "nodeName": "source", "type": "Any"}, {"lineNumber": 183, "col_offset": 6, "nodeName": "target", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 190, "col_offset": 9, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 192, "col_offset": 10, "nodeName": "pi", "type": "Any"}, {"lineNumber": 193, "col_offset": 9, "nodeName": "pi2", "type": "Any"}, {"lineNumber": 194, "col_offset": 9, "nodeName": "pi2", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 201, "col_offset": 2, "nodeName": "absltest", "type": "Any"}, {"lineNumber": 37, "col_offset": 47, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 37, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "transformations", "type": "module"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "mat", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "pi", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "pi", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "pi", "type": "Any"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "itertools", "type": "module"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "euler_tup", "type": "Union[Tuple[Any, Any, Any], Tuple[int, int, int]]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "euler_to_rmat", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "euler_vec", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "mat_to_quat", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "mat", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "quat_to_mat", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "quat", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 77, "col_offset": 6, "nodeName": "mju_quat2Mat", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "mj_mat", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "quat", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 79, "col_offset": 6, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "mj_mat", "type": "Any"}, {"lineNumber": 80, "col_offset": 6, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 80, "col_offset": 51, "nodeName": "mat", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "_random_quaternion", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "quat_to_mat", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "quat", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "mju_quat2Mat", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "mj_mat", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "quat", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 89, "col_offset": 51, "nodeName": "mj_mat", "type": "Any"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "pi", "type": "Any"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "itertools", "type": "module"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "euler_tup", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "euler_to_rmat", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "euler_vec", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "empty", "type": "Any"}, {"lineNumber": 98, "col_offset": 6, "nodeName": "mju_mat2Quat", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "mj_quat", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "mat_to_quat", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "mat", "type": "Any"}, {"lineNumber": 100, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "_eulermap", "type": "Dict[str, Callable[[Any], Any]]"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "euler_to_rmat", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 64, "nodeName": "ordering", "type": "str"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "rmat_to_euler", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 51, "nodeName": "r", "type": "Any"}, {"lineNumber": 112, "col_offset": 54, "nodeName": "ordering", "type": "str"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "euler_angles", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "_random_quaternion", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "_random_quaternion", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "quat_mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "quat1", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "quat2", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "dot", "type": "Any"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "rmat2", "type": "Any"}, {"lineNumber": 124, "col_offset": 6, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "rmat_prod", "type": "Any"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "rmat_prod_q", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "pi", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "pi", "type": "Any"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "pi", "type": "Any"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "float64", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "itertools", "type": "module"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "euler_tup", "type": "Union[Tuple[int, int, int], Tuple[Any, Any, Any]]"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "euler_to_quat", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 44, "nodeName": "euler_vec", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "quat_mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "quat1", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 53, "nodeName": "quat2", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 135, "col_offset": 6, "nodeName": "mju_mulQuat", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "quat_prod_mj", "type": "Any"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "quat1", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "quat2", "type": "Any"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "quat_prod_tr", "type": "Any"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "quat_prod_mj", "type": "Any"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "_random_quaternion", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "_random_quaternion", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "quat_mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 46, "nodeName": "quat1", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 53, "nodeName": "quat2", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 145, "col_offset": 6, "nodeName": "mju_mulQuat", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "quat_prod_mj", "type": "Any"}, {"lineNumber": 145, "col_offset": 38, "nodeName": "quat1", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "quat2", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 6, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "quat_prod_tr", "type": "Any"}, {"lineNumber": 146, "col_offset": 47, "nodeName": "quat_prod_mj", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "pi", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "pi", "type": "Any"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "pi", "type": "Any"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "float64", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "itertools", "type": "module"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "euler_tup", "type": "Union[Tuple[Any, Any, Any], Tuple[int, int, int]]"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "euler_to_quat", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 43, "nodeName": "euler_vec", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "quat_rotate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 51, "nodeName": "quat", "type": "Any"}, {"lineNumber": 155, "col_offset": 57, "nodeName": "vec", "type": "numpy.ndarray"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 157, "col_offset": 6, "nodeName": "mju_rotVecQuat", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "rotated_vec_mj", "type": "Any"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "vec", "type": "numpy.ndarray"}, {"lineNumber": 157, "col_offset": 48, "nodeName": "quat", "type": "Any"}, {"lineNumber": 158, "col_offset": 6, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "rotated_vec_tr", "type": "Any"}, {"lineNumber": 158, "col_offset": 49, "nodeName": "rotated_vec_mj", "type": "Any"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "_random_quaternion", "type": "Callable[[], Any]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "quat_rotate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 51, "nodeName": "quat", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 57, "nodeName": "vec", "type": "Any"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 166, "col_offset": 6, "nodeName": "mju_rotVecQuat", "type": "Any"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "rotated_vec_mj", "type": "Any"}, {"lineNumber": 166, "col_offset": 43, "nodeName": "vec", "type": "Any"}, {"lineNumber": 166, "col_offset": 48, "nodeName": "quat", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 6, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "rotated_vec_tr", "type": "Any"}, {"lineNumber": 167, "col_offset": 49, "nodeName": "rotated_vec_mj", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "_random_quaternion", "type": "Callable[[], Any]"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "_random_quaternion", "type": "Callable[[], Any]"}, {"lineNumber": 173, "col_offset": 6, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "_random_quaternion", "type": "Callable[[], Any]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "_random_quaternion", "type": "Callable[[], Any]"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "norm", "type": "Any"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "source", "type": "numpy.ndarray"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "norm", "type": "Any"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "target", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 185, "col_offset": 6, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "_random_state", "type": "Any"}, {"lineNumber": 190, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 192, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "float64", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "TransformationsTest", "type": "Type[TransformationsTest]"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "float", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "transformations", "type": "module"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "transformations", "type": "module"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "transformations", "type": "module"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 6, "nodeName": "mjlib", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "mj_mat", "type": "Any"}, {"lineNumber": 79, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "tr_mat", "type": "Any"}, {"lineNumber": 80, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "tr_mat", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "transformations", "type": "module"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "mjlib", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "mj_mat", "type": "Any"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "tr_mat", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "float", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "transformations", "type": "module"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 98, "col_offset": 6, "nodeName": "mjlib", "type": "Any"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "transformations", "type": "module"}, {"lineNumber": 100, "col_offset": 6, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "transformations", "type": "module"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "transformations", "type": "module"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "transformations", "type": "module"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "r1", "type": "Any"}, {"lineNumber": 113, "col_offset": 52, "nodeName": "r2", "type": "Any"}, {"lineNumber": 113, "col_offset": 56, "nodeName": "r3", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "quat_to_mat", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 42, "nodeName": "quat1", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "quat_to_mat", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "quat2", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "transformations", "type": "module"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "quat_to_mat", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "quat_prod", "type": "Any"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "rmat1", "type": "Any"}, {"lineNumber": 124, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "float64", "type": "Any"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "transformations", "type": "module"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "transformations", "type": "module"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 6, "nodeName": "mjlib", "type": "Any"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "transformations", "type": "module"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 6, "nodeName": "mjlib", "type": "Any"}, {"lineNumber": 146, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "float64", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "transformations", "type": "module"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "transformations", "type": "module"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 6, "nodeName": "mjlib", "type": "Any"}, {"lineNumber": 158, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "_random_state", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "transformations", "type": "module"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 6, "nodeName": "mjlib", "type": "Any"}, {"lineNumber": 167, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 173, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 174, "col_offset": 10, "nodeName": "quat_diff", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "source", "type": "numpy.ndarray"}, {"lineNumber": 174, "col_offset": 44, "nodeName": "target", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 10, "nodeName": "quat_mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 70, "nodeName": "target", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "quat_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 51, "nodeName": "source", "type": "Any"}, {"lineNumber": 184, "col_offset": 59, "nodeName": "target", "type": "Any"}, {"lineNumber": 185, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 186, "col_offset": 10, "nodeName": "quat_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 36, "nodeName": "source", "type": "Any"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "source", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "rand", "type": "Any"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "r2", "type": "Any"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "r1", "type": "Any"}, {"lineNumber": 196, "col_offset": 56, "nodeName": "r1", "type": "Any"}, {"lineNumber": 196, "col_offset": 73, "nodeName": "r2", "type": "Any"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "euler_vec", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "mat", "type": "Any"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "mj_quat", "type": "Any"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "tr_quat", "type": "Any"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 101, "col_offset": 55, "nodeName": "mj_quat", "type": "Any"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 50, "nodeName": "r1", "type": "Any"}, {"lineNumber": 111, "col_offset": 54, "nodeName": "r2", "type": "Any"}, {"lineNumber": 111, "col_offset": 58, "nodeName": "r3", "type": "Any"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "transformations", "type": "module"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "transformations", "type": "module"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "transformations", "type": "module"}, {"lineNumber": 124, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "self", "type": "TransformationsTest"}, {"lineNumber": 167, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 10, "nodeName": "transformations", "type": "module"}, {"lineNumber": 175, "col_offset": 10, "nodeName": "transformations", "type": "module"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "quat_conj", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 175, "col_offset": 61, "nodeName": "source", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "transformations", "type": "module"}, {"lineNumber": 185, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 10, "nodeName": "transformations", "type": "module"}, {"lineNumber": 196, "col_offset": 9, "nodeName": "cos", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "t2", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "sin", "type": "Any"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "t1", "type": "Any"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "cos", "type": "Any"}, {"lineNumber": 196, "col_offset": 50, "nodeName": "t1", "type": "Any"}, {"lineNumber": 196, "col_offset": 60, "nodeName": "sin", "type": "Any"}, {"lineNumber": 196, "col_offset": 67, "nodeName": "t2", "type": "Any"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 65, "nodeName": "tr_quat", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "transformations", "type": "module"}, {"lineNumber": 196, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 60, "nodeName": "np", "type": "module"}]