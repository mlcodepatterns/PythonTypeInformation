[{"lineNumber": 23, "col_offset": 20, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "absltest", "type": "Any"}, {"lineNumber": 171, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "mouse", "type": "mock.NonCallableMock"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "keyboard", "type": "mock.NonCallableMock"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "_active_exclusive", "type": "int"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "_action_callbacks", "type": "Dict[int, int]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "_double_click_callbacks", "type": "Dict[int, int]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "_plane_callback", "type": "List[int]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "_z_axis_callback", "type": "List[int]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "expected_dict", "type": "Dict[Tuple[int, int], Tuple[bool, mock.NonCallableMock]]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "expected_dict", "type": "Dict[Tuple[int, int], Tuple[bool, mock.NonCallableMock]]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "_action_callbacks", "type": "Dict[Tuple[int, int], Tuple[bool, mock.NonCallableMock]]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "_action_callbacks", "type": "Dict[Tuple[int, int], Tuple[bool, mock.NonCallableMock]]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "activation_modifiers", "type": "int"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "no_modifiers", "type": "int"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "_double_click_callbacks", "type": "Dict[Tuple[int, int], mock.NonCallableMock]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "_action_callbacks", "type": "Dict[Tuple[int, int], Tuple[bool, mock.NonCallableMock]]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "position", "type": "List[int]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "translation", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "_plane_callback", "type": "List[mock.NonCallableMock]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "value", "type": "int"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "_z_axis_callback", "type": "List[mock.NonCallableMock]"}, {"lineNumber": 172, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "InputMap", "type": "Type[dm_control.viewer.user_input.InputMap]"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "mouse", "type": "mock.NonCallableMock"}, {"lineNumber": 29, "col_offset": 53, "nodeName": "keyboard", "type": "mock.NonCallableMock"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "clear_bindings", "type": "Callable[[], None]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "_action_callbacks", "type": "Dict[int, int]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "_double_click_callbacks", "type": "Dict[int, int]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "_plane_callback", "type": "List[int]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "_z_axis_callback", "type": "List[int]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "_NO_EXCLUSIVE_KEY", "type": "Tuple[None, Callable[[Any], Any]]"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "_active_exclusive", "type": "int"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "bind", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "expected_dict", "type": "Dict[Tuple[int, int], Tuple[bool, mock.NonCallableMock]]"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "_action_callbacks", "type": "Dict[nothing, nothing]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "bind", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "expected_dict", "type": "Dict[Tuple[int, int], Tuple[bool, mock.NonCallableMock]]"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "_action_callbacks", "type": "Dict[nothing, nothing]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "bind", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "MOD_NONE", "type": "int"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "MOD_ALT", "type": "int"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "bind_plane", "type": "Callable[[Any], None]"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "_plane_callback", "type": "List[nothing]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "bind_z_axis", "type": "Callable[[Any], None]"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "_z_axis_callback", "type": "List[nothing]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "RELEASE", "type": "int"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "RELEASE", "type": "int"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "RELEASE", "type": "int"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "RELEASE", "type": "int"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "PRESS", "type": "int"}, {"lineNumber": 139, "col_offset": 52, "nodeName": "activation_modifiers", "type": "int"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "_handle_key", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "RELEASE", "type": "int"}, {"lineNumber": 143, "col_offset": 54, "nodeName": "no_modifiers", "type": "int"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 147, "col_offset": 54, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "_handle_double_click", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "_handle_double_click", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "_handle_mouse_move", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "position", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "translation", "type": "List[int]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 42, "nodeName": "position", "type": "List[int]"}, {"lineNumber": 162, "col_offset": 52, "nodeName": "translation", "type": "List[int]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "_handle_mouse_scroll", "type": "Callable[[Any], None]"}, {"lineNumber": 167, "col_offset": 40, "nodeName": "value", "type": "int"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "value", "type": "int"}, {"lineNumber": 172, "col_offset": 2, "nodeName": "absltest", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "mock", "type": "module"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "mock", "type": "module"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "user_input", "type": "module"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 29, "col_offset": 53, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "mock", "type": "module"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "user_input", "type": "module"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "user_input", "type": "module"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "MOD_NONE", "type": "int"}, {"lineNumber": 52, "col_offset": 58, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "Exclusive", "type": "Type[dm_control.viewer.user_input.Exclusive]"}, {"lineNumber": 56, "col_offset": 60, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "MOD_NONE", "type": "int"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "Range", "type": "Type[dm_control.viewer.user_input.Range]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "user_input", "type": "module"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "user_input", "type": "module"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "user_input", "type": "module"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "user_input", "type": "module"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "user_input", "type": "module"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "user_input", "type": "module"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "_plane_callback", "type": "List[nothing]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "_z_axis_callback", "type": "List[nothing]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 85, "col_offset": 56, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 95, "col_offset": 55, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 106, "col_offset": 55, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "activation_modifiers", "type": "int"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "user_input", "type": "module"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 147, "col_offset": 54, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "callback", "type": "mock.NonCallableMock"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "user_input", "type": "module"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "user_input", "type": "module"}, {"lineNumber": 52, "col_offset": 58, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "user_input", "type": "module"}, {"lineNumber": 56, "col_offset": 60, "nodeName": "user_input", "type": "module"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "user_input", "type": "module"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "user_input", "type": "module"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "user_input", "type": "module"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "input_map", "type": "dm_control.viewer.user_input.InputMap"}, {"lineNumber": 85, "col_offset": 56, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 95, "col_offset": 55, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 106, "col_offset": 55, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "user_input", "type": "module"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "KEY_UP", "type": "int"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "MOD_ALT", "type": "int"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "self", "type": "InputMapTests"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "user_input", "type": "module"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "user_input", "type": "module"}]