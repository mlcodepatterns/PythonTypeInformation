[{"lineNumber": 60, "col_offset": 0, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 38, "col_offset": 2, "nodeName": "test_repeat", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 119, "col_offset": 2, "nodeName": "test_concat_last_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 140, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 142, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 2, "nodeName": "_check_if_gradients_exist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 2, "nodeName": "test_stop_gradients_default_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 197, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 2, "nodeName": "test_name_scope", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 27, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 232, "col_offset": 45, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 234, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 267, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 2, "nodeName": "test_compute_stacked_offsets", "type": "Callable[[Any], Any]"}, {"lineNumber": 289, "col_offset": 31, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests_tf2.test_utils.GraphsTest]"}, {"lineNumber": 289, "col_offset": 54, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 292, "col_offset": 2, "nodeName": "_assert_indices_sizes", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 316, "col_offset": 2, "nodeName": "test_create_complete_edges_from_nodes_dynamic_number_of_nodes", "type": "Callable[[Any], Any]"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests_tf2.test_utils.GraphsTest]"}, {"lineNumber": 330, "col_offset": 51, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 333, "col_offset": 2, "nodeName": "_assert_indices_sizes", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 338, "col_offset": 2, "nodeName": "test_fill_edge_state", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 349, "col_offset": 2, "nodeName": "test_fill_edge_state_dynamic", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 364, "col_offset": 2, "nodeName": "test_fill_global_state", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 375, "col_offset": 2, "nodeName": "test_fill_global_state_dynamic", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 391, "col_offset": 2, "nodeName": "test_fill_node_state", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 403, "col_offset": 2, "nodeName": "test_fill_node_state_dynamic", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 419, "col_offset": 2, "nodeName": "test_fill_edge_state_with_missing_fields_raises", "type": "Callable[[Any], Any]"}, {"lineNumber": 429, "col_offset": 2, "nodeName": "test_fill_state_default_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 533, "col_offset": 33, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests_tf2.test_utils.GraphsTest]"}, {"lineNumber": 533, "col_offset": 56, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 567, "col_offset": 2, "nodeName": "test_data_dicts_to_graphs_tuple_raises", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 575, "col_offset": 2, "nodeName": "test_data_dicts_to_graphs_tuple_no_raise", "type": "Callable[[Any], Any]"}, {"lineNumber": 582, "col_offset": 2, "nodeName": "test_data_dicts_to_graphs_tuple_cast_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 600, "col_offset": 26, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests_tf2.test_utils.GraphsTest]"}, {"lineNumber": 600, "col_offset": 49, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 672, "col_offset": 20, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests_tf2.test_utils.GraphsTest]"}, {"lineNumber": 675, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 681, "col_offset": 2, "nodeName": "test_num_graphs", "type": "Callable[[Any], Any]"}, {"lineNumber": 686, "col_offset": 22, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests_tf2.test_utils.GraphsTest]"}, {"lineNumber": 689, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 699, "col_offset": 2, "nodeName": "test_single_graph", "type": "Callable[[Any], Any]"}, {"lineNumber": 707, "col_offset": 2, "nodeName": "test_mixed_graph_conversion", "type": "Callable[[Any], Any]"}, {"lineNumber": 715, "col_offset": 2, "nodeName": "test_nested_structure", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "test", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 61, "col_offset": 2, "nodeName": "graph", "type": "Any"}, {"lineNumber": 62, "col_offset": 6, "nodeName": "node", "type": "int"}, {"lineNumber": 65, "col_offset": 5, "nodeName": "add_edges", "type": "bool"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "graph", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "test", "type": "Any"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 140, "col_offset": 47, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 232, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 232, "col_offset": 45, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 289, "col_offset": 31, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 289, "col_offset": 54, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 330, "col_offset": 51, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 533, "col_offset": 33, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 533, "col_offset": 56, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 600, "col_offset": 26, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 600, "col_offset": 49, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 672, "col_offset": 20, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 686, "col_offset": 22, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 741, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "axis", "type": "int"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "actual", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "kwargs", "type": "Union[Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "expected_name", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "indices", "type": "Any"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "DiGraph", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "n_nodes", "type": "int"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "node_data", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "graph", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "graph_1", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "graph_2", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "graph0", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "graph1", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "gradients", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "field", "type": "str"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "gradients_exist", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "stopped_gradients_graph", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "gradients_exist", "type": "List[bool]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "expected_gradients_exist", "type": "List[bool]"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 232, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "graph_id", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "graph", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "graph_id", "type": "Any"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "sizes", "type": "List[int]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 317, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 341, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "n_edges", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 352, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "n_edges", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "actual_edges", "type": "Any"}, {"lineNumber": 360, "col_offset": 19, "nodeName": "edges", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 367, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "n_graphs", "type": "Any"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 378, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "n_graphs", "type": "Any"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "actual_globals", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "n_nodes", "type": "Any"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "n_nodes", "type": "Any"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "actual_nodes", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 421, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 431, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 467, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "n_relation", "type": "int"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 472, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "actual_receivers", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "actual_senders", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 496, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "n_relation", "type": "int"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 501, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "actual_receivers", "type": "Any"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "actual_senders", "type": "Any"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "actual_n_edge", "type": "Any"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "expected_edges", "type": "List[Tuple[int, int]]"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "offset", "type": "int"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "actual_edges", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "field", "type": "Any"}, {"lineNumber": 551, "col_offset": 17, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "field", "type": "Any"}, {"lineNumber": 562, "col_offset": 17, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 570, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 577, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 584, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "index", "type": "int"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 609, "col_offset": 7, "nodeName": "use_tensor_index", "type": "Any"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "index", "type": "slice"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 629, "col_offset": 7, "nodeName": "use_tensor_slice", "type": "Any"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "graphs2", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "graphs2", "type": "Any"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "actual", "type": "List[Any]"}, {"lineNumber": 663, "col_offset": 7, "nodeName": "use_constant", "type": "Any"}, {"lineNumber": 665, "col_offset": 7, "nodeName": "use_slice", "type": "Any"}, {"lineNumber": 667, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "numpy_graph", "type": "Any"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "field", "type": "str"}, {"lineNumber": 701, "col_offset": 17, "nodeName": "ALL_FIELDS", "type": "Tuple[str, str, str, str, str, str, str]"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "converted_graph", "type": "Any"}, {"lineNumber": 716, "col_offset": 4, "nodeName": "regular_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 716, "col_offset": 20, "nodeName": "_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "nested_structure_numpy", "type": "Any"}, {"lineNumber": 742, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "repeat", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "actual", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "expected_name", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "expected_name", "type": "Any"}, {"lineNumber": 52, "col_offset": 56, "nodeName": "name", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "constant", "type": "Any"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "nx", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "node", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "edge", "type": "int"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "graph", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 70, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "concat", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "map", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "no_op", "type": "Any"}, {"lineNumber": 93, "col_offset": 46, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 106, "col_offset": 48, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "map", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "ALL_FIELDS", "type": "Tuple[str, str, str, str, str, str, str]"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "map", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "ALL_FIELDS", "type": "Tuple[str, str, str, str, str, str, str]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "concat", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "edges", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "senders", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 137, "col_offset": 52, "nodeName": "globals", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 158, "col_offset": 6, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "_check_if_gradients_exist", "type": "Any"}, {"lineNumber": 173, "col_offset": 53, "nodeName": "stopped_gradients_graph", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "expected_gradients_exist", "type": "List[bool]"}, {"lineNumber": 177, "col_offset": 50, "nodeName": "gradients_exist", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "map", "type": "Any"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 53, "nodeName": "_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "_check_if_gradients_exist", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 53, "nodeName": "stopped_gradients_graph", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "expected_gradients_exist", "type": "List[bool]"}, {"lineNumber": 191, "col_offset": 50, "nodeName": "gradients_exist", "type": "List[bool]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "map", "type": "Any"}, {"lineNumber": 217, "col_offset": 44, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "graph_id", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 42, "nodeName": "graph", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "graph_id", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "map", "type": "Any"}, {"lineNumber": 250, "col_offset": 47, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "map", "type": "Any"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "no_op", "type": "Any"}, {"lineNumber": 251, "col_offset": 35, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "_compute_stacked_offsets", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "sizes", "type": "List[int]"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "_compute_stacked_offsets", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 280, "col_offset": 14, "nodeName": "_compute_stacked_offsets", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "offset", "type": "List[int]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "offset", "type": "List[int]"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "offset", "type": "List[int]"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 6, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 303, "col_offset": 6, "nodeName": "edges_dict", "type": "Any"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 313, "col_offset": 6, "nodeName": "edges_dict", "type": "Any"}, {"lineNumber": 317, "col_offset": 22, "nodeName": "self", "type": "DataDictsCompletionTests"}, {"lineNumber": 318, "col_offset": 6, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 321, "col_offset": 6, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 322, "col_offset": 6, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 323, "col_offset": 6, "nodeName": "senders", "type": "Any"}, {"lineNumber": 324, "col_offset": 6, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 341, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 343, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 343, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 344, "col_offset": 14, "nodeName": "sum", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 345, "col_offset": 19, "nodeName": "set_zero_edge_features", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 51, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 345, "col_offset": 65, "nodeName": "edge_size", "type": "Any"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 352, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 354, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 354, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 355, "col_offset": 19, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 358, "col_offset": 14, "nodeName": "sum", "type": "Any"}, {"lineNumber": 358, "col_offset": 21, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "set_zero_edge_features", "type": "Callable[..., Any]"}, {"lineNumber": 359, "col_offset": 51, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 359, "col_offset": 65, "nodeName": "edge_size", "type": "Any"}, {"lineNumber": 360, "col_offset": 19, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "assertNDArrayNear", "type": "Any"}, {"lineNumber": 362, "col_offset": 40, "nodeName": "actual_edges", "type": "Any"}, {"lineNumber": 367, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 369, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 369, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 371, "col_offset": 19, "nodeName": "set_zero_global_features", "type": "Callable[..., Any]"}, {"lineNumber": 371, "col_offset": 53, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 371, "col_offset": 67, "nodeName": "global_size", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 378, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 380, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 380, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 382, "col_offset": 19, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 386, "col_offset": 19, "nodeName": "set_zero_global_features", "type": "Callable[..., Any]"}, {"lineNumber": 386, "col_offset": 53, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 386, "col_offset": 67, "nodeName": "global_size", "type": "Any"}, {"lineNumber": 387, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "assertNDArrayNear", "type": "Any"}, {"lineNumber": 389, "col_offset": 43, "nodeName": "actual_globals", "type": "Any"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 397, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 397, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 398, "col_offset": 14, "nodeName": "sum", "type": "Any"}, {"lineNumber": 398, "col_offset": 21, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 399, "col_offset": 19, "nodeName": "set_zero_node_features", "type": "Callable[..., Any]"}, {"lineNumber": 399, "col_offset": 51, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 399, "col_offset": 65, "nodeName": "node_size", "type": "Any"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 409, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 409, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 413, "col_offset": 14, "nodeName": "sum", "type": "Any"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 414, "col_offset": 19, "nodeName": "set_zero_node_features", "type": "Callable[..., Any]"}, {"lineNumber": 414, "col_offset": 51, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 414, "col_offset": 65, "nodeName": "node_size", "type": "Any"}, {"lineNumber": 415, "col_offset": 19, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "assertNDArrayNear", "type": "Any"}, {"lineNumber": 417, "col_offset": 40, "nodeName": "actual_nodes", "type": "Any"}, {"lineNumber": 421, "col_offset": 13, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 425, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 425, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 427, "col_offset": 6, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 431, "col_offset": 13, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 435, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 436, "col_offset": 19, "nodeName": "set_zero_edge_features", "type": "Callable[..., Any]"}, {"lineNumber": 436, "col_offset": 51, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 437, "col_offset": 19, "nodeName": "set_zero_node_features", "type": "Callable[..., Any]"}, {"lineNumber": 437, "col_offset": 51, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 438, "col_offset": 19, "nodeName": "set_zero_global_features", "type": "Callable[..., Any]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "float32", "type": "Any"}, {"lineNumber": 440, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 441, "col_offset": 21, "nodeName": "float32", "type": "Any"}, {"lineNumber": 441, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 442, "col_offset": 21, "nodeName": "float32", "type": "Any"}, {"lineNumber": 442, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 454, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 454, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 455, "col_offset": 19, "nodeName": "set_zero_edge_features", "type": "Callable[..., Any]"}, {"lineNumber": 455, "col_offset": 51, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 455, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "set_zero_node_features", "type": "Callable[..., Any]"}, {"lineNumber": 456, "col_offset": 51, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 456, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "set_zero_global_features", "type": "Callable[..., Any]"}, {"lineNumber": 457, "col_offset": 53, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 457, "col_offset": 70, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 458, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 458, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 459, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 459, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 460, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 460, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 467, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 472, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 473, "col_offset": 6, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 474, "col_offset": 9, "nodeName": "exclude_self_edges", "type": "Any"}, {"lineNumber": 479, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 479, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 480, "col_offset": 19, "nodeName": "fully_connect_graph_dynamic", "type": "Callable[..., Any]"}, {"lineNumber": 480, "col_offset": 56, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 481, "col_offset": 56, "nodeName": "exclude_self_edges", "type": "Any"}, {"lineNumber": 482, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 483, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 485, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 486, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 496, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 501, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 502, "col_offset": 6, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 503, "col_offset": 9, "nodeName": "exclude_self_edges", "type": "Any"}, {"lineNumber": 508, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 508, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 509, "col_offset": 19, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 509, "col_offset": 36, "nodeName": "mask_leading_dimension", "type": "Callable[[Any], Any]"}, {"lineNumber": 511, "col_offset": 19, "nodeName": "fully_connect_graph_dynamic", "type": "Callable[..., Any]"}, {"lineNumber": 511, "col_offset": 56, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 512, "col_offset": 56, "nodeName": "exclude_self_edges", "type": "Any"}, {"lineNumber": 514, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 515, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 516, "col_offset": 20, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 517, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 518, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 519, "col_offset": 54, "nodeName": "shape", "type": "Any"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 523, "col_offset": 6, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 524, "col_offset": 10, "nodeName": "e1", "type": "int"}, {"lineNumber": 528, "col_offset": 6, "nodeName": "offset", "type": "Any"}, {"lineNumber": 528, "col_offset": 16, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 529, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 529, "col_offset": 23, "nodeName": "actual_receivers", "type": "Any"}, {"lineNumber": 529, "col_offset": 41, "nodeName": "actual_senders", "type": "Any"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 552, "col_offset": 10, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 552, "col_offset": 24, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 561, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 561, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 564, "col_offset": 19, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 564, "col_offset": 36, "nodeName": "no_op", "type": "Any"}, {"lineNumber": 564, "col_offset": 46, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "_assert_graph_equals_np", "type": "Any"}, {"lineNumber": 565, "col_offset": 33, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 565, "col_offset": 55, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 570, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 577, "col_offset": 22, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 580, "col_offset": 4, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 580, "col_offset": 40, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 584, "col_offset": 22, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 591, "col_offset": 10, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 591, "col_offset": 46, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 607, "col_offset": 15, "nodeName": "graphs_dicts_out", "type": "Any"}, {"lineNumber": 610, "col_offset": 6, "nodeName": "index", "type": "Any"}, {"lineNumber": 612, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 612, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "get_graph", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 613, "col_offset": 31, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 613, "col_offset": 45, "nodeName": "index", "type": "Any"}, {"lineNumber": 615, "col_offset": 12, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 615, "col_offset": 35, "nodeName": "graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "actual", "type": "Any"}, {"lineNumber": 616, "col_offset": 14, "nodeName": "graphs_tuple_to_data_dicts", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 616, "col_offset": 50, "nodeName": "graph", "type": "Any"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 618, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 618, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "graphs_dicts_out", "type": "Any"}, {"lineNumber": 630, "col_offset": 6, "nodeName": "index", "type": "slice"}, {"lineNumber": 632, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 632, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 633, "col_offset": 14, "nodeName": "get_graph", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 633, "col_offset": 33, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 633, "col_offset": 47, "nodeName": "index", "type": "slice"}, {"lineNumber": 635, "col_offset": 14, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 635, "col_offset": 37, "nodeName": "graphs2", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 636, "col_offset": 13, "nodeName": "graphs_tuple_to_data_dicts", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 636, "col_offset": 49, "nodeName": "graphs2", "type": "Any"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "ex", "type": "Any"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "ac", "type": "Any"}, {"lineNumber": 638, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 638, "col_offset": 22, "nodeName": "expected", "type": "Any"}, {"lineNumber": 638, "col_offset": 32, "nodeName": "actual", "type": "List[Any]"}, {"lineNumber": 664, "col_offset": 6, "nodeName": "index", "type": "Any"}, {"lineNumber": 666, "col_offset": 6, "nodeName": "index", "type": "slice"}, {"lineNumber": 667, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 667, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 677, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 677, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 678, "col_offset": 23, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 679, "col_offset": 40, "nodeName": "GRAPH_DATA_FIELDS", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 682, "col_offset": 12, "nodeName": "replace", "type": "Any"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 691, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 700, "col_offset": 18, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 700, "col_offset": 41, "nodeName": "_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 701, "col_offset": 17, "nodeName": "graphs", "type": "module"}, {"lineNumber": 708, "col_offset": 12, "nodeName": "replace", "type": "Callable[..., Any]"}, {"lineNumber": 709, "col_offset": 12, "nodeName": "map", "type": "Any"}, {"lineNumber": 711, "col_offset": 22, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 711, "col_offset": 45, "nodeName": "graph", "type": "Any"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 712, "col_offset": 22, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 713, "col_offset": 26, "nodeName": "edges", "type": "Any"}, {"lineNumber": 713, "col_offset": 49, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 716, "col_offset": 20, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 717, "col_offset": 31, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "regular_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 725, "col_offset": 29, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 725, "col_offset": 52, "nodeName": "nested_structure", "type": "List[Any]"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 727, "col_offset": 31, "nodeName": "nested_structure", "type": "List[Any]"}, {"lineNumber": 727, "col_offset": 49, "nodeName": "nested_structure_numpy", "type": "Any"}, {"lineNumber": 729, "col_offset": 41, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 742, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "axis", "type": "int"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 44, "col_offset": 51, "nodeName": "axis", "type": "int"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "self", "type": "RepeatTest"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "assert_new_op_prefixes", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "repeat", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "t", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "indices", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "node_data", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "receiver", "type": "int"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "sender", "type": "int"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "edge_data", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "gr", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "map", "type": "Any"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "gr", "type": "Any"}, {"lineNumber": 89, "col_offset": 61, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 92, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 98, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 48, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 111, "col_offset": 56, "nodeName": "senders", "type": "Any"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 115, "col_offset": 56, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 117, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 117, "col_offset": 58, "nodeName": "globals", "type": "Any"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "graph0", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "graphs", "type": "module"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "graph1", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "graphs", "type": "module"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "graph0", "type": "Any"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "graph1", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 137, "col_offset": 52, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "tape", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "xs", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "ys", "type": "Any"}, {"lineNumber": 158, "col_offset": 62, "nodeName": "ys", "type": "Any"}, {"lineNumber": 159, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 160, "col_offset": 52, "nodeName": "grad", "type": "Any"}, {"lineNumber": 160, "col_offset": 60, "nodeName": "gradients", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "stop_globals", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "stop_nodes", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "stop_edges", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "stop_globals", "type": "Any"}, {"lineNumber": 175, "col_offset": 30, "nodeName": "stop_nodes", "type": "Any"}, {"lineNumber": 175, "col_offset": 46, "nodeName": "stop_edges", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 182, "col_offset": 51, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 183, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 188, "col_offset": 53, "nodeName": "self", "type": "StopGradientsGraphTest"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "self", "type": "StopGradientsGraphTest"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "self", "type": "StopGradientsGraphTest"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "self", "type": "IdentityTest"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 218, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "identity", "type": "Callable[..., Any]"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "graph", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 225, "col_offset": 9, "nodeName": "field", "type": "str"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "graph_id", "type": "Any"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 257, "col_offset": 9, "nodeName": "field", "type": "str"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "sizes", "type": "List[int]"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 279, "col_offset": 39, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 280, "col_offset": 14, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "sizes", "type": "List[int]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 285, "col_offset": 37, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 286, "col_offset": 37, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 294, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "method", "type": "Any"}, {"lineNumber": 303, "col_offset": 26, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 304, "col_offset": 6, "nodeName": "_assert_indices_sizes", "type": "Any"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "edges_dict", "type": "Any"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "method", "type": "Any"}, {"lineNumber": 313, "col_offset": 26, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 314, "col_offset": 6, "nodeName": "_assert_indices_sizes", "type": "Any"}, {"lineNumber": 314, "col_offset": 33, "nodeName": "edges_dict", "type": "Any"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "_create_complete_edges_from_nodes_dynamic", "type": "Callable[[Any, Any], Dict[str, Any]]"}, {"lineNumber": 320, "col_offset": 10, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 322, "col_offset": 18, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 325, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 325, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 326, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 326, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 327, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 327, "col_offset": 35, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 335, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 342, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 343, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 343, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 344, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 345, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 346, "col_offset": 25, "nodeName": "n_edges", "type": "Any"}, {"lineNumber": 346, "col_offset": 34, "nodeName": "edge_size", "type": "Any"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 353, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 354, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 354, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 355, "col_offset": 19, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 358, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 358, "col_offset": 21, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 368, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 369, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 369, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 371, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "n_graphs", "type": "Any"}, {"lineNumber": 372, "col_offset": 35, "nodeName": "global_size", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 379, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 380, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 380, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 382, "col_offset": 19, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 386, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 387, "col_offset": 21, "nodeName": "globals", "type": "Any"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 395, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 396, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 397, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 397, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 398, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 398, "col_offset": 21, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 399, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 400, "col_offset": 25, "nodeName": "n_nodes", "type": "Any"}, {"lineNumber": 400, "col_offset": 34, "nodeName": "node_size", "type": "Any"}, {"lineNumber": 401, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 407, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 407, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 408, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 409, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 409, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 413, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 414, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 415, "col_offset": 19, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 422, "col_offset": 6, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 423, "col_offset": 6, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 424, "col_offset": 6, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 425, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 425, "col_offset": 55, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 426, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 426, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 427, "col_offset": 21, "nodeName": "set_zero_edge_features", "type": "Callable[..., Any]"}, {"lineNumber": 427, "col_offset": 53, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 432, "col_offset": 6, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 433, "col_offset": 6, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 434, "col_offset": 6, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 435, "col_offset": 55, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 436, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 437, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 438, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 440, "col_offset": 33, "nodeName": "edges", "type": "Any"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 441, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 441, "col_offset": 33, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 442, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 442, "col_offset": 33, "nodeName": "globals", "type": "Any"}, {"lineNumber": 451, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 452, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 453, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 454, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 454, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 455, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 458, "col_offset": 28, "nodeName": "edges", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 459, "col_offset": 28, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 460, "col_offset": 28, "nodeName": "globals", "type": "Any"}, {"lineNumber": 468, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 469, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 470, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 473, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 479, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 479, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 480, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 482, "col_offset": 23, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 483, "col_offset": 21, "nodeName": "senders", "type": "Any"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 485, "col_offset": 25, "nodeName": "n_relation", "type": "Union[Any, int]"}, {"lineNumber": 485, "col_offset": 39, "nodeName": "actual_receivers", "type": "Any"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 486, "col_offset": 25, "nodeName": "n_relation", "type": "Union[Any, int]"}, {"lineNumber": 486, "col_offset": 39, "nodeName": "actual_senders", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 497, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 498, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 499, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 502, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 508, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 508, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 509, "col_offset": 19, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 509, "col_offset": 36, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 511, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 514, "col_offset": 23, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 515, "col_offset": 21, "nodeName": "senders", "type": "Any"}, {"lineNumber": 516, "col_offset": 20, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 517, "col_offset": 25, "nodeName": "n_relation", "type": "Union[Any, int]"}, {"lineNumber": 517, "col_offset": 39, "nodeName": "actual_receivers", "type": "Any"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 518, "col_offset": 25, "nodeName": "n_relation", "type": "Union[Any, int]"}, {"lineNumber": 518, "col_offset": 39, "nodeName": "actual_senders", "type": "Any"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 519, "col_offset": 54, "nodeName": "actual_n_edge", "type": "Any"}, {"lineNumber": 523, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 524, "col_offset": 22, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "e2", "type": "int"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 530, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 530, "col_offset": 28, "nodeName": "actual_edges", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 530, "col_offset": 43, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 530, "col_offset": 47, "nodeName": "expected_edges", "type": "List[Tuple[int, int]]"}, {"lineNumber": 552, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 558, "col_offset": 9, "nodeName": "field", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 561, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 561, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 563, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 564, "col_offset": 19, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 564, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 565, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 571, "col_offset": 6, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 572, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 572, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 572, "col_offset": 45, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 573, "col_offset": 6, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 573, "col_offset": 42, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 578, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 578, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 579, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 580, "col_offset": 4, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 580, "col_offset": 40, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 585, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 587, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 587, "col_offset": 32, "nodeName": "astype", "type": "Any"}, {"lineNumber": 587, "col_offset": 63, "nodeName": "int16", "type": "Any"}, {"lineNumber": 588, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 588, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 588, "col_offset": 59, "nodeName": "float64", "type": "Any"}, {"lineNumber": 589, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 589, "col_offset": 28, "nodeName": "astype", "type": "Any"}, {"lineNumber": 589, "col_offset": 55, "nodeName": "float64", "type": "Any"}, {"lineNumber": 590, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 590, "col_offset": 28, "nodeName": "constant", "type": "Any"}, {"lineNumber": 591, "col_offset": 10, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 591, "col_offset": 46, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 593, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 593, "col_offset": 23, "nodeName": "int32", "type": "Any"}, {"lineNumber": 593, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 594, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 596, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 597, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 597, "col_offset": 23, "nodeName": "float64", "type": "Any"}, {"lineNumber": 597, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 607, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 607, "col_offset": 37, "nodeName": "index", "type": "int"}, {"lineNumber": 610, "col_offset": 14, "nodeName": "constant", "type": "Any"}, {"lineNumber": 610, "col_offset": 26, "nodeName": "index", "type": "int"}, {"lineNumber": 612, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 612, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 615, "col_offset": 12, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 616, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 618, "col_offset": 16, "nodeName": "expected", "type": "Any"}, {"lineNumber": 619, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 619, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 620, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 620, "col_offset": 49, "nodeName": "actual", "type": "Any"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 621, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 621, "col_offset": 49, "nodeName": "actual", "type": "Any"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 627, "col_offset": 37, "nodeName": "index", "type": "slice"}, {"lineNumber": 630, "col_offset": 14, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 632, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 632, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 633, "col_offset": 14, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 635, "col_offset": 14, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 636, "col_offset": 13, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 639, "col_offset": 10, "nodeName": "k", "type": "Any"}, {"lineNumber": 639, "col_offset": 13, "nodeName": "v", "type": "Any"}, {"lineNumber": 639, "col_offset": 18, "nodeName": "items", "type": "Any"}, {"lineNumber": 641, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 642, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 664, "col_offset": 14, "nodeName": "constant", "type": "Any"}, {"lineNumber": 664, "col_offset": 26, "nodeName": "index", "type": "Any"}, {"lineNumber": 666, "col_offset": 14, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 666, "col_offset": 20, "nodeName": "index", "type": "Any"}, {"lineNumber": 667, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 667, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 668, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 668, "col_offset": 33, "nodeName": "error_type", "type": "Any"}, {"lineNumber": 668, "col_offset": 45, "nodeName": "message", "type": "Any"}, {"lineNumber": 669, "col_offset": 6, "nodeName": "get_graph", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 669, "col_offset": 25, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 669, "col_offset": 39, "nodeName": "index", "type": "Any"}, {"lineNumber": 677, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 677, "col_offset": 55, "nodeName": "self", "type": "TestNumGraphs"}, {"lineNumber": 678, "col_offset": 23, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 679, "col_offset": 40, "nodeName": "graphs", "type": "module"}, {"lineNumber": 682, "col_offset": 12, "nodeName": "empty_graph", "type": "Any"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "self", "type": "TestNumGraphs"}, {"lineNumber": 683, "col_offset": 24, "nodeName": "get_num_graphs", "type": "Callable[..., Any]"}, {"lineNumber": 683, "col_offset": 48, "nodeName": "graph", "type": "Any"}, {"lineNumber": 691, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 700, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 700, "col_offset": 41, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 702, "col_offset": 6, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 702, "col_offset": 57, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 703, "col_offset": 6, "nodeName": "assertNDArrayNear", "type": "Any"}, {"lineNumber": 708, "col_offset": 12, "nodeName": "_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 709, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 711, "col_offset": 22, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 712, "col_offset": 22, "nodeName": "converted_graph", "type": "Any"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 713, "col_offset": 26, "nodeName": "converted_graph", "type": "Any"}, {"lineNumber": 713, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 717, "col_offset": 31, "nodeName": "regular_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 723, "col_offset": 9, "nodeName": "graph_with_nested_fields", "type": "Any"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 725, "col_offset": 29, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 730, "col_offset": 21, "nodeName": "nested_structure", "type": "List[Any]"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 731, "col_offset": 21, "nodeName": "nested_structure_numpy", "type": "Any"}, {"lineNumber": 732, "col_offset": 9, "nodeName": "tensor_or_none", "type": "Any"}, {"lineNumber": 736, "col_offset": 6, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 736, "col_offset": 27, "nodeName": "array_or_none", "type": "Any"}, {"lineNumber": 737, "col_offset": 6, "nodeName": "assertNDArrayNear", "type": "Any"}, {"lineNumber": 739, "col_offset": 10, "nodeName": "array_or_none", "type": "Any"}, {"lineNumber": 742, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 56, "col_offset": 49, "nodeName": "expected_name", "type": "Any"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "kwargs", "type": "Union[Dict[nothing, nothing], Dict[str, Any]]"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "node", "type": "int"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 63, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "sender", "type": "int"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "n_nodes", "type": "int"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "receiver", "type": "int"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "n_nodes", "type": "int"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "add_edge", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "sender", "type": "int"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "receiver", "type": "int"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 50, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "graph_0", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "graph_1", "type": "Any"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "graph_2", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "gr", "type": "Any"}, {"lineNumber": 92, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 92, "col_offset": 51, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 95, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 56, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 56, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 117, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 117, "col_offset": 58, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 9, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 143, "col_offset": 10, "nodeName": "StopGradientsGraphTest", "type": "Type[StopGradientsGraphTest]"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "self", "type": "StopGradientsGraphTest"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "GradientTape", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "field", "type": "str"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "stopped_gradients_graph", "type": "Any"}, {"lineNumber": 157, "col_offset": 46, "nodeName": "field", "type": "str"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "ys", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "ys", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "xs", "type": "Any"}, {"lineNumber": 159, "col_offset": 6, "nodeName": "gradients", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 198, "col_offset": 10, "nodeName": "IdentityTest", "type": "Type[IdentityTest]"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "self", "type": "IdentityTest"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertNDArrayNear", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 235, "col_offset": 10, "nodeName": "RunGraphWithNoneTest", "type": "Type[RunGraphWithNoneTest]"}, {"lineNumber": 235, "col_offset": 32, "nodeName": "self", "type": "RunGraphWithNoneTest"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertNDArrayNear", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 268, "col_offset": 10, "nodeName": "ComputeOffsetTest", "type": "Type[ComputeOffsetTest]"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 279, "col_offset": 39, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 281, "col_offset": 38, "nodeName": "int32", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 282, "col_offset": 40, "nodeName": "int32", "type": "Any"}, {"lineNumber": 294, "col_offset": 6, "nodeName": "self", "type": "DataDictsCompletionTests"}, {"lineNumber": 294, "col_offset": 27, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 294, "col_offset": 41, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 304, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 304, "col_offset": 45, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 314, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 314, "col_offset": 45, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 325, "col_offset": 6, "nodeName": "self", "type": "DataDictsCompletionTests"}, {"lineNumber": 325, "col_offset": 27, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 325, "col_offset": 41, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 326, "col_offset": 6, "nodeName": "self", "type": "DataDictsCompletionTests"}, {"lineNumber": 326, "col_offset": 27, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 326, "col_offset": 41, "nodeName": "senders", "type": "Any"}, {"lineNumber": 327, "col_offset": 6, "nodeName": "self", "type": "DataDictsCompletionTests"}, {"lineNumber": 335, "col_offset": 6, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 335, "col_offset": 27, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 336, "col_offset": 26, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 342, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 353, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 358, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 362, "col_offset": 18, "nodeName": "n_edges", "type": "Any"}, {"lineNumber": 362, "col_offset": 27, "nodeName": "edge_size", "type": "Any"}, {"lineNumber": 368, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 379, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 387, "col_offset": 21, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 389, "col_offset": 18, "nodeName": "n_graphs", "type": "Any"}, {"lineNumber": 389, "col_offset": 28, "nodeName": "global_size", "type": "Any"}, {"lineNumber": 396, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 398, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 408, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 411, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 415, "col_offset": 19, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 417, "col_offset": 18, "nodeName": "n_nodes", "type": "Any"}, {"lineNumber": 417, "col_offset": 27, "nodeName": "node_size", "type": "Any"}, {"lineNumber": 422, "col_offset": 6, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 423, "col_offset": 6, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 424, "col_offset": 6, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 426, "col_offset": 9, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 427, "col_offset": 21, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 432, "col_offset": 6, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 433, "col_offset": 6, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 434, "col_offset": 6, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 440, "col_offset": 33, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 441, "col_offset": 33, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 442, "col_offset": 33, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 451, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 452, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 453, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 458, "col_offset": 28, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 459, "col_offset": 28, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 460, "col_offset": 28, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 468, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 469, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 470, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 475, "col_offset": 22, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 477, "col_offset": 22, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 477, "col_offset": 31, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 482, "col_offset": 23, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 483, "col_offset": 21, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 487, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 487, "col_offset": 29, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 497, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 498, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 499, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 504, "col_offset": 22, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 506, "col_offset": 22, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 506, "col_offset": 31, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 514, "col_offset": 23, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 515, "col_offset": 21, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 516, "col_offset": 20, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 519, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 519, "col_offset": 29, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 525, "col_offset": 18, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 525, "col_offset": 24, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 553, "col_offset": 11, "nodeName": "field", "type": "Any"}, {"lineNumber": 553, "col_offset": 20, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 557, "col_offset": 31, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 559, "col_offset": 31, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 563, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 563, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 563, "col_offset": 37, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 563, "col_offset": 51, "nodeName": "field", "type": "Any"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 572, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 573, "col_offset": 6, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 573, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 585, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 586, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 586, "col_offset": 46, "nodeName": "int64", "type": "Any"}, {"lineNumber": 587, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 588, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 589, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 590, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 590, "col_offset": 40, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 590, "col_offset": 67, "nodeName": "float64", "type": "Any"}, {"lineNumber": 593, "col_offset": 6, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 593, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 594, "col_offset": 6, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 594, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 594, "col_offset": 28, "nodeName": "int32", "type": "Any"}, {"lineNumber": 594, "col_offset": 39, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 594, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 596, "col_offset": 6, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 596, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 596, "col_offset": 28, "nodeName": "float64", "type": "Any"}, {"lineNumber": 596, "col_offset": 41, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 596, "col_offset": 46, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 597, "col_offset": 6, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 597, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 610, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 619, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 619, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 630, "col_offset": 20, "nodeName": "constant", "type": "Any"}, {"lineNumber": 630, "col_offset": 32, "nodeName": "start", "type": "Any"}, {"lineNumber": 630, "col_offset": 46, "nodeName": "constant", "type": "Any"}, {"lineNumber": 630, "col_offset": 58, "nodeName": "stop", "type": "Any"}, {"lineNumber": 639, "col_offset": 18, "nodeName": "ex", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 640, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 641, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 641, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 641, "col_offset": 45, "nodeName": "ac", "type": "Any"}, {"lineNumber": 642, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 642, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 642, "col_offset": 45, "nodeName": "ac", "type": "Any"}, {"lineNumber": 664, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 668, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 669, "col_offset": 6, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 676, "col_offset": 10, "nodeName": "TestNumGraphs", "type": "Type[TestNumGraphs]"}, {"lineNumber": 676, "col_offset": 25, "nodeName": "self", "type": "TestNumGraphs"}, {"lineNumber": 682, "col_offset": 12, "nodeName": "self", "type": "TestNumGraphs"}, {"lineNumber": 682, "col_offset": 44, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 683, "col_offset": 24, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 690, "col_offset": 10, "nodeName": "TestNestToNumpy", "type": "Type[TestNestToNumpy]"}, {"lineNumber": 690, "col_offset": 27, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 702, "col_offset": 6, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 702, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 702, "col_offset": 36, "nodeName": "numpy_graph", "type": "Any"}, {"lineNumber": 702, "col_offset": 49, "nodeName": "field", "type": "str"}, {"lineNumber": 702, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 703, "col_offset": 6, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 704, "col_offset": 10, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 705, "col_offset": 10, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 705, "col_offset": 18, "nodeName": "numpy_graph", "type": "Any"}, {"lineNumber": 705, "col_offset": 31, "nodeName": "field", "type": "str"}, {"lineNumber": 708, "col_offset": 12, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 709, "col_offset": 32, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 718, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 733, "col_offset": 26, "nodeName": "array_or_none", "type": "Any"}, {"lineNumber": 736, "col_offset": 6, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 737, "col_offset": 6, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 738, "col_offset": 10, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "edge", "type": "int"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 68, "col_offset": 66, "nodeName": "float64", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "edge_data", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 67, "nodeName": "edge", "type": "int"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 103, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 103, "col_offset": 55, "nodeName": "edges", "type": "Any"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 105, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "edges", "type": "Any"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "self", "type": "StopGradientsGraphTest"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "tape", "type": "Any"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 226, "col_offset": 39, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 226, "col_offset": 51, "nodeName": "field", "type": "str"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "field", "type": "str"}, {"lineNumber": 229, "col_offset": 42, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 50, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 229, "col_offset": 62, "nodeName": "field", "type": "str"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 258, "col_offset": 39, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 258, "col_offset": 51, "nodeName": "field", "type": "str"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 261, "col_offset": 34, "nodeName": "field", "type": "str"}, {"lineNumber": 261, "col_offset": 42, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 50, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 261, "col_offset": 62, "nodeName": "field", "type": "str"}, {"lineNumber": 281, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 282, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 285, "col_offset": 37, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 286, "col_offset": 37, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 314, "col_offset": 55, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 318, "col_offset": 24, "nodeName": "constant", "type": "Any"}, {"lineNumber": 322, "col_offset": 18, "nodeName": "edges_dict", "type": "Dict[str, Any]"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "edges_dict", "type": "Dict[str, Any]"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "edges_dict", "type": "Dict[str, Any]"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "g", "type": "Any"}, {"lineNumber": 401, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 407, "col_offset": 20, "nodeName": "g", "type": "Any"}, {"lineNumber": 411, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 473, "col_offset": 15, "nodeName": "g", "type": "Any"}, {"lineNumber": 475, "col_offset": 32, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 487, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 502, "col_offset": 15, "nodeName": "g", "type": "Any"}, {"lineNumber": 504, "col_offset": 32, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 519, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 523, "col_offset": 15, "nodeName": "graph", "type": "Any"}, {"lineNumber": 554, "col_offset": 13, "nodeName": "field", "type": "Any"}, {"lineNumber": 556, "col_offset": 10, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 557, "col_offset": 31, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 578, "col_offset": 29, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 586, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 587, "col_offset": 32, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 588, "col_offset": 30, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 589, "col_offset": 28, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 590, "col_offset": 67, "nodeName": "tf", "type": "Any"}, {"lineNumber": 593, "col_offset": 33, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 593, "col_offset": 41, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 593, "col_offset": 46, "nodeName": "key", "type": "str"}, {"lineNumber": 594, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 596, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 597, "col_offset": 35, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 597, "col_offset": 43, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 597, "col_offset": 48, "nodeName": "key", "type": "str"}, {"lineNumber": 619, "col_offset": 36, "nodeName": "k", "type": "Any"}, {"lineNumber": 620, "col_offset": 21, "nodeName": "expected", "type": "Any"}, {"lineNumber": 621, "col_offset": 21, "nodeName": "expected", "type": "Any"}, {"lineNumber": 630, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 630, "col_offset": 32, "nodeName": "index", "type": "slice"}, {"lineNumber": 630, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 630, "col_offset": 58, "nodeName": "index", "type": "slice"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 640, "col_offset": 31, "nodeName": "ac", "type": "Any"}, {"lineNumber": 682, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 682, "col_offset": 64, "nodeName": "int32", "type": "Any"}, {"lineNumber": 692, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 693, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 694, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 695, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 696, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 709, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 718, "col_offset": 32, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 738, "col_offset": 10, "nodeName": "tensor_or_none", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "edge", "type": "int"}, {"lineNumber": 68, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 103, "col_offset": 55, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "int32", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "int32", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 200, "col_offset": 60, "nodeName": "int32", "type": "Any"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 201, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 237, "col_offset": 60, "nodeName": "int32", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 238, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "offset0", "type": "Any"}, {"lineNumber": 285, "col_offset": 37, "nodeName": "offset1", "type": "Any"}, {"lineNumber": 286, "col_offset": 37, "nodeName": "offset2", "type": "Any"}, {"lineNumber": 294, "col_offset": 41, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 318, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 318, "col_offset": 36, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 336, "col_offset": 26, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "edges", "type": "Any"}, {"lineNumber": 357, "col_offset": 39, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "globals", "type": "Any"}, {"lineNumber": 384, "col_offset": 39, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 401, "col_offset": 24, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 412, "col_offset": 39, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 526, "col_offset": 17, "nodeName": "exclude_self_edges", "type": "Any"}, {"lineNumber": 526, "col_offset": 39, "nodeName": "e1", "type": "int"}, {"lineNumber": 526, "col_offset": 45, "nodeName": "e2", "type": "int"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 555, "col_offset": 12, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 555, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 556, "col_offset": 21, "nodeName": "field", "type": "Any"}, {"lineNumber": 557, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 557, "col_offset": 64, "nodeName": "field", "type": "Any"}, {"lineNumber": 560, "col_offset": 19, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 560, "col_offset": 33, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 586, "col_offset": 10, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 594, "col_offset": 44, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 594, "col_offset": 52, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 594, "col_offset": 57, "nodeName": "key", "type": "str"}, {"lineNumber": 596, "col_offset": 46, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 596, "col_offset": 54, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 596, "col_offset": 59, "nodeName": "key", "type": "str"}, {"lineNumber": 640, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 641, "col_offset": 23, "nodeName": "ex", "type": "Any"}, {"lineNumber": 642, "col_offset": 23, "nodeName": "ex", "type": "Any"}, {"lineNumber": 682, "col_offset": 64, "nodeName": "tf", "type": "Any"}, {"lineNumber": 692, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 692, "col_offset": 60, "nodeName": "int32", "type": "Any"}, {"lineNumber": 693, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 693, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 694, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 695, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 696, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 704, "col_offset": 10, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 704, "col_offset": 18, "nodeName": "_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 704, "col_offset": 31, "nodeName": "field", "type": "str"}, {"lineNumber": 718, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 200, "col_offset": 60, "nodeName": "tf", "type": "Any"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 201, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 237, "col_offset": 60, "nodeName": "tf", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 238, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 357, "col_offset": 39, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 384, "col_offset": 39, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 401, "col_offset": 24, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 412, "col_offset": 39, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "expected_edges", "type": "List[Tuple[int, int]]"}, {"lineNumber": 560, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 560, "col_offset": 33, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 692, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 692, "col_offset": 60, "nodeName": "tf", "type": "Any"}, {"lineNumber": 693, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 693, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 694, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 695, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 696, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 704, "col_offset": 18, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 718, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 294, "col_offset": 41, "nodeName": "dict_", "type": "Any"}, {"lineNumber": 336, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 34, "nodeName": "graph", "type": "Any"}, {"lineNumber": 336, "col_offset": 41, "nodeName": "key", "type": "str"}, {"lineNumber": 357, "col_offset": 39, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 384, "col_offset": 39, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 412, "col_offset": 39, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 527, "col_offset": 35, "nodeName": "e1", "type": "int"}, {"lineNumber": 527, "col_offset": 40, "nodeName": "offset", "type": "int"}, {"lineNumber": 527, "col_offset": 48, "nodeName": "e2", "type": "int"}, {"lineNumber": 527, "col_offset": 53, "nodeName": "offset", "type": "int"}, {"lineNumber": 555, "col_offset": 35, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 560, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 294, "col_offset": 47, "nodeName": "key", "type": "str"}]