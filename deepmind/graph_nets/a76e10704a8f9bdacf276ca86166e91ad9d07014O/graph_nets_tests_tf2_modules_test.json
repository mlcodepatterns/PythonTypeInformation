[{"lineNumber": 37, "col_offset": 0, "nodeName": "SMALL_GRAPH_1", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "SMALL_GRAPH_2", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "SMALL_GRAPH_3", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "SMALL_GRAPH_4", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "GraphModuleTest", "type": "Type[GraphModuleTest]"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "GraphModuleTest", "type": "Type[GraphModuleTest]"}, {"lineNumber": 597, "col_offset": 29, "nodeName": "GraphModuleTest", "type": "Type[GraphModuleTest]"}, {"lineNumber": 716, "col_offset": 26, "nodeName": "GraphModuleTest", "type": "Type[GraphModuleTest]"}, {"lineNumber": 815, "col_offset": 19, "nodeName": "GraphModuleTest", "type": "Type[GraphModuleTest]"}, {"lineNumber": 938, "col_offset": 18, "nodeName": "GraphModuleTest", "type": "Type[GraphModuleTest]"}, {"lineNumber": 1047, "col_offset": 24, "nodeName": "GraphModuleTest", "type": "Type[GraphModuleTest]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "test", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1061, "col_offset": 2, "nodeName": "LOGITS_1D", "type": "List[Any]"}, {"lineNumber": 1062, "col_offset": 2, "nodeName": "SOFTMAX_1D", "type": "List[float]"}, {"lineNumber": 1063, "col_offset": 2, "nodeName": "LOGITS_2D", "type": "List[Union[List[Any], List[float]]]"}, {"lineNumber": 1065, "col_offset": 2, "nodeName": "SOFTMAX_2D", "type": "List[List[float]]"}, {"lineNumber": 1067, "col_offset": 2, "nodeName": "SENDERS", "type": "List[int]"}, {"lineNumber": 1068, "col_offset": 2, "nodeName": "RECEIVERS", "type": "List[int]"}, {"lineNumber": 1069, "col_offset": 2, "nodeName": "N_NODE", "type": "List[int]"}, {"lineNumber": 1070, "col_offset": 2, "nodeName": "N_EDGE", "type": "List[int]"}, {"lineNumber": 1163, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 85, "col_offset": 7, "nodeName": "none_field", "type": "None"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "edge_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 122, "col_offset": 7, "nodeName": "name", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "model", "type": "graph_nets.modules.GraphIndependent"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "expected_output_edges", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "expected_output_nodes", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "expected_output_globals", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "expected_var_shapes_dict", "type": "Dict[Any, List[int]]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "variables", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "var_shapes_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "input_field", "type": "str"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "network", "type": "graph_nets.modules.GraphIndependent"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "edge_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "expected_var_shapes_dict", "type": "Dict[Any, List[int]]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "extra_kwargs", "type": "Union[Dict[str, Union[str, Any]], Dict[nothing, nothing]]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "model", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "variables", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "var_shapes_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "edge_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 269, "col_offset": 7, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "edge_block", "type": "graph_nets.blocks.EdgeBlock"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "node_block", "type": "graph_nets.blocks.NodeBlock"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "global_block", "type": "graph_nets.blocks.GlobalBlock"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "expected_output_node_block", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "expected_output_global_block", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "expected_edges", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "expected_globals", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "model", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "field", "type": "str"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "field", "type": "str"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 350, "col_offset": 14, "nodeName": "unsorted_segment_sum", "type": "Any"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "edge_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "edge_block_opt", "type": "Dict[str, Any]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "node_model_fn", "type": "Callable[[], Any]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "node_block_opt", "type": "Dict[str, bool]"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "global_model_fn", "type": "Callable[[], Any]"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "global_block_opt", "type": "Dict[str, bool]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "edge_block", "type": "graph_nets.blocks.EdgeBlock"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "expected_output_node_block", "type": "Any"}, {"lineNumber": 388, "col_offset": 33, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "expected_output_global_block", "type": "Any"}, {"lineNumber": 389, "col_offset": 35, "nodeName": "expected_output_node_block", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "expected_edges", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "expected_globals", "type": "Any"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 421, "col_offset": 7, "nodeName": "use_received_edges", "type": "Any"}, {"lineNumber": 424, "col_offset": 7, "nodeName": "use_sent_edges", "type": "Any"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "edge_model_fn", "type": "Callable[[], Any]"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "edge_block_opt", "type": "Dict[str, bool]"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "node_block_opt", "type": "Dict[str, Any]"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "global_model_fn", "type": "Callable[[], Any]"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "global_block_opt", "type": "Dict[str, bool]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "node_block", "type": "graph_nets.blocks.NodeBlock"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 466, "col_offset": 33, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "expected_output_node_block", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "expected_output_global_block", "type": "Any"}, {"lineNumber": 468, "col_offset": 35, "nodeName": "expected_output_node_block", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "expected_edges", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "expected_globals", "type": "Any"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 498, "col_offset": 7, "nodeName": "use_edges", "type": "Any"}, {"lineNumber": 500, "col_offset": 7, "nodeName": "use_nodes", "type": "Any"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "edge_model_fn", "type": "Callable[[], Any]"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "edge_block_opt", "type": "Dict[str, bool]"}, {"lineNumber": 510, "col_offset": 4, "nodeName": "node_model_fn", "type": "Callable[[], Any]"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "node_block_opt", "type": "Dict[str, bool]"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "global_block_opt", "type": "Dict[str, Any]"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "global_block", "type": "graph_nets.blocks.GlobalBlock"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 540, "col_offset": 33, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "expected_output_node_block", "type": "Any"}, {"lineNumber": 541, "col_offset": 33, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "expected_output_global_block", "type": "Any"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "expected_edges", "type": "Any"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "expected_globals", "type": "Any"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "edge_model_fn_2", "type": "functools.partial[nothing]"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "node_model_fn_2", "type": "functools.partial[nothing]"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 604, "col_offset": 7, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 606, "col_offset": 7, "nodeName": "name", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "expected_var_shapes_dict", "type": "Dict[Any, List[int]]"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 622, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "variables", "type": "Any"}, {"lineNumber": 625, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "var_shapes_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 644, "col_offset": 4, "nodeName": "interaction_network", "type": "Any"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 646, "col_offset": 4, "nodeName": "edges_out", "type": "Any"}, {"lineNumber": 647, "col_offset": 4, "nodeName": "nodes_out", "type": "Any"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "edge_block", "type": "graph_nets.blocks.EdgeBlock"}, {"lineNumber": 656, "col_offset": 4, "nodeName": "node_block", "type": "graph_nets.blocks.NodeBlock"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "expected_output_node_block", "type": "Any"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "expected_edges", "type": "Any"}, {"lineNumber": 667, "col_offset": 4, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 679, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 680, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 681, "col_offset": 4, "nodeName": "interaction_network", "type": "Any"}, {"lineNumber": 687, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "graph_network", "type": "graph_nets.modules.InteractionNetwork"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 701, "col_offset": 4, "nodeName": "graph_network", "type": "graph_nets.modules.InteractionNetwork"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "graph_network", "type": "graph_nets.modules.InteractionNetwork"}, {"lineNumber": 718, "col_offset": 31, "nodeName": "unsorted_segment_sum", "type": "Any"}, {"lineNumber": 719, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 723, "col_offset": 7, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 725, "col_offset": 7, "nodeName": "name", "type": "Any"}, {"lineNumber": 733, "col_offset": 4, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 734, "col_offset": 4, "nodeName": "expected_var_shapes_dict", "type": "Dict[Any, List[int]]"}, {"lineNumber": 740, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 741, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 744, "col_offset": 4, "nodeName": "variables", "type": "Any"}, {"lineNumber": 744, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 745, "col_offset": 4, "nodeName": "var_shapes_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 762, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 763, "col_offset": 4, "nodeName": "relation_network", "type": "Any"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "edge_block", "type": "graph_nets.blocks.EdgeBlock"}, {"lineNumber": 772, "col_offset": 4, "nodeName": "global_block", "type": "graph_nets.blocks.GlobalBlock"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "expected_output_global_block", "type": "Any"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "relation_network", "type": "Any"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "network", "type": "graph_nets.modules.RelationNetwork"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 822, "col_offset": 7, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 824, "col_offset": 7, "nodeName": "name", "type": "Any"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "expected_var_shapes_dict", "type": "Dict[Any, List[int]]"}, {"lineNumber": 839, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "variables", "type": "Any"}, {"lineNumber": 843, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 844, "col_offset": 4, "nodeName": "var_shapes_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 865, "col_offset": 4, "nodeName": "deep_sets", "type": "Any"}, {"lineNumber": 867, "col_offset": 4, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 868, "col_offset": 4, "nodeName": "output_nodes", "type": "Any"}, {"lineNumber": 869, "col_offset": 4, "nodeName": "output_globals", "type": "Any"}, {"lineNumber": 871, "col_offset": 4, "nodeName": "node_block", "type": "graph_nets.blocks.NodeBlock"}, {"lineNumber": 877, "col_offset": 4, "nodeName": "global_block", "type": "graph_nets.blocks.GlobalBlock"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "node_block_out", "type": "Any"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 886, "col_offset": 4, "nodeName": "expected_globals", "type": "Any"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 901, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 902, "col_offset": 4, "nodeName": "deep_sets", "type": "Any"}, {"lineNumber": 908, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 910, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 912, "col_offset": 4, "nodeName": "graph_network", "type": "graph_nets.modules.DeepSets"}, {"lineNumber": 920, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 921, "col_offset": 4, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 923, "col_offset": 4, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 925, "col_offset": 4, "nodeName": "network", "type": "graph_nets.modules.DeepSets"}, {"lineNumber": 930, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "network", "type": "graph_nets.modules.DeepSets"}, {"lineNumber": 941, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 948, "col_offset": 7, "nodeName": "name", "type": "Any"}, {"lineNumber": 956, "col_offset": 4, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "expected_var_shapes_dict", "type": "Dict[Any, List[int]]"}, {"lineNumber": 965, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 966, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 969, "col_offset": 4, "nodeName": "variables", "type": "Any"}, {"lineNumber": 969, "col_offset": 16, "nodeName": "variables", "type": "Any"}, {"lineNumber": 970, "col_offset": 4, "nodeName": "var_shapes_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 987, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 989, "col_offset": 4, "nodeName": "comm_net", "type": "Any"}, {"lineNumber": 990, "col_offset": 4, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 991, "col_offset": 4, "nodeName": "output_nodes", "type": "Any"}, {"lineNumber": 991, "col_offset": 19, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 993, "col_offset": 4, "nodeName": "edge_subblock", "type": "graph_nets.blocks.EdgeBlock"}, {"lineNumber": 999, "col_offset": 4, "nodeName": "node_encoder_subblock", "type": "graph_nets.blocks.NodeBlock"}, {"lineNumber": 1006, "col_offset": 4, "nodeName": "node_subblock", "type": "graph_nets.blocks.NodeBlock"}, {"lineNumber": 1014, "col_offset": 4, "nodeName": "edge_block_out", "type": "Any"}, {"lineNumber": 1015, "col_offset": 4, "nodeName": "encoded_nodes", "type": "Any"}, {"lineNumber": 1015, "col_offset": 20, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 1016, "col_offset": 4, "nodeName": "node_input_graph", "type": "Any"}, {"lineNumber": 1018, "col_offset": 4, "nodeName": "node_block_out", "type": "Any"}, {"lineNumber": 1019, "col_offset": 4, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 1019, "col_offset": 21, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 1034, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 1035, "col_offset": 4, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 1036, "col_offset": 4, "nodeName": "comm_net", "type": "Any"}, {"lineNumber": 1042, "col_offset": 4, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 1043, "col_offset": 4, "nodeName": "graph_network", "type": "graph_nets.modules.CommNet"}, {"lineNumber": 1050, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 1057, "col_offset": 7, "nodeName": "name", "type": "Any"}, {"lineNumber": 1078, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "segment_ids", "type": "Any"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "num_segments", "type": "Any"}, {"lineNumber": 1082, "col_offset": 4, "nodeName": "actual_softmax", "type": "Any"}, {"lineNumber": 1094, "col_offset": 4, "nodeName": "graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 1103, "col_offset": 4, "nodeName": "actual_normalized_edges", "type": "Any"}, {"lineNumber": 1110, "col_offset": 4, "nodeName": "values_np", "type": "Any"}, {"lineNumber": 1112, "col_offset": 4, "nodeName": "values_np", "type": "Any"}, {"lineNumber": 1114, "col_offset": 4, "nodeName": "values_np", "type": "Any"}, {"lineNumber": 1115, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 1117, "col_offset": 4, "nodeName": "keys_np", "type": "List[Union[List[List[float]], List[List[int]]]]"}, {"lineNumber": 1125, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 1127, "col_offset": 4, "nodeName": "queries_np", "type": "List[Union[List[List[float]], List[List[Any]]]]"}, {"lineNumber": 1135, "col_offset": 4, "nodeName": "queries", "type": "Any"}, {"lineNumber": 1137, "col_offset": 4, "nodeName": "attention_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 1146, "col_offset": 4, "nodeName": "self_attention", "type": "graph_nets.modules.SelfAttention"}, {"lineNumber": 1147, "col_offset": 4, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 1149, "col_offset": 4, "nodeName": "expected_mixed_nodes", "type": "List[List[List[float]]]"}, {"lineNumber": 1164, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "set_seed", "type": "Any"}, {"lineNumber": 78, "col_offset": 7, "nodeName": "expected", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "actual", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 86, "col_offset": 6, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "GraphsTuple", "type": "Type[graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "edge_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "network", "type": "graph_nets.modules.CommNet"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "GraphIndependent", "type": "Type[graph_nets.modules.GraphIndependent]"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "expected_output_edges", "type": "Any"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "edges", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "expected_output_nodes", "type": "Any"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "expected_output_globals", "type": "Any"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "globals", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 159, "col_offset": 10, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "expected_var_shapes_dict", "type": "Dict[Any, List[int]]"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "var_shapes_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Any"}, {"lineNumber": 172, "col_offset": 6, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 173, "col_offset": 10, "nodeName": "output_field", "type": "str"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "_get_shaped_input_graph", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "edge_model_fn", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "node_model_fn", "type": "Any"}, {"lineNumber": 199, "col_offset": 34, "nodeName": "global_model_fn", "type": "Any"}, {"lineNumber": 199, "col_offset": 52, "nodeName": "_get_shaped_model_fns", "type": "Any"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "map", "type": "Any"}, {"lineNumber": 202, "col_offset": 14, "nodeName": "GraphIndependent", "type": "Type[graph_nets.modules.GraphIndependent]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "edge_model_fn", "type": "Any"}, {"lineNumber": 203, "col_offset": 23, "nodeName": "node_model_fn", "type": "Any"}, {"lineNumber": 203, "col_offset": 38, "nodeName": "global_model_fn", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "_assert_build_and_run", "type": "Any"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "network", "type": "graph_nets.modules.GraphIndependent"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 212, "col_offset": 40, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "GraphNetwork", "type": "Type[graph_nets.modules.GraphNetwork]"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Any"}, {"lineNumber": 232, "col_offset": 37, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "GraphNetwork", "type": "Type[graph_nets.modules.GraphNetwork]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "model", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 239, "col_offset": 10, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "model", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "expected_var_shapes_dict", "type": "Dict[Any, List[int]]"}, {"lineNumber": 242, "col_offset": 51, "nodeName": "var_shapes_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Any"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 259, "col_offset": 38, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 260, "col_offset": 38, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 261, "col_offset": 40, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "GraphNetwork", "type": "Type[graph_nets.modules.GraphNetwork]"}, {"lineNumber": 270, "col_offset": 6, "nodeName": "input_signature", "type": "List[graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 271, "col_offset": 6, "nodeName": "graph_network_fn", "type": "Any"}, {"lineNumber": 273, "col_offset": 6, "nodeName": "graph_network_fn", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "graph_network_fn", "type": "Any"}, {"lineNumber": 275, "col_offset": 36, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "EdgeBlock", "type": "Type[graph_nets.blocks.EdgeBlock]"}, {"lineNumber": 283, "col_offset": 17, "nodeName": "NodeBlock", "type": "Type[graph_nets.blocks.NodeBlock]"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "GlobalBlock", "type": "Type[graph_nets.blocks.GlobalBlock]"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "edge_block", "type": "graph_nets.blocks.EdgeBlock"}, {"lineNumber": 298, "col_offset": 44, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 299, "col_offset": 33, "nodeName": "node_block", "type": "graph_nets.blocks.NodeBlock"}, {"lineNumber": 299, "col_offset": 44, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 300, "col_offset": 35, "nodeName": "global_block", "type": "graph_nets.blocks.GlobalBlock"}, {"lineNumber": 300, "col_offset": 48, "nodeName": "expected_output_node_block", "type": "Any"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 305, "col_offset": 39, "nodeName": "expected_edges", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 307, "col_offset": 39, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 309, "col_offset": 39, "nodeName": "expected_globals", "type": "Any"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[[Any], graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 316, "col_offset": 18, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 316, "col_offset": 34, "nodeName": "constant", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 318, "col_offset": 13, "nodeName": "model", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 319, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 327, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Any"}, {"lineNumber": 328, "col_offset": 18, "nodeName": "map", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "map", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 333, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 333, "col_offset": 19, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 350, "col_offset": 14, "nodeName": "math", "type": "Any"}, {"lineNumber": 351, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Any"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 352, "col_offset": 38, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 353, "col_offset": 35, "nodeName": "use_edges", "type": "Any"}, {"lineNumber": 354, "col_offset": 44, "nodeName": "use_receiver_nodes", "type": "Any"}, {"lineNumber": 355, "col_offset": 42, "nodeName": "use_sender_nodes", "type": "Any"}, {"lineNumber": 356, "col_offset": 37, "nodeName": "use_globals", "type": "Any"}, {"lineNumber": 369, "col_offset": 20, "nodeName": "GraphNetwork", "type": "Type[graph_nets.modules.GraphNetwork]"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 380, "col_offset": 17, "nodeName": "EdgeBlock", "type": "Type[graph_nets.blocks.EdgeBlock]"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "edge_block", "type": "graph_nets.blocks.EdgeBlock"}, {"lineNumber": 387, "col_offset": 44, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 391, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 392, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 394, "col_offset": 39, "nodeName": "expected_edges", "type": "Any"}, {"lineNumber": 395, "col_offset": 39, "nodeName": "edges", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 396, "col_offset": 39, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 397, "col_offset": 39, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 398, "col_offset": 39, "nodeName": "expected_globals", "type": "Any"}, {"lineNumber": 399, "col_offset": 39, "nodeName": "globals", "type": "Any"}, {"lineNumber": 419, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Any"}, {"lineNumber": 422, "col_offset": 6, "nodeName": "received_edges_reducer", "type": "Any"}, {"lineNumber": 425, "col_offset": 6, "nodeName": "sent_edges_reducer", "type": "Any"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 434, "col_offset": 38, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 435, "col_offset": 44, "nodeName": "use_received_edges", "type": "Any"}, {"lineNumber": 436, "col_offset": 40, "nodeName": "use_sent_edges", "type": "Any"}, {"lineNumber": 437, "col_offset": 35, "nodeName": "use_nodes", "type": "Any"}, {"lineNumber": 438, "col_offset": 37, "nodeName": "use_globals", "type": "Any"}, {"lineNumber": 439, "col_offset": 48, "nodeName": "received_edges_reducer", "type": "Any"}, {"lineNumber": 440, "col_offset": 44, "nodeName": "sent_edges_reducer", "type": "Any"}, {"lineNumber": 447, "col_offset": 20, "nodeName": "GraphNetwork", "type": "Type[graph_nets.modules.GraphNetwork]"}, {"lineNumber": 455, "col_offset": 19, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 457, "col_offset": 17, "nodeName": "NodeBlock", "type": "Type[graph_nets.blocks.NodeBlock]"}, {"lineNumber": 467, "col_offset": 33, "nodeName": "node_block", "type": "graph_nets.blocks.NodeBlock"}, {"lineNumber": 467, "col_offset": 44, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 469, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 470, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 471, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 473, "col_offset": 39, "nodeName": "expected_edges", "type": "Any"}, {"lineNumber": 474, "col_offset": 39, "nodeName": "edges", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 475, "col_offset": 39, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 476, "col_offset": 39, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 477, "col_offset": 39, "nodeName": "expected_globals", "type": "Any"}, {"lineNumber": 478, "col_offset": 39, "nodeName": "globals", "type": "Any"}, {"lineNumber": 496, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Any"}, {"lineNumber": 499, "col_offset": 6, "nodeName": "edges_reducer", "type": "Any"}, {"lineNumber": 501, "col_offset": 6, "nodeName": "nodes_reducer", "type": "Any"}, {"lineNumber": 515, "col_offset": 22, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 515, "col_offset": 40, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 516, "col_offset": 39, "nodeName": "use_globals", "type": "Any"}, {"lineNumber": 517, "col_offset": 37, "nodeName": "use_nodes", "type": "Any"}, {"lineNumber": 518, "col_offset": 37, "nodeName": "use_edges", "type": "Any"}, {"lineNumber": 519, "col_offset": 41, "nodeName": "edges_reducer", "type": "Any"}, {"lineNumber": 520, "col_offset": 41, "nodeName": "nodes_reducer", "type": "Any"}, {"lineNumber": 522, "col_offset": 20, "nodeName": "GraphNetwork", "type": "Type[graph_nets.modules.GraphNetwork]"}, {"lineNumber": 530, "col_offset": 19, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 532, "col_offset": 19, "nodeName": "GlobalBlock", "type": "Type[graph_nets.blocks.GlobalBlock]"}, {"lineNumber": 542, "col_offset": 35, "nodeName": "global_block", "type": "graph_nets.blocks.GlobalBlock"}, {"lineNumber": 542, "col_offset": 48, "nodeName": "expected_output_node_block", "type": "Any"}, {"lineNumber": 543, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 544, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 545, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 547, "col_offset": 39, "nodeName": "expected_edges", "type": "Any"}, {"lineNumber": 548, "col_offset": 39, "nodeName": "edges", "type": "Any"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 549, "col_offset": 39, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 550, "col_offset": 39, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 551, "col_offset": 39, "nodeName": "expected_globals", "type": "Any"}, {"lineNumber": 552, "col_offset": 39, "nodeName": "globals", "type": "Any"}, {"lineNumber": 556, "col_offset": 18, "nodeName": "_get_shaped_input_graph", "type": "Callable[[], Any]"}, {"lineNumber": 557, "col_offset": 14, "nodeName": "GraphNetwork", "type": "Type[graph_nets.modules.GraphNetwork]"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "_assert_build_and_run", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 558, "col_offset": 31, "nodeName": "network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 558, "col_offset": 40, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 566, "col_offset": 18, "nodeName": "_get_shaped_input_graph", "type": "Any"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "edge_model_fn", "type": "Any"}, {"lineNumber": 567, "col_offset": 19, "nodeName": "node_model_fn", "type": "Any"}, {"lineNumber": 567, "col_offset": 34, "nodeName": "global_model_fn", "type": "Any"}, {"lineNumber": 567, "col_offset": 52, "nodeName": "_get_shaped_model_fns", "type": "Any"}, {"lineNumber": 568, "col_offset": 18, "nodeName": "map", "type": "Any"}, {"lineNumber": 570, "col_offset": 20, "nodeName": "GraphNetwork", "type": "Type[graph_nets.modules.GraphNetwork]"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "edge_model_fn", "type": "Any"}, {"lineNumber": 571, "col_offset": 23, "nodeName": "node_model_fn", "type": "Any"}, {"lineNumber": 571, "col_offset": 38, "nodeName": "global_model_fn", "type": "Any"}, {"lineNumber": 579, "col_offset": 18, "nodeName": "_get_shaped_input_graph", "type": "Callable[[], Any]"}, {"lineNumber": 580, "col_offset": 4, "nodeName": "edge_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 580, "col_offset": 19, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 580, "col_offset": 34, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 580, "col_offset": 52, "nodeName": "_get_shaped_model_fns", "type": "Callable[[], Any]"}, {"lineNumber": 581, "col_offset": 22, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 583, "col_offset": 20, "nodeName": "GraphNetwork", "type": "Type[graph_nets.modules.GraphNetwork]"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "edge_model_fn_2", "type": "functools.partial[nothing]"}, {"lineNumber": 584, "col_offset": 25, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 584, "col_offset": 40, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 588, "col_offset": 22, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 590, "col_offset": 20, "nodeName": "GraphNetwork", "type": "Type[graph_nets.modules.GraphNetwork]"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "edge_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 591, "col_offset": 23, "nodeName": "node_model_fn_2", "type": "functools.partial[nothing]"}, {"lineNumber": 591, "col_offset": 40, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 605, "col_offset": 26, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 607, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 608, "col_offset": 11, "nodeName": "InteractionNetwork", "type": "Type[graph_nets.modules.InteractionNetwork]"}, {"lineNumber": 614, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 621, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 624, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 624, "col_offset": 10, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 625, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 626, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 627, "col_offset": 25, "nodeName": "expected_var_shapes_dict", "type": "Dict[Any, List[int]]"}, {"lineNumber": 627, "col_offset": 51, "nodeName": "var_shapes_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 642, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Any"}, {"lineNumber": 642, "col_offset": 40, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 644, "col_offset": 26, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 644, "col_offset": 42, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 645, "col_offset": 19, "nodeName": "interaction_network", "type": "Any"}, {"lineNumber": 645, "col_offset": 39, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 647, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 648, "col_offset": 24, "nodeName": "globals", "type": "Any"}, {"lineNumber": 648, "col_offset": 45, "nodeName": "globals", "type": "Any"}, {"lineNumber": 650, "col_offset": 17, "nodeName": "EdgeBlock", "type": "Type[graph_nets.blocks.EdgeBlock]"}, {"lineNumber": 656, "col_offset": 17, "nodeName": "NodeBlock", "type": "Type[graph_nets.blocks.NodeBlock]"}, {"lineNumber": 664, "col_offset": 33, "nodeName": "edge_block", "type": "graph_nets.blocks.EdgeBlock"}, {"lineNumber": 664, "col_offset": 44, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 665, "col_offset": 33, "nodeName": "node_block", "type": "graph_nets.blocks.NodeBlock"}, {"lineNumber": 665, "col_offset": 44, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 666, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 667, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 669, "col_offset": 39, "nodeName": "expected_edges", "type": "Any"}, {"lineNumber": 669, "col_offset": 55, "nodeName": "edges_out", "type": "Any"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 670, "col_offset": 39, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 670, "col_offset": 55, "nodeName": "nodes_out", "type": "Any"}, {"lineNumber": 679, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 680, "col_offset": 18, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 680, "col_offset": 50, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 681, "col_offset": 26, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 687, "col_offset": 18, "nodeName": "_get_shaped_input_graph", "type": "Callable[[], Any]"}, {"lineNumber": 688, "col_offset": 4, "nodeName": "edge_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 688, "col_offset": 19, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 688, "col_offset": 34, "nodeName": "_", "type": "functools.partial[nothing]"}, {"lineNumber": 688, "col_offset": 38, "nodeName": "_get_shaped_model_fns", "type": "Callable[[], Any]"}, {"lineNumber": 689, "col_offset": 20, "nodeName": "InteractionNetwork", "type": "Type[graph_nets.modules.InteractionNetwork]"}, {"lineNumber": 689, "col_offset": 47, "nodeName": "edge_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 689, "col_offset": 62, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "_assert_build_and_run", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 690, "col_offset": 31, "nodeName": "graph_network", "type": "graph_nets.modules.InteractionNetwork"}, {"lineNumber": 690, "col_offset": 46, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 697, "col_offset": 18, "nodeName": "_get_shaped_input_graph", "type": "Any"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "edge_model_fn", "type": "Any"}, {"lineNumber": 698, "col_offset": 19, "nodeName": "node_model_fn", "type": "Any"}, {"lineNumber": 698, "col_offset": 34, "nodeName": "_", "type": "Any"}, {"lineNumber": 698, "col_offset": 38, "nodeName": "_get_shaped_model_fns", "type": "Any"}, {"lineNumber": 699, "col_offset": 18, "nodeName": "map", "type": "Any"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "InteractionNetwork", "type": "Type[graph_nets.modules.InteractionNetwork]"}, {"lineNumber": 701, "col_offset": 47, "nodeName": "edge_model_fn", "type": "Any"}, {"lineNumber": 701, "col_offset": 62, "nodeName": "node_model_fn", "type": "Any"}, {"lineNumber": 708, "col_offset": 18, "nodeName": "_get_shaped_input_graph", "type": "Callable[[], Any]"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "edge_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 709, "col_offset": 19, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 709, "col_offset": 34, "nodeName": "_", "type": "functools.partial[nothing]"}, {"lineNumber": 709, "col_offset": 38, "nodeName": "_get_shaped_model_fns", "type": "Callable[[], Any]"}, {"lineNumber": 710, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., Any]"}, {"lineNumber": 712, "col_offset": 20, "nodeName": "InteractionNetwork", "type": "Type[graph_nets.modules.InteractionNetwork]"}, {"lineNumber": 712, "col_offset": 47, "nodeName": "edge_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 712, "col_offset": 62, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "_assert_build_and_run", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 713, "col_offset": 31, "nodeName": "graph_network", "type": "graph_nets.modules.InteractionNetwork"}, {"lineNumber": 713, "col_offset": 46, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 718, "col_offset": 31, "nodeName": "math", "type": "Any"}, {"lineNumber": 724, "col_offset": 26, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 726, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 727, "col_offset": 11, "nodeName": "RelationNetwork", "type": "Type[graph_nets.modules.RelationNetwork]"}, {"lineNumber": 733, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 740, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 743, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 743, "col_offset": 10, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 744, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 745, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 746, "col_offset": 4, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 746, "col_offset": 25, "nodeName": "expected_var_shapes_dict", "type": "Dict[Any, List[int]]"}, {"lineNumber": 746, "col_offset": 51, "nodeName": "var_shapes_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 762, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Any"}, {"lineNumber": 762, "col_offset": 40, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 763, "col_offset": 23, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 763, "col_offset": 39, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 764, "col_offset": 19, "nodeName": "relation_network", "type": "Any"}, {"lineNumber": 764, "col_offset": 36, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 766, "col_offset": 17, "nodeName": "EdgeBlock", "type": "Type[graph_nets.blocks.EdgeBlock]"}, {"lineNumber": 772, "col_offset": 19, "nodeName": "GlobalBlock", "type": "Type[graph_nets.blocks.GlobalBlock]"}, {"lineNumber": 780, "col_offset": 33, "nodeName": "edge_block", "type": "graph_nets.blocks.EdgeBlock"}, {"lineNumber": 780, "col_offset": 44, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 781, "col_offset": 35, "nodeName": "global_block", "type": "graph_nets.blocks.GlobalBlock"}, {"lineNumber": 781, "col_offset": 48, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 783, "col_offset": 18, "nodeName": "edges", "type": "Any"}, {"lineNumber": 783, "col_offset": 37, "nodeName": "edges", "type": "Any"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 784, "col_offset": 18, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 784, "col_offset": 37, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 786, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 795, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 796, "col_offset": 18, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 796, "col_offset": 50, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 797, "col_offset": 23, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 807, "col_offset": 18, "nodeName": "_get_shaped_input_graph", "type": "Any"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "edge_model_fn", "type": "Any"}, {"lineNumber": 808, "col_offset": 19, "nodeName": "_", "type": "Any"}, {"lineNumber": 808, "col_offset": 22, "nodeName": "global_model_fn", "type": "Any"}, {"lineNumber": 808, "col_offset": 40, "nodeName": "_get_shaped_model_fns", "type": "Any"}, {"lineNumber": 809, "col_offset": 18, "nodeName": "map", "type": "Any"}, {"lineNumber": 811, "col_offset": 14, "nodeName": "RelationNetwork", "type": "Type[graph_nets.modules.RelationNetwork]"}, {"lineNumber": 811, "col_offset": 38, "nodeName": "edge_model_fn", "type": "Any"}, {"lineNumber": 811, "col_offset": 53, "nodeName": "global_model_fn", "type": "Any"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "_assert_build_and_run", "type": "Any"}, {"lineNumber": 812, "col_offset": 31, "nodeName": "network", "type": "graph_nets.modules.RelationNetwork"}, {"lineNumber": 812, "col_offset": 40, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 823, "col_offset": 26, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 825, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 826, "col_offset": 11, "nodeName": "DeepSets", "type": "Type[graph_nets.modules.DeepSets]"}, {"lineNumber": 832, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 839, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Any"}, {"lineNumber": 840, "col_offset": 12, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 842, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 842, "col_offset": 10, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 843, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 844, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 845, "col_offset": 4, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 845, "col_offset": 25, "nodeName": "expected_var_shapes_dict", "type": "Dict[Any, List[int]]"}, {"lineNumber": 845, "col_offset": 51, "nodeName": "var_shapes_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 862, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Any"}, {"lineNumber": 863, "col_offset": 18, "nodeName": "map", "type": "Any"}, {"lineNumber": 863, "col_offset": 50, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 865, "col_offset": 16, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 865, "col_offset": 32, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 867, "col_offset": 19, "nodeName": "deep_sets", "type": "Any"}, {"lineNumber": 867, "col_offset": 29, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 868, "col_offset": 19, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 869, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 871, "col_offset": 17, "nodeName": "NodeBlock", "type": "Type[graph_nets.blocks.NodeBlock]"}, {"lineNumber": 877, "col_offset": 19, "nodeName": "GlobalBlock", "type": "Type[graph_nets.blocks.GlobalBlock]"}, {"lineNumber": 884, "col_offset": 21, "nodeName": "node_block", "type": "graph_nets.blocks.NodeBlock"}, {"lineNumber": 884, "col_offset": 32, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 885, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 886, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 888, "col_offset": 24, "nodeName": "edges", "type": "Any"}, {"lineNumber": 888, "col_offset": 43, "nodeName": "edges", "type": "Any"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 889, "col_offset": 24, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 889, "col_offset": 47, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 890, "col_offset": 24, "nodeName": "senders", "type": "Any"}, {"lineNumber": 890, "col_offset": 45, "nodeName": "senders", "type": "Any"}, {"lineNumber": 892, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 892, "col_offset": 39, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 892, "col_offset": 55, "nodeName": "output_nodes", "type": "Any"}, {"lineNumber": 893, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 893, "col_offset": 39, "nodeName": "expected_globals", "type": "Any"}, {"lineNumber": 893, "col_offset": 57, "nodeName": "output_globals", "type": "Any"}, {"lineNumber": 900, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 901, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., Any]"}, {"lineNumber": 902, "col_offset": 16, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 908, "col_offset": 18, "nodeName": "_get_shaped_input_graph", "type": "Callable[[], Any]"}, {"lineNumber": 909, "col_offset": 4, "nodeName": "_", "type": "functools.partial[nothing]"}, {"lineNumber": 909, "col_offset": 7, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 909, "col_offset": 22, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 909, "col_offset": 40, "nodeName": "_get_shaped_model_fns", "type": "Callable[[], Any]"}, {"lineNumber": 910, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., Any]"}, {"lineNumber": 912, "col_offset": 20, "nodeName": "DeepSets", "type": "Type[graph_nets.modules.DeepSets]"}, {"lineNumber": 912, "col_offset": 37, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 912, "col_offset": 52, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 920, "col_offset": 18, "nodeName": "_get_shaped_input_graph", "type": "Callable[[], Any]"}, {"lineNumber": 921, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 922, "col_offset": 8, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 923, "col_offset": 22, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 924, "col_offset": 8, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 925, "col_offset": 14, "nodeName": "DeepSets", "type": "Type[graph_nets.modules.DeepSets]"}, {"lineNumber": 925, "col_offset": 31, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 925, "col_offset": 46, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 926, "col_offset": 4, "nodeName": "_assert_build_and_run", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 926, "col_offset": 31, "nodeName": "network", "type": "graph_nets.modules.DeepSets"}, {"lineNumber": 926, "col_offset": 40, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 930, "col_offset": 18, "nodeName": "_get_shaped_input_graph", "type": "Callable[[], Any]"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "_", "type": "functools.partial[nothing]"}, {"lineNumber": 931, "col_offset": 7, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 931, "col_offset": 22, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 931, "col_offset": 40, "nodeName": "_get_shaped_model_fns", "type": "Callable[[], Any]"}, {"lineNumber": 932, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., Any]"}, {"lineNumber": 934, "col_offset": 14, "nodeName": "DeepSets", "type": "Type[graph_nets.modules.DeepSets]"}, {"lineNumber": 934, "col_offset": 31, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 934, "col_offset": 46, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "_assert_build_and_run", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 935, "col_offset": 31, "nodeName": "network", "type": "graph_nets.modules.DeepSets"}, {"lineNumber": 935, "col_offset": 40, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 946, "col_offset": 7, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 947, "col_offset": 26, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 949, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 950, "col_offset": 11, "nodeName": "CommNet", "type": "Type[graph_nets.modules.CommNet]"}, {"lineNumber": 956, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 965, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Any"}, {"lineNumber": 966, "col_offset": 12, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 968, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 968, "col_offset": 10, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 969, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 970, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 971, "col_offset": 4, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 971, "col_offset": 25, "nodeName": "expected_var_shapes_dict", "type": "Dict[Any, List[int]]"}, {"lineNumber": 971, "col_offset": 51, "nodeName": "var_shapes_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 987, "col_offset": 18, "nodeName": "_get_input_graph", "type": "Any"}, {"lineNumber": 987, "col_offset": 40, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 989, "col_offset": 15, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 989, "col_offset": 31, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 990, "col_offset": 19, "nodeName": "comm_net", "type": "Any"}, {"lineNumber": 990, "col_offset": 28, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 991, "col_offset": 19, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 993, "col_offset": 20, "nodeName": "EdgeBlock", "type": "Type[graph_nets.blocks.EdgeBlock]"}, {"lineNumber": 999, "col_offset": 28, "nodeName": "NodeBlock", "type": "Type[graph_nets.blocks.NodeBlock]"}, {"lineNumber": 1006, "col_offset": 20, "nodeName": "NodeBlock", "type": "Type[graph_nets.blocks.NodeBlock]"}, {"lineNumber": 1014, "col_offset": 21, "nodeName": "edge_subblock", "type": "graph_nets.blocks.EdgeBlock"}, {"lineNumber": 1014, "col_offset": 35, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 1016, "col_offset": 23, "nodeName": "replace", "type": "Any"}, {"lineNumber": 1018, "col_offset": 21, "nodeName": "node_subblock", "type": "graph_nets.blocks.NodeBlock"}, {"lineNumber": 1018, "col_offset": 35, "nodeName": "node_input_graph", "type": "Any"}, {"lineNumber": 1019, "col_offset": 21, "nodeName": "node_block_out", "type": "Any"}, {"lineNumber": 1021, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1021, "col_offset": 24, "nodeName": "globals", "type": "Any"}, {"lineNumber": 1021, "col_offset": 45, "nodeName": "globals", "type": "Any"}, {"lineNumber": 1022, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1022, "col_offset": 24, "nodeName": "edges", "type": "Any"}, {"lineNumber": 1022, "col_offset": 43, "nodeName": "edges", "type": "Any"}, {"lineNumber": 1023, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1023, "col_offset": 24, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 1023, "col_offset": 47, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 1024, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1024, "col_offset": 24, "nodeName": "senders", "type": "Any"}, {"lineNumber": 1024, "col_offset": 45, "nodeName": "senders", "type": "Any"}, {"lineNumber": 1026, "col_offset": 4, "nodeName": "_assert_all_none_or_all_close", "type": "Any"}, {"lineNumber": 1034, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 1035, "col_offset": 18, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 1035, "col_offset": 50, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 1036, "col_offset": 15, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 1042, "col_offset": 18, "nodeName": "_get_shaped_input_graph", "type": "Callable[[], Any]"}, {"lineNumber": 1043, "col_offset": 20, "nodeName": "CommNet", "type": "Type[graph_nets.modules.CommNet]"}, {"lineNumber": 1044, "col_offset": 4, "nodeName": "_assert_build_and_run", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1044, "col_offset": 31, "nodeName": "graph_network", "type": "graph_nets.modules.CommNet"}, {"lineNumber": 1044, "col_offset": 46, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 1055, "col_offset": 7, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 1056, "col_offset": 26, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 1058, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 1059, "col_offset": 11, "nodeName": "CommNet", "type": "Type[graph_nets.modules.CommNet]"}, {"lineNumber": 1061, "col_offset": 15, "nodeName": "log", "type": "Any"}, {"lineNumber": 1061, "col_offset": 26, "nodeName": "log", "type": "Any"}, {"lineNumber": 1061, "col_offset": 37, "nodeName": "log", "type": "Any"}, {"lineNumber": 1078, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1078, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 1079, "col_offset": 18, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1079, "col_offset": 30, "nodeName": "RECEIVERS", "type": "Any"}, {"lineNumber": 1080, "col_offset": 19, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1082, "col_offset": 21, "nodeName": "_unsorted_segment_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 1083, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 1083, "col_offset": 14, "nodeName": "segment_ids", "type": "Any"}, {"lineNumber": 1083, "col_offset": 27, "nodeName": "num_segments", "type": "Any"}, {"lineNumber": 1085, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1085, "col_offset": 24, "nodeName": "expected_softmax", "type": "Any"}, {"lineNumber": 1094, "col_offset": 12, "nodeName": "GraphsTuple", "type": "Type[graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 1103, "col_offset": 30, "nodeName": "_received_edges_normalizer", "type": "Callable[..., Any]"}, {"lineNumber": 1104, "col_offset": 8, "nodeName": "graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 1104, "col_offset": 15, "nodeName": "normalizer", "type": "Any"}, {"lineNumber": 1106, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1106, "col_offset": 24, "nodeName": "expected_normalized", "type": "Any"}, {"lineNumber": 1112, "col_offset": 16, "nodeName": "stack", "type": "Any"}, {"lineNumber": 1114, "col_offset": 16, "nodeName": "stack", "type": "Any"}, {"lineNumber": 1115, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1115, "col_offset": 25, "nodeName": "values_np", "type": "Any"}, {"lineNumber": 1125, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1125, "col_offset": 23, "nodeName": "keys_np", "type": "List[Union[List[List[float]], List[List[int]]]]"}, {"lineNumber": 1135, "col_offset": 14, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1135, "col_offset": 26, "nodeName": "queries_np", "type": "List[Union[List[List[float]], List[List[Any]]]]"}, {"lineNumber": 1137, "col_offset": 22, "nodeName": "GraphsTuple", "type": "Type[graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 1146, "col_offset": 21, "nodeName": "SelfAttention", "type": "Type[graph_nets.modules.SelfAttention]"}, {"lineNumber": 1147, "col_offset": 19, "nodeName": "self_attention", "type": "graph_nets.modules.SelfAttention"}, {"lineNumber": 1147, "col_offset": 34, "nodeName": "values", "type": "Any"}, {"lineNumber": 1147, "col_offset": 42, "nodeName": "keys", "type": "Any"}, {"lineNumber": 1147, "col_offset": 48, "nodeName": "queries", "type": "Any"}, {"lineNumber": 1147, "col_offset": 57, "nodeName": "attention_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 1161, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1161, "col_offset": 24, "nodeName": "expected_mixed_nodes", "type": "List[List[List[float]]]"}, {"lineNumber": 1164, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "actual", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "self", "type": "GraphIndependentTest"}, {"lineNumber": 80, "col_offset": 50, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 80, "col_offset": 58, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "SMALL_GRAPH_1", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "SMALL_GRAPH_2", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "SMALL_GRAPH_3", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 84, "col_offset": 54, "nodeName": "SMALL_GRAPH_4", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "replace", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "graphs", "type": "module"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "functools", "type": "module"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "snt", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "functools", "type": "module"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "snt", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "functools", "type": "module"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "snt", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 119, "col_offset": 43, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 123, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "modules", "type": "module"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "self", "type": "GraphIndependentTest"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "self", "type": "GraphIndependentTest"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "model", "type": "graph_nets.modules.GraphIndependent"}, {"lineNumber": 130, "col_offset": 48, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "self", "type": "GraphIndependentTest"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "self", "type": "GraphIndependentTest"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "self", "type": "GraphIndependentTest"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 161, "col_offset": 63, "nodeName": "var", "type": "Any"}, {"lineNumber": 161, "col_offset": 70, "nodeName": "variables", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "input_field", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "use_autograd", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "output_tensor", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 201, "col_offset": 50, "nodeName": "field_to_reshape", "type": "Any"}, {"lineNumber": 202, "col_offset": 14, "nodeName": "modules", "type": "module"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "functools", "type": "module"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "snt", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "functools", "type": "module"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "snt", "type": "Any"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "functools", "type": "module"}, {"lineNumber": 212, "col_offset": 40, "nodeName": "snt", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "modules", "type": "module"}, {"lineNumber": 214, "col_offset": 22, "nodeName": "edge_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "modules", "type": "module"}, {"lineNumber": 237, "col_offset": 10, "nodeName": "extra_kwargs", "type": "Union[Dict[str, Union[str, Any]], Dict[nothing, nothing]]"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 241, "col_offset": 63, "nodeName": "var", "type": "Any"}, {"lineNumber": 241, "col_offset": 70, "nodeName": "variables", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "functools", "type": "module"}, {"lineNumber": 259, "col_offset": 38, "nodeName": "snt", "type": "Any"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "functools", "type": "module"}, {"lineNumber": 260, "col_offset": 38, "nodeName": "snt", "type": "Any"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "functools", "type": "module"}, {"lineNumber": 261, "col_offset": 40, "nodeName": "snt", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "edge_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 271, "col_offset": 37, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 271, "col_offset": 52, "nodeName": "input_signature", "type": "List[graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "blocks", "type": "module"}, {"lineNumber": 283, "col_offset": 17, "nodeName": "blocks", "type": "module"}, {"lineNumber": 289, "col_offset": 31, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "blocks", "type": "module"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 296, "col_offset": 22, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "edges", "type": "Any"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "globals", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 306, "col_offset": 39, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 39, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 310, "col_offset": 39, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 315, "col_offset": 9, "nodeName": "SMALL_GRAPH_1", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "SMALL_GRAPH_2", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 316, "col_offset": 18, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 316, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 316, "col_offset": 54, "nodeName": "ALL_FIELDS", "type": "Tuple[str, str, str, str, str, str, str]"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "self", "type": "GraphNetworkTest"}, {"lineNumber": 320, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 327, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 328, "col_offset": 18, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 335, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 335, "col_offset": 23, "nodeName": "data_dtype", "type": "Any"}, {"lineNumber": 335, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 337, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 337, "col_offset": 23, "nodeName": "indices_dtype", "type": "Any"}, {"lineNumber": 337, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 350, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 351, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "functools", "type": "module"}, {"lineNumber": 352, "col_offset": 38, "nodeName": "snt", "type": "Any"}, {"lineNumber": 369, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 370, "col_offset": 22, "nodeName": "edge_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 371, "col_offset": 23, "nodeName": "edge_block_opt", "type": "Dict[str, Any]"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "node_model_fn", "type": "Callable[[], Any]"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "node_block_opt", "type": "Dict[str, bool]"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "global_model_fn", "type": "Callable[[], Any]"}, {"lineNumber": 375, "col_offset": 25, "nodeName": "global_block_opt", "type": "Dict[str, bool]"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 378, "col_offset": 42, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 378, "col_offset": 56, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 380, "col_offset": 17, "nodeName": "blocks", "type": "module"}, {"lineNumber": 382, "col_offset": 18, "nodeName": "use_edges", "type": "Any"}, {"lineNumber": 383, "col_offset": 27, "nodeName": "use_receiver_nodes", "type": "Any"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "use_sender_nodes", "type": "Any"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "use_globals", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "edges", "type": "Any"}, {"lineNumber": 391, "col_offset": 21, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 392, "col_offset": 23, "nodeName": "globals", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 395, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 397, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 399, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 419, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 423, "col_offset": 10, "nodeName": "received_edges_reducer", "type": "Any"}, {"lineNumber": 423, "col_offset": 36, "nodeName": "unsorted_segment_sum", "type": "Any"}, {"lineNumber": 426, "col_offset": 10, "nodeName": "sent_edges_reducer", "type": "Any"}, {"lineNumber": 426, "col_offset": 32, "nodeName": "unsorted_segment_sum", "type": "Any"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "functools", "type": "module"}, {"lineNumber": 434, "col_offset": 38, "nodeName": "snt", "type": "Any"}, {"lineNumber": 447, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 448, "col_offset": 22, "nodeName": "edge_model_fn", "type": "Callable[[], Any]"}, {"lineNumber": 449, "col_offset": 23, "nodeName": "edge_block_opt", "type": "Dict[str, bool]"}, {"lineNumber": 450, "col_offset": 22, "nodeName": "node_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 451, "col_offset": 23, "nodeName": "node_block_opt", "type": "Dict[str, Any]"}, {"lineNumber": 452, "col_offset": 24, "nodeName": "global_model_fn", "type": "Callable[[], Any]"}, {"lineNumber": 453, "col_offset": 25, "nodeName": "global_block_opt", "type": "Dict[str, bool]"}, {"lineNumber": 455, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 455, "col_offset": 42, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 455, "col_offset": 56, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 457, "col_offset": 17, "nodeName": "blocks", "type": "module"}, {"lineNumber": 459, "col_offset": 18, "nodeName": "use_nodes", "type": "Any"}, {"lineNumber": 460, "col_offset": 23, "nodeName": "use_sent_edges", "type": "Any"}, {"lineNumber": 461, "col_offset": 27, "nodeName": "use_received_edges", "type": "Any"}, {"lineNumber": 462, "col_offset": 20, "nodeName": "use_globals", "type": "Any"}, {"lineNumber": 463, "col_offset": 31, "nodeName": "received_edges_reducer", "type": "Any"}, {"lineNumber": 464, "col_offset": 27, "nodeName": "sent_edges_reducer", "type": "Any"}, {"lineNumber": 469, "col_offset": 21, "nodeName": "edges", "type": "Any"}, {"lineNumber": 470, "col_offset": 21, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 471, "col_offset": 23, "nodeName": "globals", "type": "Any"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 474, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 476, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 478, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 496, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 499, "col_offset": 22, "nodeName": "edges_reducer", "type": "Any"}, {"lineNumber": 499, "col_offset": 39, "nodeName": "unsorted_segment_sum", "type": "Any"}, {"lineNumber": 501, "col_offset": 22, "nodeName": "nodes_reducer", "type": "Any"}, {"lineNumber": 501, "col_offset": 39, "nodeName": "unsorted_segment_sum", "type": "Any"}, {"lineNumber": 515, "col_offset": 22, "nodeName": "functools", "type": "module"}, {"lineNumber": 515, "col_offset": 40, "nodeName": "snt", "type": "Any"}, {"lineNumber": 522, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 523, "col_offset": 22, "nodeName": "edge_model_fn", "type": "Callable[[], Any]"}, {"lineNumber": 524, "col_offset": 23, "nodeName": "edge_block_opt", "type": "Dict[str, bool]"}, {"lineNumber": 525, "col_offset": 22, "nodeName": "node_model_fn", "type": "Callable[[], Any]"}, {"lineNumber": 526, "col_offset": 23, "nodeName": "node_block_opt", "type": "Dict[str, bool]"}, {"lineNumber": 527, "col_offset": 24, "nodeName": "global_model_fn", "type": "functools.partial[nothing]"}, {"lineNumber": 528, "col_offset": 25, "nodeName": "global_block_opt", "type": "Dict[str, Any]"}, {"lineNumber": 530, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 530, "col_offset": 42, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 530, "col_offset": 56, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 532, "col_offset": 19, "nodeName": "blocks", "type": "module"}, {"lineNumber": 534, "col_offset": 18, "nodeName": "use_edges", "type": "Any"}, {"lineNumber": 535, "col_offset": 18, "nodeName": "use_nodes", "type": "Any"}, {"lineNumber": 536, "col_offset": 20, "nodeName": "use_globals", "type": "Any"}, {"lineNumber": 537, "col_offset": 22, "nodeName": "edges_reducer", "type": "Any"}, {"lineNumber": 538, "col_offset": 22, "nodeName": "nodes_reducer", "type": "Any"}, {"lineNumber": 543, "col_offset": 21, "nodeName": "edges", "type": "Any"}, {"lineNumber": 544, "col_offset": 21, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 545, "col_offset": 23, "nodeName": "globals", "type": "Any"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 548, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 550, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 552, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 556, "col_offset": 18, "nodeName": "self", "type": "GraphNetworkTest"}, {"lineNumber": 557, "col_offset": 14, "nodeName": "modules", "type": "module"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "self", "type": "GraphNetworkTest"}, {"lineNumber": 566, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 567, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 568, "col_offset": 18, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 569, "col_offset": 50, "nodeName": "field_to_reshape", "type": "Any"}, {"lineNumber": 570, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 572, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 575, "col_offset": 6, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 575, "col_offset": 20, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 579, "col_offset": 18, "nodeName": "self", "type": "GraphNetworkTest"}, {"lineNumber": 580, "col_offset": 52, "nodeName": "self", "type": "GraphNetworkTest"}, {"lineNumber": 581, "col_offset": 22, "nodeName": "functools", "type": "module"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "snt", "type": "Any"}, {"lineNumber": 583, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 585, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 587, "col_offset": 6, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 587, "col_offset": 20, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 588, "col_offset": 22, "nodeName": "functools", "type": "module"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "snt", "type": "Any"}, {"lineNumber": 590, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 592, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 594, "col_offset": 6, "nodeName": "graph_network", "type": "graph_nets.modules.GraphNetwork"}, {"lineNumber": 594, "col_offset": 20, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 601, "col_offset": 25, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 601, "col_offset": 43, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 602, "col_offset": 25, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 602, "col_offset": 43, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 605, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 607, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 608, "col_offset": 11, "nodeName": "modules", "type": "module"}, {"lineNumber": 608, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 614, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 621, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 621, "col_offset": 55, "nodeName": "SMALL_GRAPH_1", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 622, "col_offset": 33, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 626, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 626, "col_offset": 33, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 626, "col_offset": 63, "nodeName": "var", "type": "Any"}, {"lineNumber": 626, "col_offset": 70, "nodeName": "variables", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 642, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 644, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "edges", "type": "Any"}, {"lineNumber": 647, "col_offset": 16, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 648, "col_offset": 24, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 648, "col_offset": 45, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 650, "col_offset": 17, "nodeName": "blocks", "type": "module"}, {"lineNumber": 656, "col_offset": 17, "nodeName": "blocks", "type": "module"}, {"lineNumber": 662, "col_offset": 31, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 666, "col_offset": 21, "nodeName": "edges", "type": "Any"}, {"lineNumber": 667, "col_offset": 21, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 679, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 679, "col_offset": 55, "nodeName": "SMALL_GRAPH_1", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 680, "col_offset": 18, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 681, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 682, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 682, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 683, "col_offset": 6, "nodeName": "interaction_network", "type": "Any"}, {"lineNumber": 683, "col_offset": 26, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 687, "col_offset": 18, "nodeName": "self", "type": "InteractionNetworkTest"}, {"lineNumber": 688, "col_offset": 38, "nodeName": "self", "type": "InteractionNetworkTest"}, {"lineNumber": 689, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "self", "type": "InteractionNetworkTest"}, {"lineNumber": 697, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 698, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 699, "col_offset": 18, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 700, "col_offset": 50, "nodeName": "field_to_reshape", "type": "Any"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 702, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 704, "col_offset": 6, "nodeName": "graph_network", "type": "graph_nets.modules.InteractionNetwork"}, {"lineNumber": 704, "col_offset": 20, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 708, "col_offset": 18, "nodeName": "self", "type": "InteractionNetworkTest"}, {"lineNumber": 709, "col_offset": 38, "nodeName": "self", "type": "InteractionNetworkTest"}, {"lineNumber": 710, "col_offset": 18, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 712, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "self", "type": "InteractionNetworkTest"}, {"lineNumber": 718, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 720, "col_offset": 25, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 720, "col_offset": 43, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 721, "col_offset": 27, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 721, "col_offset": 45, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 724, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 726, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 727, "col_offset": 11, "nodeName": "modules", "type": "module"}, {"lineNumber": 727, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 733, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 735, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 737, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 740, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 740, "col_offset": 55, "nodeName": "SMALL_GRAPH_1", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 741, "col_offset": 33, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 745, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 745, "col_offset": 33, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 745, "col_offset": 63, "nodeName": "var", "type": "Any"}, {"lineNumber": 745, "col_offset": 70, "nodeName": "variables", "type": "Any"}, {"lineNumber": 746, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 762, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 763, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 766, "col_offset": 17, "nodeName": "blocks", "type": "module"}, {"lineNumber": 772, "col_offset": 19, "nodeName": "blocks", "type": "module"}, {"lineNumber": 777, "col_offset": 22, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 778, "col_offset": 22, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 783, "col_offset": 18, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 783, "col_offset": 37, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 784, "col_offset": 18, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 784, "col_offset": 37, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 786, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 787, "col_offset": 8, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 795, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 795, "col_offset": 55, "nodeName": "SMALL_GRAPH_1", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 796, "col_offset": 18, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 797, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 798, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 798, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 799, "col_offset": 6, "nodeName": "relation_network", "type": "Any"}, {"lineNumber": 799, "col_offset": 23, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 807, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 808, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 809, "col_offset": 18, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 810, "col_offset": 50, "nodeName": "field_to_reshape", "type": "Any"}, {"lineNumber": 811, "col_offset": 14, "nodeName": "modules", "type": "module"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 819, "col_offset": 25, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 819, "col_offset": 43, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 820, "col_offset": 27, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 820, "col_offset": 45, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 823, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 825, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 826, "col_offset": 11, "nodeName": "modules", "type": "module"}, {"lineNumber": 826, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 832, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 834, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 835, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 836, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 839, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 840, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 840, "col_offset": 33, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 844, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 844, "col_offset": 33, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 844, "col_offset": 63, "nodeName": "var", "type": "Any"}, {"lineNumber": 844, "col_offset": 70, "nodeName": "variables", "type": "Any"}, {"lineNumber": 845, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 862, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 863, "col_offset": 18, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 865, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 868, "col_offset": 19, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 869, "col_offset": 21, "nodeName": "globals", "type": "Any"}, {"lineNumber": 871, "col_offset": 17, "nodeName": "blocks", "type": "module"}, {"lineNumber": 877, "col_offset": 19, "nodeName": "blocks", "type": "module"}, {"lineNumber": 882, "col_offset": 22, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 885, "col_offset": 21, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 886, "col_offset": 23, "nodeName": "globals", "type": "Any"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 888, "col_offset": 24, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 888, "col_offset": 43, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 889, "col_offset": 24, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 889, "col_offset": 47, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 890, "col_offset": 24, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 890, "col_offset": 45, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 892, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 893, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 900, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 900, "col_offset": 55, "nodeName": "SMALL_GRAPH_1", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 901, "col_offset": 18, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 902, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 903, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 903, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 904, "col_offset": 6, "nodeName": "deep_sets", "type": "Any"}, {"lineNumber": 904, "col_offset": 16, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 908, "col_offset": 18, "nodeName": "self", "type": "DeepSetsTest"}, {"lineNumber": 909, "col_offset": 40, "nodeName": "self", "type": "DeepSetsTest"}, {"lineNumber": 910, "col_offset": 18, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 912, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 913, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 916, "col_offset": 6, "nodeName": "graph_network", "type": "graph_nets.modules.DeepSets"}, {"lineNumber": 916, "col_offset": 20, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 920, "col_offset": 18, "nodeName": "self", "type": "DeepSetsTest"}, {"lineNumber": 921, "col_offset": 20, "nodeName": "functools", "type": "module"}, {"lineNumber": 922, "col_offset": 8, "nodeName": "snt", "type": "Any"}, {"lineNumber": 923, "col_offset": 22, "nodeName": "functools", "type": "module"}, {"lineNumber": 924, "col_offset": 8, "nodeName": "snt", "type": "Any"}, {"lineNumber": 925, "col_offset": 14, "nodeName": "modules", "type": "module"}, {"lineNumber": 926, "col_offset": 4, "nodeName": "self", "type": "DeepSetsTest"}, {"lineNumber": 930, "col_offset": 18, "nodeName": "self", "type": "DeepSetsTest"}, {"lineNumber": 931, "col_offset": 40, "nodeName": "self", "type": "DeepSetsTest"}, {"lineNumber": 932, "col_offset": 18, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 934, "col_offset": 14, "nodeName": "modules", "type": "module"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "self", "type": "DeepSetsTest"}, {"lineNumber": 942, "col_offset": 25, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 942, "col_offset": 43, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 943, "col_offset": 33, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 943, "col_offset": 51, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 944, "col_offset": 25, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 944, "col_offset": 43, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 947, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 949, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 950, "col_offset": 11, "nodeName": "modules", "type": "module"}, {"lineNumber": 950, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 956, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 958, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 959, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 960, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 962, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 963, "col_offset": 8, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 965, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 966, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 966, "col_offset": 33, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 970, "col_offset": 23, "nodeName": "var", "type": "Any"}, {"lineNumber": 970, "col_offset": 33, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 970, "col_offset": 63, "nodeName": "var", "type": "Any"}, {"lineNumber": 970, "col_offset": 70, "nodeName": "variables", "type": "Any"}, {"lineNumber": 971, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 987, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 989, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 993, "col_offset": 20, "nodeName": "blocks", "type": "module"}, {"lineNumber": 999, "col_offset": 28, "nodeName": "blocks", "type": "module"}, {"lineNumber": 1005, "col_offset": 31, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 1006, "col_offset": 20, "nodeName": "blocks", "type": "module"}, {"lineNumber": 1012, "col_offset": 31, "nodeName": "reducer", "type": "Any"}, {"lineNumber": 1015, "col_offset": 20, "nodeName": "node_encoder_subblock", "type": "graph_nets.blocks.NodeBlock"}, {"lineNumber": 1015, "col_offset": 42, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 1016, "col_offset": 23, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 1017, "col_offset": 14, "nodeName": "edges", "type": "Any"}, {"lineNumber": 1017, "col_offset": 42, "nodeName": "encoded_nodes", "type": "Any"}, {"lineNumber": 1021, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1021, "col_offset": 24, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 1021, "col_offset": 45, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 1022, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1022, "col_offset": 24, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 1022, "col_offset": 43, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 1023, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1023, "col_offset": 24, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 1023, "col_offset": 47, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 1024, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1024, "col_offset": 24, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 1024, "col_offset": 45, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 1026, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1027, "col_offset": 8, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 1027, "col_offset": 32, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 1034, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 1034, "col_offset": 55, "nodeName": "SMALL_GRAPH_1", "type": "Dict[str, Union[List[int], List[List[float]], List[float]]]"}, {"lineNumber": 1035, "col_offset": 18, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 1036, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1037, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1037, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1038, "col_offset": 6, "nodeName": "comm_net", "type": "Any"}, {"lineNumber": 1038, "col_offset": 15, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 1042, "col_offset": 18, "nodeName": "self", "type": "CommNetTest"}, {"lineNumber": 1043, "col_offset": 20, "nodeName": "modules", "type": "module"}, {"lineNumber": 1044, "col_offset": 4, "nodeName": "self", "type": "CommNetTest"}, {"lineNumber": 1051, "col_offset": 25, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 1051, "col_offset": 43, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 1052, "col_offset": 33, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 1052, "col_offset": 51, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 1053, "col_offset": 25, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 1053, "col_offset": 43, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 1056, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 1058, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 1059, "col_offset": 11, "nodeName": "modules", "type": "module"}, {"lineNumber": 1059, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Union[functools.partial[nothing], Any]]"}, {"lineNumber": 1061, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1061, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1061, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 1063, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 1063, "col_offset": 33, "nodeName": "log", "type": "Any"}, {"lineNumber": 1063, "col_offset": 50, "nodeName": "log", "type": "Any"}, {"lineNumber": 1078, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1078, "col_offset": 35, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1079, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1079, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 1079, "col_offset": 52, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1080, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1080, "col_offset": 31, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 1080, "col_offset": 35, "nodeName": "N_NODE", "type": "Any"}, {"lineNumber": 1080, "col_offset": 55, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1082, "col_offset": 21, "nodeName": "modules", "type": "module"}, {"lineNumber": 1085, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1085, "col_offset": 42, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 1094, "col_offset": 12, "nodeName": "graphs", "type": "module"}, {"lineNumber": 1096, "col_offset": 14, "nodeName": "logits", "type": "Any"}, {"lineNumber": 1103, "col_offset": 30, "nodeName": "modules", "type": "module"}, {"lineNumber": 1106, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1106, "col_offset": 45, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 1110, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 1112, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1112, "col_offset": 26, "nodeName": "values_np", "type": "Any"}, {"lineNumber": 1114, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1114, "col_offset": 26, "nodeName": "values_np", "type": "Any"}, {"lineNumber": 1115, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1115, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1125, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1125, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1135, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1135, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1137, "col_offset": 22, "nodeName": "graphs", "type": "module"}, {"lineNumber": 1146, "col_offset": 21, "nodeName": "modules", "type": "module"}, {"lineNumber": 1161, "col_offset": 4, "nodeName": "self", "type": "SelfAttentionTest"}, {"lineNumber": 1161, "col_offset": 46, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 1164, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 74, "col_offset": 10, "nodeName": "GraphModuleTest", "type": "Type[GraphModuleTest]"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "self", "type": "GraphModuleTest"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "self", "type": "GraphIndependentTest"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "functools", "type": "module"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "nets", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "functools", "type": "module"}, {"lineNumber": 119, "col_offset": 43, "nodeName": "nets", "type": "Any"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "functools", "type": "module"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "nets", "type": "Any"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "_edge_model", "type": "Union[Callable[[Any], Any], graph_nets._base.WrappedModelFnModule]"}, {"lineNumber": 132, "col_offset": 46, "nodeName": "edges", "type": "Any"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "_node_model", "type": "Union[Callable[[Any], Any], graph_nets._base.WrappedModelFnModule]"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "_global_model", "type": "Union[Callable[[Any], Any], graph_nets._base.WrappedModelFnModule]"}, {"lineNumber": 134, "col_offset": 50, "nodeName": "globals", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "_get_model", "type": "Any"}, {"lineNumber": 176, "col_offset": 10, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "tape", "type": "Any"}, {"lineNumber": 179, "col_offset": 10, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 180, "col_offset": 46, "nodeName": "output_field", "type": "str"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "output_tensor", "type": "Any"}, {"lineNumber": 181, "col_offset": 48, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "input_field", "type": "str"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "output_field", "type": "str"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 234, "col_offset": 40, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 236, "col_offset": 42, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "specs_from_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 270, "col_offset": 58, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "expected_output_node_block", "type": "Any"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "expected_output_global_block", "type": "Any"}, {"lineNumber": 306, "col_offset": 39, "nodeName": "edges", "type": "Any"}, {"lineNumber": 308, "col_offset": 39, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 310, "col_offset": 39, "nodeName": "globals", "type": "Any"}, {"lineNumber": 316, "col_offset": 54, "nodeName": "graphs", "type": "module"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "_asdict", "type": "Any"}, {"lineNumber": 320, "col_offset": 6, "nodeName": "self", "type": "GraphNetworkTest"}, {"lineNumber": 320, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 320, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 335, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 391, "col_offset": 21, "nodeName": "expected_output_node_block", "type": "Any"}, {"lineNumber": 392, "col_offset": 23, "nodeName": "expected_output_global_block", "type": "Any"}, {"lineNumber": 423, "col_offset": 36, "nodeName": "math", "type": "Any"}, {"lineNumber": 426, "col_offset": 32, "nodeName": "math", "type": "Any"}, {"lineNumber": 469, "col_offset": 21, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 470, "col_offset": 21, "nodeName": "expected_output_node_block", "type": "Any"}, {"lineNumber": 471, "col_offset": 23, "nodeName": "expected_output_global_block", "type": "Any"}, {"lineNumber": 499, "col_offset": 39, "nodeName": "math", "type": "Any"}, {"lineNumber": 501, "col_offset": 39, "nodeName": "math", "type": "Any"}, {"lineNumber": 543, "col_offset": 21, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 544, "col_offset": 21, "nodeName": "expected_output_node_block", "type": "Any"}, {"lineNumber": 545, "col_offset": 23, "nodeName": "expected_output_global_block", "type": "Any"}, {"lineNumber": 557, "col_offset": 36, "nodeName": "_get_shaped_model_fns", "type": "Callable[[], Any]"}, {"lineNumber": 572, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "errors", "type": "Any"}, {"lineNumber": 585, "col_offset": 9, "nodeName": "self", "type": "GraphNetworkTest"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "errors", "type": "Any"}, {"lineNumber": 592, "col_offset": 9, "nodeName": "self", "type": "GraphNetworkTest"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "errors", "type": "Any"}, {"lineNumber": 601, "col_offset": 25, "nodeName": "functools", "type": "module"}, {"lineNumber": 601, "col_offset": 43, "nodeName": "snt", "type": "Any"}, {"lineNumber": 602, "col_offset": 25, "nodeName": "functools", "type": "module"}, {"lineNumber": 602, "col_offset": 43, "nodeName": "snt", "type": "Any"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 647, "col_offset": 16, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 666, "col_offset": 21, "nodeName": "expected_output_edge_block", "type": "Any"}, {"lineNumber": 667, "col_offset": 21, "nodeName": "expected_output_node_block", "type": "Any"}, {"lineNumber": 682, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 702, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "errors", "type": "Any"}, {"lineNumber": 711, "col_offset": 16, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 711, "col_offset": 29, "nodeName": "globals", "type": "Any"}, {"lineNumber": 720, "col_offset": 25, "nodeName": "functools", "type": "module"}, {"lineNumber": 720, "col_offset": 43, "nodeName": "snt", "type": "Any"}, {"lineNumber": 721, "col_offset": 27, "nodeName": "functools", "type": "module"}, {"lineNumber": 721, "col_offset": 45, "nodeName": "snt", "type": "Any"}, {"lineNumber": 787, "col_offset": 8, "nodeName": "globals", "type": "Any"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "globals", "type": "Any"}, {"lineNumber": 798, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 819, "col_offset": 25, "nodeName": "functools", "type": "module"}, {"lineNumber": 819, "col_offset": 43, "nodeName": "snt", "type": "Any"}, {"lineNumber": 820, "col_offset": 27, "nodeName": "functools", "type": "module"}, {"lineNumber": 820, "col_offset": 45, "nodeName": "snt", "type": "Any"}, {"lineNumber": 868, "col_offset": 19, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 869, "col_offset": 21, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 885, "col_offset": 21, "nodeName": "node_block_out", "type": "Any"}, {"lineNumber": 901, "col_offset": 41, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 903, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 911, "col_offset": 14, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 911, "col_offset": 27, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 913, "col_offset": 9, "nodeName": "self", "type": "DeepSetsTest"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "errors", "type": "Any"}, {"lineNumber": 933, "col_offset": 14, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 933, "col_offset": 27, "nodeName": "edges", "type": "Any"}, {"lineNumber": 942, "col_offset": 25, "nodeName": "functools", "type": "module"}, {"lineNumber": 942, "col_offset": 43, "nodeName": "snt", "type": "Any"}, {"lineNumber": 943, "col_offset": 33, "nodeName": "functools", "type": "module"}, {"lineNumber": 943, "col_offset": 51, "nodeName": "snt", "type": "Any"}, {"lineNumber": 944, "col_offset": 25, "nodeName": "functools", "type": "module"}, {"lineNumber": 944, "col_offset": 43, "nodeName": "snt", "type": "Any"}, {"lineNumber": 1017, "col_offset": 14, "nodeName": "edge_block_out", "type": "Any"}, {"lineNumber": 1027, "col_offset": 8, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 1027, "col_offset": 32, "nodeName": "output_nodes", "type": "Any"}, {"lineNumber": 1037, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1043, "col_offset": 37, "nodeName": "_get_shaped_model_fns", "type": "Callable[[], Any]"}, {"lineNumber": 1051, "col_offset": 25, "nodeName": "functools", "type": "module"}, {"lineNumber": 1051, "col_offset": 43, "nodeName": "snt", "type": "Any"}, {"lineNumber": 1052, "col_offset": 33, "nodeName": "functools", "type": "module"}, {"lineNumber": 1052, "col_offset": 51, "nodeName": "snt", "type": "Any"}, {"lineNumber": 1053, "col_offset": 25, "nodeName": "functools", "type": "module"}, {"lineNumber": 1053, "col_offset": 43, "nodeName": "snt", "type": "Any"}, {"lineNumber": 1063, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1063, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 1063, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 1078, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1079, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1080, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 1080, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1085, "col_offset": 42, "nodeName": "actual_softmax", "type": "Any"}, {"lineNumber": 1098, "col_offset": 18, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1098, "col_offset": 30, "nodeName": "RECEIVERS", "type": "Any"}, {"lineNumber": 1099, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1099, "col_offset": 28, "nodeName": "SENDERS", "type": "Any"}, {"lineNumber": 1100, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1100, "col_offset": 27, "nodeName": "N_NODE", "type": "Any"}, {"lineNumber": 1101, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1101, "col_offset": 27, "nodeName": "N_EDGE", "type": "Any"}, {"lineNumber": 1106, "col_offset": 45, "nodeName": "actual_normalized_edges", "type": "Any"}, {"lineNumber": 1110, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1110, "col_offset": 26, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 1110, "col_offset": 30, "nodeName": "N_NODE", "type": "List[int]"}, {"lineNumber": 1112, "col_offset": 37, "nodeName": "values_np", "type": "Any"}, {"lineNumber": 1114, "col_offset": 37, "nodeName": "values_np", "type": "Any"}, {"lineNumber": 1115, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1125, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1135, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1141, "col_offset": 18, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1141, "col_offset": 30, "nodeName": "RECEIVERS", "type": "List[int]"}, {"lineNumber": 1142, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1142, "col_offset": 28, "nodeName": "SENDERS", "type": "List[int]"}, {"lineNumber": 1143, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1143, "col_offset": 27, "nodeName": "N_NODE", "type": "List[int]"}, {"lineNumber": 1144, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1144, "col_offset": 27, "nodeName": "N_EDGE", "type": "List[int]"}, {"lineNumber": 1161, "col_offset": 46, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 93, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "range", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "range", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "int32", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "int32", "type": "Any"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "snt", "type": "Any"}, {"lineNumber": 119, "col_offset": 43, "nodeName": "snt", "type": "Any"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "snt", "type": "Any"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "model", "type": "graph_nets.modules.GraphIndependent"}, {"lineNumber": 132, "col_offset": 46, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "model", "type": "graph_nets.modules.GraphIndependent"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "model", "type": "graph_nets.modules.GraphIndependent"}, {"lineNumber": 134, "col_offset": 50, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 10, "nodeName": "model", "type": "Any"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "function", "type": "Any"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "GradientTape", "type": "Any"}, {"lineNumber": 178, "col_offset": 10, "nodeName": "watch", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "tape", "type": "Any"}, {"lineNumber": 183, "col_offset": 10, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 188, "col_offset": 10, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "functools", "type": "module"}, {"lineNumber": 234, "col_offset": 40, "nodeName": "nets", "type": "Any"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "functools", "type": "module"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "nets", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "functools", "type": "module"}, {"lineNumber": 236, "col_offset": 42, "nodeName": "nets", "type": "Any"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 306, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 308, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 310, "col_offset": 39, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "input_graph", "type": "Any"}, {"lineNumber": 320, "col_offset": 23, "nodeName": "v", "type": "Any"}, {"lineNumber": 335, "col_offset": 35, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 335, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 335, "col_offset": 51, "nodeName": "field", "type": "str"}, {"lineNumber": 337, "col_offset": 38, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 337, "col_offset": 46, "nodeName": "output", "type": "Any"}, {"lineNumber": 337, "col_offset": 54, "nodeName": "field", "type": "str"}, {"lineNumber": 423, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 426, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 499, "col_offset": 39, "nodeName": "tf", "type": "Any"}, {"lineNumber": 501, "col_offset": 39, "nodeName": "tf", "type": "Any"}, {"lineNumber": 557, "col_offset": 36, "nodeName": "self", "type": "GraphNetworkTest"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 626, "col_offset": 33, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 711, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 711, "col_offset": 29, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 745, "col_offset": 33, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 787, "col_offset": 8, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "expected_output_global_block", "type": "Any"}, {"lineNumber": 844, "col_offset": 33, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 886, "col_offset": 23, "nodeName": "global_block", "type": "graph_nets.blocks.GlobalBlock"}, {"lineNumber": 886, "col_offset": 36, "nodeName": "node_block_out", "type": "Any"}, {"lineNumber": 911, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 911, "col_offset": 27, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 933, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 933, "col_offset": 27, "nodeName": "input_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 970, "col_offset": 33, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1043, "col_offset": 37, "nodeName": "self", "type": "CommNetTest"}, {"lineNumber": 1098, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1098, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 1098, "col_offset": 52, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1099, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1099, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 1099, "col_offset": 48, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1100, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1100, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 1100, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1101, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1101, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 1101, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1110, "col_offset": 30, "nodeName": "self", "type": "SelfAttentionTest"}, {"lineNumber": 1133, "col_offset": 13, "nodeName": "log", "type": "Any"}, {"lineNumber": 1133, "col_offset": 26, "nodeName": "log", "type": "Any"}, {"lineNumber": 1134, "col_offset": 10, "nodeName": "log", "type": "Any"}, {"lineNumber": 1134, "col_offset": 29, "nodeName": "log", "type": "Any"}, {"lineNumber": 1141, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1141, "col_offset": 30, "nodeName": "self", "type": "SelfAttentionTest"}, {"lineNumber": 1141, "col_offset": 52, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1142, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1142, "col_offset": 28, "nodeName": "self", "type": "SelfAttentionTest"}, {"lineNumber": 1142, "col_offset": 48, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1143, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1143, "col_offset": 27, "nodeName": "self", "type": "SelfAttentionTest"}, {"lineNumber": 1143, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1144, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1144, "col_offset": 27, "nodeName": "self", "type": "SelfAttentionTest"}, {"lineNumber": 1144, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1161, "col_offset": 46, "nodeName": "output_graph", "type": "Any"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 93, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "int32", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "int32", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 10, "nodeName": "tape", "type": "Any"}, {"lineNumber": 183, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 234, "col_offset": 40, "nodeName": "snt", "type": "Any"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "snt", "type": "Any"}, {"lineNumber": 236, "col_offset": 42, "nodeName": "snt", "type": "Any"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 320, "col_offset": 35, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 320, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 320, "col_offset": 51, "nodeName": "k", "type": "Any"}, {"lineNumber": 626, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 745, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 844, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 970, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 1098, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1099, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1100, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1101, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1133, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 1133, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1134, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1134, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 1141, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1142, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1143, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1144, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "output_field", "type": "str"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "input_field", "type": "str"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "output_field", "type": "str"}, {"lineNumber": 190, "col_offset": 45, "nodeName": "input_field", "type": "str"}]