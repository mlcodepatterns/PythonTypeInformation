[{"lineNumber": 76, "col_offset": 0, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 832, "col_offset": 0, "nodeName": "_leading_static_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 836, "col_offset": 0, "nodeName": "_compile_with_tf_function", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 135, "col_offset": 2, "nodeName": "test_nested_features", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 2, "nodeName": "test_concat_last_axis", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 230, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 232, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 2, "nodeName": "_check_if_gradients_exist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 276, "col_offset": 2, "nodeName": "test_stop_gradients_default_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 287, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 2, "nodeName": "test_name_scope", "type": "Callable[[Any], Any]"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 322, "col_offset": 45, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 324, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 354, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 357, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 365, "col_offset": 2, "nodeName": "test_compute_stacked_offsets", "type": "Callable[[Any], Any]"}, {"lineNumber": 379, "col_offset": 31, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests_tf2.test_utils.GraphsTest]"}, {"lineNumber": 379, "col_offset": 54, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 382, "col_offset": 2, "nodeName": "_assert_indices_sizes", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 406, "col_offset": 2, "nodeName": "test_create_complete_edges_from_nodes_dynamic_number_of_nodes", "type": "Callable[[Any], Any]"}, {"lineNumber": 420, "col_offset": 28, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests_tf2.test_utils.GraphsTest]"}, {"lineNumber": 420, "col_offset": 51, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 423, "col_offset": 2, "nodeName": "_assert_indices_sizes", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 428, "col_offset": 2, "nodeName": "test_fill_edge_state", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 439, "col_offset": 2, "nodeName": "test_fill_edge_state_dynamic", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 454, "col_offset": 2, "nodeName": "test_fill_global_state", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 465, "col_offset": 2, "nodeName": "test_fill_global_state_dynamic", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 481, "col_offset": 2, "nodeName": "test_fill_node_state", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 493, "col_offset": 2, "nodeName": "test_fill_node_state_dynamic", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 509, "col_offset": 2, "nodeName": "test_fill_edge_state_with_missing_fields_raises", "type": "Callable[[Any], Any]"}, {"lineNumber": 519, "col_offset": 2, "nodeName": "test_fill_state_default_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 623, "col_offset": 33, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests_tf2.test_utils.GraphsTest]"}, {"lineNumber": 623, "col_offset": 56, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 657, "col_offset": 2, "nodeName": "test_data_dicts_to_graphs_tuple_raises", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 665, "col_offset": 2, "nodeName": "test_data_dicts_to_graphs_tuple_no_raise", "type": "Callable[[Any], Any]"}, {"lineNumber": 672, "col_offset": 2, "nodeName": "test_data_dicts_to_graphs_tuple_cast_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 690, "col_offset": 26, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests_tf2.test_utils.GraphsTest]"}, {"lineNumber": 690, "col_offset": 49, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 762, "col_offset": 20, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests_tf2.test_utils.GraphsTest]"}, {"lineNumber": 765, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 771, "col_offset": 2, "nodeName": "test_num_graphs", "type": "Callable[[Any], Any]"}, {"lineNumber": 776, "col_offset": 22, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests_tf2.test_utils.GraphsTest]"}, {"lineNumber": 779, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 789, "col_offset": 2, "nodeName": "test_single_graph", "type": "Callable[[Any], Any]"}, {"lineNumber": 797, "col_offset": 2, "nodeName": "test_mixed_graph_conversion", "type": "Callable[[Any], Any]"}, {"lineNumber": 805, "col_offset": 2, "nodeName": "test_nested_structure", "type": "Callable[[Any], Any]"}, {"lineNumber": 854, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 854, "col_offset": 44, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 856, "col_offset": 2, "nodeName": "test_get_graphs_tuple_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 876, "col_offset": 15, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 876, "col_offset": 33, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 878, "col_offset": 2, "nodeName": "test_get_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 892, "col_offset": 18, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 892, "col_offset": 36, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "test", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 77, "col_offset": 2, "nodeName": "graph", "type": "Any"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "node", "type": "int"}, {"lineNumber": 81, "col_offset": 5, "nodeName": "add_edges", "type": "bool"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "graph", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "test", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "_create_nested_fields", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 230, "col_offset": 47, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 322, "col_offset": 45, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 354, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 379, "col_offset": 31, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 379, "col_offset": 54, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 420, "col_offset": 28, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 420, "col_offset": 51, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 623, "col_offset": 33, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 623, "col_offset": 56, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 690, "col_offset": 26, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 690, "col_offset": 49, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 762, "col_offset": 20, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 776, "col_offset": 22, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 851, "col_offset": 9, "nodeName": "compiled_fn", "type": "nothing"}, {"lineNumber": 854, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 854, "col_offset": 44, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 876, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 876, "col_offset": 33, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 892, "col_offset": 18, "nodeName": "test", "type": "Any"}, {"lineNumber": 892, "col_offset": 36, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1083, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "num_elements", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "repeats", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "actual", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "kwargs", "type": "Union[Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "expected_name", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "indices", "type": "Any"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "DiGraph", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "n_nodes", "type": "int"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "node_data", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 2, "nodeName": "graph", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "graph_1", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "graph_2", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "graph_1", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "graph_2", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "actual_nodes", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "actual_edges", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "edges", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "actual_globals", "type": "Any"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "globals", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "graph0", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "graph1", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "graph_1", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "graph_2", "type": "Any"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "gradients", "type": "List[Any]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "field", "type": "str"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "gradients_exist", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "stopped_gradients_graph", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "gradients_exist", "type": "List[bool]"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "expected_gradients_exist", "type": "List[bool]"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "graph_id", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 342, "col_offset": 19, "nodeName": "graph", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "graph_id", "type": "Any"}, {"lineNumber": 354, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "sizes", "type": "List[int]"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 401, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 407, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 431, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "n_edges", "type": "Any"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 442, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "n_edges", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "actual_edges", "type": "Any"}, {"lineNumber": 450, "col_offset": 19, "nodeName": "edges", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 457, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "n_graphs", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 468, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "n_graphs", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "actual_globals", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "n_nodes", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 496, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "n_nodes", "type": "Any"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "actual_nodes", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 511, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 525, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 540, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 557, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "n_relation", "type": "int"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 562, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "actual_receivers", "type": "Any"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "actual_senders", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 586, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "n_relation", "type": "int"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 591, "col_offset": 13, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "actual_receivers", "type": "Any"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "actual_senders", "type": "Any"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "actual_n_edge", "type": "Any"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "expected_edges", "type": "List[Tuple[int, int]]"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "offset", "type": "int"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 612, "col_offset": 17, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "actual_edges", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "field", "type": "Any"}, {"lineNumber": 641, "col_offset": 17, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 651, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "field", "type": "Any"}, {"lineNumber": 652, "col_offset": 17, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 660, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 667, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 674, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 681, "col_offset": 4, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "index", "type": "int"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 699, "col_offset": 7, "nodeName": "use_tensor_index", "type": "Any"}, {"lineNumber": 702, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 716, "col_offset": 4, "nodeName": "index", "type": "slice"}, {"lineNumber": 717, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 719, "col_offset": 7, "nodeName": "use_tensor_slice", "type": "Any"}, {"lineNumber": 722, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 723, "col_offset": 4, "nodeName": "graphs2", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "graphs2", "type": "Any"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "actual", "type": "List[Any]"}, {"lineNumber": 753, "col_offset": 7, "nodeName": "use_constant", "type": "Any"}, {"lineNumber": 755, "col_offset": 7, "nodeName": "use_slice", "type": "Any"}, {"lineNumber": 757, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 767, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 772, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "numpy_graph", "type": "Any"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "field", "type": "str"}, {"lineNumber": 791, "col_offset": 17, "nodeName": "ALL_FIELDS", "type": "Tuple[str, str, str, str, str, str, str]"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 799, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 801, "col_offset": 4, "nodeName": "converted_graph", "type": "Any"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "regular_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 806, "col_offset": 20, "nodeName": "_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "nested_structure_numpy", "type": "Any"}, {"lineNumber": 838, "col_offset": 20, "nodeName": "specs_from_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 839, "col_offset": 6, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 854, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "node_size_np", "type": "Any"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "edge_size_np", "type": "Any"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 869, "col_offset": 4, "nodeName": "graphs_tuple_size", "type": "nothing"}, {"lineNumber": 870, "col_offset": 39, "nodeName": "graphs_tuple_size", "type": "nothing"}, {"lineNumber": 876, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 882, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 892, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 905, "col_offset": 4, "nodeName": "node_size_np", "type": "Any"}, {"lineNumber": 906, "col_offset": 4, "nodeName": "edge_size_np", "type": "Any"}, {"lineNumber": 907, "col_offset": 4, "nodeName": "unpadded_batch_size", "type": "int"}, {"lineNumber": 911, "col_offset": 7, "nodeName": "nested_features", "type": "Any"}, {"lineNumber": 917, "col_offset": 4, "nodeName": "num_padding_nodes", "type": "int"}, {"lineNumber": 918, "col_offset": 4, "nodeName": "num_padding_edges", "type": "int"}, {"lineNumber": 919, "col_offset": 4, "nodeName": "num_padding_graphs", "type": "int"}, {"lineNumber": 920, "col_offset": 4, "nodeName": "pad_nodes_to", "type": "Any"}, {"lineNumber": 921, "col_offset": 4, "nodeName": "pad_edges_to", "type": "Any"}, {"lineNumber": 922, "col_offset": 4, "nodeName": "pad_graphs_to", "type": "int"}, {"lineNumber": 960, "col_offset": 7, "nodeName": "nested_features", "type": "Any"}, {"lineNumber": 966, "col_offset": 6, "nodeName": "remove_nesting", "type": "Callable[[Any], Any]"}, {"lineNumber": 984, "col_offset": 8, "nodeName": "example_i", "type": "int"}, {"lineNumber": 990, "col_offset": 4, "nodeName": "padding_data_dicts", "type": "List[Any]"}, {"lineNumber": 1042, "col_offset": 4, "nodeName": "node_size_np", "type": "Any"}, {"lineNumber": 1043, "col_offset": 4, "nodeName": "edge_size_np", "type": "Any"}, {"lineNumber": 1044, "col_offset": 4, "nodeName": "unpadded_batch_size", "type": "int"}, {"lineNumber": 1050, "col_offset": 4, "nodeName": "pad_edges_to", "type": "Any"}, {"lineNumber": 1051, "col_offset": 4, "nodeName": "pad_nodes_to", "type": "Any"}, {"lineNumber": 1052, "col_offset": 4, "nodeName": "pad_graphs_to", "type": "int"}, {"lineNumber": 1084, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "prod", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "repeats", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "constant", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "repeats", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "repeat", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "repeats", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "actual", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "expected_name", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "expected_name", "type": "Any"}, {"lineNumber": 68, "col_offset": 56, "nodeName": "name", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "constant", "type": "Any"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "nx", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "node", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "edge", "type": "int"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 86, "col_offset": 2, "nodeName": "graph", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "concat", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "map", "type": "Any"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "no_op", "type": "Any"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 123, "col_offset": 48, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 6, "nodeName": "new_globals", "type": "List[nothing]"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "concat", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 175, "col_offset": 47, "nodeName": "actual_nodes", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "expected_edges", "type": "Any"}, {"lineNumber": 176, "col_offset": 47, "nodeName": "actual_edges", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "expected_globals", "type": "Any"}, {"lineNumber": 177, "col_offset": 49, "nodeName": "actual_globals", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 179, "col_offset": 44, "nodeName": "expected_nodes", "type": "Any"}, {"lineNumber": 179, "col_offset": 60, "nodeName": "actual_nodes", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 180, "col_offset": 44, "nodeName": "expected_edges", "type": "Any"}, {"lineNumber": 180, "col_offset": 60, "nodeName": "actual_edges", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 181, "col_offset": 44, "nodeName": "expected_globals", "type": "Any"}, {"lineNumber": 181, "col_offset": 62, "nodeName": "actual_globals", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 184, "col_offset": 48, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 185, "col_offset": 48, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 186, "col_offset": 54, "nodeName": "senders", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 187, "col_offset": 54, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "map", "type": "Any"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 194, "col_offset": 46, "nodeName": "ALL_FIELDS", "type": "Tuple[str, str, str, str, str, str, str]"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "map", "type": "Any"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 195, "col_offset": 46, "nodeName": "ALL_FIELDS", "type": "Tuple[str, str, str, str, str, str, str]"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "concat", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 199, "col_offset": 34, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "edges", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 203, "col_offset": 42, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 204, "col_offset": 42, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 205, "col_offset": 45, "nodeName": "senders", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 206, "col_offset": 45, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 207, "col_offset": 52, "nodeName": "globals", "type": "Any"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 14, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 218, "col_offset": 14, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "replace", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 257, "col_offset": 30, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "_check_if_gradients_exist", "type": "Any"}, {"lineNumber": 263, "col_offset": 53, "nodeName": "stopped_gradients_graph", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "expected_gradients_exist", "type": "List[bool]"}, {"lineNumber": 267, "col_offset": 50, "nodeName": "gradients_exist", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "map", "type": "Any"}, {"lineNumber": 278, "col_offset": 30, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 53, "nodeName": "_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "_check_if_gradients_exist", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 53, "nodeName": "stopped_gradients_graph", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "expected_gradients_exist", "type": "List[bool]"}, {"lineNumber": 281, "col_offset": 50, "nodeName": "gradients_exist", "type": "List[bool]"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "map", "type": "Any"}, {"lineNumber": 307, "col_offset": 44, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 309, "col_offset": 6, "nodeName": "graph_id", "type": "Any"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 42, "nodeName": "graph", "type": "Any"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 311, "col_offset": 40, "nodeName": "graph_id", "type": "Any"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 326, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "map", "type": "Any"}, {"lineNumber": 340, "col_offset": 47, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "map", "type": "Any"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "no_op", "type": "Any"}, {"lineNumber": 341, "col_offset": 35, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 366, "col_offset": 14, "nodeName": "_compute_stacked_offsets", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "sizes", "type": "List[int]"}, {"lineNumber": 367, "col_offset": 20, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 368, "col_offset": 14, "nodeName": "_compute_stacked_offsets", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 370, "col_offset": 14, "nodeName": "_compute_stacked_offsets", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "offset", "type": "List[int]"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 375, "col_offset": 24, "nodeName": "offset", "type": "List[int]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 376, "col_offset": 24, "nodeName": "offset", "type": "List[int]"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 392, "col_offset": 6, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 393, "col_offset": 6, "nodeName": "edges_dict", "type": "Any"}, {"lineNumber": 401, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 402, "col_offset": 6, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 403, "col_offset": 6, "nodeName": "edges_dict", "type": "Any"}, {"lineNumber": 407, "col_offset": 22, "nodeName": "self", "type": "DataDictsCompletionTests"}, {"lineNumber": 408, "col_offset": 6, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 411, "col_offset": 6, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 412, "col_offset": 6, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 413, "col_offset": 6, "nodeName": "senders", "type": "Any"}, {"lineNumber": 414, "col_offset": 6, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 431, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 433, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 433, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 434, "col_offset": 14, "nodeName": "sum", "type": "Any"}, {"lineNumber": 434, "col_offset": 21, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "set_zero_edge_features", "type": "Callable[..., Any]"}, {"lineNumber": 435, "col_offset": 51, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 435, "col_offset": 65, "nodeName": "edge_size", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 442, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 444, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 444, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 445, "col_offset": 19, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 448, "col_offset": 14, "nodeName": "sum", "type": "Any"}, {"lineNumber": 448, "col_offset": 21, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 449, "col_offset": 19, "nodeName": "set_zero_edge_features", "type": "Callable[..., Any]"}, {"lineNumber": 449, "col_offset": 51, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 449, "col_offset": 65, "nodeName": "edge_size", "type": "Any"}, {"lineNumber": 450, "col_offset": 19, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "assertNDArrayNear", "type": "Any"}, {"lineNumber": 452, "col_offset": 40, "nodeName": "actual_edges", "type": "Any"}, {"lineNumber": 457, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 459, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 459, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "set_zero_global_features", "type": "Callable[..., Any]"}, {"lineNumber": 461, "col_offset": 53, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 461, "col_offset": 67, "nodeName": "global_size", "type": "Any"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 468, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 470, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 470, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 472, "col_offset": 19, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 475, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 476, "col_offset": 19, "nodeName": "set_zero_global_features", "type": "Callable[..., Any]"}, {"lineNumber": 476, "col_offset": 53, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 476, "col_offset": 67, "nodeName": "global_size", "type": "Any"}, {"lineNumber": 477, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "assertNDArrayNear", "type": "Any"}, {"lineNumber": 479, "col_offset": 43, "nodeName": "actual_globals", "type": "Any"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 487, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 487, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 488, "col_offset": 14, "nodeName": "sum", "type": "Any"}, {"lineNumber": 488, "col_offset": 21, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 489, "col_offset": 19, "nodeName": "set_zero_node_features", "type": "Callable[..., Any]"}, {"lineNumber": 489, "col_offset": 51, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 489, "col_offset": 65, "nodeName": "node_size", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 496, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 499, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 499, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 500, "col_offset": 19, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 503, "col_offset": 14, "nodeName": "sum", "type": "Any"}, {"lineNumber": 503, "col_offset": 21, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 504, "col_offset": 19, "nodeName": "set_zero_node_features", "type": "Callable[..., Any]"}, {"lineNumber": 504, "col_offset": 51, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 504, "col_offset": 65, "nodeName": "node_size", "type": "Any"}, {"lineNumber": 505, "col_offset": 19, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "assertNDArrayNear", "type": "Any"}, {"lineNumber": 507, "col_offset": 40, "nodeName": "actual_nodes", "type": "Any"}, {"lineNumber": 511, "col_offset": 13, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 515, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 517, "col_offset": 6, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 525, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 525, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 526, "col_offset": 19, "nodeName": "set_zero_edge_features", "type": "Callable[..., Any]"}, {"lineNumber": 526, "col_offset": 51, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 527, "col_offset": 19, "nodeName": "set_zero_node_features", "type": "Callable[..., Any]"}, {"lineNumber": 527, "col_offset": 51, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "set_zero_global_features", "type": "Callable[..., Any]"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 530, "col_offset": 21, "nodeName": "float32", "type": "Any"}, {"lineNumber": 530, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 531, "col_offset": 21, "nodeName": "float32", "type": "Any"}, {"lineNumber": 531, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 532, "col_offset": 21, "nodeName": "float32", "type": "Any"}, {"lineNumber": 532, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 540, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 544, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 544, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 545, "col_offset": 19, "nodeName": "set_zero_edge_features", "type": "Callable[..., Any]"}, {"lineNumber": 545, "col_offset": 51, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 545, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 546, "col_offset": 19, "nodeName": "set_zero_node_features", "type": "Callable[..., Any]"}, {"lineNumber": 546, "col_offset": 51, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 546, "col_offset": 68, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 547, "col_offset": 19, "nodeName": "set_zero_global_features", "type": "Callable[..., Any]"}, {"lineNumber": 547, "col_offset": 53, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 547, "col_offset": 70, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 548, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 548, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 549, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 549, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 550, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 550, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 557, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 562, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 563, "col_offset": 6, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 564, "col_offset": 9, "nodeName": "exclude_self_edges", "type": "Any"}, {"lineNumber": 569, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 569, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 570, "col_offset": 19, "nodeName": "fully_connect_graph_dynamic", "type": "Callable[..., Any]"}, {"lineNumber": 570, "col_offset": 56, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 571, "col_offset": 56, "nodeName": "exclude_self_edges", "type": "Any"}, {"lineNumber": 572, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 573, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 575, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 576, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 586, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 591, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 592, "col_offset": 6, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 593, "col_offset": 9, "nodeName": "exclude_self_edges", "type": "Any"}, {"lineNumber": 598, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 598, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 599, "col_offset": 19, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 599, "col_offset": 36, "nodeName": "mask_leading_dimension", "type": "Callable[[Any], Any]"}, {"lineNumber": 601, "col_offset": 19, "nodeName": "fully_connect_graph_dynamic", "type": "Callable[..., Any]"}, {"lineNumber": 601, "col_offset": 56, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 602, "col_offset": 56, "nodeName": "exclude_self_edges", "type": "Any"}, {"lineNumber": 604, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 605, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 606, "col_offset": 20, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 607, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 608, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 609, "col_offset": 54, "nodeName": "shape", "type": "Any"}, {"lineNumber": 612, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 613, "col_offset": 6, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 614, "col_offset": 10, "nodeName": "e1", "type": "int"}, {"lineNumber": 618, "col_offset": 6, "nodeName": "offset", "type": "Any"}, {"lineNumber": 618, "col_offset": 16, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 619, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 619, "col_offset": 23, "nodeName": "actual_receivers", "type": "Any"}, {"lineNumber": 619, "col_offset": 41, "nodeName": "actual_senders", "type": "Any"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 642, "col_offset": 10, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 642, "col_offset": 24, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 651, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 651, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 654, "col_offset": 19, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 654, "col_offset": 36, "nodeName": "no_op", "type": "Any"}, {"lineNumber": 654, "col_offset": 46, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "_assert_graph_equals_np", "type": "Any"}, {"lineNumber": 655, "col_offset": 33, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 655, "col_offset": 55, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 660, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 667, "col_offset": 22, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 670, "col_offset": 40, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 674, "col_offset": 22, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 681, "col_offset": 10, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 681, "col_offset": 46, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 697, "col_offset": 15, "nodeName": "graphs_dicts_out", "type": "Any"}, {"lineNumber": 700, "col_offset": 6, "nodeName": "index", "type": "Any"}, {"lineNumber": 702, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 702, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 703, "col_offset": 12, "nodeName": "get_graph", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 703, "col_offset": 31, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 703, "col_offset": 45, "nodeName": "index", "type": "Any"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 705, "col_offset": 35, "nodeName": "graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 706, "col_offset": 4, "nodeName": "actual", "type": "Any"}, {"lineNumber": 706, "col_offset": 14, "nodeName": "graphs_tuple_to_data_dicts", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 706, "col_offset": 50, "nodeName": "graph", "type": "Any"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 708, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 708, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 716, "col_offset": 12, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 717, "col_offset": 15, "nodeName": "graphs_dicts_out", "type": "Any"}, {"lineNumber": 720, "col_offset": 6, "nodeName": "index", "type": "slice"}, {"lineNumber": 722, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 722, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 723, "col_offset": 14, "nodeName": "get_graph", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 723, "col_offset": 33, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 723, "col_offset": 47, "nodeName": "index", "type": "slice"}, {"lineNumber": 725, "col_offset": 14, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 725, "col_offset": 37, "nodeName": "graphs2", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 726, "col_offset": 13, "nodeName": "graphs_tuple_to_data_dicts", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 726, "col_offset": 49, "nodeName": "graphs2", "type": "Any"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "ex", "type": "Any"}, {"lineNumber": 728, "col_offset": 12, "nodeName": "ac", "type": "Any"}, {"lineNumber": 728, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 728, "col_offset": 22, "nodeName": "expected", "type": "Any"}, {"lineNumber": 728, "col_offset": 32, "nodeName": "actual", "type": "List[Any]"}, {"lineNumber": 754, "col_offset": 6, "nodeName": "index", "type": "Any"}, {"lineNumber": 756, "col_offset": 6, "nodeName": "index", "type": "slice"}, {"lineNumber": 757, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 757, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 767, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 767, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 768, "col_offset": 23, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 769, "col_offset": 40, "nodeName": "GRAPH_DATA_FIELDS", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 772, "col_offset": 12, "nodeName": "replace", "type": "Any"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 781, "col_offset": 18, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 790, "col_offset": 18, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 790, "col_offset": 41, "nodeName": "_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 791, "col_offset": 17, "nodeName": "graphs", "type": "module"}, {"lineNumber": 798, "col_offset": 12, "nodeName": "replace", "type": "Callable[..., Any]"}, {"lineNumber": 799, "col_offset": 12, "nodeName": "map", "type": "Any"}, {"lineNumber": 801, "col_offset": 22, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 801, "col_offset": 45, "nodeName": "graph", "type": "Any"}, {"lineNumber": 802, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 802, "col_offset": 22, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 803, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 803, "col_offset": 26, "nodeName": "edges", "type": "Any"}, {"lineNumber": 803, "col_offset": 49, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 806, "col_offset": 20, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 807, "col_offset": 31, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "regular_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 815, "col_offset": 29, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 815, "col_offset": 52, "nodeName": "nested_structure", "type": "List[Any]"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 817, "col_offset": 31, "nodeName": "nested_structure", "type": "List[Any]"}, {"lineNumber": 817, "col_offset": 49, "nodeName": "nested_structure_numpy", "type": "Any"}, {"lineNumber": 819, "col_offset": 41, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 833, "col_offset": 9, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 838, "col_offset": 20, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 849, "col_offset": 11, "nodeName": "fn", "type": "Callable[[Any], graph_nets.utils_tf.`namedtuple-GraphsTupleSize-num_nodes-num_edges-num_graphs`]"}, {"lineNumber": 849, "col_offset": 14, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 857, "col_offset": 16, "nodeName": "generate_random_data_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 861, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 862, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 866, "col_offset": 18, "nodeName": "_compile_with_tf_function", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 867, "col_offset": 8, "nodeName": "get_graphs_tuple_size", "type": "Callable[[Any], graph_nets.utils_tf.`namedtuple-GraphsTupleSize-num_nodes-num_edges-num_graphs`]"}, {"lineNumber": 867, "col_offset": 40, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 869, "col_offset": 24, "nodeName": "compiled_fn", "type": "nothing"}, {"lineNumber": 869, "col_offset": 36, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "node_size", "type": "nothing"}, {"lineNumber": 870, "col_offset": 15, "nodeName": "edge_size", "type": "nothing"}, {"lineNumber": 870, "col_offset": 26, "nodeName": "graph_size", "type": "nothing"}, {"lineNumber": 871, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 872, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 873, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 879, "col_offset": 11, "nodeName": "get_mask", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 880, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 882, "col_offset": 11, "nodeName": "get_mask", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 883, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 884, "col_offset": 11, "nodeName": "get_mask", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 885, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 887, "col_offset": 11, "nodeName": "get_mask", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 888, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 901, "col_offset": 16, "nodeName": "generate_random_data_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 905, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 906, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 908, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 920, "col_offset": 56, "nodeName": "num_padding_nodes", "type": "int"}, {"lineNumber": 921, "col_offset": 56, "nodeName": "num_padding_edges", "type": "int"}, {"lineNumber": 922, "col_offset": 20, "nodeName": "unpadded_batch_size", "type": "int"}, {"lineNumber": 922, "col_offset": 42, "nodeName": "num_padding_graphs", "type": "int"}, {"lineNumber": 949, "col_offset": 6, "nodeName": "graphs_tuple_size", "type": "graph_nets.utils_tf.`namedtuple-GraphsTupleSize-num_nodes-num_edges-num_graphs`"}, {"lineNumber": 956, "col_offset": 18, "nodeName": "_compile_with_tf_function", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 957, "col_offset": 8, "nodeName": "_get_padded_and_recovered_graphs_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 957, "col_offset": 48, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "padded_graphs_tuple", "type": "nothing"}, {"lineNumber": 958, "col_offset": 25, "nodeName": "recovered_graphs_tuple", "type": "nothing"}, {"lineNumber": 958, "col_offset": 50, "nodeName": "compiled_fn", "type": "nothing"}, {"lineNumber": 958, "col_offset": 62, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 971, "col_offset": 6, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 972, "col_offset": 6, "nodeName": "padded_graphs_tuple", "type": "nothing"}, {"lineNumber": 973, "col_offset": 6, "nodeName": "recovered_graphs_tuple", "type": "nothing"}, {"lineNumber": 976, "col_offset": 37, "nodeName": "graphs_tuple_to_data_dicts", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 978, "col_offset": 30, "nodeName": "graphs_tuple_to_data_dicts", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 981, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 981, "col_offset": 19, "nodeName": "padded_graphs_tuple", "type": "nothing"}, {"lineNumber": 981, "col_offset": 40, "nodeName": "pad_graphs_to", "type": "int"}, {"lineNumber": 984, "col_offset": 21, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 984, "col_offset": 27, "nodeName": "unpadded_batch_size", "type": "int"}, {"lineNumber": 990, "col_offset": 25, "nodeName": "padded_graphs_tuple_data_dicts", "type": "List[Any]"}, {"lineNumber": 993, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 993, "col_offset": 11, "nodeName": "padding_data_dict", "type": "Any"}, {"lineNumber": 993, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 993, "col_offset": 42, "nodeName": "padding_data_dicts", "type": "List[Any]"}, {"lineNumber": 996, "col_offset": 6, "nodeName": "num_nodes", "type": "int"}, {"lineNumber": 997, "col_offset": 6, "nodeName": "num_edges", "type": "int"}, {"lineNumber": 1009, "col_offset": 9, "nodeName": "experimental_unconnected_padding_edges", "type": "Any"}, {"lineNumber": 1021, "col_offset": 4, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1038, "col_offset": 16, "nodeName": "generate_random_data_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 1042, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1043, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1045, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 1050, "col_offset": 19, "nodeName": "unpadded_batch_size", "type": "int"}, {"lineNumber": 1050, "col_offset": 41, "nodeName": "edge_size_np", "type": "Any"}, {"lineNumber": 1052, "col_offset": 20, "nodeName": "unpadded_batch_size", "type": "int"}, {"lineNumber": 1054, "col_offset": 7, "nodeName": "field_that_hits_limit", "type": "Any"}, {"lineNumber": 1055, "col_offset": 6, "nodeName": "pad_edges_to", "type": "Any"}, {"lineNumber": 1070, "col_offset": 18, "nodeName": "_compile_with_tf_function", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "_get_padded_graphs_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 1071, "col_offset": 34, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 1073, "col_offset": 7, "nodeName": "field_that_hits_limit", "type": "Any"}, {"lineNumber": 1084, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 42, "nodeName": "axis", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "int32", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "axis", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "assert_new_op_prefixes", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 6, "nodeName": "repeat", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "t", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "indices", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "node_data", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "receiver", "type": "int"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "sender", "type": "int"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "edge_data", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "gr", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "map", "type": "Any"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "gr", "type": "Any"}, {"lineNumber": 105, "col_offset": 61, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 114, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 120, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 123, "col_offset": 48, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 127, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "senders", "type": "Any"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 131, "col_offset": 56, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 133, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 133, "col_offset": 58, "nodeName": "globals", "type": "Any"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "gr", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "replace", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "_create_nested_fields", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "gr", "type": "Any"}, {"lineNumber": 161, "col_offset": 45, "nodeName": "gr", "type": "Any"}, {"lineNumber": 161, "col_offset": 51, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "tree", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "tree", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "tree", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 184, "col_offset": 48, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 185, "col_offset": 48, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 186, "col_offset": 54, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 54, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "graph0", "type": "Any"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 194, "col_offset": 46, "nodeName": "graphs", "type": "module"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "graph1", "type": "Any"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 195, "col_offset": 46, "nodeName": "graphs", "type": "module"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "graph0", "type": "Any"}, {"lineNumber": 196, "col_offset": 44, "nodeName": "graph1", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 199, "col_offset": 34, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 203, "col_offset": 42, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 204, "col_offset": 42, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 45, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 206, "col_offset": 45, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "self", "type": "ConcatTest"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 207, "col_offset": 52, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 217, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 218, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "gr", "type": "Any"}, {"lineNumber": 224, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 227, "col_offset": 6, "nodeName": "concat", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "tape", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "xs", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "ys", "type": "Any"}, {"lineNumber": 248, "col_offset": 62, "nodeName": "ys", "type": "Any"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 250, "col_offset": 52, "nodeName": "grad", "type": "Any"}, {"lineNumber": 250, "col_offset": 60, "nodeName": "gradients", "type": "List[Any]"}, {"lineNumber": 257, "col_offset": 30, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "stop_globals", "type": "Any"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "stop_nodes", "type": "Any"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "stop_edges", "type": "Any"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "stop_globals", "type": "Any"}, {"lineNumber": 265, "col_offset": 30, "nodeName": "stop_nodes", "type": "Any"}, {"lineNumber": 265, "col_offset": 46, "nodeName": "stop_edges", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 272, "col_offset": 51, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 273, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 273, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 273, "col_offset": 44, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 274, "col_offset": 6, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 278, "col_offset": 30, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 278, "col_offset": 53, "nodeName": "self", "type": "StopGradientsGraphTest"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "self", "type": "StopGradientsGraphTest"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "self", "type": "StopGradientsGraphTest"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "self", "type": "IdentityTest"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 308, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "identity", "type": "Callable[..., Any]"}, {"lineNumber": 309, "col_offset": 35, "nodeName": "graph", "type": "Any"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 315, "col_offset": 9, "nodeName": "field", "type": "str"}, {"lineNumber": 315, "col_offset": 18, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 326, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "graph_id", "type": "Any"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 9, "nodeName": "field", "type": "str"}, {"lineNumber": 347, "col_offset": 18, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 366, "col_offset": 14, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 367, "col_offset": 20, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 368, "col_offset": 14, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 369, "col_offset": 17, "nodeName": "sizes", "type": "List[int]"}, {"lineNumber": 369, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 369, "col_offset": 39, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 370, "col_offset": 14, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "sizes", "type": "List[int]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 372, "col_offset": 20, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 375, "col_offset": 24, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 375, "col_offset": 37, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 376, "col_offset": 24, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 376, "col_offset": 37, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 384, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "method", "type": "Any"}, {"lineNumber": 393, "col_offset": 26, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 394, "col_offset": 6, "nodeName": "_assert_indices_sizes", "type": "Any"}, {"lineNumber": 394, "col_offset": 33, "nodeName": "edges_dict", "type": "Any"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 403, "col_offset": 19, "nodeName": "method", "type": "Any"}, {"lineNumber": 403, "col_offset": 26, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 404, "col_offset": 6, "nodeName": "_assert_indices_sizes", "type": "Any"}, {"lineNumber": 404, "col_offset": 33, "nodeName": "edges_dict", "type": "Any"}, {"lineNumber": 409, "col_offset": 19, "nodeName": "_create_complete_edges_from_nodes_dynamic", "type": "Callable[[Any, Any], Dict[str, Any]]"}, {"lineNumber": 410, "col_offset": 10, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 411, "col_offset": 19, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 412, "col_offset": 18, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 414, "col_offset": 15, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 415, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 415, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 416, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 416, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 417, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 417, "col_offset": 23, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 417, "col_offset": 35, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 425, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 432, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 433, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 433, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 434, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 434, "col_offset": 21, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 436, "col_offset": 25, "nodeName": "n_edges", "type": "Any"}, {"lineNumber": 436, "col_offset": 34, "nodeName": "edge_size", "type": "Any"}, {"lineNumber": 437, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 443, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 444, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 444, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 445, "col_offset": 19, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 448, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 448, "col_offset": 21, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 449, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 458, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 459, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 459, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 462, "col_offset": 25, "nodeName": "n_graphs", "type": "Any"}, {"lineNumber": 462, "col_offset": 35, "nodeName": "global_size", "type": "Any"}, {"lineNumber": 463, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 469, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 470, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 470, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 472, "col_offset": 19, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 475, "col_offset": 15, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 476, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 477, "col_offset": 21, "nodeName": "globals", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 485, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 485, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 486, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 487, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 487, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 488, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 488, "col_offset": 21, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 489, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 490, "col_offset": 25, "nodeName": "n_nodes", "type": "Any"}, {"lineNumber": 490, "col_offset": 34, "nodeName": "node_size", "type": "Any"}, {"lineNumber": 491, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 497, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 498, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 499, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 499, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 500, "col_offset": 19, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 503, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 503, "col_offset": 21, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 504, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 505, "col_offset": 19, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 512, "col_offset": 6, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 513, "col_offset": 6, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 514, "col_offset": 6, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 515, "col_offset": 55, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 516, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 516, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 517, "col_offset": 21, "nodeName": "set_zero_edge_features", "type": "Callable[..., Any]"}, {"lineNumber": 517, "col_offset": 53, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 522, "col_offset": 6, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 523, "col_offset": 6, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 524, "col_offset": 6, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 525, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 525, "col_offset": 55, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 526, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 527, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 530, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 530, "col_offset": 33, "nodeName": "edges", "type": "Any"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 531, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 531, "col_offset": 33, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 532, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 532, "col_offset": 33, "nodeName": "globals", "type": "Any"}, {"lineNumber": 541, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 542, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 543, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 544, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 544, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 545, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 546, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 547, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 548, "col_offset": 28, "nodeName": "edges", "type": "Any"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 549, "col_offset": 28, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 550, "col_offset": 28, "nodeName": "globals", "type": "Any"}, {"lineNumber": 558, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 559, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 560, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 563, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 569, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 569, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 570, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 572, "col_offset": 23, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 573, "col_offset": 21, "nodeName": "senders", "type": "Any"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 575, "col_offset": 25, "nodeName": "n_relation", "type": "Union[Any, int]"}, {"lineNumber": 575, "col_offset": 39, "nodeName": "actual_receivers", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 576, "col_offset": 25, "nodeName": "n_relation", "type": "Union[Any, int]"}, {"lineNumber": 576, "col_offset": 39, "nodeName": "actual_senders", "type": "Any"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 578, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 587, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 588, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 589, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 592, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 598, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 598, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 599, "col_offset": 19, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 599, "col_offset": 36, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 601, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 604, "col_offset": 23, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 605, "col_offset": 21, "nodeName": "senders", "type": "Any"}, {"lineNumber": 606, "col_offset": 20, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 607, "col_offset": 25, "nodeName": "n_relation", "type": "Union[Any, int]"}, {"lineNumber": 607, "col_offset": 39, "nodeName": "actual_receivers", "type": "Any"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 608, "col_offset": 25, "nodeName": "n_relation", "type": "Union[Any, int]"}, {"lineNumber": 608, "col_offset": 39, "nodeName": "actual_senders", "type": "Any"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 609, "col_offset": 54, "nodeName": "actual_n_edge", "type": "Any"}, {"lineNumber": 613, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 614, "col_offset": 16, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 614, "col_offset": 22, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 615, "col_offset": 12, "nodeName": "e2", "type": "int"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 620, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 620, "col_offset": 28, "nodeName": "actual_edges", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 620, "col_offset": 43, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 620, "col_offset": 47, "nodeName": "expected_edges", "type": "List[Tuple[int, int]]"}, {"lineNumber": 642, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 648, "col_offset": 9, "nodeName": "field", "type": "Any"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 651, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 651, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 653, "col_offset": 6, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 654, "col_offset": 19, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 654, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 655, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 661, "col_offset": 6, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 662, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 662, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 662, "col_offset": 44, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 663, "col_offset": 6, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 663, "col_offset": 42, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 668, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 668, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 669, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 670, "col_offset": 40, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 675, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 677, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 677, "col_offset": 32, "nodeName": "astype", "type": "Any"}, {"lineNumber": 677, "col_offset": 63, "nodeName": "int16", "type": "Any"}, {"lineNumber": 678, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 678, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 678, "col_offset": 59, "nodeName": "float64", "type": "Any"}, {"lineNumber": 679, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 679, "col_offset": 28, "nodeName": "astype", "type": "Any"}, {"lineNumber": 679, "col_offset": 55, "nodeName": "float64", "type": "Any"}, {"lineNumber": 680, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 680, "col_offset": 28, "nodeName": "constant", "type": "Any"}, {"lineNumber": 681, "col_offset": 10, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 681, "col_offset": 46, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 683, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 683, "col_offset": 23, "nodeName": "int32", "type": "Any"}, {"lineNumber": 683, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 684, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 686, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 687, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 687, "col_offset": 23, "nodeName": "float64", "type": "Any"}, {"lineNumber": 687, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 697, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 697, "col_offset": 37, "nodeName": "index", "type": "int"}, {"lineNumber": 700, "col_offset": 14, "nodeName": "constant", "type": "Any"}, {"lineNumber": 700, "col_offset": 26, "nodeName": "index", "type": "int"}, {"lineNumber": 702, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 702, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 703, "col_offset": 12, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 706, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 708, "col_offset": 16, "nodeName": "expected", "type": "Any"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 709, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 710, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 710, "col_offset": 49, "nodeName": "actual", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 711, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 711, "col_offset": 49, "nodeName": "actual", "type": "Any"}, {"lineNumber": 717, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 717, "col_offset": 37, "nodeName": "index", "type": "slice"}, {"lineNumber": 720, "col_offset": 14, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 722, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 722, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 723, "col_offset": 14, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 725, "col_offset": 14, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 726, "col_offset": 13, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 729, "col_offset": 10, "nodeName": "k", "type": "Any"}, {"lineNumber": 729, "col_offset": 13, "nodeName": "v", "type": "Any"}, {"lineNumber": 729, "col_offset": 18, "nodeName": "items", "type": "Any"}, {"lineNumber": 731, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 732, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 754, "col_offset": 14, "nodeName": "constant", "type": "Any"}, {"lineNumber": 754, "col_offset": 26, "nodeName": "index", "type": "Any"}, {"lineNumber": 756, "col_offset": 14, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 756, "col_offset": 20, "nodeName": "index", "type": "Any"}, {"lineNumber": 757, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 757, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 758, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 758, "col_offset": 32, "nodeName": "error_type", "type": "Any"}, {"lineNumber": 758, "col_offset": 44, "nodeName": "message", "type": "Any"}, {"lineNumber": 759, "col_offset": 6, "nodeName": "get_graph", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 759, "col_offset": 25, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 759, "col_offset": 39, "nodeName": "index", "type": "Any"}, {"lineNumber": 767, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 767, "col_offset": 55, "nodeName": "self", "type": "TestNumGraphs"}, {"lineNumber": 768, "col_offset": 23, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 769, "col_offset": 40, "nodeName": "graphs", "type": "module"}, {"lineNumber": 772, "col_offset": 12, "nodeName": "empty_graph", "type": "Any"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "self", "type": "TestNumGraphs"}, {"lineNumber": 773, "col_offset": 24, "nodeName": "get_num_graphs", "type": "Callable[..., Any]"}, {"lineNumber": 773, "col_offset": 48, "nodeName": "graph", "type": "Any"}, {"lineNumber": 781, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 790, "col_offset": 18, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 790, "col_offset": 41, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 792, "col_offset": 6, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 792, "col_offset": 57, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 793, "col_offset": 6, "nodeName": "assertNDArrayNear", "type": "Any"}, {"lineNumber": 798, "col_offset": 12, "nodeName": "_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 799, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 801, "col_offset": 22, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 802, "col_offset": 4, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 802, "col_offset": 22, "nodeName": "converted_graph", "type": "Any"}, {"lineNumber": 803, "col_offset": 4, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 803, "col_offset": 26, "nodeName": "converted_graph", "type": "Any"}, {"lineNumber": 803, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 807, "col_offset": 31, "nodeName": "regular_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 813, "col_offset": 9, "nodeName": "graph_with_nested_fields", "type": "Any"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 815, "col_offset": 29, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 820, "col_offset": 21, "nodeName": "nested_structure", "type": "List[Any]"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 821, "col_offset": 21, "nodeName": "nested_structure_numpy", "type": "Any"}, {"lineNumber": 822, "col_offset": 9, "nodeName": "tensor_or_none", "type": "Any"}, {"lineNumber": 826, "col_offset": 6, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 826, "col_offset": 27, "nodeName": "array_or_none", "type": "Any"}, {"lineNumber": 827, "col_offset": 6, "nodeName": "assertNDArrayNear", "type": "Any"}, {"lineNumber": 829, "col_offset": 10, "nodeName": "array_or_none", "type": "Any"}, {"lineNumber": 833, "col_offset": 9, "nodeName": "shape", "type": "Any"}, {"lineNumber": 846, "col_offset": 11, "nodeName": "_leading_static_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 846, "col_offset": 33, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 847, "col_offset": 11, "nodeName": "_leading_static_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 847, "col_offset": 33, "nodeName": "senders", "type": "Any"}, {"lineNumber": 848, "col_offset": 11, "nodeName": "_leading_static_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 848, "col_offset": 33, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 857, "col_offset": 16, "nodeName": "test_utils_tf1", "type": "module"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 867, "col_offset": 8, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 871, "col_offset": 4, "nodeName": "self", "type": "GraphsTupleSizeTest"}, {"lineNumber": 871, "col_offset": 21, "nodeName": "numpy", "type": "nothing"}, {"lineNumber": 871, "col_offset": 40, "nodeName": "node_size_np", "type": "Any"}, {"lineNumber": 872, "col_offset": 4, "nodeName": "self", "type": "GraphsTupleSizeTest"}, {"lineNumber": 872, "col_offset": 21, "nodeName": "numpy", "type": "nothing"}, {"lineNumber": 872, "col_offset": 40, "nodeName": "edge_size_np", "type": "Any"}, {"lineNumber": 873, "col_offset": 4, "nodeName": "self", "type": "GraphsTupleSizeTest"}, {"lineNumber": 873, "col_offset": 21, "nodeName": "numpy", "type": "nothing"}, {"lineNumber": 879, "col_offset": 11, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "self", "type": "MaskTest"}, {"lineNumber": 880, "col_offset": 30, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 882, "col_offset": 11, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "self", "type": "MaskTest"}, {"lineNumber": 883, "col_offset": 30, "nodeName": "ones", "type": "Any"}, {"lineNumber": 884, "col_offset": 11, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 884, "col_offset": 29, "nodeName": "constant", "type": "Any"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "self", "type": "MaskTest"}, {"lineNumber": 885, "col_offset": 30, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 887, "col_offset": 11, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 887, "col_offset": 29, "nodeName": "constant", "type": "Any"}, {"lineNumber": 887, "col_offset": 46, "nodeName": "constant", "type": "Any"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "self", "type": "MaskTest"}, {"lineNumber": 888, "col_offset": 30, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 901, "col_offset": 16, "nodeName": "test_utils_tf1", "type": "module"}, {"lineNumber": 908, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 909, "col_offset": 8, "nodeName": "unpadded_batch_size", "type": "int"}, {"lineNumber": 912, "col_offset": 21, "nodeName": "replace", "type": "Callable[..., Any]"}, {"lineNumber": 920, "col_offset": 19, "nodeName": "unpadded_batch_size", "type": "int"}, {"lineNumber": 920, "col_offset": 41, "nodeName": "node_size_np", "type": "Any"}, {"lineNumber": 921, "col_offset": 19, "nodeName": "unpadded_batch_size", "type": "int"}, {"lineNumber": 921, "col_offset": 41, "nodeName": "edge_size_np", "type": "Any"}, {"lineNumber": 925, "col_offset": 28, "nodeName": "pad_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 926, "col_offset": 10, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 927, "col_offset": 10, "nodeName": "pad_nodes_to", "type": "Any"}, {"lineNumber": 928, "col_offset": 10, "nodeName": "pad_edges_to", "type": "Any"}, {"lineNumber": 929, "col_offset": 10, "nodeName": "pad_graphs_to", "type": "int"}, {"lineNumber": 930, "col_offset": 10, "nodeName": "experimental_unconnected_padding_edges", "type": "Any"}, {"lineNumber": 933, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 934, "col_offset": 60, "nodeName": "pad_nodes_to", "type": "Any"}, {"lineNumber": 935, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 936, "col_offset": 60, "nodeName": "pad_edges_to", "type": "Any"}, {"lineNumber": 937, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 938, "col_offset": 62, "nodeName": "pad_edges_to", "type": "Any"}, {"lineNumber": 939, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 940, "col_offset": 64, "nodeName": "pad_edges_to", "type": "Any"}, {"lineNumber": 941, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 942, "col_offset": 62, "nodeName": "pad_graphs_to", "type": "int"}, {"lineNumber": 943, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 944, "col_offset": 61, "nodeName": "pad_graphs_to", "type": "int"}, {"lineNumber": 945, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 946, "col_offset": 61, "nodeName": "pad_graphs_to", "type": "int"}, {"lineNumber": 949, "col_offset": 26, "nodeName": "get_graphs_tuple_size", "type": "Callable[[Any], graph_nets.utils_tf.`namedtuple-GraphsTupleSize-num_nodes-num_edges-num_graphs`]"}, {"lineNumber": 949, "col_offset": 57, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 950, "col_offset": 31, "nodeName": "remove_graphs_tuple_padding", "type": "Callable[[Any, Any], graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 951, "col_offset": 10, "nodeName": "padded_graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 951, "col_offset": 31, "nodeName": "graphs_tuple_size", "type": "graph_nets.utils_tf.`namedtuple-GraphsTupleSize-num_nodes-num_edges-num_graphs`"}, {"lineNumber": 953, "col_offset": 13, "nodeName": "padded_graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 953, "col_offset": 34, "nodeName": "recovered_graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 962, "col_offset": 6, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 962, "col_offset": 33, "nodeName": "padded_graphs_tuple", "type": "nothing"}, {"lineNumber": 962, "col_offset": 54, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 963, "col_offset": 6, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 963, "col_offset": 33, "nodeName": "recovered_graphs_tuple", "type": "nothing"}, {"lineNumber": 963, "col_offset": 57, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 971, "col_offset": 21, "nodeName": "remove_nesting", "type": "Callable[[Any], Any]"}, {"lineNumber": 971, "col_offset": 36, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 972, "col_offset": 28, "nodeName": "remove_nesting", "type": "Callable[[Any], Any]"}, {"lineNumber": 972, "col_offset": 43, "nodeName": "padded_graphs_tuple", "type": "nothing"}, {"lineNumber": 973, "col_offset": 31, "nodeName": "remove_nesting", "type": "Callable[[Any], Any]"}, {"lineNumber": 973, "col_offset": 46, "nodeName": "recovered_graphs_tuple", "type": "nothing"}, {"lineNumber": 976, "col_offset": 37, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 977, "col_offset": 8, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 977, "col_offset": 31, "nodeName": "padded_graphs_tuple", "type": "nothing"}, {"lineNumber": 978, "col_offset": 30, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 979, "col_offset": 8, "nodeName": "nest_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 979, "col_offset": 31, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 981, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 985, "col_offset": 6, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 986, "col_offset": 10, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 990, "col_offset": 56, "nodeName": "unpadded_batch_size", "type": "int"}, {"lineNumber": 996, "col_offset": 18, "nodeName": "num_padding_nodes", "type": "int"}, {"lineNumber": 997, "col_offset": 18, "nodeName": "num_padding_edges", "type": "int"}, {"lineNumber": 999, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1002, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1002, "col_offset": 52, "nodeName": "num_nodes", "type": "int"}, {"lineNumber": 1003, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1005, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1005, "col_offset": 52, "nodeName": "num_edges", "type": "int"}, {"lineNumber": 1006, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1021, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "_asdict", "type": "Any"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "_asdict", "type": "nothing"}, {"lineNumber": 1038, "col_offset": 16, "nodeName": "test_utils_tf1", "type": "module"}, {"lineNumber": 1045, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 1046, "col_offset": 8, "nodeName": "unpadded_batch_size", "type": "int"}, {"lineNumber": 1051, "col_offset": 19, "nodeName": "unpadded_batch_size", "type": "int"}, {"lineNumber": 1051, "col_offset": 41, "nodeName": "node_size_np", "type": "Any"}, {"lineNumber": 1056, "col_offset": 9, "nodeName": "field_that_hits_limit", "type": "Any"}, {"lineNumber": 1057, "col_offset": 6, "nodeName": "pad_nodes_to", "type": "Any"}, {"lineNumber": 1062, "col_offset": 13, "nodeName": "pad_graphs_tuple", "type": "Callable[..., graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 1063, "col_offset": 10, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 1064, "col_offset": 10, "nodeName": "pad_nodes_to", "type": "Any"}, {"lineNumber": 1065, "col_offset": 10, "nodeName": "pad_edges_to", "type": "Any"}, {"lineNumber": 1066, "col_offset": 10, "nodeName": "pad_graphs_to", "type": "int"}, {"lineNumber": 1067, "col_offset": 10, "nodeName": "experimental_unconnected_padding_edges", "type": "Any"}, {"lineNumber": 1075, "col_offset": 6, "nodeName": "compiled_fn", "type": "nothing"}, {"lineNumber": 1075, "col_offset": 18, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 1084, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "num_elements", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "expected_name", "type": "Any"}, {"lineNumber": 73, "col_offset": 6, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "kwargs", "type": "Union[Dict[nothing, nothing], Dict[str, Any]]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "node", "type": "int"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 79, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "sender", "type": "int"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "n_nodes", "type": "int"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "receiver", "type": "int"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "n_nodes", "type": "int"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "add_edge", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "sender", "type": "int"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "receiver", "type": "int"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 50, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "graph_0", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "graph_1", "type": "Any"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "graph_2", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "gr", "type": "Any"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 120, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 131, "col_offset": 56, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 133, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 133, "col_offset": 58, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 50, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 50, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "graph_0", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "graph_1", "type": "Any"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "graph_2", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "new_nodes", "type": "Tuple[Dict[str, Any]]"}, {"lineNumber": 158, "col_offset": 40, "nodeName": "new_edges", "type": "List[Dict[str, Any]]"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "new_globals", "type": "List[nothing]"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "x", "type": "Tuple[Any, ...]"}, {"lineNumber": 169, "col_offset": 43, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "x", "type": "Tuple[Any, ...]"}, {"lineNumber": 171, "col_offset": 43, "nodeName": "edges", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "x", "type": "Tuple[Any, ...]"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "globals", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 9, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 9, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 32, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 50, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 218, "col_offset": 50, "nodeName": "_generate_graph", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "graph_0", "type": "Any"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "graph_1", "type": "Any"}, {"lineNumber": 221, "col_offset": 37, "nodeName": "graph_2", "type": "Any"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 223, "col_offset": 39, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 224, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 6, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 233, "col_offset": 10, "nodeName": "StopGradientsGraphTest", "type": "Type[StopGradientsGraphTest]"}, {"lineNumber": 233, "col_offset": 34, "nodeName": "self", "type": "StopGradientsGraphTest"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "GradientTape", "type": "Any"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 246, "col_offset": 34, "nodeName": "field", "type": "str"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "stopped_gradients_graph", "type": "Any"}, {"lineNumber": 247, "col_offset": 46, "nodeName": "field", "type": "str"}, {"lineNumber": 248, "col_offset": 42, "nodeName": "ys", "type": "Any"}, {"lineNumber": 248, "col_offset": 17, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 248, "col_offset": 31, "nodeName": "ys", "type": "Any"}, {"lineNumber": 248, "col_offset": 35, "nodeName": "xs", "type": "Any"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "gradients", "type": "List[Any]"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 6, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 288, "col_offset": 10, "nodeName": "IdentityTest", "type": "Type[IdentityTest]"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "self", "type": "IdentityTest"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "assertNDArrayNear", "type": "Any"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 325, "col_offset": 10, "nodeName": "RunGraphWithNoneTest", "type": "Type[RunGraphWithNoneTest]"}, {"lineNumber": 325, "col_offset": 32, "nodeName": "self", "type": "RunGraphWithNoneTest"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "assertNDArrayNear", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 358, "col_offset": 10, "nodeName": "ComputeOffsetTest", "type": "Type[ComputeOffsetTest]"}, {"lineNumber": 358, "col_offset": 29, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 17, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 369, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 39, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 371, "col_offset": 38, "nodeName": "int32", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 372, "col_offset": 20, "nodeName": "self", "type": "ComputeOffsetTest"}, {"lineNumber": 372, "col_offset": 40, "nodeName": "int32", "type": "Any"}, {"lineNumber": 384, "col_offset": 6, "nodeName": "self", "type": "DataDictsCompletionTests"}, {"lineNumber": 384, "col_offset": 27, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 384, "col_offset": 41, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 394, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 394, "col_offset": 45, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 404, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 404, "col_offset": 45, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 408, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 409, "col_offset": 19, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 415, "col_offset": 6, "nodeName": "self", "type": "DataDictsCompletionTests"}, {"lineNumber": 415, "col_offset": 27, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 415, "col_offset": 41, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 416, "col_offset": 6, "nodeName": "self", "type": "DataDictsCompletionTests"}, {"lineNumber": 416, "col_offset": 27, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 416, "col_offset": 41, "nodeName": "senders", "type": "Any"}, {"lineNumber": 417, "col_offset": 6, "nodeName": "self", "type": "DataDictsCompletionTests"}, {"lineNumber": 425, "col_offset": 6, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 425, "col_offset": 27, "nodeName": "n_relation", "type": "Any"}, {"lineNumber": 426, "col_offset": 26, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 432, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 434, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 443, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 448, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 452, "col_offset": 18, "nodeName": "n_edges", "type": "Any"}, {"lineNumber": 452, "col_offset": 27, "nodeName": "edge_size", "type": "Any"}, {"lineNumber": 458, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 469, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 473, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 475, "col_offset": 15, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 477, "col_offset": 21, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 479, "col_offset": 18, "nodeName": "n_graphs", "type": "Any"}, {"lineNumber": 479, "col_offset": 28, "nodeName": "global_size", "type": "Any"}, {"lineNumber": 486, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 488, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 498, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 503, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 505, "col_offset": 19, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 507, "col_offset": 18, "nodeName": "n_nodes", "type": "Any"}, {"lineNumber": 507, "col_offset": 27, "nodeName": "node_size", "type": "Any"}, {"lineNumber": 512, "col_offset": 6, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 513, "col_offset": 6, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 514, "col_offset": 6, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 516, "col_offset": 9, "nodeName": "self", "type": "GraphsCompletionTests"}, {"lineNumber": 517, "col_offset": 21, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 522, "col_offset": 6, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 523, "col_offset": 6, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 524, "col_offset": 6, "nodeName": "g", "type": "Dict[Any, Any]"}, {"lineNumber": 530, "col_offset": 33, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 531, "col_offset": 33, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 532, "col_offset": 33, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 541, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 542, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 543, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 548, "col_offset": 28, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 549, "col_offset": 28, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 550, "col_offset": 28, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 558, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 559, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 560, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 565, "col_offset": 22, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 567, "col_offset": 22, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 567, "col_offset": 31, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 572, "col_offset": 23, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 573, "col_offset": 21, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 577, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 577, "col_offset": 29, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 587, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 588, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 589, "col_offset": 6, "nodeName": "g", "type": "Any"}, {"lineNumber": 594, "col_offset": 22, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 596, "col_offset": 22, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 596, "col_offset": 31, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 604, "col_offset": 23, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 605, "col_offset": 21, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 606, "col_offset": 20, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 609, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 609, "col_offset": 29, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 615, "col_offset": 18, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 615, "col_offset": 24, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 643, "col_offset": 11, "nodeName": "field", "type": "Any"}, {"lineNumber": 643, "col_offset": 20, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 647, "col_offset": 31, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 649, "col_offset": 31, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 653, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 653, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 653, "col_offset": 32, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 653, "col_offset": 46, "nodeName": "field", "type": "Any"}, {"lineNumber": 661, "col_offset": 17, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 662, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 663, "col_offset": 6, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 663, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 675, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 676, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 676, "col_offset": 46, "nodeName": "int64", "type": "Any"}, {"lineNumber": 677, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 678, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 679, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 680, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 680, "col_offset": 40, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 680, "col_offset": 67, "nodeName": "float64", "type": "Any"}, {"lineNumber": 683, "col_offset": 6, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 683, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 684, "col_offset": 6, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 684, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 684, "col_offset": 28, "nodeName": "int32", "type": "Any"}, {"lineNumber": 684, "col_offset": 39, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 684, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 686, "col_offset": 6, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 686, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 686, "col_offset": 28, "nodeName": "float64", "type": "Any"}, {"lineNumber": 686, "col_offset": 41, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 686, "col_offset": 46, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 687, "col_offset": 6, "nodeName": "self", "type": "GraphsTupleConversionTests"}, {"lineNumber": 687, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 700, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 709, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 720, "col_offset": 20, "nodeName": "constant", "type": "Any"}, {"lineNumber": 720, "col_offset": 32, "nodeName": "start", "type": "Any"}, {"lineNumber": 720, "col_offset": 46, "nodeName": "constant", "type": "Any"}, {"lineNumber": 720, "col_offset": 58, "nodeName": "stop", "type": "Any"}, {"lineNumber": 729, "col_offset": 18, "nodeName": "ex", "type": "Any"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 730, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 731, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 731, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 731, "col_offset": 45, "nodeName": "ac", "type": "Any"}, {"lineNumber": 732, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 732, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 732, "col_offset": 45, "nodeName": "ac", "type": "Any"}, {"lineNumber": 754, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 758, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 759, "col_offset": 6, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 766, "col_offset": 10, "nodeName": "TestNumGraphs", "type": "Type[TestNumGraphs]"}, {"lineNumber": 766, "col_offset": 25, "nodeName": "self", "type": "TestNumGraphs"}, {"lineNumber": 772, "col_offset": 12, "nodeName": "self", "type": "TestNumGraphs"}, {"lineNumber": 772, "col_offset": 44, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 773, "col_offset": 24, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 780, "col_offset": 10, "nodeName": "TestNestToNumpy", "type": "Type[TestNestToNumpy]"}, {"lineNumber": 780, "col_offset": 27, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 792, "col_offset": 6, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 792, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 792, "col_offset": 36, "nodeName": "numpy_graph", "type": "Any"}, {"lineNumber": 792, "col_offset": 49, "nodeName": "field", "type": "str"}, {"lineNumber": 792, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 793, "col_offset": 6, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 794, "col_offset": 10, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 795, "col_offset": 10, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 795, "col_offset": 18, "nodeName": "numpy_graph", "type": "Any"}, {"lineNumber": 795, "col_offset": 31, "nodeName": "field", "type": "str"}, {"lineNumber": 798, "col_offset": 12, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 799, "col_offset": 32, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 808, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 823, "col_offset": 26, "nodeName": "array_or_none", "type": "Any"}, {"lineNumber": 826, "col_offset": 6, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 827, "col_offset": 6, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 828, "col_offset": 10, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 846, "col_offset": 33, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 847, "col_offset": 33, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 848, "col_offset": 33, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 861, "col_offset": 19, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 862, "col_offset": 19, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 863, "col_offset": 60, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 871, "col_offset": 21, "nodeName": "node_size", "type": "nothing"}, {"lineNumber": 872, "col_offset": 21, "nodeName": "edge_size", "type": "nothing"}, {"lineNumber": 873, "col_offset": 21, "nodeName": "graph_size", "type": "nothing"}, {"lineNumber": 880, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 883, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 883, "col_offset": 47, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 884, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 885, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 887, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 887, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 888, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 905, "col_offset": 19, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 906, "col_offset": 19, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 909, "col_offset": 31, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 912, "col_offset": 21, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 925, "col_offset": 28, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 933, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 934, "col_offset": 10, "nodeName": "_leading_static_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 934, "col_offset": 32, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 935, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 936, "col_offset": 10, "nodeName": "_leading_static_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 936, "col_offset": 32, "nodeName": "edges", "type": "Any"}, {"lineNumber": 937, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 938, "col_offset": 10, "nodeName": "_leading_static_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 938, "col_offset": 32, "nodeName": "senders", "type": "Any"}, {"lineNumber": 939, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 940, "col_offset": 10, "nodeName": "_leading_static_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 940, "col_offset": 32, "nodeName": "receivers", "type": "Any"}, {"lineNumber": 941, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 942, "col_offset": 10, "nodeName": "_leading_static_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 942, "col_offset": 32, "nodeName": "globals", "type": "Any"}, {"lineNumber": 943, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 944, "col_offset": 10, "nodeName": "_leading_static_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 944, "col_offset": 32, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 945, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 946, "col_offset": 10, "nodeName": "_leading_static_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 946, "col_offset": 32, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 949, "col_offset": 26, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 950, "col_offset": 31, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 962, "col_offset": 6, "nodeName": "tree", "type": "Any"}, {"lineNumber": 963, "col_offset": 6, "nodeName": "tree", "type": "Any"}, {"lineNumber": 967, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 977, "col_offset": 8, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 979, "col_offset": 8, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 985, "col_offset": 6, "nodeName": "tree", "type": "Any"}, {"lineNumber": 986, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 987, "col_offset": 10, "nodeName": "graphs_tuple_data_dicts", "type": "List[Any]"}, {"lineNumber": 988, "col_offset": 10, "nodeName": "padded_graphs_tuple_data_dicts", "type": "List[Any]"}, {"lineNumber": 996, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 997, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 999, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 999, "col_offset": 26, "nodeName": "padding_data_dict", "type": "Any"}, {"lineNumber": 1000, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1002, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1002, "col_offset": 23, "nodeName": "padding_data_dict", "type": "Any"}, {"lineNumber": 1003, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1003, "col_offset": 26, "nodeName": "padding_data_dict", "type": "Any"}, {"lineNumber": 1004, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1005, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1005, "col_offset": 23, "nodeName": "padding_data_dict", "type": "Any"}, {"lineNumber": 1006, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1006, "col_offset": 26, "nodeName": "padding_data_dict", "type": "Any"}, {"lineNumber": 1007, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1010, "col_offset": 8, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1012, "col_offset": 8, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1015, "col_offset": 8, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1017, "col_offset": 8, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "recovered_graphs_tuple", "type": "nothing"}, {"lineNumber": 1042, "col_offset": 19, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 1043, "col_offset": 19, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 1046, "col_offset": 31, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 1058, "col_offset": 9, "nodeName": "field_that_hits_limit", "type": "Any"}, {"lineNumber": 1059, "col_offset": 6, "nodeName": "pad_graphs_to", "type": "int"}, {"lineNumber": 1062, "col_offset": 13, "nodeName": "utils_tf", "type": "module"}, {"lineNumber": 1078, "col_offset": 11, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 1079, "col_offset": 10, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 1081, "col_offset": 8, "nodeName": "compiled_fn", "type": "nothing"}, {"lineNumber": 1081, "col_offset": 20, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "edge", "type": "int"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 84, "col_offset": 66, "nodeName": "float64", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 85, "col_offset": 50, "nodeName": "edge_data", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 67, "nodeName": "edge", "type": "int"}, {"lineNumber": 112, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 115, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 119, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 119, "col_offset": 55, "nodeName": "edges", "type": "Any"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 55, "nodeName": "edges", "type": "Any"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "edges", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 169, "col_offset": 43, "nodeName": "gr", "type": "Any"}, {"lineNumber": 169, "col_offset": 56, "nodeName": "gr", "type": "Any"}, {"lineNumber": 169, "col_offset": 62, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 43, "nodeName": "gr", "type": "Any"}, {"lineNumber": 171, "col_offset": 56, "nodeName": "gr", "type": "Any"}, {"lineNumber": 171, "col_offset": 62, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "gr", "type": "Any"}, {"lineNumber": 173, "col_offset": 58, "nodeName": "gr", "type": "Any"}, {"lineNumber": 173, "col_offset": 64, "nodeName": "graphs_", "type": "List[Any]"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "self", "type": "StopGradientsGraphTest"}, {"lineNumber": 248, "col_offset": 17, "nodeName": "tape", "type": "Any"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 291, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 292, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 316, "col_offset": 34, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 316, "col_offset": 46, "nodeName": "field", "type": "str"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 319, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 319, "col_offset": 34, "nodeName": "field", "type": "str"}, {"lineNumber": 319, "col_offset": 42, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 319, "col_offset": 50, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 319, "col_offset": 62, "nodeName": "field", "type": "str"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 328, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 348, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 348, "col_offset": 34, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 348, "col_offset": 46, "nodeName": "field", "type": "str"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 351, "col_offset": 34, "nodeName": "field", "type": "str"}, {"lineNumber": 351, "col_offset": 42, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 50, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 351, "col_offset": 62, "nodeName": "field", "type": "str"}, {"lineNumber": 371, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 372, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 375, "col_offset": 37, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 376, "col_offset": 37, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 404, "col_offset": 55, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 408, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 408, "col_offset": 24, "nodeName": "constant", "type": "Any"}, {"lineNumber": 412, "col_offset": 18, "nodeName": "edges_dict", "type": "Dict[str, Any]"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "edges_dict", "type": "Dict[str, Any]"}, {"lineNumber": 414, "col_offset": 15, "nodeName": "edges_dict", "type": "Dict[str, Any]"}, {"lineNumber": 437, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 463, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 473, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 475, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 485, "col_offset": 20, "nodeName": "g", "type": "Any"}, {"lineNumber": 491, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "g", "type": "Any"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 563, "col_offset": 15, "nodeName": "g", "type": "Any"}, {"lineNumber": 565, "col_offset": 32, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 577, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 578, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 592, "col_offset": 15, "nodeName": "g", "type": "Any"}, {"lineNumber": 594, "col_offset": 32, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 609, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 613, "col_offset": 15, "nodeName": "graph", "type": "Any"}, {"lineNumber": 644, "col_offset": 13, "nodeName": "field", "type": "Any"}, {"lineNumber": 646, "col_offset": 10, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 647, "col_offset": 31, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 668, "col_offset": 29, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 676, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 677, "col_offset": 32, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 678, "col_offset": 30, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 679, "col_offset": 28, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 680, "col_offset": 67, "nodeName": "tf", "type": "Any"}, {"lineNumber": 683, "col_offset": 33, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 683, "col_offset": 41, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 683, "col_offset": 46, "nodeName": "key", "type": "str"}, {"lineNumber": 684, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 686, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 687, "col_offset": 35, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 687, "col_offset": 43, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 687, "col_offset": 48, "nodeName": "key", "type": "str"}, {"lineNumber": 709, "col_offset": 36, "nodeName": "k", "type": "Any"}, {"lineNumber": 710, "col_offset": 21, "nodeName": "expected", "type": "Any"}, {"lineNumber": 711, "col_offset": 21, "nodeName": "expected", "type": "Any"}, {"lineNumber": 720, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 720, "col_offset": 32, "nodeName": "index", "type": "slice"}, {"lineNumber": 720, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 720, "col_offset": 58, "nodeName": "index", "type": "slice"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 730, "col_offset": 31, "nodeName": "ac", "type": "Any"}, {"lineNumber": 772, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 772, "col_offset": 64, "nodeName": "int32", "type": "Any"}, {"lineNumber": 782, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 783, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 784, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 785, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 786, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 799, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 808, "col_offset": 32, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 828, "col_offset": 10, "nodeName": "tensor_or_none", "type": "Any"}, {"lineNumber": 880, "col_offset": 46, "nodeName": "ones", "type": "Any"}, {"lineNumber": 880, "col_offset": 59, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 885, "col_offset": 46, "nodeName": "ones", "type": "Any"}, {"lineNumber": 886, "col_offset": 46, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 888, "col_offset": 46, "nodeName": "ones", "type": "Any"}, {"lineNumber": 889, "col_offset": 46, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 913, "col_offset": 17, "nodeName": "edges", "type": "Any"}, {"lineNumber": 915, "col_offset": 23, "nodeName": "globals", "type": "Any"}, {"lineNumber": 934, "col_offset": 32, "nodeName": "padded_graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 936, "col_offset": 32, "nodeName": "padded_graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 938, "col_offset": 32, "nodeName": "padded_graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 940, "col_offset": 32, "nodeName": "padded_graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 942, "col_offset": 32, "nodeName": "padded_graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 944, "col_offset": 32, "nodeName": "padded_graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 946, "col_offset": 32, "nodeName": "padded_graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 967, "col_offset": 15, "nodeName": "this_graphs_tuple", "type": "Any"}, {"lineNumber": 987, "col_offset": 34, "nodeName": "example_i", "type": "int"}, {"lineNumber": 988, "col_offset": 41, "nodeName": "example_i", "type": "int"}, {"lineNumber": 1000, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1000, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1004, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1004, "col_offset": 36, "nodeName": "num_nodes", "type": "int"}, {"lineNumber": 1004, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1007, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1007, "col_offset": 36, "nodeName": "num_edges", "type": "int"}, {"lineNumber": 1007, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1010, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1010, "col_offset": 28, "nodeName": "padding_data_dict", "type": "Any"}, {"lineNumber": 1011, "col_offset": 68, "nodeName": "num_nodes", "type": "int"}, {"lineNumber": 1012, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1012, "col_offset": 28, "nodeName": "padding_data_dict", "type": "Any"}, {"lineNumber": 1013, "col_offset": 68, "nodeName": "num_nodes", "type": "int"}, {"lineNumber": 1015, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1015, "col_offset": 28, "nodeName": "padding_data_dict", "type": "Any"}, {"lineNumber": 1016, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1017, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1017, "col_offset": 28, "nodeName": "padding_data_dict", "type": "Any"}, {"lineNumber": 1018, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1078, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1079, "col_offset": 10, "nodeName": "errors", "type": "Any"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "edge", "type": "int"}, {"lineNumber": 84, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 119, "col_offset": 55, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 121, "col_offset": 55, "nodeName": "concat_graph", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "edges", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "edges", "type": "Any"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "int32", "type": "Any"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 236, "col_offset": 42, "nodeName": "int32", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 290, "col_offset": 60, "nodeName": "int32", "type": "Any"}, {"lineNumber": 291, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 291, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 292, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 327, "col_offset": 60, "nodeName": "int32", "type": "Any"}, {"lineNumber": 328, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 328, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "offset0", "type": "Any"}, {"lineNumber": 375, "col_offset": 37, "nodeName": "offset1", "type": "Any"}, {"lineNumber": 376, "col_offset": 37, "nodeName": "offset2", "type": "Any"}, {"lineNumber": 384, "col_offset": 41, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 408, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 408, "col_offset": 36, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 426, "col_offset": 26, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 437, "col_offset": 24, "nodeName": "edges", "type": "Any"}, {"lineNumber": 447, "col_offset": 39, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 463, "col_offset": 24, "nodeName": "globals", "type": "Any"}, {"lineNumber": 474, "col_offset": 39, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 491, "col_offset": 24, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 502, "col_offset": 39, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 578, "col_offset": 24, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 616, "col_offset": 17, "nodeName": "exclude_self_edges", "type": "Any"}, {"lineNumber": 616, "col_offset": 39, "nodeName": "e1", "type": "int"}, {"lineNumber": 616, "col_offset": 45, "nodeName": "e2", "type": "int"}, {"lineNumber": 617, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 645, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 646, "col_offset": 21, "nodeName": "field", "type": "Any"}, {"lineNumber": 647, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 647, "col_offset": 64, "nodeName": "field", "type": "Any"}, {"lineNumber": 650, "col_offset": 19, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 650, "col_offset": 33, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 676, "col_offset": 10, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 684, "col_offset": 44, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 684, "col_offset": 52, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 684, "col_offset": 57, "nodeName": "key", "type": "str"}, {"lineNumber": 686, "col_offset": 46, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 686, "col_offset": 54, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 686, "col_offset": 59, "nodeName": "key", "type": "str"}, {"lineNumber": 730, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 731, "col_offset": 23, "nodeName": "ex", "type": "Any"}, {"lineNumber": 732, "col_offset": 23, "nodeName": "ex", "type": "Any"}, {"lineNumber": 772, "col_offset": 64, "nodeName": "tf", "type": "Any"}, {"lineNumber": 782, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 782, "col_offset": 60, "nodeName": "int32", "type": "Any"}, {"lineNumber": 783, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 783, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 784, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 785, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 786, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 794, "col_offset": 10, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 794, "col_offset": 18, "nodeName": "_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 794, "col_offset": 31, "nodeName": "field", "type": "str"}, {"lineNumber": 808, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 833, "col_offset": 9, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 833, "col_offset": 22, "nodeName": "input_nest", "type": "Any"}, {"lineNumber": 880, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 880, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 885, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 885, "col_offset": 64, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 886, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 886, "col_offset": 64, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 888, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 888, "col_offset": 64, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 889, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 889, "col_offset": 64, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 913, "col_offset": 17, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 914, "col_offset": 28, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 915, "col_offset": 23, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 968, "col_offset": 18, "nodeName": "edges", "type": "Any"}, {"lineNumber": 970, "col_offset": 20, "nodeName": "globals", "type": "Any"}, {"lineNumber": 1000, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 1004, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 1007, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 1011, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1013, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1016, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1016, "col_offset": 38, "nodeName": "num_edges", "type": "int"}, {"lineNumber": 1016, "col_offset": 56, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1018, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1018, "col_offset": 38, "nodeName": "num_edges", "type": "int"}, {"lineNumber": 1018, "col_offset": 56, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1079, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 236, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 290, "col_offset": 60, "nodeName": "tf", "type": "Any"}, {"lineNumber": 291, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 291, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 292, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 327, "col_offset": 60, "nodeName": "tf", "type": "Any"}, {"lineNumber": 328, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 328, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 437, "col_offset": 24, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 447, "col_offset": 39, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 463, "col_offset": 24, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 474, "col_offset": 39, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 491, "col_offset": 24, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 502, "col_offset": 39, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 578, "col_offset": 24, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 617, "col_offset": 12, "nodeName": "expected_edges", "type": "List[Tuple[int, int]]"}, {"lineNumber": 650, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 650, "col_offset": 33, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 782, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 782, "col_offset": 60, "nodeName": "tf", "type": "Any"}, {"lineNumber": 783, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 783, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 784, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 785, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 786, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 794, "col_offset": 18, "nodeName": "self", "type": "TestNestToNumpy"}, {"lineNumber": 808, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 833, "col_offset": 9, "nodeName": "tree", "type": "Any"}, {"lineNumber": 914, "col_offset": 28, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 968, "col_offset": 18, "nodeName": "this_graphs_tuple", "type": "Any"}, {"lineNumber": 969, "col_offset": 18, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 970, "col_offset": 20, "nodeName": "this_graphs_tuple", "type": "Any"}, {"lineNumber": 1011, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1011, "col_offset": 38, "nodeName": "num_edges", "type": "int"}, {"lineNumber": 1011, "col_offset": 56, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1013, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1013, "col_offset": 38, "nodeName": "num_edges", "type": "int"}, {"lineNumber": 1013, "col_offset": 56, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1016, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 1018, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 384, "col_offset": 41, "nodeName": "dict_", "type": "Any"}, {"lineNumber": 426, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 426, "col_offset": 34, "nodeName": "graph", "type": "Any"}, {"lineNumber": 426, "col_offset": 41, "nodeName": "key", "type": "str"}, {"lineNumber": 447, "col_offset": 39, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 474, "col_offset": 39, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 502, "col_offset": 39, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 617, "col_offset": 35, "nodeName": "e1", "type": "int"}, {"lineNumber": 617, "col_offset": 40, "nodeName": "offset", "type": "int"}, {"lineNumber": 617, "col_offset": 48, "nodeName": "e2", "type": "int"}, {"lineNumber": 617, "col_offset": 53, "nodeName": "offset", "type": "int"}, {"lineNumber": 645, "col_offset": 35, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 650, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 969, "col_offset": 18, "nodeName": "this_graphs_tuple", "type": "Any"}, {"lineNumber": 1011, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 1013, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 384, "col_offset": 47, "nodeName": "key", "type": "str"}]