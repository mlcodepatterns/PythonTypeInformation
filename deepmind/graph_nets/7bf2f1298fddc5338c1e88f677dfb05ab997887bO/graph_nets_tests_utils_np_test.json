[{"lineNumber": 130, "col_offset": 0, "nodeName": "_single_data_dict_to_networkx", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests.test_utils.GraphsTest]"}, {"lineNumber": 33, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 35, "col_offset": 2, "nodeName": "test_compute_stacked_offsets", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 2, "nodeName": "test_concatenate_data_dicts", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests.test_utils.GraphsTest]"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 75, "col_offset": 2, "nodeName": "test_data_dicts_to_graphs_tuple_missing_field_raises", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 2, "nodeName": "test_data_dicts_to_graphs_tuple_infer_n_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 2, "nodeName": "test_data_dicts_to_graphs_tuple_cast_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 2, "nodeName": "test_data_dicts_to_graphs_tuple_from_lists", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests.test_utils.GraphsTest]"}, {"lineNumber": 146, "col_offset": 52, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 148, "col_offset": 2, "nodeName": "test_order_preserving", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 2, "nodeName": "test_networkxs_to_graphs_tuple_with_none_fields", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 2, "nodeName": "test_networkxs_to_graphs_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 2, "nodeName": "test_networkxs_to_graphs_tuple_raises_key_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 2, "nodeName": "test_networkxs_to_graphs_tuple_raises_assertion_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "GraphsTest", "type": "Type[graph_nets.tests.test_utils.GraphsTest]"}, {"lineNumber": 268, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 270, "col_offset": 2, "nodeName": "test_get_single_item", "type": "Callable[[Any], Any]"}, {"lineNumber": 281, "col_offset": 2, "nodeName": "test_get_many_items", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 33, "col_offset": 47, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 131, "col_offset": 2, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 146, "col_offset": 52, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 268, "col_offset": 41, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 293, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "sizes", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "offsets0", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "offsets1", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "cat", "type": "Dict[Any, Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "field", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "graphs", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "field", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "graphs", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "data_dicts", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "OrderedMultiDiGraph", "type": "Any"}, {"lineNumber": 132, "col_offset": 5, "nodeName": "size", "type": "Any"}, {"lineNumber": 136, "col_offset": 5, "nodeName": "size", "type": "Any"}, {"lineNumber": 141, "col_offset": 2, "nodeName": "graph", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "data_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "node_index", "type": "int"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "receivers", "type": "List[int]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "senders", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "graphs_graph", "type": "Dict[str, Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "graph0", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "graph_nxs", "type": "List[Any]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "data_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 194, "col_offset": 21, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "first_node", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "first_edge", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "first_node", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "first_edge", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "graphs", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "graphs", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "graph_nxs", "type": "List[Any]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "index", "type": "int"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "expected", "type": "Dict[Any, Any]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "graphs", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "index", "type": "slice"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "expected", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "graphs", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "graphs2", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "actual", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "_compute_stacked_offsets", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 49, "nodeName": "sizes", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 56, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "_compute_stacked_offsets", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "sizes", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "expected_offsets", "type": "List[int]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "expected_offsets", "type": "List[int]"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "_concatenate_data_dicts", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "items", "type": "Callable"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[[Any], graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "_assert_graph_equals_np", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 73, "col_offset": 55, "nodeName": "graphs", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "self", "type": "DataDictsConversionTest"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[[Any], graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "n_node", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "self", "type": "DataDictsConversionTest"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[[Any], graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "self", "type": "DataDictsConversionTest"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[[Any], graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "_assert_graph_equals_np", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "reference_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 112, "col_offset": 55, "nodeName": "graphs", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[[Any], graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 119, "col_offset": 55, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "graphs_tuple_to_data_dicts", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 121, "col_offset": 53, "nodeName": "graphs_tuple", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "data_dict", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "product", "type": "Callable"}, {"lineNumber": 122, "col_offset": 51, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 122, "col_offset": 64, "nodeName": "data_dicts", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "expected_data_dict", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "data_dict", "type": "Any"}, {"lineNumber": 124, "col_offset": 41, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 124, "col_offset": 45, "nodeName": "graphs_dicts_out", "type": "Any"}, {"lineNumber": 124, "col_offset": 68, "nodeName": "data_dicts", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "nx", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "add_edges_from", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "edge_data", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 141, "col_offset": 2, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "DiGraph", "type": "Any"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "edge_index", "type": "int"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 157, "col_offset": 6, "nodeName": "edge_data", "type": "Dict[str, Union[numpy.ndarray, int]]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "networkx_to_data_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 160, "col_offset": 50, "nodeName": "graph", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "receivers", "type": "List[int]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "senders", "type": "List[int]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "OrderedMultiDiGraph", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "networkx_to_data_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "networkx_to_data_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "add_edge", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "networkx_to_data_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "networkx_to_data_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[[Any], graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 192, "col_offset": 49, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 194, "col_offset": 21, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 47, "nodeName": "graph_nxs", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "_assert_graph_equals_np", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "graph0", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 202, "col_offset": 41, "nodeName": "graph", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "_single_data_dict_to_networkx", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "_single_data_dict_to_networkx", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "_single_data_dict_to_networkx", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "_single_data_dict_to_networkx", "type": "Callable[[Any], Any]"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 238, "col_offset": 10, "nodeName": "graph", "type": "Any"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[[Any], graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 240, "col_offset": 49, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 40, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "graphs_tuple_to_networkxs", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 242, "col_offset": 51, "nodeName": "graphs", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "data_dict", "type": "Any"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 243, "col_offset": 31, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "graphs_dicts_out", "type": "Any"}, {"lineNumber": 243, "col_offset": 58, "nodeName": "graph_nxs", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "nodes_data", "type": "Any"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "graphs_dicts_out", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 274, "col_offset": 13, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[[Any], graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 274, "col_offset": 49, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "get_graph", "type": "Callable[[Any, Any], graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "graphs", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 275, "col_offset": 39, "nodeName": "index", "type": "int"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "actual", "type": "Any"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "graphs_tuple_to_data_dicts", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 276, "col_offset": 50, "nodeName": "graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "items", "type": "Callable"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "graphs_dicts_out", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 285, "col_offset": 13, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[[Any], graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 285, "col_offset": 49, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 286, "col_offset": 14, "nodeName": "get_graph", "type": "Callable[[Any, Any], graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 286, "col_offset": 33, "nodeName": "graphs", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 286, "col_offset": 41, "nodeName": "index", "type": "slice"}, {"lineNumber": 287, "col_offset": 13, "nodeName": "graphs_tuple_to_data_dicts", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 287, "col_offset": 49, "nodeName": "graphs2", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "ex", "type": "nothing"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "ac", "type": "nothing"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 289, "col_offset": 22, "nodeName": "expected", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 289, "col_offset": 32, "nodeName": "actual", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 39, "col_offset": 56, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 39, "col_offset": 65, "nodeName": "repeats", "type": "List[int]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "self", "type": "ConcatenationTest"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "self", "type": "ConcatenationTest"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "self", "type": "ConcatenationTest"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "cat", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 49, "col_offset": 60, "nodeName": "v", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 6, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 80, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 81, "col_offset": 6, "nodeName": "data_dicts_to_graphs_tuple", "type": "Callable[[Any], graph_nets.graphs.GraphsTuple]"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "graphs_dicts_in", "type": "Any"}, {"lineNumber": 86, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "self", "type": "DataDictsConversionTest"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "self", "type": "DataDictsConversionTest"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "astype", "type": "Any"}, {"lineNumber": 96, "col_offset": 63, "nodeName": "int16", "type": "Any"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 97, "col_offset": 59, "nodeName": "float64", "type": "Any"}, {"lineNumber": 98, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "astype", "type": "Any"}, {"lineNumber": 98, "col_offset": 55, "nodeName": "float64", "type": "Any"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "astype", "type": "Any"}, {"lineNumber": 99, "col_offset": 55, "nodeName": "float64", "type": "Any"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "self", "type": "DataDictsConversionTest"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "int32", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "float64", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "self", "type": "DataDictsConversionTest"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "self", "type": "DataDictsConversionTest"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "self", "type": "DataDictsConversionTest"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 119, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "graphs_tuple", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "itertools", "type": "module"}, {"lineNumber": 123, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 124, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "k", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "v", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "items", "type": "Any"}, {"lineNumber": 132, "col_offset": 5, "nodeName": "data_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "data_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 6, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 136, "col_offset": 5, "nodeName": "data_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "data_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "data_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "nx", "type": "Any"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "node_index", "type": "int"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "receiver", "type": "int"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "sender", "type": "int"}, {"lineNumber": 155, "col_offset": 52, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 155, "col_offset": 56, "nodeName": "receivers", "type": "List[int]"}, {"lineNumber": 155, "col_offset": 67, "nodeName": "senders", "type": "List[int]"}, {"lineNumber": 157, "col_offset": 64, "nodeName": "edge_index", "type": "int"}, {"lineNumber": 158, "col_offset": 6, "nodeName": "add_edge", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "sender", "type": "int"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "receiver", "type": "int"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "graphs_graph", "type": "Dict[str, Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "graphs_graph", "type": "Dict[str, Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "graphs_graph", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 164, "col_offset": 50, "nodeName": "graphs_graph", "type": "Dict[str, Any]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "nx", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "data_dict", "type": "Dict[str, Any]"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 192, "col_offset": 49, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 195, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 201, "col_offset": 60, "nodeName": "hints", "type": "Dict[str, Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 206, "col_offset": 45, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "first_node", "type": "Any"}, {"lineNumber": 209, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 211, "col_offset": 6, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 45, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "first_edge", "type": "Any"}, {"lineNumber": 215, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 220, "col_offset": 45, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "first_node", "type": "Any"}, {"lineNumber": 223, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 225, "col_offset": 6, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 226, "col_offset": 45, "nodeName": "graphs_dicts_in", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "first_edge", "type": "Any"}, {"lineNumber": 229, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 231, "col_offset": 6, "nodeName": "networkxs_to_graphs_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 240, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "graphs", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 22, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 249, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 255, "col_offset": 19, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 257, "col_offset": 10, "nodeName": "v", "type": "Any"}, {"lineNumber": 257, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 257, "col_offset": 50, "nodeName": "edges_data", "type": "List[Any]"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 263, "col_offset": 56, "nodeName": "edges_data", "type": "List[Any]"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "self", "type": "GetItemTest"}, {"lineNumber": 272, "col_offset": 37, "nodeName": "index", "type": "int"}, {"lineNumber": 274, "col_offset": 13, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 274, "col_offset": 49, "nodeName": "self", "type": "GetItemTest"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "expected", "type": "Dict[Any, Any]"}, {"lineNumber": 279, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 279, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "self", "type": "GetItemTest"}, {"lineNumber": 283, "col_offset": 37, "nodeName": "index", "type": "slice"}, {"lineNumber": 285, "col_offset": 13, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 285, "col_offset": 49, "nodeName": "self", "type": "GetItemTest"}, {"lineNumber": 286, "col_offset": 14, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 287, "col_offset": 13, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 290, "col_offset": 10, "nodeName": "k", "type": "nothing"}, {"lineNumber": 290, "col_offset": 13, "nodeName": "v", "type": "nothing"}, {"lineNumber": 290, "col_offset": 18, "nodeName": "items", "type": "nothing"}, {"lineNumber": 294, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "offsets0", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "offsets1", "type": "Any"}, {"lineNumber": 49, "col_offset": 6, "nodeName": "self", "type": "ConcatenationTest"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "reference_graph", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 49, "col_offset": 56, "nodeName": "k", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "field", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "field", "type": "Any"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 72, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "graphs", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "field", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 80, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 6, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 95, "col_offset": 46, "nodeName": "int64", "type": "Any"}, {"lineNumber": 96, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "self", "type": "DataDictsConversionTest"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "self", "type": "DataDictsConversionTest"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 123, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "data_dict", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "expected_data_dict", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "k", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 134, "col_offset": 6, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 139, "col_offset": 10, "nodeName": "x", "type": "Any"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "graph", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 6, "nodeName": "graph", "type": "Any"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "edge_data", "type": "Dict[str, Union[numpy.ndarray, int]]"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "x", "type": "int"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "x", "type": "int"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "x", "type": "int"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "x", "type": "int"}, {"lineNumber": 195, "col_offset": 6, "nodeName": "graph_nxs", "type": "List[Any]"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "_single_data_dict_to_networkx", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 53, "nodeName": "data_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 206, "col_offset": 45, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 209, "col_offset": 9, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 211, "col_offset": 6, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 211, "col_offset": 42, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 212, "col_offset": 45, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "edges", "type": "Any"}, {"lineNumber": 215, "col_offset": 9, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 216, "col_offset": 42, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 220, "col_offset": 45, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 223, "col_offset": 9, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 225, "col_offset": 6, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 225, "col_offset": 42, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 226, "col_offset": 45, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "edges", "type": "Any"}, {"lineNumber": 229, "col_offset": 9, "nodeName": "self", "type": "NetworkxConversionTest"}, {"lineNumber": 231, "col_offset": 6, "nodeName": "utils_np", "type": "module"}, {"lineNumber": 231, "col_offset": 42, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "v", "type": "Any"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 249, "col_offset": 62, "nodeName": "nodes_data", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 250, "col_offset": 28, "nodeName": "j", "type": "Any"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 256, "col_offset": 10, "nodeName": "edges", "type": "Any"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "_", "type": "Any"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "e", "type": "Any"}, {"lineNumber": 257, "col_offset": 30, "nodeName": "data_dict", "type": "Any"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "none_fields", "type": "Any"}, {"lineNumber": 263, "col_offset": 10, "nodeName": "data_dict", "type": "Any"}, {"lineNumber": 263, "col_offset": 34, "nodeName": "data_dict", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "s", "type": "Any"}, {"lineNumber": 264, "col_offset": 28, "nodeName": "i", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "r", "type": "Any"}, {"lineNumber": 265, "col_offset": 28, "nodeName": "j", "type": "Any"}, {"lineNumber": 279, "col_offset": 6, "nodeName": "self", "type": "GetItemTest"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 290, "col_offset": 18, "nodeName": "ex", "type": "nothing"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 291, "col_offset": 28, "nodeName": "v", "type": "nothing"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "self", "type": "ConcatenationTest"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "field", "type": "Any"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 95, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "key", "type": "str"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "out", "type": "graph_nets.graphs.GraphsTuple"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "key", "type": "str"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 123, "col_offset": 39, "nodeName": "none_field", "type": "Any"}, {"lineNumber": 127, "col_offset": 10, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "v", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "data_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 41, "nodeName": "edge_index", "type": "int"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "range", "type": "Type[xrange]"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "data_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 31, "nodeName": "graph", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "data_dict", "type": "Any"}, {"lineNumber": 247, "col_offset": 50, "nodeName": "graph", "type": "Any"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "j", "type": "Any"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "n", "type": "Any"}, {"lineNumber": 249, "col_offset": 42, "nodeName": "data_dict", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 10, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 254, "col_offset": 10, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "v", "type": "Any"}, {"lineNumber": 256, "col_offset": 10, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 259, "col_offset": 10, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 261, "col_offset": 10, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 261, "col_offset": 30, "nodeName": "v", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 36, "nodeName": "k", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "GetItemTest"}, {"lineNumber": 291, "col_offset": 31, "nodeName": "ac", "type": "nothing"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "field", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "graph_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "data_dict", "type": "Any"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 52, "nodeName": "node_index", "type": "int"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "data_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "data_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "graph", "type": "Any"}, {"lineNumber": 245, "col_offset": 31, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 247, "col_offset": 50, "nodeName": "graph_nx", "type": "Any"}, {"lineNumber": 252, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "n", "type": "Any"}, {"lineNumber": 254, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 33, "nodeName": "n", "type": "Any"}, {"lineNumber": 259, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "e", "type": "Any"}, {"lineNumber": 261, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 33, "nodeName": "e", "type": "Any"}, {"lineNumber": 291, "col_offset": 34, "nodeName": "k", "type": "nothing"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 66, "nodeName": "field", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "n_edge", "type": "Any"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "k", "type": "Any"}, {"lineNumber": 256, "col_offset": 51, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "graph_dict", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "reference_graph", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "self", "type": "Any"}]