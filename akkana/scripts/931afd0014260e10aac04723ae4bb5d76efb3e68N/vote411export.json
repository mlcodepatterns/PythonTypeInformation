[{"lineNumber": 199, "col_offset": 0, "nodeName": "sort_candidates", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 246, "col_offset": 0, "nodeName": "convert_vote411_file", "type": "Callable[..., Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "html_converter", "type": "Any"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "body_width", "type": "int"}, {"lineNumber": 12, "col_offset": 17, "nodeName": "HTML2Text", "type": "Any"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "html_converter", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "FONT_NAME", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "BASE_SIZE", "type": "int"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "TITLE_SIZE", "type": "int"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "NAME_SIZE", "type": "int"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "QUESTION_SIZE", "type": "int"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "sorted_candidates", "type": "List[Candidate]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "num_prezzies", "type": "int"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "sorted_candidates", "type": "List[Candidate]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 249, "col_offset": 7, "nodeName": "orderfile", "type": "Any"}, {"lineNumber": 330, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 343, "col_offset": 13, "nodeName": "infiles", "type": "Any"}, {"lineNumber": 12, "col_offset": 17, "nodeName": "html2text", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "name", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "lastname", "type": "str"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "lastname", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "office", "type": "str"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "office", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "party", "type": "str"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "party", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "sortkey", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "outfile", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "doc", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "para", "type": "None"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "use_headings", "type": "bool"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "font", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "FONT_NAME", "type": "str"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "use_headings", "type": "bool"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "use_headings", "type": "bool"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "para", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "bold", "type": "bool"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "rFonts", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "rFonts", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "fullname", "type": "str"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "fullname", "type": "str"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "foundit", "type": "bool"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "cand_c", "type": "Candidate"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "csvfp", "type": "TextIO"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "name_i", "type": "int"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "lastname_i", "type": "int"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "office_i", "type": "int"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "desc_i", "type": "int"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "party_i", "type": "int"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "question1_i", "type": "int"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "cur_office", "type": "None"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "candidate", "type": "Candidate"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 341, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 343, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "comparename", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "add_name_and_party", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "name", "type": "Union[str, Any]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "questions", "type": "Union[List[str], Any]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "sortkey", "type": "str"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "sortkey", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "office", "type": "Union[str, Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "description", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "name", "type": "Union[str, Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "party", "type": "str"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "question", "type": "str"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "answer", "type": "Union[str, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 99, "col_offset": 49, "nodeName": "party", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "answer", "type": "Union[str, Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "outfp", "type": "TextIO"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "outfile", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "Document", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "Pt", "type": "Any"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "BASE_SIZE", "type": "int"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "heading", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "heading", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "add_paragraph", "type": "Any"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "add_run", "type": "Any"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "question", "type": "str"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "Pt", "type": "Any"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "QUESTION_SIZE", "type": "int"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "add_run", "type": "Any"}, {"lineNumber": 172, "col_offset": 14, "nodeName": "add_run", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "answer", "type": "Union[str, Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "Pt", "type": "Any"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "BASE_SIZE", "type": "int"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "Pt", "type": "Any"}, {"lineNumber": 176, "col_offset": 49, "nodeName": "font_size", "type": "int"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "rPr", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "set", "type": "Any"}, {"lineNumber": 180, "col_offset": 52, "nodeName": "FONT_NAME", "type": "str"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "color", "type": "Any"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "RGBColor", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "outfile", "type": "str"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "outfile", "type": "str"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "num_prezzies", "type": "int"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "foundit", "type": "bool"}, {"lineNumber": 234, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "sorted_candidates", "type": "List[Candidate]"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "num_prezzies", "type": "int"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 32, "nodeName": "orderfp", "type": "TextIO"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 262, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "filename", "type": "Any"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "reader", "type": "Callable[..., _csv._reader]"}, {"lineNumber": 263, "col_offset": 28, "nodeName": "csvfp", "type": "TextIO"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "next", "type": "Callable"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "formatter", "type": "TextFormatter"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "questionnum", "type": "int"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "sort_candidates", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 320, "col_offset": 41, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 320, "col_offset": 53, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "save", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 341, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 341, "col_offset": 29, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "convert_vote411_file", "type": "Callable[..., Any]"}, {"lineNumber": 344, "col_offset": 29, "nodeName": "f", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "re", "type": "module"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "comparename", "type": "str"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "comparename", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "formatter", "type": "Union[DocxFormatter, HtmlFormatter, TextFormatter]"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "add_q_and_a", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "other", "type": "Any"}, {"lineNumber": 96, "col_offset": 52, "nodeName": "description", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "outfile", "type": "str"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "docx", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "styles", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "shared", "type": "Any"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "add_heading", "type": "Any"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "office", "type": "Union[str, Any]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "set_heading_style", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "heading", "type": "Any"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "TITLE_SIZE", "type": "int"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "add_paragraph", "type": "Any"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "description", "type": "Any"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "add_heading", "type": "Any"}, {"lineNumber": 151, "col_offset": 43, "nodeName": "name", "type": "Union[str, Any]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "set_heading_style", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "heading", "type": "Any"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "NAME_SIZE", "type": "int"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "add_paragraph", "type": "Any"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "party", "type": "str"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "doc", "type": "Any"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "para", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "shared", "type": "Any"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "para", "type": "Any"}, {"lineNumber": 172, "col_offset": 14, "nodeName": "para", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "shared", "type": "Any"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "style", "type": "Any"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "shared", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "element", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "rFonts", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "qn", "type": "Any"}, {"lineNumber": 180, "col_offset": 52, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "shared", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "doc", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "re", "type": "module"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "comparename", "type": "str"}, {"lineNumber": 226, "col_offset": 37, "nodeName": "fullname", "type": "str"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "foundit", "type": "bool"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 234, "col_offset": 37, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 236, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 236, "col_offset": 31, "nodeName": "sorted_candidates", "type": "List[Candidate]"}, {"lineNumber": 237, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 237, "col_offset": 37, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "orderfile", "type": "Any"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 251, "col_offset": 36, "nodeName": "orderfp", "type": "TextIO"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "csv", "type": "module"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "TextFormatter", "type": "Type[TextFormatter]"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "formatter", "type": "HtmlFormatter"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "q_i", "type": "int"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "questionnum", "type": "int"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "office", "type": "Union[str, Any]"}, {"lineNumber": 321, "col_offset": 35, "nodeName": "cur_office", "type": "None"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "cur_office", "type": "Union[str, Any]"}, {"lineNumber": 322, "col_offset": 29, "nodeName": "office", "type": "Union[str, Any]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "output", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 29, "nodeName": "formatter", "type": "Union[DocxFormatter, HtmlFormatter, TextFormatter]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "formatter", "type": "Union[DocxFormatter, HtmlFormatter, TextFormatter]"}, {"lineNumber": 341, "col_offset": 29, "nodeName": "sys", "type": "module"}, {"lineNumber": 344, "col_offset": 36, "nodeName": "format", "type": "Any"}, {"lineNumber": 344, "col_offset": 59, "nodeName": "orderfile", "type": "Any"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "re", "type": "module"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "lastname", "type": "str"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "answers", "type": "Union[List[str], Any]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "answers", "type": "Union[List[str], Any]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "formatter", "type": "Union[DocxFormatter, HtmlFormatter, TextFormatter]"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "answers", "type": "Union[List[str], Any]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "outfp", "type": "TextIO"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "doc", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "docx", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "doc", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "doc", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "docx", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 172, "col_offset": 14, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "docx", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "heading", "type": "Any"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "docx", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "style", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "ns", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "style", "type": "Any"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "docx", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "fullname", "type": "str"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "cand_c", "type": "Candidate"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "cand_c", "type": "Candidate"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "csv", "type": "module"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "HtmlFormatter", "type": "Type[HtmlFormatter]"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "formatter", "type": "DocxFormatter"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "question1_i", "type": "int"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 312, "col_offset": 30, "nodeName": "Candidate", "type": "Type[Candidate]"}, {"lineNumber": 314, "col_offset": 40, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 314, "col_offset": 51, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "candidate", "type": "Candidate"}, {"lineNumber": 322, "col_offset": 29, "nodeName": "candidate", "type": "Candidate"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "add_office", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 37, "nodeName": "cur_office", "type": "Union[str, Any]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "candidate", "type": "Candidate"}, {"lineNumber": 344, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 344, "col_offset": 59, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "name", "type": "str"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 41, "col_offset": 46, "nodeName": "isalpha", "type": "Callable[[], bool]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 51, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "heading", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "oxml", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "heading", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "sorted_candidates", "type": "List[Candidate]"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "DocxFormatter", "type": "Type[DocxFormatter]"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 305, "col_offset": 23, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "q_i", "type": "int"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 307, "col_offset": 33, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 308, "col_offset": 31, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 312, "col_offset": 40, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 312, "col_offset": 53, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 313, "col_offset": 40, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 313, "col_offset": 55, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "formatter", "type": "Union[DocxFormatter, HtmlFormatter, TextFormatter]"}, {"lineNumber": 324, "col_offset": 37, "nodeName": "strip", "type": "Any"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 41, "col_offset": 46, "nodeName": "c", "type": "str"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "docx", "type": "Any"}, {"lineNumber": 302, "col_offset": 37, "nodeName": "questionnum", "type": "int"}, {"lineNumber": 307, "col_offset": 37, "nodeName": "q_i", "type": "int"}, {"lineNumber": 312, "col_offset": 44, "nodeName": "name_i", "type": "int"}, {"lineNumber": 312, "col_offset": 57, "nodeName": "lastname_i", "type": "int"}, {"lineNumber": 313, "col_offset": 44, "nodeName": "office_i", "type": "int"}, {"lineNumber": 313, "col_offset": 59, "nodeName": "party_i", "type": "int"}, {"lineNumber": 308, "col_offset": 35, "nodeName": "q_i", "type": "int"}, {"lineNumber": 324, "col_offset": 37, "nodeName": "handle", "type": "Any"}, {"lineNumber": 324, "col_offset": 37, "nodeName": "html_converter", "type": "Any"}, {"lineNumber": 324, "col_offset": 59, "nodeName": "row", "type": "Union[List[str], collections.OrderedDict[str, str]]"}, {"lineNumber": 324, "col_offset": 63, "nodeName": "desc_i", "type": "int"}]