[{"lineNumber": 19, "col_offset": 0, "nodeName": "search_for_keywords", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "search_for_keywords_in", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "has_match", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "Usage", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "parse_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "results", "type": "List[str]"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "ignorecase", "type": "bool"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "pat", "type": "str"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "grepdirs", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "results", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "results", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "filetags", "type": "Dict[str, str]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "imgfile", "type": "str"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "results", "type": "List[str]"}, {"lineNumber": 115, "col_offset": 7, "nodeName": "ignorecase", "type": "bool"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "pat", "type": "str"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "notpats", "type": "List[str]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "pat", "type": "str"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "andpats", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "pat", "type": "str"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "orpats", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "ret", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "pat", "type": "str"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "ret", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 195, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "args", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "r", "type": "List[str]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "s", "type": "Set[str]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "r", "type": "List[str]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "f", "type": "str"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "r", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "orpats", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "andpats", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "notpats", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "d", "type": "str"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "d", "type": "str"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "tags", "type": "str"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "flags", "type": "int"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "IGNORECASE", "type": "int"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "flags", "type": "int"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "orpats", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "ret", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "ret", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "ret", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "ret", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "ret", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "parse_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "search_for_keywords", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "r", "type": "List[str]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "s", "type": "Set[str]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "d", "type": "str"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "d", "type": "str"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "tags", "type": "str"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "imgfile", "type": "str"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "filetags", "type": "Dict[str, str]"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "has_match", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "tags", "type": "str"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "orpats", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "andpats", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 44, "nodeName": "notpats", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 53, "nodeName": "ignorecase", "type": "bool"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "pat", "type": "str"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "tags", "type": "str"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "pat", "type": "str"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "tags", "type": "str"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "search", "type": "Callable"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "pat", "type": "str"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "tags", "type": "str"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "flags", "type": "int"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "Usage", "type": "Callable[[], Any]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "args", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "args", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 202, "col_offset": 44, "nodeName": "args", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 202, "col_offset": 61, "nodeName": "args", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 203, "col_offset": 28, "nodeName": "args", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "r", "type": "List[str]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 14, "nodeName": "f", "type": "str"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "p", "type": "str"}, {"lineNumber": 32, "col_offset": 38, "nodeName": "orpats", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "p", "type": "str"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "andpats", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "p", "type": "str"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "notpats", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "glob", "type": "module"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "expanduser", "type": "Callable"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "pat", "type": "str"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "root", "type": "str"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "dirs", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "files", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "walk", "type": "Callable"}, {"lineNumber": 38, "col_offset": 45, "nodeName": "d", "type": "str"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "f", "type": "str"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "files", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "d", "type": "str"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "f", "type": "str"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "line", "type": "str"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "filepath", "type": "str"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "filetags", "type": "Dict[str, str]"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "imgfile", "type": "str"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "imgfile", "type": "str"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 150, "col_offset": 48, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "ret", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "pat", "type": "str"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "sys", "type": "module"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "p", "type": "str"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "p", "type": "str"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "p", "type": "str"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "os", "type": "module"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "files", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "line", "type": "str"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "line", "type": "str"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "line", "type": "str"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "line", "type": "str"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "d", "type": "str"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "imgfile", "type": "str"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "filepath", "type": "str"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "tags", "type": "str"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "d", "type": "str"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "results", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 48, "nodeName": "path", "type": "module"}, {"lineNumber": 150, "col_offset": 65, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "ret", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "pat", "type": "str"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "pat", "type": "str"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "pat", "type": "str"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "line", "type": "str"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "filepath", "type": "str"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "filetags", "type": "Dict[str, str]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "filetags", "type": "Dict[str, str]"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "tags", "type": "str"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "filetags", "type": "Dict[str, str]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "filetags", "type": "Dict[str, str]"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "d", "type": "str"}, {"lineNumber": 150, "col_offset": 48, "nodeName": "os", "type": "module"}, {"lineNumber": 150, "col_offset": 65, "nodeName": "sys", "type": "module"}, {"lineNumber": 168, "col_offset": 13, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "ret", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "ret", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 188, "col_offset": 34, "nodeName": "pat", "type": "str"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "f", "type": "str"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "f", "type": "str"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "search_for_keywords_in", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 58, "nodeName": "root", "type": "str"}, {"lineNumber": 43, "col_offset": 64, "nodeName": "f", "type": "str"}, {"lineNumber": 44, "col_offset": 58, "nodeName": "orpats", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 58, "nodeName": "andpats", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 58, "nodeName": "notpats", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 58, "nodeName": "ignorecase", "type": "bool"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "filepath", "type": "str"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "filepath", "type": "str"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "filepath", "type": "str"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "filepath", "type": "str"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "Usage", "type": "Callable[[], Any]"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "ret", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "ret", "type": "Dict[str, Union[bool, List[str]]]"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "filetags", "type": "Dict[str, str]"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "args", "type": "List[str]"}]