[{"lineNumber": 29, "col_offset": 0, "nodeName": "decode_piece", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "decode_and_split", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "decode_file", "type": "Callable[..., Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "Debug", "type": "bool"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "progname", "type": "str"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "Usage", "type": "str"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "ret", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "part", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "ret", "type": "str"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "thispiece", "type": "str"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "thispiece", "type": "str"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "headers", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "output", "type": "str"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "found_something", "type": "bool"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "fil", "type": "TextIO"}, {"lineNumber": 122, "col_offset": 7, "nodeName": "output", "type": "str"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "all", "type": "bool"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "all", "type": "bool"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 154, "col_offset": 7, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 26, "col_offset": 56, "nodeName": "progname", "type": "str"}, {"lineNumber": 26, "col_offset": 66, "nodeName": "progname", "type": "str"}, {"lineNumber": 27, "col_offset": 56, "nodeName": "progname", "type": "str"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "decode_header", "type": "Any"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "piece", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "ret", "type": "str"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "decode_piece", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "piece", "type": "str"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "pieces", "type": "Tuple[str, str]"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "filename", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "fil", "type": "TextIO"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "stdin", "type": "TextIO"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "fil", "type": "TextIO"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "all", "type": "bool"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "casematch", "type": "bool"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "Debug", "type": "bool"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "output", "type": "str"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "headers", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "Debug", "type": "bool"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "found_something", "type": "bool"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 10, "nodeName": "Usage", "type": "str"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 3, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "filename", "type": "str"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "fil", "type": "TextIO"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "stdin", "type": "TextIO"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "sys", "type": "module"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "Header", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "part", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "ret", "type": "str"}, {"lineNumber": 51, "col_offset": 7, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "parseaddr", "type": "Callable[[Optional[str]], Tuple[str, str]]"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "thispiece", "type": "str"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "Debug", "type": "bool"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "sys", "type": "module"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "open", "type": "Callable"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "filename", "type": "str"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "casematch", "type": "bool"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "testline", "type": "str"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 130, "col_offset": 53, "nodeName": "filename", "type": "str"}, {"lineNumber": 133, "col_offset": 3, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 139, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "sys", "type": "module"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "sys", "type": "module"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "decode_file", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "email", "type": "module"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "part", "type": "Any"}, {"lineNumber": 51, "col_offset": 7, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "utils", "type": "module"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "pieces", "type": "Tuple[str, str]"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "pieces", "type": "Tuple[str, str]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "thispiece", "type": "str"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "line", "type": "str"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "found_something", "type": "bool"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "Debug", "type": "bool"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "output", "type": "str"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 133, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "sys", "type": "module"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "sys", "type": "module"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "sys", "type": "module"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "decode_file", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "filename", "type": "str"}, {"lineNumber": 150, "col_offset": 34, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 150, "col_offset": 49, "nodeName": "all", "type": "bool"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "email", "type": "module"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 64, "col_offset": 57, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "line", "type": "str"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "testline", "type": "str"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "decode_and_split", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "header_wanted", "type": "str"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "output", "type": "str"}, {"lineNumber": 64, "col_offset": 57, "nodeName": "sys", "type": "module"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "line", "type": "str"}, {"lineNumber": 119, "col_offset": 42, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "strip", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "formataddr", "type": "Callable[..., str]"}, {"lineNumber": 119, "col_offset": 42, "nodeName": "line", "type": "str"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "utils", "type": "module"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "map", "type": "Callable"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "decode_piece", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "pieces", "type": "Tuple[str, str]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "formataddr", "type": "Callable[..., str]"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "email", "type": "module"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "utils", "type": "module"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "map", "type": "Callable"}, {"lineNumber": 59, "col_offset": 49, "nodeName": "decode_piece", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 63, "nodeName": "pieces", "type": "Tuple[str, str]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "email", "type": "module"}]