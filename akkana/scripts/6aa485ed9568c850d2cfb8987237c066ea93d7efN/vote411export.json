[{"lineNumber": 197, "col_offset": 0, "nodeName": "sort_candidates", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 246, "col_offset": 0, "nodeName": "convert_vote411_file", "type": "Callable[..., Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "html_converter", "type": "Any"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "body_width", "type": "int"}, {"lineNumber": 12, "col_offset": 17, "nodeName": "HTML2Text", "type": "Any"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "html_converter", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "FONT_NAME", "type": "str"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "BASE_SIZE", "type": "int"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "TITLE_SIZE", "type": "int"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "NAME_SIZE", "type": "int"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "QUESTION_SIZE", "type": "int"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "sorted_candidates", "type": "List[Candidate]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "sorted_candidates", "type": "List[Candidate]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 249, "col_offset": 7, "nodeName": "orderfile", "type": "Any"}, {"lineNumber": 328, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 341, "col_offset": 13, "nodeName": "infiles", "type": "Any"}, {"lineNumber": 12, "col_offset": 17, "nodeName": "html2text", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "name", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "lastname", "type": "str"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "lastname", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "party", "type": "str"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "party", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "sortkey", "type": "str"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "outfile", "type": "str"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "doc", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "para", "type": "None"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "use_headings", "type": "bool"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "font", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "FONT_NAME", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "use_headings", "type": "bool"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "use_headings", "type": "bool"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "para", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "bold", "type": "bool"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "rFonts", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "rFonts", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "fullname", "type": "str"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "fullname", "type": "str"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "foundit", "type": "bool"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "cand_c", "type": "Candidate"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "csvfp", "type": "TextIO"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "name_i", "type": "int"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "lastname_i", "type": "int"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "office_i", "type": "int"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "desc_i", "type": "int"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "party_i", "type": "int"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "question1_i", "type": "int"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "formatter", "type": "None"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 283, "col_offset": 19, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "candidate", "type": "Candidate"}, {"lineNumber": 332, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 341, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "comparename", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "add_name_and_party", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "name", "type": "Union[str, Any]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "questions", "type": "Union[List[str], Any]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "sortkey", "type": "str"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "sortkey", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "office", "type": "str"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "description", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "name", "type": "Union[str, Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "party", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "question", "type": "str"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "answer", "type": "Union[str, Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "party", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 100, "col_offset": 60, "nodeName": "answer", "type": "Union[str, Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "outfp", "type": "TextIO"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "outfile", "type": "str"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "Document", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "Pt", "type": "Any"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "BASE_SIZE", "type": "int"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "heading", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "heading", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "add_paragraph", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "add_run", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "question", "type": "str"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "Pt", "type": "Any"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "QUESTION_SIZE", "type": "int"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "add_run", "type": "Any"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "add_run", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "answer", "type": "Union[str, Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "Pt", "type": "Any"}, {"lineNumber": 171, "col_offset": 39, "nodeName": "BASE_SIZE", "type": "int"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "Pt", "type": "Any"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "font_size", "type": "int"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "rPr", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "set", "type": "Any"}, {"lineNumber": 178, "col_offset": 52, "nodeName": "FONT_NAME", "type": "str"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "color", "type": "Any"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "RGBColor", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "outfile", "type": "str"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "outfile", "type": "str"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "foundit", "type": "bool"}, {"lineNumber": 230, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "sorted_candidates", "type": "List[Candidate]"}, {"lineNumber": 230, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 32, "nodeName": "orderfp", "type": "TextIO"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 262, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "filename", "type": "Any"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "reader", "type": "Callable[..., _csv._reader]"}, {"lineNumber": 263, "col_offset": 28, "nodeName": "csvfp", "type": "TextIO"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "next", "type": "Callable"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "questionnum", "type": "int"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "sort_candidates", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 322, "col_offset": 41, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 322, "col_offset": 53, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "save", "type": "Callable[[Any], Any]"}, {"lineNumber": 332, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "convert_vote411_file", "type": "Callable[..., Any]"}, {"lineNumber": 342, "col_offset": 29, "nodeName": "f", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "re", "type": "module"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "comparename", "type": "str"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "comparename", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "formatter", "type": "Optional[Union[DocxFormatter, HtmlFormatter, TextFormatter]]"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "add_q_and_a", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "other", "type": "Any"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "description", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "outfile", "type": "str"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "docx", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "styles", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "shared", "type": "Any"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "add_heading", "type": "Any"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "office", "type": "str"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "set_heading_style", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "heading", "type": "Any"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "TITLE_SIZE", "type": "int"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "add_paragraph", "type": "Any"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "description", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "add_heading", "type": "Any"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "name", "type": "Union[str, Any]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "set_heading_style", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "heading", "type": "Any"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "NAME_SIZE", "type": "int"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "add_paragraph", "type": "Any"}, {"lineNumber": 151, "col_offset": 35, "nodeName": "party", "type": "str"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "doc", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "para", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "shared", "type": "Any"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "para", "type": "Any"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "para", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "shared", "type": "Any"}, {"lineNumber": 171, "col_offset": 39, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "style", "type": "Any"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "shared", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "element", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "rFonts", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "qn", "type": "Any"}, {"lineNumber": 178, "col_offset": 52, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "shared", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "doc", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "re", "type": "module"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "comparename", "type": "str"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "fullname", "type": "str"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "foundit", "type": "bool"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 232, "col_offset": 31, "nodeName": "sorted_candidates", "type": "List[Candidate]"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 235, "col_offset": 37, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "orderfile", "type": "Any"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 251, "col_offset": 36, "nodeName": "orderfp", "type": "TextIO"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "csv", "type": "module"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "formatter", "type": "None"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "q_i", "type": "int"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "questionnum", "type": "int"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "output", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "formatter", "type": "Optional[Union[DocxFormatter, HtmlFormatter, TextFormatter]]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "formatter", "type": "Optional[Union[DocxFormatter, HtmlFormatter, TextFormatter]]"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "sys", "type": "module"}, {"lineNumber": 342, "col_offset": 36, "nodeName": "format", "type": "Any"}, {"lineNumber": 342, "col_offset": 59, "nodeName": "orderfile", "type": "Any"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "re", "type": "module"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 38, "col_offset": 52, "nodeName": "lastname", "type": "str"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "answers", "type": "Union[List[str], Any]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "answers", "type": "Union[List[str], Any]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "formatter", "type": "Optional[Union[DocxFormatter, HtmlFormatter, TextFormatter]]"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "answers", "type": "Union[List[str], Any]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "outfp", "type": "TextIO"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "doc", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "docx", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "doc", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "doc", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "docx", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "docx", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "heading", "type": "Any"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "docx", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "style", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "ns", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "style", "type": "Any"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "docx", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "fullname", "type": "str"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "cand_c", "type": "Candidate"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 223, "col_offset": 41, "nodeName": "cand_c", "type": "Candidate"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "csv", "type": "module"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "formatter", "type": "TextFormatter"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "add_office", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 306, "col_offset": 22, "nodeName": "question1_i", "type": "int"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 316, "col_offset": 30, "nodeName": "Candidate", "type": "Type[Candidate]"}, {"lineNumber": 317, "col_offset": 54, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 317, "col_offset": 65, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "candidate", "type": "Candidate"}, {"lineNumber": 342, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 342, "col_offset": 59, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "name", "type": "str"}, {"lineNumber": 38, "col_offset": 52, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "isalpha", "type": "Callable[[], bool]"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 49, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "heading", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "oxml", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "heading", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "sorted_candidates", "type": "List[Candidate]"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 289, "col_offset": 32, "nodeName": "TextFormatter", "type": "Type[TextFormatter]"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "formatter", "type": "HtmlFormatter"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "formatter", "type": "Optional[Union[DocxFormatter, HtmlFormatter, TextFormatter]]"}, {"lineNumber": 295, "col_offset": 37, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "strip", "type": "Any"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 309, "col_offset": 30, "nodeName": "q_i", "type": "int"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 311, "col_offset": 33, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 312, "col_offset": 31, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 316, "col_offset": 40, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 316, "col_offset": 53, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 317, "col_offset": 40, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "c", "type": "str"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "docx", "type": "Any"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "HtmlFormatter", "type": "Type[HtmlFormatter]"}, {"lineNumber": 292, "col_offset": 21, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "formatter", "type": "DocxFormatter"}, {"lineNumber": 295, "col_offset": 41, "nodeName": "office_i", "type": "int"}, {"lineNumber": 306, "col_offset": 37, "nodeName": "questionnum", "type": "int"}, {"lineNumber": 311, "col_offset": 37, "nodeName": "q_i", "type": "int"}, {"lineNumber": 316, "col_offset": 44, "nodeName": "name_i", "type": "int"}, {"lineNumber": 316, "col_offset": 57, "nodeName": "lastname_i", "type": "int"}, {"lineNumber": 317, "col_offset": 44, "nodeName": "party_i", "type": "int"}, {"lineNumber": 293, "col_offset": 32, "nodeName": "DocxFormatter", "type": "Type[DocxFormatter]"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "handle", "type": "Any"}, {"lineNumber": 312, "col_offset": 35, "nodeName": "q_i", "type": "int"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "html_converter", "type": "Any"}, {"lineNumber": 296, "col_offset": 59, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 296, "col_offset": 63, "nodeName": "desc_i", "type": "int"}]