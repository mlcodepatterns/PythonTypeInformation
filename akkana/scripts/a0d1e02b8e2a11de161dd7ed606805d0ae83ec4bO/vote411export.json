[{"lineNumber": 256, "col_offset": 0, "nodeName": "sort_candidates", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 306, "col_offset": 0, "nodeName": "sort_measures", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 329, "col_offset": 0, "nodeName": "convert_vote411_file", "type": "Callable[..., Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "html_converter", "type": "Any"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "body_width", "type": "int"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "SMARTQUOTE_CHARMAP", "type": "Dict[int, str]"}, {"lineNumber": 12, "col_offset": 17, "nodeName": "HTML2Text", "type": "Any"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "html_converter", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "FONT_NAME", "type": "str"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "BASE_SIZE", "type": "int"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "TITLE_SIZE", "type": "int"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "NAME_SIZE", "type": "int"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "QUESTION_SIZE", "type": "int"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "sorted_candidates", "type": "List[Candidate]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "notfound", "type": "List[str]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "sorted_measures", "type": "List[Measure]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "categories", "type": "Set[str]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "measurecat", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 318, "col_offset": 22, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 332, "col_offset": 7, "nodeName": "orderfile", "type": "Any"}, {"lineNumber": 485, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 498, "col_offset": 13, "nodeName": "infiles", "type": "Any"}, {"lineNumber": 12, "col_offset": 17, "nodeName": "html2text", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "name", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "lastname", "type": "str"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "lastname", "type": "str"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "office", "type": "str"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "office", "type": "str"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "sortkey", "type": "str"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "party", "type": "Union[str, Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "measurename", "type": "str"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "measurename", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "category", "type": "str"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "category", "type": "str"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "party", "type": "None"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "party", "type": "None"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "doc", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "para", "type": "None"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "use_headings", "type": "bool"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "font", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "FONT_NAME", "type": "str"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "use_headings", "type": "bool"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "use_headings", "type": "bool"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "para", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "bold", "type": "bool"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "rFonts", "type": "Any"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "rFonts", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "saved_fullname", "type": "str"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "fullname", "type": "str"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "fulllname", "type": "str"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "fullname", "type": "str"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "foundit", "type": "bool"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "cand_c", "type": "Candidate"}, {"lineNumber": 291, "col_offset": 22, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "sorted_candidates", "type": "List[Candidate]"}, {"lineNumber": 303, "col_offset": 30, "nodeName": "notfound", "type": "List[str]"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 316, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "measurecat_l", "type": "str"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "measure_m", "type": "Measure"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "measures", "type": "List[Measure]"}, {"lineNumber": 325, "col_offset": 11, "nodeName": "sorted_measures", "type": "List[Measure]"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "categories", "type": "Set[str]"}, {"lineNumber": 363, "col_offset": 30, "nodeName": "csvfp", "type": "TextIO"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "name_i", "type": "int"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "lastname_i", "type": "int"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "office_i", "type": "int"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "desc_i", "type": "int"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "party_i", "type": "int"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "question1_i", "type": "int"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "contactname_i", "type": "int"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "category_i", "type": "int"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "measures", "type": "List[Measure]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "race_descriptions", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 399, "col_offset": 19, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "measure_categories", "type": "List[str]"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "measure", "type": "Measure"}, {"lineNumber": 448, "col_offset": 23, "nodeName": "s_measures", "type": "Union[List[Measure], Measure]"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "cur_office", "type": "None"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "num_for_office", "type": "int"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "candidate", "type": "Candidate"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "s_candidates", "type": "Union[List[Candidate], Candidate]"}, {"lineNumber": 474, "col_offset": 11, "nodeName": "notfound", "type": "Union[List[str], Candidate]"}, {"lineNumber": 489, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 498, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "isupper", "type": "Callable[[], bool]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 46, "col_offset": 50, "nodeName": "name", "type": "str"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "comparename", "type": "str"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "party", "type": "str"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "party", "type": "str"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "partystr", "type": "str"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "partystr", "type": "str"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "add_name_and_party", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "name", "type": "str"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "partystr", "type": "str"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "questions", "type": "Union[List[str], Any]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "sortkey", "type": "str"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "sortkey", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Measure"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "replace", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Measure"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "add_name_and_party", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "add_q_and_a", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "desc", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "office", "type": "Union[str, Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "description", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "name", "type": "str"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "question", "type": "str"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "answer", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "party", "type": "str"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 159, "col_offset": 60, "nodeName": "answer", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "outfp", "type": "TextIO"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "outfile", "type": "str"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "Document", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "Pt", "type": "Any"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "BASE_SIZE", "type": "int"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "heading", "type": "Any"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "heading", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "add_paragraph", "type": "Any"}, {"lineNumber": 224, "col_offset": 14, "nodeName": "add_run", "type": "Any"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "question", "type": "str"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "Pt", "type": "Any"}, {"lineNumber": 226, "col_offset": 39, "nodeName": "QUESTION_SIZE", "type": "int"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "add_run", "type": "Any"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "add_run", "type": "Any"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "answer", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "Pt", "type": "Any"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "BASE_SIZE", "type": "int"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 233, "col_offset": 34, "nodeName": "Pt", "type": "Any"}, {"lineNumber": 233, "col_offset": 49, "nodeName": "font_size", "type": "int"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "rPr", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "set", "type": "Any"}, {"lineNumber": 237, "col_offset": 52, "nodeName": "FONT_NAME", "type": "str"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "color", "type": "Any"}, {"lineNumber": 249, "col_offset": 39, "nodeName": "RGBColor", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "outfile", "type": "str"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 26, "nodeName": "outfile", "type": "str"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "fullname", "type": "str"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "fullname", "type": "str"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "foundit", "type": "bool"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 313, "col_offset": 22, "nodeName": "measures", "type": "List[Measure]"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 333, "col_offset": 32, "nodeName": "orderfp", "type": "TextIO"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "cand", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 356, "col_offset": 24, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 363, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 363, "col_offset": 14, "nodeName": "tsvfilename", "type": "Any"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "reader", "type": "Callable[..., _csv._reader]"}, {"lineNumber": 364, "col_offset": 28, "nodeName": "csvfp", "type": "TextIO"}, {"lineNumber": 367, "col_offset": 22, "nodeName": "next", "type": "Callable"}, {"lineNumber": 367, "col_offset": 27, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 374, "col_offset": 17, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 377, "col_offset": 17, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 378, "col_offset": 18, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 379, "col_offset": 22, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 383, "col_offset": 24, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "formatter", "type": "TextFormatter"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "questionnum", "type": "int"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "s_measures", "type": "Union[List[Measure], Measure]"}, {"lineNumber": 443, "col_offset": 20, "nodeName": "measure_categories", "type": "Union[Set[str], Measure]"}, {"lineNumber": 443, "col_offset": 41, "nodeName": "sort_measures", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 443, "col_offset": 55, "nodeName": "measures", "type": "List[Measure]"}, {"lineNumber": 443, "col_offset": 65, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "s_candidates", "type": "Union[List[Candidate], Candidate]"}, {"lineNumber": 444, "col_offset": 22, "nodeName": "notfound", "type": "Union[List[str], Candidate]"}, {"lineNumber": 444, "col_offset": 33, "nodeName": "sort_candidates", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 444, "col_offset": 49, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 444, "col_offset": 61, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "num_for_office", "type": "int"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "save", "type": "Callable[..., Any]"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "notfound_s", "type": "str"}, {"lineNumber": 476, "col_offset": 16, "nodeName": "orphan", "type": "str"}, {"lineNumber": 476, "col_offset": 26, "nodeName": "notfound", "type": "Union[List[str], Candidate]"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "notfound_s", "type": "str"}, {"lineNumber": 489, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "convert_vote411_file", "type": "Callable[..., Any]"}, {"lineNumber": 499, "col_offset": 29, "nodeName": "f", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "name", "type": "str"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "title", "type": "Callable[[], str]"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "re", "type": "module"}, {"lineNumber": 46, "col_offset": 50, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "comparename", "type": "str"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "comparename", "type": "str"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "party", "type": "str"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "party", "type": "str"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "formatter", "type": "Union[DocxFormatter, HtmlFormatter, TextFormatter]"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "add_q_and_a", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "other", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "formatter", "type": "Union[DocxFormatter, HtmlFormatter, TextFormatter]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "formatter", "type": "Union[DocxFormatter, HtmlFormatter, TextFormatter]"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "self", "type": "Measure"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "party", "type": "str"}, {"lineNumber": 151, "col_offset": 52, "nodeName": "description", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "outfile", "type": "str"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "htmlstr", "type": "str"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "docx", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "styles", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "shared", "type": "Any"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "add_heading", "type": "Any"}, {"lineNumber": 194, "col_offset": 43, "nodeName": "office", "type": "Union[str, Any]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "set_heading_style", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "heading", "type": "Any"}, {"lineNumber": 195, "col_offset": 44, "nodeName": "TITLE_SIZE", "type": "int"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "add_paragraph", "type": "Any"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "description", "type": "Any"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "add_heading", "type": "Any"}, {"lineNumber": 207, "col_offset": 43, "nodeName": "name", "type": "str"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "set_heading_style", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 35, "nodeName": "heading", "type": "Any"}, {"lineNumber": 208, "col_offset": 44, "nodeName": "NAME_SIZE", "type": "int"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "add_paragraph", "type": "Any"}, {"lineNumber": 209, "col_offset": 35, "nodeName": "party", "type": "None"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "doc", "type": "Any"}, {"lineNumber": 224, "col_offset": 14, "nodeName": "para", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "shared", "type": "Any"}, {"lineNumber": 226, "col_offset": 39, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "para", "type": "Any"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "para", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "shared", "type": "Any"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "style", "type": "Any"}, {"lineNumber": 233, "col_offset": 34, "nodeName": "shared", "type": "Any"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "element", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "rFonts", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "qn", "type": "Any"}, {"lineNumber": 237, "col_offset": 52, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "font", "type": "Any"}, {"lineNumber": 249, "col_offset": 39, "nodeName": "shared", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "doc", "type": "Any"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "fullname", "type": "str"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "re", "type": "module"}, {"lineNumber": 288, "col_offset": 37, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "comparename", "type": "str"}, {"lineNumber": 292, "col_offset": 37, "nodeName": "fullname", "type": "str"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "foundit", "type": "bool"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "saved_fullname", "type": "str"}, {"lineNumber": 321, "col_offset": 45, "nodeName": "measurecat_l", "type": "str"}, {"lineNumber": 333, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 333, "col_offset": 18, "nodeName": "orderfile", "type": "Any"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "csv", "type": "module"}, {"lineNumber": 374, "col_offset": 17, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 377, "col_offset": 17, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 378, "col_offset": 18, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 379, "col_offset": 22, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 383, "col_offset": 24, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "columnnames", "type": "List[str]"}, {"lineNumber": 387, "col_offset": 24, "nodeName": "TextFormatter", "type": "Type[TextFormatter]"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "formatter", "type": "HtmlFormatter"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "q_i", "type": "int"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "questionnum", "type": "int"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "office", "type": "Union[str, Any]"}, {"lineNumber": 432, "col_offset": 44, "nodeName": "race_descriptions", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 445, "col_offset": 31, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 445, "col_offset": 53, "nodeName": "c", "type": "str"}, {"lineNumber": 445, "col_offset": 58, "nodeName": "measure_categories", "type": "Union[Set[str], Measure]"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 449, "col_offset": 25, "nodeName": "measure", "type": "Measure"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "output", "type": "Callable[[Any], Any]"}, {"lineNumber": 450, "col_offset": 27, "nodeName": "formatter", "type": "Union[DocxFormatter, HtmlFormatter, TextFormatter]"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "office", "type": "Union[str, Any]"}, {"lineNumber": 455, "col_offset": 35, "nodeName": "cur_office", "type": "None"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "cur_office", "type": "None"}, {"lineNumber": 459, "col_offset": 16, "nodeName": "cur_office", "type": "Union[str, Any]"}, {"lineNumber": 459, "col_offset": 29, "nodeName": "office", "type": "Union[str, Any]"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "print_office", "type": "Union[str, Any]"}, {"lineNumber": 463, "col_offset": 16, "nodeName": "desc", "type": "Any"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "output", "type": "Callable[[Any], Any]"}, {"lineNumber": 469, "col_offset": 29, "nodeName": "formatter", "type": "Union[DocxFormatter, HtmlFormatter, TextFormatter]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "formatter", "type": "Union[DocxFormatter, HtmlFormatter, TextFormatter]"}, {"lineNumber": 477, "col_offset": 16, "nodeName": "o", "type": "str"}, {"lineNumber": 480, "col_offset": 16, "nodeName": "notfound_s", "type": "str"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "sys", "type": "module"}, {"lineNumber": 499, "col_offset": 36, "nodeName": "format", "type": "Any"}, {"lineNumber": 499, "col_offset": 59, "nodeName": "orderfile", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "name", "type": "str"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "party", "type": "str"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "party", "type": "str"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "party", "type": "str"}, {"lineNumber": 66, "col_offset": 52, "nodeName": "lastname", "type": "str"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "answers", "type": "Union[List[str], Any]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "answers", "type": "Union[List[str], Any]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "formatter", "type": "Union[DocxFormatter, HtmlFormatter, TextFormatter]"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "answers", "type": "Union[List[str], Any]"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "strip", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "outfp", "type": "TextIO"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "self", "type": "HtmlFormatter"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "doc", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "docx", "type": "Any"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "doc", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 195, "col_offset": 44, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "doc", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 208, "col_offset": 44, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 224, "col_offset": 14, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "docx", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "docx", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "heading", "type": "Any"}, {"lineNumber": 233, "col_offset": 34, "nodeName": "docx", "type": "Any"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "style", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "ns", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "style", "type": "Any"}, {"lineNumber": 249, "col_offset": 39, "nodeName": "docx", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 281, "col_offset": 32, "nodeName": "saved_fullname", "type": "str"}, {"lineNumber": 288, "col_offset": 37, "nodeName": "fullname", "type": "str"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "cand_c", "type": "Candidate"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 293, "col_offset": 41, "nodeName": "cand_c", "type": "Candidate"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "notfound", "type": "List[str]"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "measurecat", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 322, "col_offset": 39, "nodeName": "measure_m", "type": "Measure"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 323, "col_offset": 31, "nodeName": "category", "type": "str"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "orderfile", "type": "Any"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 335, "col_offset": 40, "nodeName": "orderfp", "type": "TextIO"}, {"lineNumber": 346, "col_offset": 17, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 348, "col_offset": 20, "nodeName": "line", "type": "str"}, {"lineNumber": 348, "col_offset": 28, "nodeName": "orderfp", "type": "TextIO"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "cand", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 360, "col_offset": 60, "nodeName": "SMARTQUOTE_CHARMAP", "type": "Dict[int, str]"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "HtmlFormatter", "type": "Type[HtmlFormatter]"}, {"lineNumber": 390, "col_offset": 13, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "formatter", "type": "DocxFormatter"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 418, "col_offset": 22, "nodeName": "question1_i", "type": "int"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 428, "col_offset": 30, "nodeName": "Candidate", "type": "Type[Candidate]"}, {"lineNumber": 430, "col_offset": 40, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 430, "col_offset": 51, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "race_descriptions", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "replace", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "measure", "type": "Measure"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "candidate", "type": "Candidate"}, {"lineNumber": 459, "col_offset": 29, "nodeName": "candidate", "type": "Candidate"}, {"lineNumber": 460, "col_offset": 31, "nodeName": "replace", "type": "Union[Callable[..., str], Any]"}, {"lineNumber": 463, "col_offset": 23, "nodeName": "replace", "type": "Any"}, {"lineNumber": 466, "col_offset": 16, "nodeName": "add_office", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 466, "col_offset": 37, "nodeName": "print_office", "type": "Union[str, Any]"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "candidate", "type": "Candidate"}, {"lineNumber": 477, "col_offset": 20, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 478, "col_offset": 19, "nodeName": "o", "type": "str"}, {"lineNumber": 478, "col_offset": 24, "nodeName": "measure_categories", "type": "List[str]"}, {"lineNumber": 480, "col_offset": 41, "nodeName": "o", "type": "str"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 482, "col_offset": 38, "nodeName": "notfound_s", "type": "str"}, {"lineNumber": 499, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 499, "col_offset": 59, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "re", "type": "module"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "party", "type": "str"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "party", "type": "str"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 66, "col_offset": 52, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "isalpha", "type": "Callable[[], bool]"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "self", "type": "Candidate"}, {"lineNumber": 81, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "self", "type": "DocxFormatter"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "heading", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "oxml", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "heading", "type": "Any"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 273, "col_offset": 33, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "cand_o", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "notfound", "type": "List[str]"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "sorted_candidates", "type": "List[Candidate]"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "category", "type": "str"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "sorted_measures", "type": "List[Measure]"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "categories", "type": "Set[str]"}, {"lineNumber": 323, "col_offset": 31, "nodeName": "measure_m", "type": "Measure"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "csv", "type": "module"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 337, "col_offset": 33, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 346, "col_offset": 17, "nodeName": "orderfile", "type": "Any"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "line", "type": "str"}, {"lineNumber": 391, "col_offset": 24, "nodeName": "DocxFormatter", "type": "Type[DocxFormatter]"}, {"lineNumber": 393, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "measures", "type": "List[Measure]"}, {"lineNumber": 405, "col_offset": 32, "nodeName": "Measure", "type": "Type[Measure]"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 421, "col_offset": 23, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "q_i", "type": "int"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "questions", "type": "List[str]"}, {"lineNumber": 423, "col_offset": 33, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "answers", "type": "List[str]"}, {"lineNumber": 424, "col_offset": 31, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 428, "col_offset": 40, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 428, "col_offset": 53, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 429, "col_offset": 40, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 429, "col_offset": 55, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 445, "col_offset": 31, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 466, "col_offset": 16, "nodeName": "formatter", "type": "Union[DocxFormatter, HtmlFormatter, TextFormatter]"}, {"lineNumber": 467, "col_offset": 37, "nodeName": "race_descriptions", "type": "Dict[Union[Any, str], Any]"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "re", "type": "module"}, {"lineNumber": 35, "col_offset": 53, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "c", "type": "str"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "handle", "type": "Any"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "description", "type": "str"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "docx", "type": "Any"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "measure_m", "type": "Measure"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 349, "col_offset": 27, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 350, "col_offset": 27, "nodeName": "line", "type": "str"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 357, "col_offset": 35, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 404, "col_offset": 19, "nodeName": "contactname_i", "type": "int"}, {"lineNumber": 405, "col_offset": 40, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 405, "col_offset": 55, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 406, "col_offset": 40, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 418, "col_offset": 37, "nodeName": "questionnum", "type": "int"}, {"lineNumber": 423, "col_offset": 37, "nodeName": "q_i", "type": "int"}, {"lineNumber": 428, "col_offset": 44, "nodeName": "name_i", "type": "int"}, {"lineNumber": 428, "col_offset": 57, "nodeName": "lastname_i", "type": "int"}, {"lineNumber": 429, "col_offset": 44, "nodeName": "office_i", "type": "int"}, {"lineNumber": 429, "col_offset": 59, "nodeName": "party_i", "type": "int"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "strip", "type": "Any"}, {"lineNumber": 445, "col_offset": 31, "nodeName": "c", "type": "str"}, {"lineNumber": 460, "col_offset": 31, "nodeName": "replace", "type": "Union[Callable[..., str], Any]"}, {"lineNumber": 463, "col_offset": 23, "nodeName": "strip", "type": "Any"}, {"lineNumber": 467, "col_offset": 55, "nodeName": "office", "type": "Union[str, Any]"}, {"lineNumber": 477, "col_offset": 20, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 35, "col_offset": 53, "nodeName": "name", "type": "str"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "html_converter", "type": "Any"}, {"lineNumber": 349, "col_offset": 27, "nodeName": "line", "type": "str"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "order", "type": "List[collections.OrderedDict[str, str]]"}, {"lineNumber": 352, "col_offset": 47, "nodeName": "line", "type": "str"}, {"lineNumber": 358, "col_offset": 42, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 405, "col_offset": 44, "nodeName": "office_i", "type": "int"}, {"lineNumber": 405, "col_offset": 59, "nodeName": "desc_i", "type": "int"}, {"lineNumber": 406, "col_offset": 44, "nodeName": "category_i", "type": "int"}, {"lineNumber": 424, "col_offset": 35, "nodeName": "q_i", "type": "int"}, {"lineNumber": 433, "col_offset": 34, "nodeName": "candidates", "type": "List[Candidate]"}, {"lineNumber": 460, "col_offset": 31, "nodeName": "office", "type": "Union[str, Any]"}, {"lineNumber": 467, "col_offset": 55, "nodeName": "candidate", "type": "Candidate"}, {"lineNumber": 477, "col_offset": 20, "nodeName": "orphan", "type": "str"}, {"lineNumber": 359, "col_offset": 49, "nodeName": "cand", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "handle", "type": "Any"}, {"lineNumber": 460, "col_offset": 31, "nodeName": "candidate", "type": "Candidate"}, {"lineNumber": 463, "col_offset": 23, "nodeName": "handle", "type": "Any"}, {"lineNumber": 463, "col_offset": 23, "nodeName": "html_converter", "type": "Any"}, {"lineNumber": 463, "col_offset": 45, "nodeName": "row", "type": "Union[List[str], collections.OrderedDict[str, str]]"}, {"lineNumber": 463, "col_offset": 49, "nodeName": "desc_i", "type": "int"}]