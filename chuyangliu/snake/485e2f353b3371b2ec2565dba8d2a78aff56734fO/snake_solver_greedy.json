[{"lineNumber": 10, "col_offset": 19, "nodeName": "BaseSolver", "type": "Type[snake.solver.base.BaseSolver]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "snake", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "snake", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "path_to_food", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "path_to_food", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "snake", "type": "Any"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "snake", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "path_to_tail", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "head", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "adj", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "direc", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 13, "col_offset": 25, "nodeName": "snake", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "GreedySolver"}, {"lineNumber": 14, "col_offset": 29, "nodeName": "PathSolver", "type": "Type[snake.solver.path.PathSolver]"}, {"lineNumber": 14, "col_offset": 40, "nodeName": "snake", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "s_copy", "type": "Any"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "m_copy", "type": "Any"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "copy", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "self", "type": "GreedySolver"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "shortest_path_to_food", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "snake", "type": "Any"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "s_copy", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "path_to_tail", "type": "Any"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "self", "type": "GreedySolver"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "longest_path_to_tail", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "head", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "direc", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "max_dist", "type": "int"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "direc", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "all_adj", "type": "Any"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "snake", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "GreedySolver"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "move_path", "type": "Any"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "path_to_food", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "is_full", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "longest_path_to_tail", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "GreedySolver"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "path_to_tail", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "path_to_tail", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "snake", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "snake", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "head", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "is_safe", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "adj", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "dist", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "self", "type": "GreedySolver"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "self", "type": "GreedySolver"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "s_copy", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "m_copy", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "path_to_food", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "self", "type": "GreedySolver"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "path_to_tail", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "path_to_food", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "self", "type": "GreedySolver"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "self", "type": "GreedySolver"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "self", "type": "GreedySolver"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "map", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "manhattan_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "adj", "type": "Any"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "food", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "dist", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "max_dist", "type": "int"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "max_dist", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "dist", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "direc", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "self", "type": "GreedySolver"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "self", "type": "GreedySolver"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "Pos", "type": "Type[snake.base.pos.Pos]"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "map", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "direc_to", "type": "Any"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "adj", "type": "Any"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "self", "type": "GreedySolver"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "head", "type": "Any"}]