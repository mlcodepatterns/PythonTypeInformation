[{"lineNumber": 124, "col_offset": 0, "nodeName": "CreateCorpusProtoFromFlags", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "CreateModelProtoFromFlags", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "CreateSamplerProtoFromFlags", "type": "Callable[[], Any]"}, {"lineNumber": 193, "col_offset": 0, "nodeName": "CreateInstanceProtoFromFlags", "type": "Callable[[], Any]"}, {"lineNumber": 206, "col_offset": 0, "nodeName": "CreateInstanceFromFlags", "type": "Callable[[], deeplearning.clgen.clgen.Instance]"}, {"lineNumber": 210, "col_offset": 0, "nodeName": "SampleObserversFromFlags", "type": "Callable[[], List[deeplearning.clgen.sample_observers.SampleObserver]]"}, {"lineNumber": 228, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "Corpus", "type": "Any"}, {"lineNumber": 140, "col_offset": 60, "nodeName": "Model", "type": "Any"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 206, "col_offset": 33, "nodeName": "Instance", "type": "Type[deeplearning.clgen.clgen.Instance]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "app", "type": "module"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "DEFINE_string", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "DEFINE_string", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "DEFINE_string", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "DEFINE_boolean", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "DEFINE_string", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "DEFINE_float", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "DEFINE_boolean", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "DEFINE_boolean", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "DEFINE_list", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 5, "nodeName": "clgen_multichar_tokenizer", "type": "Any"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "corpus_pb2", "type": "Any"}, {"lineNumber": 140, "col_offset": 60, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 180, "col_offset": 5, "nodeName": "clgen_max_sample_length", "type": "Any"}, {"lineNumber": 190, "col_offset": 9, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 194, "col_offset": 5, "nodeName": "clgen_instance", "type": "Any"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "clgen_pb2", "type": "Any"}, {"lineNumber": 206, "col_offset": 33, "nodeName": "clgen", "type": "module"}, {"lineNumber": 212, "col_offset": 2, "nodeName": "observers", "type": "List[Union[deeplearning.clgen.sample_observers.MaxSampleCountObserver, deeplearning.clgen.sample_observers.LegacySampleCacheObserver, deeplearning.clgen.sample_observers.PrintSampleObserver]]"}, {"lineNumber": 221, "col_offset": 5, "nodeName": "clgen_cache_sample_protos", "type": "Any"}, {"lineNumber": 223, "col_offset": 5, "nodeName": "clgen_print_samples", "type": "Any"}, {"lineNumber": 225, "col_offset": 9, "nodeName": "observers", "type": "List[Union[deeplearning.clgen.sample_observers.MaxSampleCountObserver, deeplearning.clgen.sample_observers.LegacySampleCacheObserver, deeplearning.clgen.sample_observers.PrintSampleObserver]]"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "List", "type": "Any"}, {"lineNumber": 230, "col_offset": 2, "nodeName": "instance", "type": "deeplearning.clgen.clgen.Instance"}, {"lineNumber": 231, "col_offset": 2, "nodeName": "sample_count", "type": "int"}, {"lineNumber": 243, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "json", "type": "module"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "DataString", "type": "Callable[[Union[str, pathlib.Path]], bytes]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "app", "type": "module"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "Corpus", "type": "Any"}, {"lineNumber": 130, "col_offset": 5, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "ascii_character_atomizer", "type": "bool"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "Corpus", "type": "Any"}, {"lineNumber": 141, "col_offset": 9, "nodeName": "Model", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 180, "col_offset": 5, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 194, "col_offset": 5, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 207, "col_offset": 9, "nodeName": "Instance", "type": "Type[deeplearning.clgen.clgen.Instance]"}, {"lineNumber": 213, "col_offset": 5, "nodeName": "clgen_min_sample_count", "type": "Any"}, {"lineNumber": 221, "col_offset": 5, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 223, "col_offset": 5, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "typing", "type": "module"}, {"lineNumber": 210, "col_offset": 46, "nodeName": "SampleObserver", "type": "Type[deeplearning.clgen.sample_observers.SampleObserver]"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "CreateInstanceFromFlags", "type": "Callable[[], deeplearning.clgen.clgen.Instance]"}, {"lineNumber": 244, "col_offset": 2, "nodeName": "Run", "type": "Callable[[Callable[[], None]], None]"}, {"lineNumber": 244, "col_offset": 10, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "bazelutil", "type": "module"}, {"lineNumber": 53, "col_offset": 6, "nodeName": "expanduser", "type": "Callable"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "corpus_pb2", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "clgen_corpus_dir", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "clgen_preprocessor", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "CopyFrom", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "corpus_pb2", "type": "Any"}, {"lineNumber": 141, "col_offset": 9, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "clgen_seed_text", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "clgen_sample_batch_size", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "clgen_sample_sequence_length", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "extend", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "FromFile", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 207, "col_offset": 9, "nodeName": "clgen", "type": "module"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "CreateInstanceProtoFromFlags", "type": "Callable[[], Any]"}, {"lineNumber": 213, "col_offset": 5, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "Warning", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 210, "col_offset": 46, "nodeName": "sample_observers", "type": "module"}, {"lineNumber": 232, "col_offset": 7, "nodeName": "Session", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "Train", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 6, "nodeName": "clgen_min_sample_count", "type": "Any"}, {"lineNumber": 244, "col_offset": 2, "nodeName": "app", "type": "module"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "greedy_multichar_atomizer", "type": "Any"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "GreedyMulticharAtomizer", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "NetworkArchitecture", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "TrainingOptions", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "termination_criteria", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "pbutil", "type": "module"}, {"lineNumber": 196, "col_offset": 6, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "clgen_instance", "type": "Any"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "clgen_pb2", "type": "Any"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "clgen_working_dir", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "app", "type": "module"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "observers", "type": "List[Union[deeplearning.clgen.sample_observers.MaxSampleCountObserver, deeplearning.clgen.sample_observers.LegacySampleCacheObserver, deeplearning.clgen.sample_observers.PrintSampleObserver]]"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "MaxSampleCountObserver", "type": "Type[deeplearning.clgen.sample_observers.MaxSampleCountObserver]"}, {"lineNumber": 219, "col_offset": 46, "nodeName": "clgen_min_sample_count", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "observers", "type": "List[Union[deeplearning.clgen.sample_observers.MaxSampleCountObserver, deeplearning.clgen.sample_observers.LegacySampleCacheObserver, deeplearning.clgen.sample_observers.PrintSampleObserver]]"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "LegacySampleCacheObserver", "type": "Type[deeplearning.clgen.sample_observers.LegacySampleCacheObserver]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "observers", "type": "List[Union[deeplearning.clgen.sample_observers.MaxSampleCountObserver, deeplearning.clgen.sample_observers.LegacySampleCacheObserver, deeplearning.clgen.sample_observers.PrintSampleObserver]]"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "PrintSampleObserver", "type": "Type[deeplearning.clgen.sample_observers.PrintSampleObserver]"}, {"lineNumber": 232, "col_offset": 7, "nodeName": "instance", "type": "deeplearning.clgen.clgen.Instance"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "instance", "type": "deeplearning.clgen.clgen.Instance"}, {"lineNumber": 235, "col_offset": 6, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 236, "col_offset": 10, "nodeName": "sample_count", "type": "int"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "clgen_min_sample_count", "type": "Any"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 6, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "corpus_pb2", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "TENSORFLOW", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "clgen_layer_size", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "clgen_num_layers", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "clgen_num_epochs", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "clgen_training_sequence_length", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "clgen_training_batch_size", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "clgen_sample_temperature", "type": "Any"}, {"lineNumber": 173, "col_offset": 6, "nodeName": "SampleTerminationCriterion", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "SampleTerminationCriterion", "type": "Any"}, {"lineNumber": 196, "col_offset": 6, "nodeName": "pathlib", "type": "module"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "clgen_pb2", "type": "Any"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "CreateModelProtoFromFlags", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 14, "nodeName": "CreateSamplerProtoFromFlags", "type": "Callable[[], Any]"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "sample_observers", "type": "module"}, {"lineNumber": 219, "col_offset": 46, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "sample_observers", "type": "module"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "sample_observers", "type": "module"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "Sample", "type": "Callable[..., List[Any]]"}, {"lineNumber": 53, "col_offset": 6, "nodeName": "pathlib", "type": "module"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "NetworkArchitecture", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "NetworkArchitecture", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "AdamOptimizer", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 173, "col_offset": 6, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "CreateCorpusProtoFromFlags", "type": "Callable[[], Any]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "instance", "type": "deeplearning.clgen.clgen.Instance"}, {"lineNumber": 239, "col_offset": 40, "nodeName": "clgen_min_sample_count", "type": "Any"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "TOKEN_LISTS", "type": "Any"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "MaxTokenLength", "type": "Any"}, {"lineNumber": 239, "col_offset": 40, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 185, "col_offset": 37, "nodeName": "clgen_max_sample_length", "type": "Any"}, {"lineNumber": 185, "col_offset": 37, "nodeName": "FLAGS", "type": "Any"}]