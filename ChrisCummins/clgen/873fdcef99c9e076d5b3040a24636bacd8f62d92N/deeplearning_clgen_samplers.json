[{"lineNumber": 12, "col_offset": 14, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 59, "col_offset": 70, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "hash", "type": "str"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "max_length", "type": "int"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "special_token_left", "type": "None"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "special_token_right", "type": "None"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "termination_criteria", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "has_max_length", "type": "Any"}, {"lineNumber": 68, "col_offset": 7, "nodeName": "has_max_length", "type": "Any"}, {"lineNumber": 71, "col_offset": 7, "nodeName": "has_symmetrical_tokens", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "start_text", "type": "Any"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "t", "type": "Any"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "start_text", "type": "Any"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "CopyFrom", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "_ComputeHash", "type": "Callable[[Any], str]"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "max_length", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "special_token_left", "type": "None"}, {"lineNumber": 68, "col_offset": 7, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 71, "col_offset": 7, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 72, "col_offset": 6, "nodeName": "left_token_count", "type": "int"}, {"lineNumber": 73, "col_offset": 6, "nodeName": "right_token_count", "type": "int"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "sha1", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "ToFile", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "meta", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "ShortHash", "type": "Callable[..., str]"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "hash", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "hash", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "hash", "type": "str"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "config", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "HasField", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "max_length", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "maximum_tokens_in_sample", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 59, "col_offset": 49, "nodeName": "List", "type": "Any"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "max_length", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "count", "type": "Callable"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "symmetrical_token_left", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "count", "type": "Callable"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "symmetrical_token_left", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "left_token_count", "type": "int"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "crypto", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "SerializeToString", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "pbutil", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "cache", "type": "module"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "cachepath", "type": "Callable[..., pathlib.Path]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "shorthash", "type": "str"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "start_text", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "__eq__", "type": "Callable[[Any], bool]"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "errors", "type": "module"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "errors", "type": "module"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "maxlen", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "include_start_text_in_maximum", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "max_length", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "HasField", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "symmetrical_token_left", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "depth_increase_token", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "symmetrical_token_right", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "depth_decrease_token", "type": "Any"}, {"lineNumber": 59, "col_offset": 49, "nodeName": "typing", "type": "module"}, {"lineNumber": 59, "col_offset": 61, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "sample_in_progress", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "sample_in_progress", "type": "List[str]"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "sample_in_progress", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "pathlib", "type": "module"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "keypath", "type": "Any"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "cache", "type": "module"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "config", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 33, "col_offset": 68, "nodeName": "t", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "maxlen", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "start_text", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "symtok", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "symtok", "type": "Any"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "left_token_count", "type": "int"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "right_token_count", "type": "int"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "cache_", "type": "Any"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "self", "type": "Sampler"}]