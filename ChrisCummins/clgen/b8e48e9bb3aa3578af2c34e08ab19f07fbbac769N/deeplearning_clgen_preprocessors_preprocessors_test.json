[{"lineNumber": 51, "col_offset": 0, "nodeName": "MockUndecoratedPreprocessor", "type": "Callable[[str], str]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "test_GetPreprocessFunction_empty_string", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "test_GetPreprocessFunction_missing_module", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "test_GetPreprocessFunction_missing_function", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "test_GetPreprocessFunction_undecorated_preprocessor", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "test_GetPreprocessFunction_mock_preprocessor", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "test_GetPreprocessorFunction_absolute_path", "type": "Callable[[pathlib.Path], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "test_GetPreprocessorFunction_absolute_path_with_dep", "type": "Callable[[pathlib.Path], Any]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "test_GetPreprocessorFunction_absolute_path_not_found", "type": "Callable[[pathlib.Path], Any]"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "test_Preprocess_no_preprocessors", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "test_Preprocess_mock_preprocessor", "type": "Callable[[], Any]"}, {"lineNumber": 161, "col_offset": 0, "nodeName": "test_Preprocess_mock_preprocessor_bad_code", "type": "Callable[[], Any]"}, {"lineNumber": 170, "col_offset": 0, "nodeName": "test_Preprocess_mock_preprocessor_internal_error", "type": "Callable[[], Any]"}, {"lineNumber": 182, "col_offset": 0, "nodeName": "test_Preprocess_RejectSecrets", "type": "Callable[[], Any]"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "test_Preprocess_RejectSecrets", "type": "Callable[[], Any]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "test_benchmark_GetPreprocessFunction_mock", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "app", "type": "module"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "text", "type": "str"}, {"lineNumber": 92, "col_offset": 2, "nodeName": "f", "type": "Callable[[str], str]"}, {"lineNumber": 99, "col_offset": 2, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 106, "col_offset": 2, "nodeName": "f", "type": "Callable[[str], str]"}, {"lineNumber": 112, "col_offset": 2, "nodeName": "lib_module", "type": "pathlib.Path"}, {"lineNumber": 119, "col_offset": 2, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 133, "col_offset": 2, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 210, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "BadCodeException", "type": "Type[deeplearning.clgen.errors.BadCodeException]"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "InternalError", "type": "Type[deeplearning.clgen.errors.InternalError]"}, {"lineNumber": 51, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 92, "col_offset": 6, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "f", "type": "Callable[[str], str]"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "MockPreprocessor", "type": "Callable[[str], str]"}, {"lineNumber": 97, "col_offset": 56, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 99, "col_offset": 9, "nodeName": "tempdir", "type": "pathlib.Path"}, {"lineNumber": 100, "col_offset": 2, "nodeName": "Write", "type": "Callable[..., pathlib.Path]"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 110, "col_offset": 65, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "tempdir", "type": "pathlib.Path"}, {"lineNumber": 113, "col_offset": 2, "nodeName": "Write", "type": "Callable[..., pathlib.Path]"}, {"lineNumber": 114, "col_offset": 6, "nodeName": "lib_module", "type": "pathlib.Path"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "tempdir", "type": "pathlib.Path"}, {"lineNumber": 120, "col_offset": 2, "nodeName": "Write", "type": "Callable[..., pathlib.Path]"}, {"lineNumber": 121, "col_offset": 6, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 131, "col_offset": 66, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "tempdir", "type": "pathlib.Path"}, {"lineNumber": 134, "col_offset": 2, "nodeName": "Write", "type": "Callable[..., pathlib.Path]"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 204, "col_offset": 2, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 205, "col_offset": 6, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 211, "col_offset": 2, "nodeName": "Main", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "errors", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "errors", "type": "module"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "value", "type": "Any"}, {"lineNumber": 68, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "value", "type": "Any"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "value", "type": "Any"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 92, "col_offset": 6, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 97, "col_offset": 56, "nodeName": "pathlib", "type": "module"}, {"lineNumber": 100, "col_offset": 2, "nodeName": "fs", "type": "module"}, {"lineNumber": 104, "col_offset": -1, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "f", "type": "Callable[[str], str]"}, {"lineNumber": 110, "col_offset": 65, "nodeName": "pathlib", "type": "module"}, {"lineNumber": 113, "col_offset": 2, "nodeName": "fs", "type": "module"}, {"lineNumber": 117, "col_offset": -1, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 120, "col_offset": 2, "nodeName": "fs", "type": "module"}, {"lineNumber": 125, "col_offset": -1, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 127, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 131, "col_offset": 66, "nodeName": "pathlib", "type": "module"}, {"lineNumber": 134, "col_offset": 2, "nodeName": "fs", "type": "module"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 135, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "pathlib", "type": "module"}, {"lineNumber": 142, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 151, "col_offset": 9, "nodeName": "Preprocess", "type": "Callable[[str, List[str]], str]"}, {"lineNumber": 156, "col_offset": 9, "nodeName": "Preprocess", "type": "Callable[[str, List[str]], str]"}, {"lineNumber": 163, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "BadCodeException", "type": "Type[deeplearning.clgen.errors.BadCodeException]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "Preprocess", "type": "Callable[[str, List[str]], str]"}, {"lineNumber": 172, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "InternalError", "type": "Type[deeplearning.clgen.errors.InternalError]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "Preprocess", "type": "Callable[[str, List[str]], str]"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "Preprocess", "type": "Callable[[str, List[str]], str]"}, {"lineNumber": 192, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "BadCodeException", "type": "Type[deeplearning.clgen.errors.BadCodeException]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "Preprocess", "type": "Callable[[str, List[str]], str]"}, {"lineNumber": 205, "col_offset": 6, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 211, "col_offset": 2, "nodeName": "test", "type": "module"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 68, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 127, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 135, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 142, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 151, "col_offset": 9, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 156, "col_offset": 9, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 163, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 172, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 192, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}]