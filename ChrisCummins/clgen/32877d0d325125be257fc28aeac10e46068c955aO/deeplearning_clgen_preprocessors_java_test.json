[{"lineNumber": 26, "col_offset": 0, "nodeName": "test_ClangFormat_hello_world", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "test_ClangFormat_long_line", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "test_Compile_empty_input", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "test_Compile_hello_world", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "test_Compile_class_name_whitespace", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "test_Compile_WrapMethodInClass_hello_world", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "test_Compile_WrapMethodInClass_syntax_error", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "test_Compile_WrapMethodInClass_undefined_symbol", "type": "Callable[[], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "test_UnwrapMethodInClass_hello_world", "type": "Callable[[], Any]"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "test_UnwrapMethodInClass_no_methods", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 0, "nodeName": "test_UnwrapMethodInClass_multiple_methods", "type": "Callable[[], Any]"}, {"lineNumber": 208, "col_offset": 0, "nodeName": "test_Compile_InsertShimImports_WrapMethodInClass_array_list", "type": "Callable[[], Any]"}, {"lineNumber": 232, "col_offset": 0, "nodeName": "test_JavaRewrite_hello_world", "type": "Callable[[], Any]"}, {"lineNumber": 237, "col_offset": 0, "nodeName": "test_JavaRewrite_comments_are_unchanged", "type": "Callable[[], Any]"}, {"lineNumber": 259, "col_offset": 0, "nodeName": "test_JavaRewrite_whitespace", "type": "Callable[[], Any]"}, {"lineNumber": 264, "col_offset": 0, "nodeName": "test_JavaRewrite_rewrite_class_name", "type": "Callable[[], Any]"}, {"lineNumber": 280, "col_offset": 0, "nodeName": "test_JavaRewrite_rewrite_anonymous_class_names", "type": "Callable[[], Any]"}, {"lineNumber": 305, "col_offset": 0, "nodeName": "test_JavaRewrite_rewrite_static_method_argument_names", "type": "Callable[[], Any]"}, {"lineNumber": 329, "col_offset": 0, "nodeName": "test_JavaRewrite_conflicting_length_name", "type": "Callable[[], Any]"}, {"lineNumber": 356, "col_offset": 0, "nodeName": "test_JavaRewrite_formats_source", "type": "Callable[[], Any]"}, {"lineNumber": 377, "col_offset": 0, "nodeName": "test_JavaRewrite_assertion_arg_rename_FAILS", "type": "Callable[[], Any]"}, {"lineNumber": 404, "col_offset": 0, "nodeName": "test_JavaRewrite_optional_if_else_braces", "type": "Callable[[], Any]"}, {"lineNumber": 433, "col_offset": 0, "nodeName": "test_JavaRewrite_optional_if_else_braces_on_one_line", "type": "Callable[[], Any]"}, {"lineNumber": 459, "col_offset": 0, "nodeName": "test_JavaRewrite_github_testcase_1", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "app", "type": "module"}, {"lineNumber": 501, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 187, "col_offset": 47, "nodeName": "e_ctx", "type": "Any"}, {"lineNumber": 194, "col_offset": 47, "nodeName": "e_ctx", "type": "Any"}, {"lineNumber": 502, "col_offset": 2, "nodeName": "Main", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "ClangFormat", "type": "Callable[[str], str]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "ClangFormat", "type": "Callable[[str], str]"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "BadCodeException", "type": "Type[deeplearning.clgen.errors.BadCodeException]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "Compile", "type": "Callable[[str], str]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "Compile", "type": "Callable[[str], str]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "Compile", "type": "Callable[[str], str]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "Compile", "type": "Callable[[str], str]"}, {"lineNumber": 145, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "BadCodeException", "type": "Type[deeplearning.clgen.errors.BadCodeException]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "Compile", "type": "Callable[[str], str]"}, {"lineNumber": 151, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "BadCodeException", "type": "Type[deeplearning.clgen.errors.BadCodeException]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "Compile", "type": "Callable[[str], str]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "UnwrapMethodInClass", "type": "Callable[[str], str]"}, {"lineNumber": 187, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "BadCodeException", "type": "Type[deeplearning.clgen.errors.BadCodeException]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "UnwrapMethodInClass", "type": "Callable[[str], str]"}, {"lineNumber": 189, "col_offset": 9, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "value", "type": "Any"}, {"lineNumber": 194, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "BadCodeException", "type": "Type[deeplearning.clgen.errors.BadCodeException]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "UnwrapMethodInClass", "type": "Callable[[str], str]"}, {"lineNumber": 202, "col_offset": 9, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "value", "type": "Any"}, {"lineNumber": 215, "col_offset": 7, "nodeName": "Compile", "type": "Callable[[str], str]"}, {"lineNumber": 234, "col_offset": 9, "nodeName": "JavaRewrite", "type": "Callable[[str], str]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "JavaRewrite", "type": "Callable[[str], str]"}, {"lineNumber": 261, "col_offset": 9, "nodeName": "JavaRewrite", "type": "Callable[[str], str]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "JavaRewrite", "type": "Callable[[str], str]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "JavaRewrite", "type": "Callable[[str], str]"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "JavaRewrite", "type": "Callable[[str], str]"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "JavaRewrite", "type": "Callable[[str], str]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "JavaRewrite", "type": "Callable[[str], str]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "JavaRewrite", "type": "Callable[[str], str]"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "JavaRewrite", "type": "Callable[[str], str]"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "JavaRewrite", "type": "Callable[[str], str]"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "JavaRewrite", "type": "Callable[[str], str]"}, {"lineNumber": 502, "col_offset": 2, "nodeName": "test", "type": "module"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "WrapMethodInClass", "type": "Callable[[str], str]"}, {"lineNumber": 145, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "WrapMethodInClass", "type": "Callable[[str], str]"}, {"lineNumber": 151, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "WrapMethodInClass", "type": "Callable[[str], str]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 187, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "e_ctx", "type": "Any"}, {"lineNumber": 194, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "e_ctx", "type": "Any"}, {"lineNumber": 215, "col_offset": 7, "nodeName": "java", "type": "module"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "InsertShimImports", "type": "Callable[[str], str]"}, {"lineNumber": 234, "col_offset": 9, "nodeName": "java", "type": "module"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 261, "col_offset": 9, "nodeName": "java", "type": "module"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "java", "type": "module"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "java", "type": "module"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "java", "type": "module"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "java", "type": "module"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "WrapMethodInClass", "type": "Callable[[str], str]"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "java", "type": "module"}]