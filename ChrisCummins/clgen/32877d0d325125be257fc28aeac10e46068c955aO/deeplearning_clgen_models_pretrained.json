[{"lineNumber": 37, "col_offset": 0, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 190, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "app", "type": "module"}, {"lineNumber": 177, "col_offset": 55, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "cache", "type": "labm8.py.cache.FSCache"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "corpus", "type": "NullCorpus"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "atomizer", "type": "deeplearning.clgen.corpuses.atomizers.AtomizerBase"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "List", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "samples_in_progress", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "done", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "start_time", "type": "int"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "wall_time_start", "type": "int"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "start_time", "type": "int"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "continue_sampling", "type": "bool"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "continue_sampling", "type": "bool"}, {"lineNumber": 71, "col_offset": 7, "nodeName": "List", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "sample_start_time", "type": "int"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "atomizer", "type": "deeplearning.clgen.corpuses.atomizers.AtomizerBase"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "atomizer", "type": "deeplearning.clgen.corpuses.atomizers.AtomizerBase"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "batch_count", "type": "int"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "time_now", "type": "int"}, {"lineNumber": 177, "col_offset": 55, "nodeName": "pathlib", "type": "module"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "absolute", "type": "Callable"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "FSCache", "type": "Type[labm8.py.cache.FSCache]"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "NullCorpus", "type": "Type[NullCorpus]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "FromFile", "type": "Callable[[Any, pathlib.Path], deeplearning.clgen.corpuses.atomizers.AtomizerBase]"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "config", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "cache", "type": "labm8.py.cache.FSCache"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "atomizer", "type": "deeplearning.clgen.corpuses.atomizers.AtomizerBase"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "EpochTelemetry", "type": "Callable[[], List[Any]]"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "typing", "type": "module"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "ModelEpochTelemetry", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "AtomizerBase", "type": "Type[deeplearning.clgen.corpuses.atomizers.AtomizerBase]"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "MillisecondsTimestamp", "type": "Callable[..., int]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "InitSampleBatch", "type": "Callable[[deeplearning.clgen.samplers.Sampler], None]"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "sampler", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "indices", "type": "Any"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 7, "nodeName": "typing", "type": "module"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "Sample", "type": "Any"}, {"lineNumber": 124, "col_offset": 10, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "sample_observers", "type": "List[deeplearning.clgen.sample_observers.SampleObserver]"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "MillisecondsTimestamp", "type": "Callable[..., int]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "Log", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "start_text", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "Specialize", "type": "Callable[[deeplearning.clgen.corpuses.atomizers.AtomizerBase], None]"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "atomizer", "type": "deeplearning.clgen.corpuses.atomizers.AtomizerBase"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "InitSampling", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "sampler", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "seed", "type": "int"}, {"lineNumber": 164, "col_offset": 10, "nodeName": "_SampleBatch", "type": "Callable[[deeplearning.clgen.samplers.Sampler, deeplearning.clgen.corpuses.atomizers.AtomizerBase, List[deeplearning.clgen.sample_observers.SampleObserver]], List[Any]]"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "sampler", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 164, "col_offset": 37, "nodeName": "atomizer", "type": "deeplearning.clgen.corpuses.atomizers.AtomizerBase"}, {"lineNumber": 164, "col_offset": 47, "nodeName": "sample_observers", "type": "List[deeplearning.clgen.sample_observers.SampleObserver]"}, {"lineNumber": 165, "col_offset": 6, "nodeName": "batch_count", "type": "int"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "MillisecondsTimestamp", "type": "Callable[..., int]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "Log", "type": "Any"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "hash", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "pathlib", "type": "module"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "cache", "type": "module"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "FromFile", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "AtomizerBase", "type": "Type[deeplearning.clgen.corpuses.atomizers.AtomizerBase]"}, {"lineNumber": 50, "col_offset": 52, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "telemetry_pb2", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "samplers", "type": "module"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "atomizers", "type": "module"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "List", "type": "Any"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "copy", "type": "Any"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "_", "type": "int"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "sampler", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "bool", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "labdate", "type": "module"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "backend", "type": "Union[deeplearning.clgen.models.keras_backend.KerasBackend, deeplearning.clgen.models.tensorflow_backend.TensorFlowBackend]"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "all", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "SampleNextIndices", "type": "Callable[[deeplearning.clgen.samplers.Sampler, numpy.ndarray], Any]"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "sampler", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 88, "col_offset": 56, "nodeName": "done", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "labdate", "type": "module"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "app", "type": "module"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "sampler", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "sampler", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "backend", "type": "Union[deeplearning.clgen.models.keras_backend.KerasBackend, deeplearning.clgen.models.tensorflow_backend.TensorFlowBackend]"}, {"lineNumber": 161, "col_offset": 5, "nodeName": "Specialize", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "sampler", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "obs", "type": "deeplearning.clgen.sample_observers.SampleObserver"}, {"lineNumber": 161, "col_offset": 46, "nodeName": "sample_observers", "type": "List[deeplearning.clgen.sample_observers.SampleObserver]"}, {"lineNumber": 164, "col_offset": 10, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "labdate", "type": "module"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "app", "type": "module"}, {"lineNumber": 171, "col_offset": 6, "nodeName": "Commas", "type": "Callable[[Optional[int]], str]"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "batch_count", "type": "int"}, {"lineNumber": 172, "col_offset": 6, "nodeName": "Commas", "type": "Callable[[Optional[int]], str]"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "samplers", "type": "module"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "sampler", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "pbutil", "type": "module"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "ModelMeta", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "atomizers", "type": "module"}, {"lineNumber": 50, "col_offset": 52, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 52, "col_offset": 6, "nodeName": "TENSORFLOW", "type": "Any"}, {"lineNumber": 53, "col_offset": 6, "nodeName": "KERAS", "type": "Any"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "TensorFlowBackend", "type": "Type[deeplearning.clgen.models.tensorflow_backend.TensorFlowBackend]"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "KerasBackend", "type": "Type[deeplearning.clgen.models.keras_backend.KerasBackend]"}, {"lineNumber": 54, "col_offset": 6, "nodeName": "backend", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "TrainingLogger", "type": "Type[deeplearning.clgen.telemetry.TrainingLogger]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "typing", "type": "module"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "SampleObserver", "type": "Type[deeplearning.clgen.sample_observers.SampleObserver]"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "tokenized_start_text", "type": "Any"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 74, "col_offset": 57, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "done", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "backend", "type": "Union[deeplearning.clgen.models.keras_backend.KerasBackend, deeplearning.clgen.models.tensorflow_backend.TensorFlowBackend]"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "sampler", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "done", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "indices", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "errors", "type": "module"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 161, "col_offset": 5, "nodeName": "obs", "type": "deeplearning.clgen.sample_observers.SampleObserver"}, {"lineNumber": 171, "col_offset": 6, "nodeName": "humanize", "type": "module"}, {"lineNumber": 172, "col_offset": 6, "nodeName": "humanize", "type": "module"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "cache", "type": "labm8.py.cache.FSCache"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "internal_pb2", "type": "Any"}, {"lineNumber": 52, "col_offset": 6, "nodeName": "NetworkArchitecture", "type": "Any"}, {"lineNumber": 53, "col_offset": 6, "nodeName": "NetworkArchitecture", "type": "Any"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "tensorflow_backend", "type": "module"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "keras_backend", "type": "module"}, {"lineNumber": 54, "col_offset": 6, "nodeName": "architecture", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "telemetry", "type": "module"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "sample_observers_lib", "type": "module"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "sampler", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 74, "col_offset": 57, "nodeName": "sampler", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 10, "nodeName": "append", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "end_time", "type": "int"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "wall_time_start", "type": "int"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 52, "col_offset": 6, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 53, "col_offset": 6, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 54, "col_offset": 6, "nodeName": "config", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "cache", "type": "labm8.py.cache.FSCache"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "sampler", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "samples_in_progress", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "MillisecondsTimestamp", "type": "Callable[..., int]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "done", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "Sample", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "MillisecondsTimestamp", "type": "Callable[..., int]"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "time_now", "type": "int"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "sample_start_time", "type": "int"}, {"lineNumber": 173, "col_offset": 45, "nodeName": "max", "type": "Callable"}, {"lineNumber": 173, "col_offset": 49, "nodeName": "batch_count", "type": "int"}, {"lineNumber": 54, "col_offset": 6, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "self", "type": "PreTrainedModel"}, {"lineNumber": 97, "col_offset": 10, "nodeName": "samples_in_progress", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "atomizer", "type": "deeplearning.clgen.corpuses.atomizers.AtomizerBase"}, {"lineNumber": 97, "col_offset": 57, "nodeName": "index", "type": "Any"}, {"lineNumber": 98, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "labdate", "type": "module"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 103, "col_offset": 40, "nodeName": "start_time", "type": "int"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "labdate", "type": "module"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "end_time", "type": "int"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "start_time", "type": "int"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "end_time", "type": "int"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "wall_time_start", "type": "int"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "obs", "type": "deeplearning.clgen.sample_observers.SampleObserver"}, {"lineNumber": 110, "col_offset": 51, "nodeName": "sample_observers", "type": "List[deeplearning.clgen.sample_observers.SampleObserver]"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "samples_in_progress", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "samples_in_progress", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "OnSample", "type": "Callable[[Any], bool]"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "sample", "type": "Any"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 106, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "obs", "type": "deeplearning.clgen.sample_observers.SampleObserver"}]