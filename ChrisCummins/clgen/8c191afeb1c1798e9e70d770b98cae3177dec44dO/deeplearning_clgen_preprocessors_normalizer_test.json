[{"lineNumber": 38, "col_offset": 0, "nodeName": "test_NormalizeIdentifiers_process_command", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "test_NormalizeIdentifiers_ClangTimeout", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "test_NormalizeIdentifiers_RewriterException", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "test_NormalizeIdentifiers_empty_c_file", "type": "Callable[[], Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "test_NormalizeIdentifiers_small_c_program", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "test_NormalizeIdentifiers_variable_names_function_scope", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "test_NormalizeIdentifiers_small_cl_program", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "test_NormalizeIdentifiers_c_syntax_error", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "test_NormalizeIdentifiers_printf_not_rewritten", "type": "Callable[[], Any]"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "test_NormalizeIdentifiers_undefined_not_rewritten", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "test_benchmark_NormalizeIdentifiers_c_hello_world", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 31, "col_offset": 2, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 2, "nodeName": "communicate", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "flags", "type": "Any"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "return_value", "type": "MockProcess"}, {"lineNumber": 44, "col_offset": 2, "nodeName": "cmd", "type": "Any"}, {"lineNumber": 50, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "return_value", "type": "MockProcess"}, {"lineNumber": 61, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 62, "col_offset": 2, "nodeName": "return_value", "type": "MockProcess"}, {"lineNumber": 163, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "returncode", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "returncode", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "patch", "type": "Any"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "MockProcess", "type": "Type[MockProcess]"}, {"lineNumber": 42, "col_offset": 2, "nodeName": "NormalizeIdentifiers", "type": "Any"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "patch", "type": "Any"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "MockProcess", "type": "Type[MockProcess]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "patch", "type": "Any"}, {"lineNumber": 62, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "MockProcess", "type": "Type[MockProcess]"}, {"lineNumber": 110, "col_offset": 9, "nodeName": "NormalizeIdentifiers", "type": "Any"}, {"lineNumber": 152, "col_offset": 2, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "NormalizeIdentifiers", "type": "Any"}, {"lineNumber": 164, "col_offset": 2, "nodeName": "Main", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "self", "type": "MockProcess"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "mocker", "type": "Any"}, {"lineNumber": 42, "col_offset": 2, "nodeName": "normalizer", "type": "module"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "Popen", "type": "Type[subprocess.Popen[Any]]"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "cmd", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "mocker", "type": "Any"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "ClangTimeout", "type": "Type[deeplearning.clgen.errors.ClangTimeout]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "NormalizeIdentifiers", "type": "Any"}, {"lineNumber": 55, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "ClangException", "type": "Type[deeplearning.clgen.errors.ClangException]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "NormalizeIdentifiers", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "mocker", "type": "Any"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "RewriterException", "type": "Type[deeplearning.clgen.errors.RewriterException]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "NormalizeIdentifiers", "type": "Any"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "ClangException", "type": "Type[deeplearning.clgen.errors.ClangException]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "NormalizeIdentifiers", "type": "Any"}, {"lineNumber": 72, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "RewriterException", "type": "Type[deeplearning.clgen.errors.RewriterException]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "NormalizeIdentifiers", "type": "Any"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "NormalizeIdentifiers", "type": "Any"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "NormalizeIdentifiers", "type": "Any"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "NormalizeIdentifiers", "type": "Any"}, {"lineNumber": 110, "col_offset": 9, "nodeName": "normalizer", "type": "module"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "NormalizeIdentifiers", "type": "Any"}, {"lineNumber": 135, "col_offset": 9, "nodeName": "NormalizeIdentifiers", "type": "Any"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "normalizer", "type": "module"}, {"lineNumber": 164, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "normalizer", "type": "module"}, {"lineNumber": 55, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "normalizer", "type": "module"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "normalizer", "type": "module"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "normalizer", "type": "module"}, {"lineNumber": 72, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "normalizer", "type": "module"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "normalizer", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "normalizer", "type": "module"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "normalizer", "type": "module"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "normalizer", "type": "module"}, {"lineNumber": 135, "col_offset": 9, "nodeName": "normalizer", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "Popen", "type": "Type[subprocess.Popen[Any]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "subprocess", "type": "module"}]