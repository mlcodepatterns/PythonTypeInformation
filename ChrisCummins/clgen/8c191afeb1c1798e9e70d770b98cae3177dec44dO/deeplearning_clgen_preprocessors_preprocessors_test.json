[{"lineNumber": 49, "col_offset": 0, "nodeName": "MockUndecoratedPreprocessor", "type": "Callable[[str], str]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "test_GetPreprocessFunction_empty_string", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "test_GetPreprocessFunction_missing_module", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_GetPreprocessFunction_missing_function", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "test_GetPreprocessFunction_undecorated_preprocessor", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "test_GetPreprocessFunction_mock_preprocessor", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "test_Preprocess_no_preprocessors", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "test_Preprocess_mock_preprocessor", "type": "Callable[[], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "test_Preprocess_mock_preprocessor_bad_code", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "test_Preprocess_mock_preprocessor_internal_error", "type": "Callable[[], Any]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "test_benchmark_GetPreprocessFunction_mock", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "flags", "type": "Any"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "text", "type": "str"}, {"lineNumber": 90, "col_offset": 2, "nodeName": "f", "type": "Callable[[str], str]"}, {"lineNumber": 139, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "BadCodeException", "type": "Type[deeplearning.clgen.errors.BadCodeException]"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "InternalError", "type": "Type[deeplearning.clgen.errors.InternalError]"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 66, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 90, "col_offset": 6, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "f", "type": "Callable[[str], str]"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "MockPreprocessor", "type": "Callable[[str], str]"}, {"lineNumber": 133, "col_offset": 2, "nodeName": "benchmark", "type": "Any"}, {"lineNumber": 134, "col_offset": 6, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 140, "col_offset": 2, "nodeName": "Main", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "errors", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "errors", "type": "module"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 61, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "value", "type": "Any"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "value", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "value", "type": "Any"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "GetPreprocessorFunction", "type": "Callable[[str], Callable[[str], str]]"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 90, "col_offset": 6, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "Preprocess", "type": "Callable[[str, List[str]], str]"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "Preprocess", "type": "Callable[[str, List[str]], str]"}, {"lineNumber": 112, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "BadCodeException", "type": "Type[deeplearning.clgen.errors.BadCodeException]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "Preprocess", "type": "Callable[[str, List[str]], str]"}, {"lineNumber": 121, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "InternalError", "type": "Type[deeplearning.clgen.errors.InternalError]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "Preprocess", "type": "Callable[[str, List[str]], str]"}, {"lineNumber": 134, "col_offset": 6, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 140, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 112, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}, {"lineNumber": 121, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "preprocessors", "type": "module"}]