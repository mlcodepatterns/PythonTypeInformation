[{"lineNumber": 34, "col_offset": 0, "nodeName": "GetClangArgs", "type": "Callable[[bool], List[str]]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "_ClangPreprocess", "type": "Callable[[str, bool], str]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "LIBCLC", "type": "Any"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "OPENCL_H", "type": "Any"}, {"lineNumber": 54, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 197, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 224, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "flags", "type": "Any"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "DataPath", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "DataPath", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "DataPath", "type": "Any"}, {"lineNumber": 49, "col_offset": 5, "nodeName": "use_shim", "type": "bool"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "List", "type": "Any"}, {"lineNumber": 111, "col_offset": 9, "nodeName": "text", "type": "str"}, {"lineNumber": 251, "col_offset": 9, "nodeName": "text", "type": "str"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "bazelutil", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "bazelutil", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "bazelutil", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "typing", "type": "module"}, {"lineNumber": 34, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "text", "type": "str"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "_ClangPreprocess", "type": "Callable[[str, bool], str]"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "text", "type": "str"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "_ClangPreprocess", "type": "Callable[[str, bool], str]"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "text", "type": "str"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 109, "col_offset": 2, "nodeName": "CompileLlvmBytecode", "type": "Callable[..., str]"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "text", "type": "str"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "ClangFormat", "type": "Callable[..., str]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "text", "type": "str"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 145, "col_offset": 9, "nodeName": "NormalizeIdentifiers", "type": "Callable[..., str]"}, {"lineNumber": 146, "col_offset": 6, "nodeName": "text", "type": "str"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "prototype_end_idx", "type": "int"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "prototype", "type": "str"}, {"lineNumber": 224, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "old", "type": "str"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "new", "type": "str"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "items", "type": "Callable"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "OPENCL_H", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "GetClangArgs", "type": "Callable[[bool], List[str]]"}, {"lineNumber": 109, "col_offset": 2, "nodeName": "clang", "type": "module"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 145, "col_offset": 9, "nodeName": "normalizer", "type": "module"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "GetClangArgs", "type": "Callable[[bool], List[str]]"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "prototype", "type": "str"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "replacements", "type": "Dict[str, str]"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "old", "type": "str"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "new", "type": "str"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "LIBCLC", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "SHIMFILE", "type": "Any"}, {"lineNumber": 66, "col_offset": 54, "nodeName": "use_shim", "type": "bool"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "GetClangArgs", "type": "Callable[[bool], List[str]]"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "text", "type": "str"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "text", "type": "str"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "text", "type": "str"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "prototype_end_idx", "type": "int"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "text", "type": "str"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "prototype_end_idx", "type": "int"}]