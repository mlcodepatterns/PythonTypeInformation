[{"lineNumber": 70, "col_offset": 0, "nodeName": "CreateCorpusProtoFromFlags", "type": "Callable[[], Any]"}, {"lineNumber": 189, "col_offset": 0, "nodeName": "CreateModelProtoFromFlags", "type": "Callable[[], Any]"}, {"lineNumber": 214, "col_offset": 0, "nodeName": "CreateSamplerProtoFromFlags", "type": "Callable[[], Any]"}, {"lineNumber": 237, "col_offset": 0, "nodeName": "CreateInstanceProtoFromFlags", "type": "Callable[[], Any]"}, {"lineNumber": 245, "col_offset": 0, "nodeName": "CreateInstanceFromFlags", "type": "Callable[[], deeplearning.clgen.clgen.Instance]"}, {"lineNumber": 249, "col_offset": 0, "nodeName": "main", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "Corpus", "type": "Any"}, {"lineNumber": 189, "col_offset": 35, "nodeName": "Model", "type": "Any"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 245, "col_offset": 33, "nodeName": "Instance", "type": "Type[deeplearning.clgen.clgen.Instance]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "app", "type": "Any"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "DEFINE_string", "type": "Any"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "DEFINE_string", "type": "Any"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "DEFINE_boolean", "type": "Any"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Any"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Any"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Any"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Any"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Any"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Any"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "DEFINE_string", "type": "Any"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "DEFINE_float", "type": "Any"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Any"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Any"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "DEFINE_integer", "type": "Any"}, {"lineNumber": 71, "col_offset": 2, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 87, "col_offset": 5, "nodeName": "clgen_multichar_tokenizer", "type": "Any"}, {"lineNumber": 186, "col_offset": 9, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "corpus_pb2", "type": "Any"}, {"lineNumber": 189, "col_offset": 35, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 215, "col_offset": 2, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 228, "col_offset": 5, "nodeName": "clgen_max_sample_length", "type": "Any"}, {"lineNumber": 234, "col_offset": 9, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "clgen_pb2", "type": "Any"}, {"lineNumber": 245, "col_offset": 33, "nodeName": "clgen", "type": "module"}, {"lineNumber": 254, "col_offset": 2, "nodeName": "instance", "type": "deeplearning.clgen.clgen.Instance"}, {"lineNumber": 255, "col_offset": 2, "nodeName": "sample_count", "type": "int"}, {"lineNumber": 264, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "app", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "app", "type": "Any"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "app", "type": "Any"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "app", "type": "Any"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "app", "type": "Any"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "app", "type": "Any"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "app", "type": "Any"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "app", "type": "Any"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "app", "type": "Any"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "app", "type": "Any"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "app", "type": "Any"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "app", "type": "Any"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "app", "type": "Any"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "app", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "Corpus", "type": "Any"}, {"lineNumber": 87, "col_offset": 5, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "ascii_character_atomizer", "type": "bool"}, {"lineNumber": 190, "col_offset": 9, "nodeName": "Model", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 228, "col_offset": 5, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 238, "col_offset": 9, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "Instance", "type": "Type[deeplearning.clgen.clgen.Instance]"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "CreateInstanceFromFlags", "type": "Callable[[], deeplearning.clgen.clgen.Instance]"}, {"lineNumber": 265, "col_offset": 2, "nodeName": "RunWithArgs", "type": "Any"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "main", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "expanduser", "type": "Callable"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "corpus_pb2", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "clgen_corpus_dir", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "GreedyMulticharAtomizer", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 190, "col_offset": 9, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "clgen_seed_text", "type": "Any"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "clgen_sample_batch_size", "type": "Any"}, {"lineNumber": 218, "col_offset": 22, "nodeName": "clgen_sample_sequence_length", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "extend", "type": "Any"}, {"lineNumber": 238, "col_offset": 9, "nodeName": "clgen_pb2", "type": "Any"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "clgen_working_dir", "type": "Any"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "clgen", "type": "module"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "CreateInstanceProtoFromFlags", "type": "Callable[[], Any]"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "List", "type": "Any"}, {"lineNumber": 251, "col_offset": 5, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 251, "col_offset": 9, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 252, "col_offset": 10, "nodeName": "UsageError", "type": "Any"}, {"lineNumber": 256, "col_offset": 7, "nodeName": "Session", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "Train", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "clgen_min_sample_count", "type": "Any"}, {"lineNumber": 265, "col_offset": 2, "nodeName": "app", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "corpus_pb2", "type": "Any"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "CreateCorpusProtoFromFlags", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "NetworkArchitecture", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "TrainingOptions", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 218, "col_offset": 22, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "termination_criteria", "type": "Any"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "CreateModelProtoFromFlags", "type": "Callable[[], Any]"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "CreateSamplerProtoFromFlags", "type": "Callable[[], Any]"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "typing", "type": "module"}, {"lineNumber": 249, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 252, "col_offset": 10, "nodeName": "app", "type": "Any"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 256, "col_offset": 7, "nodeName": "instance", "type": "deeplearning.clgen.clgen.Instance"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "instance", "type": "deeplearning.clgen.clgen.Instance"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "sample_count", "type": "int"}, {"lineNumber": 259, "col_offset": 26, "nodeName": "clgen_min_sample_count", "type": "Any"}, {"lineNumber": 260, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "TENSORFLOW", "type": "Any"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "clgen_layer_size", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "clgen_num_layers", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "clgen_num_epochs", "type": "Any"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "clgen_training_sequence_length", "type": "Any"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "clgen_training_batch_size", "type": "Any"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "clgen_sample_temperature", "type": "Any"}, {"lineNumber": 221, "col_offset": 10, "nodeName": "SampleTerminationCriterion", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "SampleTerminationCriterion", "type": "Any"}, {"lineNumber": 252, "col_offset": 59, "nodeName": "join", "type": "Callable"}, {"lineNumber": 259, "col_offset": 26, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 261, "col_offset": 10, "nodeName": "Sample", "type": "Callable[..., List[Any]]"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "pathlib", "type": "module"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "NetworkArchitecture", "type": "Any"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "NetworkArchitecture", "type": "Any"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "AdamOptimizer", "type": "Any"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 221, "col_offset": 10, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 252, "col_offset": 68, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 261, "col_offset": 10, "nodeName": "instance", "type": "deeplearning.clgen.clgen.Instance"}, {"lineNumber": 261, "col_offset": 42, "nodeName": "clgen_min_sample_count", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "model_pb2", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "MaxTokenLength", "type": "Any"}, {"lineNumber": 261, "col_offset": 42, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 232, "col_offset": 41, "nodeName": "clgen_max_sample_length", "type": "Any"}, {"lineNumber": 232, "col_offset": 41, "nodeName": "FLAGS", "type": "Any"}]