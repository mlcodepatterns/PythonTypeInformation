[{"lineNumber": 51, "col_offset": 0, "nodeName": "test_AssertConfigIsValid_no_start_text", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "test_AssertConfigIsValid_invalid_batch_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "test_AssertConfigIsValid_invalid_temperature_micros", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "test_MaxlenTerminationCriterion_invalid_maximum_tokens_in_sample", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "test_MaxlenTerminationCriterion_SampleIsComplete", "type": "Callable[[], Any]"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "test_SymmetricalTokenDepthCriterion_depth_increase_token", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "test_SymmetricalTokenDepthCriterion_depth_increase_token", "type": "Callable[[], Any]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "test_SymmetricalTokenDepthCriterion_same_tokens", "type": "Callable[[], Any]"}, {"lineNumber": 182, "col_offset": 0, "nodeName": "test_SymmetricalTokenDepthCriterion_SampleIsComplete", "type": "Callable[[], Any]"}, {"lineNumber": 205, "col_offset": 0, "nodeName": "test_SymmetrcalTokenDepthCriterion_SampleIsComplete_reverse_order", "type": "Callable[[], Any]"}, {"lineNumber": 220, "col_offset": 0, "nodeName": "test_Sampler_config_type_error", "type": "Callable[[], Any]"}, {"lineNumber": 227, "col_offset": 0, "nodeName": "test_Sampler_start_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 0, "nodeName": "test_Sampler_temperature", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 0, "nodeName": "test_Sampler_batch_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "pytest_plugins", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "app", "type": "module"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 60, "col_offset": 2, "nodeName": "start_text", "type": "str"}, {"lineNumber": 74, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 79, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 93, "col_offset": 2, "nodeName": "temperature_micros", "type": "int"}, {"lineNumber": 104, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 112, "col_offset": 2, "nodeName": "maximum_tokens_in_sample", "type": "int"}, {"lineNumber": 122, "col_offset": 2, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 138, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 146, "col_offset": 2, "nodeName": "depth_increase_token", "type": "str"}, {"lineNumber": 156, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 164, "col_offset": 2, "nodeName": "depth_decrease_token", "type": "str"}, {"lineNumber": 174, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 184, "col_offset": 2, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 207, "col_offset": 2, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 229, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 235, "col_offset": 2, "nodeName": "temperature_micros", "type": "int"}, {"lineNumber": 236, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 242, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 243, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 254, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 255, "col_offset": 2, "nodeName": "depth_increase_token", "type": "str"}, {"lineNumber": 256, "col_offset": 2, "nodeName": "depth_decrease_token", "type": "str"}, {"lineNumber": 257, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 266, "col_offset": 2, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 267, "col_offset": 2, "nodeName": "AtomizeString", "type": "Callable[[Any], Any]"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "MockAtomizeString", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 281, "col_offset": 2, "nodeName": "depth_increase_token", "type": "str"}, {"lineNumber": 282, "col_offset": 2, "nodeName": "depth_decrease_token", "type": "str"}, {"lineNumber": 283, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 290, "col_offset": 2, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 291, "col_offset": 2, "nodeName": "AtomizeString", "type": "Callable[[Any], Any]"}, {"lineNumber": 291, "col_offset": 23, "nodeName": "MockAtomizeString", "type": "Callable[[Any], Any]"}, {"lineNumber": 303, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 309, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "List", "type": "Any"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "ClearField", "type": "Any"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 60, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 61, "col_offset": 40, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 69, "col_offset": 2, "nodeName": "ClearField", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 74, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 79, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 88, "col_offset": 2, "nodeName": "ClearField", "type": "Any"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 93, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 94, "col_offset": 40, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "MaxTokenLength", "type": "Any"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 112, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 122, "col_offset": 6, "nodeName": "MaxlenTerminationCriterion", "type": "Type[deeplearning.clgen.samplers.MaxlenTerminationCriterion]"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 146, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 158, "col_offset": 40, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 164, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 165, "col_offset": 40, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 177, "col_offset": 40, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 194, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 196, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 202, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 207, "col_offset": 6, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 222, "col_offset": 33, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 227, "col_offset": 48, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 229, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 230, "col_offset": 9, "nodeName": "start_text", "type": "Any"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "start_text", "type": "Any"}, {"lineNumber": 233, "col_offset": 49, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 235, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 236, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "temperature", "type": "Any"}, {"lineNumber": 240, "col_offset": 48, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 242, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 254, "col_offset": 6, "nodeName": "add", "type": "Any"}, {"lineNumber": 255, "col_offset": 2, "nodeName": "symtok", "type": "Any"}, {"lineNumber": 256, "col_offset": 2, "nodeName": "symtok", "type": "Any"}, {"lineNumber": 257, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 266, "col_offset": 9, "nodeName": "AtomizerMock", "type": "Type[AtomizerMock]"}, {"lineNumber": 267, "col_offset": 2, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 268, "col_offset": 50, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 277, "col_offset": 22, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 280, "col_offset": 6, "nodeName": "add", "type": "Any"}, {"lineNumber": 281, "col_offset": 2, "nodeName": "symtok", "type": "Any"}, {"lineNumber": 282, "col_offset": 2, "nodeName": "symtok", "type": "Any"}, {"lineNumber": 283, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 290, "col_offset": 9, "nodeName": "AtomizerMock", "type": "Type[AtomizerMock]"}, {"lineNumber": 291, "col_offset": 2, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 292, "col_offset": 50, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 303, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 304, "col_offset": 9, "nodeName": "encoded_start_text", "type": "Any"}, {"lineNumber": 305, "col_offset": 2, "nodeName": "Specialize", "type": "Callable[[deeplearning.clgen.corpuses.atomizers.AtomizerBase], None]"}, {"lineNumber": 306, "col_offset": 2, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 306, "col_offset": 47, "nodeName": "encoded_start_text", "type": "Any"}, {"lineNumber": 310, "col_offset": 2, "nodeName": "Main", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "typing", "type": "module"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 56, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 58, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 54, "nodeName": "value", "type": "Any"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "value", "type": "Any"}, {"lineNumber": 69, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 70, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "value", "type": "Any"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "value", "type": "Any"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "value", "type": "Any"}, {"lineNumber": 88, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 89, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 91, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 91, "col_offset": 57, "nodeName": "value", "type": "Any"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 96, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 96, "col_offset": 57, "nodeName": "value", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "MaxlenTerminationCriterion", "type": "Type[deeplearning.clgen.samplers.MaxlenTerminationCriterion]"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 108, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 113, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "MaxlenTerminationCriterion", "type": "Type[deeplearning.clgen.samplers.MaxlenTerminationCriterion]"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 115, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 122, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "MaxTokenLength", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 142, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 147, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 149, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 158, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 159, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 160, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 165, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 167, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 177, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 179, "col_offset": 61, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 179, "col_offset": 65, "nodeName": "value", "type": "Any"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 194, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 196, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 202, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 207, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 224, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 224, "col_offset": 66, "nodeName": "value", "type": "Any"}, {"lineNumber": 227, "col_offset": 48, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 229, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 230, "col_offset": 9, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 233, "col_offset": 49, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 236, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "approx", "type": "Any"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 240, "col_offset": 48, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 254, "col_offset": 6, "nodeName": "termination_criteria", "type": "Any"}, {"lineNumber": 255, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 256, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 257, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 268, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "InvalidSymtokTokens", "type": "Type[deeplearning.clgen.errors.InvalidSymtokTokens]"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "Specialize", "type": "Callable[[deeplearning.clgen.corpuses.atomizers.AtomizerBase], None]"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 273, "col_offset": 7, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 277, "col_offset": 22, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 280, "col_offset": 6, "nodeName": "termination_criteria", "type": "Any"}, {"lineNumber": 281, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 282, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 283, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 292, "col_offset": 7, "nodeName": "Raises", "type": "Callable[[Callable[..., Any]], Any]"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "InvalidSymtokTokens", "type": "Type[deeplearning.clgen.errors.InvalidSymtokTokens]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "Specialize", "type": "Callable[[deeplearning.clgen.corpuses.atomizers.AtomizerBase], None]"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 303, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 304, "col_offset": 9, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 305, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "AtomizerMock", "type": "Type[AtomizerMock]"}, {"lineNumber": 306, "col_offset": 2, "nodeName": "testing", "type": "Any"}, {"lineNumber": 306, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 306, "col_offset": 47, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 310, "col_offset": 2, "nodeName": "test", "type": "module"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 58, "col_offset": 54, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 70, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 89, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 91, "col_offset": 57, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 96, "col_offset": 57, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 113, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 147, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 158, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 165, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 177, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 179, "col_offset": 65, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 224, "col_offset": 66, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 254, "col_offset": 6, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 261, "col_offset": 7, "nodeName": "string", "type": "Any"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "string", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "VocabError", "type": "Type[deeplearning.clgen.errors.VocabError]"}, {"lineNumber": 264, "col_offset": 13, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 268, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 280, "col_offset": 6, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 7, "nodeName": "test", "type": "module"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "errors", "type": "module"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 306, "col_offset": 2, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "errors", "type": "module"}, {"lineNumber": 264, "col_offset": 13, "nodeName": "np", "type": "module"}]