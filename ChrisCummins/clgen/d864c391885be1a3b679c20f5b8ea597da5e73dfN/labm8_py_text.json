[{"lineNumber": 40, "col_offset": 0, "nodeName": "get_substring_idxs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "truncate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "levenshtein", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "diff", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 0, "nodeName": "AddWordToPrefixTree", "type": "Callable[[Any, str], None]"}, {"lineNumber": 192, "col_offset": 0, "nodeName": "BuildPrefixTree", "type": "Callable[[Set[str]], Any]"}, {"lineNumber": 215, "col_offset": 0, "nodeName": "PrefixTreeWords", "type": "Callable[..., List[str]]"}, {"lineNumber": 234, "col_offset": 0, "nodeName": "AutoCompletePrefix", "type": "Callable[[str, Any], Set[str]]"}, {"lineNumber": 268, "col_offset": 0, "nodeName": "CamelCapsToUnderscoreSeparated", "type": "Callable[[str], Any]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "Error", "type": "Type[Error]"}, {"lineNumber": 276, "col_offset": 5, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 124, "col_offset": 2, "nodeName": "previous_row", "type": "range"}, {"lineNumber": 177, "col_offset": 2, "nodeName": "current_node", "type": "int"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "char", "type": "str"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "word", "type": "str"}, {"lineNumber": 189, "col_offset": 37, "nodeName": "word", "type": "str"}, {"lineNumber": 208, "col_offset": 2, "nodeName": "trie", "type": "Any"}, {"lineNumber": 210, "col_offset": 6, "nodeName": "word", "type": "str"}, {"lineNumber": 210, "col_offset": 14, "nodeName": "words", "type": "Set[str]"}, {"lineNumber": 212, "col_offset": 9, "nodeName": "trie", "type": "Any"}, {"lineNumber": 225, "col_offset": 2, "nodeName": "ret", "type": "Set[Any]"}, {"lineNumber": 226, "col_offset": 2, "nodeName": "word", "type": "Any"}, {"lineNumber": 227, "col_offset": 5, "nodeName": "word", "type": "Any"}, {"lineNumber": 229, "col_offset": 6, "nodeName": "neighbor_node", "type": "Any"}, {"lineNumber": 231, "col_offset": 9, "nodeName": "ret", "type": "Set[Any]"}, {"lineNumber": 215, "col_offset": 61, "nodeName": "List", "type": "Any"}, {"lineNumber": 251, "col_offset": 2, "nodeName": "ret", "type": "Set[Any]"}, {"lineNumber": 253, "col_offset": 2, "nodeName": "current_node", "type": "int"}, {"lineNumber": 254, "col_offset": 6, "nodeName": "char", "type": "str"}, {"lineNumber": 254, "col_offset": 14, "nodeName": "prefix", "type": "str"}, {"lineNumber": 234, "col_offset": 57, "nodeName": "Set", "type": "Any"}, {"lineNumber": 269, "col_offset": 2, "nodeName": "components", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 9, "nodeName": "components", "type": "List[Any]"}, {"lineNumber": 288, "col_offset": 2, "nodeName": "comment_re", "type": "Pattern[str]"}, {"lineNumber": 289, "col_offset": 2, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 5, "nodeName": "maxchar", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "maxchar", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "string", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 125, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "c1", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "s1", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "current_row", "type": "List[Union[int, Any]]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "previous_row", "type": "List[Union[int, Any]]"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "current_row", "type": "List[Union[int, Any]]"}, {"lineNumber": 134, "col_offset": 9, "nodeName": "previous_row", "type": "Union[List[Union[int, Any]], range]"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "DiGraph", "type": "Any"}, {"lineNumber": 170, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "neighbour_id", "type": "Any"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "DiGraph", "type": "Any"}, {"lineNumber": 209, "col_offset": 2, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "DiGraph", "type": "Any"}, {"lineNumber": 215, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 226, "col_offset": 9, "nodeName": "get", "type": "Any"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "trie", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "ret", "type": "Set[Any]"}, {"lineNumber": 215, "col_offset": 61, "nodeName": "typing", "type": "module"}, {"lineNumber": 215, "col_offset": 73, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 234, "col_offset": 42, "nodeName": "DiGraph", "type": "Any"}, {"lineNumber": 248, "col_offset": 9, "nodeName": "prefix", "type": "str"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "neighbour_id", "type": "Any"}, {"lineNumber": 265, "col_offset": 9, "nodeName": "union", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 234, "col_offset": 57, "nodeName": "typing", "type": "module"}, {"lineNumber": 234, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 268, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 269, "col_offset": 42, "nodeName": "camel_caps_str", "type": "str"}, {"lineNumber": 271, "col_offset": 9, "nodeName": "join", "type": "Callable"}, {"lineNumber": 275, "col_offset": 10, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 290, "col_offset": 9, "nodeName": "join", "type": "Callable"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "start", "type": "Callable[..., int]"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "match", "type": "Match[Any]"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "TruncateError", "type": "Type[TruncateError]"}, {"lineNumber": 78, "col_offset": 5, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "string", "type": "Any"}, {"lineNumber": 117, "col_offset": 5, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "s1", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "s2", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "levenshtein", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "s2", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "s1", "type": "Any"}, {"lineNumber": 121, "col_offset": 5, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "s2", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "s1", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "j", "type": "int"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "c2", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "s2", "type": "Any"}, {"lineNumber": 128, "col_offset": 6, "nodeName": "insertions", "type": "int"}, {"lineNumber": 129, "col_offset": 6, "nodeName": "deletions", "type": "int"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "substitutions", "type": "Any"}, {"lineNumber": 167, "col_offset": 9, "nodeName": "levenshtein", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "s1", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "s2", "type": "Any"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "max", "type": "Callable"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "nx", "type": "module"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "trie", "type": "Any"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "new_node_id", "type": "Any"}, {"lineNumber": 187, "col_offset": 6, "nodeName": "current_node", "type": "Any"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "new_node_id", "type": "Any"}, {"lineNumber": 189, "col_offset": 2, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "Set", "type": "Any"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "nx", "type": "module"}, {"lineNumber": 209, "col_offset": 2, "nodeName": "trie", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "AddWordToPrefixTree", "type": "Callable[[Any, str], None]"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "trie", "type": "Any"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "word", "type": "str"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "nx", "type": "module"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "add", "type": "Callable"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "word", "type": "Any"}, {"lineNumber": 229, "col_offset": 28, "nodeName": "root_node", "type": "int"}, {"lineNumber": 230, "col_offset": 10, "nodeName": "union", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 234, "col_offset": 42, "nodeName": "nx", "type": "module"}, {"lineNumber": 249, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "trie", "type": "Any"}, {"lineNumber": 265, "col_offset": 9, "nodeName": "ret", "type": "Set[Any]"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "PrefixTreeWords", "type": "Callable[..., List[str]]"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "trie", "type": "Any"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 289, "col_offset": 30, "nodeName": "line", "type": "str"}, {"lineNumber": 289, "col_offset": 40, "nodeName": "line", "type": "str"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "match", "type": "Match[Any]"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "finditer", "type": "Callable"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "substr", "type": "Any"}, {"lineNumber": 52, "col_offset": 57, "nodeName": "string", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "string", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "s2", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "s1", "type": "Any"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 167, "col_offset": 48, "nodeName": "s2", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "current_node", "type": "int"}, {"lineNumber": 180, "col_offset": 45, "nodeName": "char", "type": "str"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "current_node", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "neighbour_id", "type": "Any"}, {"lineNumber": 185, "col_offset": 6, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "new_node_id", "type": "Any"}, {"lineNumber": 186, "col_offset": 6, "nodeName": "add_edge", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "current_node", "type": "int"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "new_node_id", "type": "Any"}, {"lineNumber": 189, "col_offset": 2, "nodeName": "trie", "type": "Any"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "current_node", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "typing", "type": "module"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 226, "col_offset": 9, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "ret", "type": "Set[Any]"}, {"lineNumber": 230, "col_offset": 10, "nodeName": "ret", "type": "Set[Any]"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "PrefixTreeWords", "type": "Callable[..., List[str]]"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "trie", "type": "Any"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "current_node", "type": "int"}, {"lineNumber": 256, "col_offset": 45, "nodeName": "char", "type": "str"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "current_node", "type": "Any"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "neighbour_id", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "node_word", "type": "Any"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "node_word", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 265, "col_offset": 51, "nodeName": "current_node", "type": "Any"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "lower", "type": "Any"}, {"lineNumber": 271, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 271, "col_offset": 37, "nodeName": "components", "type": "List[Any]"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "comment_re", "type": "Pattern[str]"}, {"lineNumber": 289, "col_offset": 48, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "re", "type": "module"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "previous_row", "type": "range"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "current_row", "type": "List[Union[int, Any]]"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "previous_row", "type": "range"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "c1", "type": "Any"}, {"lineNumber": 130, "col_offset": 47, "nodeName": "c2", "type": "Any"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "current_row", "type": "List[Union[int, Any]]"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "min", "type": "Callable"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "insertions", "type": "int"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "deletions", "type": "int"}, {"lineNumber": 131, "col_offset": 52, "nodeName": "substitutions", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "max", "type": "Callable"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 185, "col_offset": 6, "nodeName": "trie", "type": "Any"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "char", "type": "str"}, {"lineNumber": 186, "col_offset": 6, "nodeName": "trie", "type": "Any"}, {"lineNumber": 226, "col_offset": 9, "nodeName": "trie", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "root_node", "type": "int"}, {"lineNumber": 230, "col_offset": 52, "nodeName": "neighbor_node", "type": "Any"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 289, "col_offset": 48, "nodeName": "string", "type": "str"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "maxchar", "type": "Any"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "j", "type": "int"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "j", "type": "int"}, {"lineNumber": 180, "col_offset": 9, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "trie", "type": "Any"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 260, "col_offset": 10, "nodeName": "add", "type": "Callable"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "node_word", "type": "Any"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "j", "type": "int"}, {"lineNumber": 180, "col_offset": 9, "nodeName": "trie", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "neighbour_id", "type": "Any"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "trie", "type": "Any"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "neighbour_id", "type": "Any"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 260, "col_offset": 10, "nodeName": "ret", "type": "Set[Any]"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "trie", "type": "Any"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "current_node", "type": "Any"}]