[{"lineNumber": 49, "col_offset": 0, "nodeName": "test_AssertConfigIsValid_no_start_text", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "test_AssertConfigIsValid_invalid_batch_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "test_AssertConfigIsValid_invalid_temperature_micros", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "test_MaxlenTerminationCriterion_invalid_maximum_tokens_in_sample", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "test_MaxlenTerminationCriterion_SampleIsComplete", "type": "Callable[[], Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "test_SymmetricalTokenDepthCriterion_depth_increase_token", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "test_SymmetricalTokenDepthCriterion_depth_increase_token", "type": "Callable[[], Any]"}, {"lineNumber": 170, "col_offset": 0, "nodeName": "test_SymmetricalTokenDepthCriterion_same_tokens", "type": "Callable[[], Any]"}, {"lineNumber": 180, "col_offset": 0, "nodeName": "test_SymmetricalTokenDepthCriterion_SampleIsComplete", "type": "Callable[[], Any]"}, {"lineNumber": 203, "col_offset": 0, "nodeName": "test_SymmetrcalTokenDepthCriterion_SampleIsComplete_reverse_order", "type": "Callable[[], Any]"}, {"lineNumber": 218, "col_offset": 0, "nodeName": "test_Sampler_config_type_error", "type": "Callable[[], Any]"}, {"lineNumber": 225, "col_offset": 0, "nodeName": "test_Sampler_start_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 0, "nodeName": "test_Sampler_temperature", "type": "Callable[[Any], Any]"}, {"lineNumber": 238, "col_offset": 0, "nodeName": "test_Sampler_batch_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "app", "type": "module"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 2, "nodeName": "start_text", "type": "str"}, {"lineNumber": 72, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 77, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 91, "col_offset": 2, "nodeName": "temperature_micros", "type": "int"}, {"lineNumber": 102, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 110, "col_offset": 2, "nodeName": "maximum_tokens_in_sample", "type": "int"}, {"lineNumber": 120, "col_offset": 2, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 136, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 144, "col_offset": 2, "nodeName": "depth_increase_token", "type": "str"}, {"lineNumber": 154, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 162, "col_offset": 2, "nodeName": "depth_decrease_token", "type": "str"}, {"lineNumber": 172, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 182, "col_offset": 2, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 205, "col_offset": 2, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 227, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 233, "col_offset": 2, "nodeName": "temperature_micros", "type": "int"}, {"lineNumber": 234, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 240, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 241, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 252, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 253, "col_offset": 2, "nodeName": "depth_increase_token", "type": "str"}, {"lineNumber": 254, "col_offset": 2, "nodeName": "depth_decrease_token", "type": "str"}, {"lineNumber": 255, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 264, "col_offset": 2, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 265, "col_offset": 2, "nodeName": "AtomizeString", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "MockAtomizeString", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 279, "col_offset": 2, "nodeName": "depth_increase_token", "type": "str"}, {"lineNumber": 280, "col_offset": 2, "nodeName": "depth_decrease_token", "type": "str"}, {"lineNumber": 281, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 288, "col_offset": 2, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 289, "col_offset": 2, "nodeName": "AtomizeString", "type": "Callable[[Any], Any]"}, {"lineNumber": 289, "col_offset": 23, "nodeName": "MockAtomizeString", "type": "Callable[[Any], Any]"}, {"lineNumber": 301, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 307, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "List", "type": "Any"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "ClearField", "type": "Any"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 58, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 67, "col_offset": 2, "nodeName": "ClearField", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 72, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 77, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 86, "col_offset": 2, "nodeName": "ClearField", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 91, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "MaxTokenLength", "type": "Any"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 110, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 120, "col_offset": 6, "nodeName": "MaxlenTerminationCriterion", "type": "Type[deeplearning.clgen.samplers.MaxlenTerminationCriterion]"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 144, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 145, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 162, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 182, "col_offset": 6, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 192, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 194, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 200, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 205, "col_offset": 6, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 212, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 225, "col_offset": 48, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 227, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 228, "col_offset": 9, "nodeName": "start_text", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "start_text", "type": "Any"}, {"lineNumber": 231, "col_offset": 49, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 233, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 234, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "temperature", "type": "Any"}, {"lineNumber": 238, "col_offset": 48, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 240, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 241, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "add", "type": "Any"}, {"lineNumber": 253, "col_offset": 2, "nodeName": "symtok", "type": "Any"}, {"lineNumber": 254, "col_offset": 2, "nodeName": "symtok", "type": "Any"}, {"lineNumber": 255, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 255, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 264, "col_offset": 9, "nodeName": "AtomizerMock", "type": "Type[AtomizerMock]"}, {"lineNumber": 265, "col_offset": 2, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 266, "col_offset": 52, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 275, "col_offset": 22, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 278, "col_offset": 6, "nodeName": "add", "type": "Any"}, {"lineNumber": 279, "col_offset": 2, "nodeName": "symtok", "type": "Any"}, {"lineNumber": 280, "col_offset": 2, "nodeName": "symtok", "type": "Any"}, {"lineNumber": 281, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "AtomizerMock", "type": "Type[AtomizerMock]"}, {"lineNumber": 289, "col_offset": 2, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 290, "col_offset": 52, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 299, "col_offset": 22, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 301, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 301, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 302, "col_offset": 9, "nodeName": "encoded_start_text", "type": "Any"}, {"lineNumber": 303, "col_offset": 2, "nodeName": "Specialize", "type": "Callable[[deeplearning.clgen.corpuses.atomizers.AtomizerBase], None]"}, {"lineNumber": 304, "col_offset": 2, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 304, "col_offset": 47, "nodeName": "encoded_start_text", "type": "Any"}, {"lineNumber": 308, "col_offset": 2, "nodeName": "Main", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "typing", "type": "module"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 54, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 56, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 56, "col_offset": 54, "nodeName": "value", "type": "Any"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "value", "type": "Any"}, {"lineNumber": 67, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 68, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 70, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "value", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 75, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "value", "type": "Any"}, {"lineNumber": 78, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 80, "col_offset": 49, "nodeName": "value", "type": "Any"}, {"lineNumber": 86, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 87, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 89, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 89, "col_offset": 57, "nodeName": "value", "type": "Any"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 94, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 94, "col_offset": 57, "nodeName": "value", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "MaxlenTerminationCriterion", "type": "Type[deeplearning.clgen.samplers.MaxlenTerminationCriterion]"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 106, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 111, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "MaxlenTerminationCriterion", "type": "Type[deeplearning.clgen.samplers.MaxlenTerminationCriterion]"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 113, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 120, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "MaxTokenLength", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 138, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 140, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 145, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 146, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 147, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 156, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 157, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 158, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 163, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 164, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 165, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 175, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 177, "col_offset": 61, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 177, "col_offset": 65, "nodeName": "value", "type": "Any"}, {"lineNumber": 182, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 192, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 194, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 200, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 205, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 212, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 220, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 220, "col_offset": 21, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 222, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 222, "col_offset": 66, "nodeName": "value", "type": "Any"}, {"lineNumber": 225, "col_offset": 48, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 227, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 228, "col_offset": 9, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 231, "col_offset": 49, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 235, "col_offset": 9, "nodeName": "approx", "type": "Any"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 238, "col_offset": 48, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 241, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "termination_criteria", "type": "Any"}, {"lineNumber": 253, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 254, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 255, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 266, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "InvalidSymtokTokens", "type": "Type[deeplearning.clgen.errors.InvalidSymtokTokens]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "Specialize", "type": "Callable[[deeplearning.clgen.corpuses.atomizers.AtomizerBase], None]"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 271, "col_offset": 7, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 275, "col_offset": 22, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 278, "col_offset": 6, "nodeName": "termination_criteria", "type": "Any"}, {"lineNumber": 279, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 280, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 281, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 290, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "InvalidSymtokTokens", "type": "Type[deeplearning.clgen.errors.InvalidSymtokTokens]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "Specialize", "type": "Callable[[deeplearning.clgen.corpuses.atomizers.AtomizerBase], None]"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 299, "col_offset": 22, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 301, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 302, "col_offset": 9, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 303, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "AtomizerMock", "type": "Type[AtomizerMock]"}, {"lineNumber": 304, "col_offset": 2, "nodeName": "testing", "type": "Any"}, {"lineNumber": 304, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 304, "col_offset": 47, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 308, "col_offset": 2, "nodeName": "test", "type": "module"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 56, "col_offset": 54, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 68, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 78, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 80, "col_offset": 49, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 87, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 89, "col_offset": 57, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 94, "col_offset": 57, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 111, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 138, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 145, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 156, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 163, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 175, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 177, "col_offset": 65, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 220, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 222, "col_offset": 66, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 235, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 259, "col_offset": 7, "nodeName": "string", "type": "Any"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "string", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "VocabError", "type": "Type[deeplearning.clgen.errors.VocabError]"}, {"lineNumber": 262, "col_offset": 13, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 266, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 278, "col_offset": 6, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 304, "col_offset": 2, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "errors", "type": "module"}, {"lineNumber": 262, "col_offset": 13, "nodeName": "np", "type": "module"}]