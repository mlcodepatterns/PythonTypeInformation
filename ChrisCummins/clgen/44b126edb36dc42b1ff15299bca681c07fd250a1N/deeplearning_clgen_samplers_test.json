[{"lineNumber": 23, "col_offset": 0, "nodeName": "test_AssertConfigIsValid_no_start_text", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "test_AssertConfigIsValid_invalid_batch_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "test_AssertConfigIsValid_invalid_temperature_micros", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "test_MaxlenTerminationCriterion_invalid_maximum_tokens_in_sample", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "test_MaxlenTerminationCriterion_SampleIsComplete", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "test_SymmetricalTokenDepthCriterion_depth_increase_token", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "test_SymmetricalTokenDepthCriterion_depth_increase_token", "type": "Callable[[], Any]"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "test_SymmetricalTokenDepthCriterion_same_tokens", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "test_SymmetricalTokenDepthCriterion_SampleIsComplete", "type": "Callable[[], Any]"}, {"lineNumber": 157, "col_offset": 0, "nodeName": "test_SymmetrcalTokenDepthCriterion_SampleIsComplete_reverse_order", "type": "Callable[[], Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "test_Sampler_config_type_error", "type": "Callable[[], Any]"}, {"lineNumber": 175, "col_offset": 0, "nodeName": "test_Sampler_start_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 0, "nodeName": "test_Sampler_temperature", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 0, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 16, "col_offset": 31, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 2, "nodeName": "start_text", "type": "str"}, {"lineNumber": 46, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "temperature_micros", "type": "int"}, {"lineNumber": 75, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 82, "col_offset": 2, "nodeName": "maximum_tokens_in_sample", "type": "int"}, {"lineNumber": 105, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 112, "col_offset": 2, "nodeName": "depth_increase_token", "type": "str"}, {"lineNumber": 121, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 128, "col_offset": 2, "nodeName": "depth_decrease_token", "type": "str"}, {"lineNumber": 177, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 183, "col_offset": 2, "nodeName": "temperature_micros", "type": "int"}, {"lineNumber": 184, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 193, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 194, "col_offset": 2, "nodeName": "depth_increase_token", "type": "str"}, {"lineNumber": 195, "col_offset": 2, "nodeName": "depth_decrease_token", "type": "str"}, {"lineNumber": 196, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 205, "col_offset": 2, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 206, "col_offset": 2, "nodeName": "AtomizeString", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "MockAtomizeString", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 217, "col_offset": 2, "nodeName": "depth_increase_token", "type": "str"}, {"lineNumber": 218, "col_offset": 2, "nodeName": "depth_decrease_token", "type": "str"}, {"lineNumber": 219, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 226, "col_offset": 2, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 227, "col_offset": 2, "nodeName": "AtomizeString", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "MockAtomizeString", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 249, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 2, "nodeName": "ClearField", "type": "Any"}, {"lineNumber": 28, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 32, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "ClearField", "type": "Any"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 46, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 60, "col_offset": 2, "nodeName": "ClearField", "type": "Any"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 66, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "MaxTokenLength", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 82, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "MaxlenTerminationCriterion", "type": "Type[deeplearning.clgen.samplers.MaxlenTerminationCriterion]"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 112, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 128, "col_offset": 2, "nodeName": "config", "type": "Any"}, {"lineNumber": 129, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 146, "col_offset": 6, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 151, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 159, "col_offset": 6, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 163, "col_offset": 9, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 175, "col_offset": 48, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "start_text", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "start_text", "type": "Any"}, {"lineNumber": 181, "col_offset": 49, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 183, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "temperature", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "add", "type": "Any"}, {"lineNumber": 194, "col_offset": 2, "nodeName": "symtok", "type": "Any"}, {"lineNumber": 195, "col_offset": 2, "nodeName": "symtok", "type": "Any"}, {"lineNumber": 196, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 205, "col_offset": 9, "nodeName": "AtomizerMock", "type": "Type[AtomizerMock]"}, {"lineNumber": 206, "col_offset": 2, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 207, "col_offset": 52, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "add", "type": "Any"}, {"lineNumber": 217, "col_offset": 2, "nodeName": "symtok", "type": "Any"}, {"lineNumber": 218, "col_offset": 2, "nodeName": "symtok", "type": "Any"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 226, "col_offset": 9, "nodeName": "AtomizerMock", "type": "Type[AtomizerMock]"}, {"lineNumber": 227, "col_offset": 2, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 228, "col_offset": 52, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "Sampler", "type": "Any"}, {"lineNumber": 236, "col_offset": 6, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "encoded_start_text", "type": "Any"}, {"lineNumber": 238, "col_offset": 2, "nodeName": "Specialize", "type": "Callable[[deeplearning.clgen.corpuses.atomizers.AtomizerBase], None]"}, {"lineNumber": 239, "col_offset": 2, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 239, "col_offset": 47, "nodeName": "encoded_start_text", "type": "Any"}, {"lineNumber": 246, "col_offset": 2, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 2, "nodeName": "run", "type": "Any"}, {"lineNumber": 250, "col_offset": 10, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 27, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 30, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 54, "nodeName": "value", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 35, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 35, "col_offset": 54, "nodeName": "value", "type": "Any"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 42, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "value", "type": "Any"}, {"lineNumber": 47, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "value", "type": "Any"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "value", "type": "Any"}, {"lineNumber": 60, "col_offset": 2, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 63, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 57, "nodeName": "value", "type": "Any"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 68, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 68, "col_offset": 57, "nodeName": "value", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "MaxlenTerminationCriterion", "type": "Type[deeplearning.clgen.samplers.MaxlenTerminationCriterion]"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 79, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 80, "col_offset": 6, "nodeName": "value", "type": "Any"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "MaxlenTerminationCriterion", "type": "Type[deeplearning.clgen.samplers.MaxlenTerminationCriterion]"}, {"lineNumber": 84, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 85, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 6, "nodeName": "value", "type": "Any"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 91, "col_offset": 42, "nodeName": "MaxTokenLength", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 108, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 109, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "value", "type": "Any"}, {"lineNumber": 113, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 114, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 115, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "value", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 123, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 125, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "value", "type": "Any"}, {"lineNumber": 129, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 131, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "value", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 139, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "UserError", "type": "Type[deeplearning.clgen.errors.UserError]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "SymmetricalTokenDepthCriterion", "type": "Type[deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion]"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 141, "col_offset": 61, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 65, "nodeName": "value", "type": "Any"}, {"lineNumber": 146, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 151, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 159, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 159, "col_offset": 46, "nodeName": "SymmetricalTokenDepth", "type": "Any"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "SampleIsComplete", "type": "Callable[[List[str]], bool]"}, {"lineNumber": 163, "col_offset": 9, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 170, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "Sampler", "type": "Type[deeplearning.clgen.samplers.Sampler]"}, {"lineNumber": 172, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 172, "col_offset": 66, "nodeName": "value", "type": "Any"}, {"lineNumber": 175, "col_offset": 48, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 181, "col_offset": 49, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 185, "col_offset": 9, "nodeName": "approx", "type": "Any"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "termination_criteria", "type": "Any"}, {"lineNumber": 194, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 195, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 196, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 207, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "InvalidSymtokTokens", "type": "Type[deeplearning.clgen.errors.InvalidSymtokTokens]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "Specialize", "type": "Callable[[deeplearning.clgen.corpuses.atomizers.AtomizerBase], None]"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "termination_criteria", "type": "Any"}, {"lineNumber": 217, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 218, "col_offset": 2, "nodeName": "t", "type": "Any"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "InvalidSymtokTokens", "type": "Type[deeplearning.clgen.errors.InvalidSymtokTokens]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "Specialize", "type": "Callable[[deeplearning.clgen.corpuses.atomizers.AtomizerBase], None]"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "mock", "type": "AtomizerMock"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 236, "col_offset": 6, "nodeName": "samplers", "type": "module"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 238, "col_offset": 2, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "AtomizerMock", "type": "Type[AtomizerMock]"}, {"lineNumber": 239, "col_offset": 2, "nodeName": "testing", "type": "Any"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 239, "col_offset": 47, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 244, "col_offset": 5, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 244, "col_offset": 9, "nodeName": "argv", "type": "Any"}, {"lineNumber": 245, "col_offset": 10, "nodeName": "UsageError", "type": "Any"}, {"lineNumber": 246, "col_offset": 2, "nodeName": "sys", "type": "module"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "main", "type": "Any"}, {"lineNumber": 250, "col_offset": 2, "nodeName": "app", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 30, "col_offset": 54, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 35, "col_offset": 54, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 42, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 47, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 63, "col_offset": 57, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 68, "col_offset": 57, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 80, "col_offset": 6, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 86, "col_offset": 6, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 91, "col_offset": 42, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.MaxlenTerminationCriterion"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 113, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 123, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 129, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 139, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 141, "col_offset": 65, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 159, "col_offset": 46, "nodeName": "sampler_pb2", "type": "Any"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "t", "type": "deeplearning.clgen.samplers.SymmetricalTokenDepthCriterion"}, {"lineNumber": 170, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "samplers", "type": "module"}, {"lineNumber": 172, "col_offset": 66, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 185, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 200, "col_offset": 7, "nodeName": "string", "type": "Any"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "string", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "VocabError", "type": "Type[deeplearning.clgen.errors.VocabError]"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 207, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "abc_sampler_config", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "s", "type": "deeplearning.clgen.samplers.Sampler"}, {"lineNumber": 239, "col_offset": 2, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 10, "nodeName": "app", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "__file__", "type": "str"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "errors", "type": "module"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "np", "type": "module"}]