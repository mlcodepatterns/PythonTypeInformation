[{"lineNumber": 28, "col_offset": 0, "nodeName": "test_StripPreprocessorLines_empty_input", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "test_StripPreprocessorLines_no_stdin", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "test_StripPreprocessorLines_everything_stripped_before_stdin", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "test_StripPreprocessorLines_nothing_before_stdin", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "test_StripPreprocessorLines_hash_stripped", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "test_Preprocess_process_command", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "test_Preprocess_ClangTimeout", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "test_Preprocess_ClangException", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "test_Preprocess_empty_file", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "test_Preprocess_simple_c_program", "type": "Callable[[], Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "test_Preprocess_inlined_cflag", "type": "Callable[[], Any]"}, {"lineNumber": 116, "col_offset": 0, "nodeName": "test_Preprocess_inlined_define", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "test_Preprocess_undefined_data_type", "type": "Callable[[], Any]"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "test_Preprocess_undefined_variable", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "test_Preprocess_undefined_function", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "test_Preprocess_invalid_preprocessor_directive", "type": "Callable[[], Any]"}, {"lineNumber": 164, "col_offset": 0, "nodeName": "test_Preprocess_no_strip_processor_lines", "type": "Callable[[], Any]"}, {"lineNumber": 171, "col_offset": 0, "nodeName": "test_Preprocess_include_stdio_strip", "type": "Callable[[], Any]"}, {"lineNumber": 183, "col_offset": 0, "nodeName": "test_ClangFormat_process_command", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 0, "nodeName": "test_ClangFormat_ClangTimeout", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 0, "nodeName": "test_ClangFormat_ClangException", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 0, "nodeName": "test_ClangFormat_empty_file", "type": "Callable[[], Any]"}, {"lineNumber": 217, "col_offset": 0, "nodeName": "test_ClangFormat_simple_c_program", "type": "Callable[[], Any]"}, {"lineNumber": 228, "col_offset": 0, "nodeName": "test_ClangFormat_pointer_alignment", "type": "Callable[[], Any]"}, {"lineNumber": 237, "col_offset": 0, "nodeName": "test_ClangFormat_undefined_data_type", "type": "Callable[[], Any]"}, {"lineNumber": 248, "col_offset": 0, "nodeName": "test_ClangFormat_undefined_variable", "type": "Callable[[], Any]"}, {"lineNumber": 259, "col_offset": 0, "nodeName": "test_ClangFormat_undefined_function", "type": "Callable[[], Any]"}, {"lineNumber": 270, "col_offset": 0, "nodeName": "test_ClangFormat_invalid_preprocessor_directive", "type": "Callable[[], Any]"}, {"lineNumber": 283, "col_offset": 0, "nodeName": "test_CompilerLlvmBytecode_empty_file", "type": "Callable[[], Any]"}, {"lineNumber": 289, "col_offset": 0, "nodeName": "test_compile_cl_bytecode_undefined_type", "type": "Callable[[], Any]"}, {"lineNumber": 297, "col_offset": 0, "nodeName": "test_compile_cl_bytecode_shim_type", "type": "Callable[[], Any]"}, {"lineNumber": 304, "col_offset": 0, "nodeName": "test_bytecode_features_empty_code", "type": "Callable[[], Any]"}, {"lineNumber": 346, "col_offset": 0, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "FLAGS", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "flags", "type": "Any"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 66, "col_offset": 2, "nodeName": "return_value", "type": "MockProcess"}, {"lineNumber": 69, "col_offset": 2, "nodeName": "cmd", "type": "Any"}, {"lineNumber": 76, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 77, "col_offset": 2, "nodeName": "return_value", "type": "MockProcess"}, {"lineNumber": 87, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 88, "col_offset": 2, "nodeName": "return_value", "type": "MockProcess"}, {"lineNumber": 185, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 186, "col_offset": 2, "nodeName": "return_value", "type": "MockProcess"}, {"lineNumber": 189, "col_offset": 2, "nodeName": "cmd", "type": "Any"}, {"lineNumber": 195, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 196, "col_offset": 2, "nodeName": "return_value", "type": "MockProcess"}, {"lineNumber": 206, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 207, "col_offset": 2, "nodeName": "return_value", "type": "MockProcess"}, {"lineNumber": 352, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "returncode", "type": "Any"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "returncode", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "patch", "type": "Any"}, {"lineNumber": 66, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "MockProcess", "type": "Type[MockProcess]"}, {"lineNumber": 67, "col_offset": 2, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 2, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "patch", "type": "Any"}, {"lineNumber": 77, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "MockProcess", "type": "Type[MockProcess]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "patch", "type": "Any"}, {"lineNumber": 88, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "MockProcess", "type": "Type[MockProcess]"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "patch", "type": "Any"}, {"lineNumber": 186, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "MockProcess", "type": "Type[MockProcess]"}, {"lineNumber": 187, "col_offset": 2, "nodeName": "ClangFormat", "type": "Callable[..., str]"}, {"lineNumber": 188, "col_offset": 2, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "patch", "type": "Any"}, {"lineNumber": 196, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "MockProcess", "type": "Type[MockProcess]"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "patch", "type": "Any"}, {"lineNumber": 207, "col_offset": 2, "nodeName": "mock_Popen", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "MockProcess", "type": "Type[MockProcess]"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "CompileLlvmBytecode", "type": "Callable[..., str]"}, {"lineNumber": 343, "col_offset": 9, "nodeName": "bytecode_features", "type": "Callable[..., Dict[str, float]]"}, {"lineNumber": 343, "col_offset": 33, "nodeName": "bc", "type": "str"}, {"lineNumber": 349, "col_offset": 2, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 353, "col_offset": 2, "nodeName": "run", "type": "Any"}, {"lineNumber": 353, "col_offset": 10, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "self", "type": "MockProcess"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "StripPreprocessorLines", "type": "Callable[[str], str]"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "StripPreprocessorLines", "type": "Callable[[str], str]"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "StripPreprocessorLines", "type": "Callable[[str], str]"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "StripPreprocessorLines", "type": "Callable[[str], str]"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "StripPreprocessorLines", "type": "Callable[[str], str]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "mocker", "type": "Any"}, {"lineNumber": 67, "col_offset": 2, "nodeName": "clang", "type": "module"}, {"lineNumber": 68, "col_offset": 2, "nodeName": "Popen", "type": "Type[subprocess.Popen[Any]]"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "cmd", "type": "Any"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "cmd", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "mocker", "type": "Any"}, {"lineNumber": 78, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "ClangTimeout", "type": "Type[deeplearning.clgen.errors.ClangTimeout]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "ClangException", "type": "Type[deeplearning.clgen.errors.ClangException]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "mocker", "type": "Any"}, {"lineNumber": 89, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "ClangException", "type": "Type[deeplearning.clgen.errors.ClangException]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 9, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "ClangException", "type": "Type[deeplearning.clgen.errors.ClangException]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 161, "col_offset": 50, "nodeName": "value", "type": "Any"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "Preprocess", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "mocker", "type": "Any"}, {"lineNumber": 187, "col_offset": 2, "nodeName": "clang", "type": "module"}, {"lineNumber": 188, "col_offset": 2, "nodeName": "Popen", "type": "Type[subprocess.Popen[Any]]"}, {"lineNumber": 190, "col_offset": 9, "nodeName": "cmd", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "mocker", "type": "Any"}, {"lineNumber": 197, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "ClangTimeout", "type": "Type[deeplearning.clgen.errors.ClangTimeout]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "ClangFormat", "type": "Callable[..., str]"}, {"lineNumber": 200, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "ClangException", "type": "Type[deeplearning.clgen.errors.ClangException]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "ClangFormat", "type": "Callable[..., str]"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "mocker", "type": "Any"}, {"lineNumber": 208, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "ClangFormatException", "type": "Type[deeplearning.clgen.errors.ClangFormatException]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "ClangFormat", "type": "Callable[..., str]"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "ClangFormat", "type": "Callable[..., str]"}, {"lineNumber": 219, "col_offset": 9, "nodeName": "ClangFormat", "type": "Callable[..., str]"}, {"lineNumber": 230, "col_offset": 9, "nodeName": "ClangFormat", "type": "Callable[..., str]"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "ClangFormat", "type": "Callable[..., str]"}, {"lineNumber": 250, "col_offset": 9, "nodeName": "ClangFormat", "type": "Callable[..., str]"}, {"lineNumber": 261, "col_offset": 9, "nodeName": "ClangFormat", "type": "Callable[..., str]"}, {"lineNumber": 272, "col_offset": 9, "nodeName": "ClangFormat", "type": "Callable[..., str]"}, {"lineNumber": 286, "col_offset": 13, "nodeName": "CompileLlvmBytecode", "type": "Callable[..., str]"}, {"lineNumber": 292, "col_offset": 7, "nodeName": "raises", "type": "Any"}, {"lineNumber": 292, "col_offset": 21, "nodeName": "ClangException", "type": "Type[deeplearning.clgen.errors.ClangException]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "CompileLlvmBytecode", "type": "Callable[..., str]"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 343, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 349, "col_offset": 2, "nodeName": "sys", "type": "module"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "main", "type": "Any"}, {"lineNumber": 353, "col_offset": 2, "nodeName": "app", "type": "Any"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 68, "col_offset": 2, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 78, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "clang", "type": "module"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "clang", "type": "module"}, {"lineNumber": 89, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "clang", "type": "module"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 109, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 156, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "clang", "type": "module"}, {"lineNumber": 161, "col_offset": 50, "nodeName": "e_info", "type": "Any"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "clang", "type": "module"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 188, "col_offset": 2, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 197, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "clang", "type": "module"}, {"lineNumber": 200, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "clang", "type": "module"}, {"lineNumber": 208, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "clang", "type": "module"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 219, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 230, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 250, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 261, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 272, "col_offset": 9, "nodeName": "clang", "type": "module"}, {"lineNumber": 286, "col_offset": 13, "nodeName": "clang", "type": "module"}, {"lineNumber": 292, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 292, "col_offset": 21, "nodeName": "errors", "type": "module"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "clang", "type": "module"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 349, "col_offset": 24, "nodeName": "__file__", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "Popen", "type": "Type[subprocess.Popen[Any]]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "Popen", "type": "Type[subprocess.Popen[Any]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "subprocess", "type": "module"}]