[{"lineNumber": 9, "col_offset": 0, "nodeName": "generate_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "GAN", "type": "Type[deepchem.models.tensorgraph.models.gan.GAN]"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 2, "nodeName": "means", "type": "Any"}, {"lineNumber": 12, "col_offset": 2, "nodeName": "values", "type": "Any"}, {"lineNumber": 17, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "models", "type": "module"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "unittest", "type": "module"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "normal", "type": "Any"}, {"lineNumber": 12, "col_offset": 28, "nodeName": "means", "type": "Any"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "means", "type": "Any"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "values", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "batches", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "gen_in", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "data_input", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "discrim_in", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "dense", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "means", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "means", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "WGAN", "type": "Type[deepchem.models.tensorgraph.models.gan.WGAN]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "gan", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "means", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "means", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "values", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "generate_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 19, "col_offset": 33, "nodeName": "values", "type": "Any"}, {"lineNumber": 19, "col_offset": 68, "nodeName": "means", "type": "Any"}, {"lineNumber": 20, "col_offset": 10, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "Input", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "Input", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "gen_in", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "Model", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "Input", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "Input", "type": "Any"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "data_input", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "discrim_in", "type": "Any"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "dense", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "Model", "type": "Any"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "ExampleGAN", "type": "Type[ExampleGAN]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "fit_gan", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "values", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "means", "type": "Any"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "ExampleGAN", "type": "Type[ExampleGAN]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "fit_gan", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "models", "type": "module"}, {"lineNumber": 130, "col_offset": 10, "nodeName": "ExampleWGAN", "type": "Type[Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "fit_gan", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "values", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "means", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 11, "col_offset": 33, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "data_inputs", "type": "Any"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "conditional_inputs", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "get_noise_input_shape", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 49, "nodeName": "output", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "output", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "std", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "get_global_step", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "values", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "means", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "get_global_step", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "gen_in", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "data_input", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "discrim_in", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "dense", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "gan", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "gan", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "gan", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "std", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "gan", "type": "Any"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "gan", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "self", "type": "ExampleGAN"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "get_conditional_input_shapes", "type": "Callable[[], Any]"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "get_data_input_shapes", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "get_conditional_input_shapes", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "relu", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 67, "col_offset": 59, "nodeName": "means", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 88, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "std", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "Input", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "Input", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "gen_in", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "Model", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "Input", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "Input", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "data_input", "type": "Any"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 49, "nodeName": "discrim_in", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "dense", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "Model", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 139, "col_offset": 59, "nodeName": "means", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "self", "type": "ExampleGAN"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "self", "type": "ExampleGAN"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "self", "type": "ExampleGAN"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "nn", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "means", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "get_noise_input_shape", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "keras", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "output", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "keras", "type": "Any"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 53, "nodeName": "output", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "get_conditional_input_shapes", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "get_data_input_shapes", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "get_conditional_input_shapes", "type": "Any"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "relu", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "tf", "type": "Any"}]