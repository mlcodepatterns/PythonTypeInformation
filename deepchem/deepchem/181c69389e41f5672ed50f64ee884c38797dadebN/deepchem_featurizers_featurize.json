[{"lineNumber": 25, "col_offset": 0, "nodeName": "_process_field", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "load_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "_load_sdf_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "_load_csv_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "_get_input_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "_get_fields", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 147, "col_offset": 2, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 2, "nodeName": "_shard_files_exist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 219, "col_offset": 2, "nodeName": "_process_raw_sample", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 238, "col_offset": 2, "nodeName": "_standardize_df", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 338, "col_offset": 2, "nodeName": "_add_user_specified_features", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 56, "col_offset": 2, "nodeName": "suppl", "type": "Any"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "df_rows", "type": "List[List[Any]]"}, {"lineNumber": 62, "col_offset": 2, "nodeName": "mol_df", "type": "Any"}, {"lineNumber": 63, "col_offset": 2, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 68, "col_offset": 2, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 91, "col_offset": 2, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "val", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "_get_input_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 44, "col_offset": 5, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "load_pandas_from_disk", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "SDMolSupplier", "type": "Any"}, {"lineNumber": 58, "col_offset": 6, "nodeName": "ind", "type": "int"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "mol", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "suppl", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "df_rows", "type": "List[List[Any]]"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "concat", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "load_pandas_from_disk", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 73, "col_offset": 2, "nodeName": "filename", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 75, "col_offset": 5, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 77, "col_offset": 5, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "_get_input_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 92, "col_offset": 5, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "protein_pdb_field", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "protein_pdb_field", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "ligand_pdb_field", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "ligand_pdb_field", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "ligand_mol2_field", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "ligand_mol2_field", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "mol_field", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "mol_field", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "user_specified_features", "type": "None"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "featurizers", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "featurizers", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "featurizers", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "log_every_n", "type": "Any"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "log_every_n", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "fields", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "nb_sample", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "metadata_rows", "type": "List[nothing]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "j", "type": "int"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "filename", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "data", "type": "Dict[Any, Union[float, List[Any], Any, int]]"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "data", "type": "Dict[Any, Union[float, List[Any], Any, int]]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "columns", "type": "List[unicode]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "task", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "protein_pdbs", "type": "List[Any]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "ligand_pdbs", "type": "List[Any]"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "complexes", "type": "List[nothing]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "sample_elems", "type": "Any"}, {"lineNumber": 336, "col_offset": 40, "nodeName": "features", "type": "Union[Any, List[Any]]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "features_data", "type": "List[numpy.ndarray]"}, {"lineNumber": 361, "col_offset": 40, "nodeName": "features_data", "type": "List[numpy.ndarray]"}, {"lineNumber": 27, "col_offset": 6, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "Number", "type": "Type[numbers.Number]"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 27, "col_offset": 52, "nodeName": "val", "type": "Any"}, {"lineNumber": 27, "col_offset": 57, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "_load_sdf_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "_load_csv_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "mol", "type": "Any"}, {"lineNumber": 60, "col_offset": 6, "nodeName": "smiles", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "mol_df", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "path", "type": "module"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "filename", "type": "Any"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "filename", "type": "Any"}, {"lineNumber": 79, "col_offset": 7, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "inp_file_obj", "type": "file"}, {"lineNumber": 95, "col_offset": 7, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 131, "col_offset": 7, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 134, "col_offset": 6, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "log", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "load_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "keys", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "log", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "log", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "_get_input_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 162, "col_offset": 40, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 162, "col_offset": 48, "nodeName": "process_raw_sample_helper", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "nb_sample", "type": "Any"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "write_dataframe", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "raw_df_shard", "type": "Any"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 186, "col_offset": 6, "nodeName": "field", "type": "unicode"}, {"lineNumber": 187, "col_offset": 10, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "featurizers", "type": "Any"}, {"lineNumber": 198, "col_offset": 6, "nodeName": "basename", "type": "unicode"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 14, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "listdir", "type": "Callable"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "feature_dir", "type": "Any"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 230, "col_offset": 7, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 231, "col_offset": 10, "nodeName": "task", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 245, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "ori_df", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 250, "col_offset": 7, "nodeName": "user_specified_features", "type": "Any"}, {"lineNumber": 251, "col_offset": 10, "nodeName": "feature", "type": "Any"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "user_specified_features", "type": "Any"}, {"lineNumber": 253, "col_offset": 7, "nodeName": "mol_field", "type": "Any"}, {"lineNumber": 255, "col_offset": 7, "nodeName": "protein_pdb_field", "type": "Any"}, {"lineNumber": 257, "col_offset": 7, "nodeName": "ligand_pdb_field", "type": "Any"}, {"lineNumber": 259, "col_offset": 7, "nodeName": "ligand_mol2_field", "type": "Any"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "ligand_pdbs", "type": "List[Any]"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "protein_pdbs", "type": "List[Any]"}, {"lineNumber": 271, "col_offset": 32, "nodeName": "ligand_protein_pdb_tuple", "type": "nothing"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "molecule_features", "type": "Any"}, {"lineNumber": 277, "col_offset": 7, "nodeName": "worker_pool", "type": "Any"}, {"lineNumber": 278, "col_offset": 6, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 279, "col_offset": 10, "nodeName": "ligand_protein_pdb_tuple", "type": "nothing"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 285, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "features", "type": "Union[Any, List[Any]]"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "field", "type": "Any"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 307, "col_offset": 7, "nodeName": "worker_pool", "type": "Any"}, {"lineNumber": 308, "col_offset": 6, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "log", "type": "Callable[..., None]"}, {"lineNumber": 353, "col_offset": 47, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "ind", "type": "Any"}, {"lineNumber": 355, "col_offset": 13, "nodeName": "row", "type": "Any"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "iterrows", "type": "Any"}, {"lineNumber": 357, "col_offset": 6, "nodeName": "feature_list", "type": "List[Any]"}, {"lineNumber": 358, "col_offset": 10, "nodeName": "feature_name", "type": "Any"}, {"lineNumber": 358, "col_offset": 26, "nodeName": "feature_fields", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "numbers", "type": "module"}, {"lineNumber": 27, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "MolToSmiles", "type": "Any"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "mol", "type": "Any"}, {"lineNumber": 61, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "os", "type": "module"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 93, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "next", "type": "Callable[[], List[str]]"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "load_from_disk", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "keys", "type": "Any"}, {"lineNumber": 98, "col_offset": 7, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 134, "col_offset": 6, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 142, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "UserDefinedFeaturizer", "type": "Type[deepchem.featurizers.UserDefinedFeaturizer]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "user_specified_features", "type": "Any"}, {"lineNumber": 143, "col_offset": 39, "nodeName": "feature_fields", "type": "Any"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 157, "col_offset": 6, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 160, "col_offset": 13, "nodeName": "_process_raw_sample", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 160, "col_offset": 50, "nodeName": "row", "type": "Any"}, {"lineNumber": 160, "col_offset": 55, "nodeName": "fields", "type": "Any"}, {"lineNumber": 163, "col_offset": 55, "nodeName": "fields", "type": "Any"}, {"lineNumber": 164, "col_offset": 59, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 68, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 174, "col_offset": 42, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "featurizers", "type": "Any"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "log", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 48, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "apply", "type": "Any"}, {"lineNumber": 182, "col_offset": 10, "nodeName": "process_raw_sample_helper_partial", "type": "functools.partial[nothing]"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "_standardize_df", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 32, "nodeName": "raw_df_shard", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "j", "type": "int"}, {"lineNumber": 199, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 207, "col_offset": 36, "nodeName": "metadata_rows", "type": "List[nothing]"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "reload", "type": "Callable[[module], module]"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 215, "col_offset": 29, "nodeName": "filename", "type": "Any"}, {"lineNumber": 223, "col_offset": 10, "nodeName": "ind", "type": "int"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "field", "type": "Any"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "fields", "type": "Any"}, {"lineNumber": 225, "col_offset": 9, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 226, "col_offset": 10, "nodeName": "field", "type": "Any"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "fields", "type": "Any"}, {"lineNumber": 230, "col_offset": 7, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "raw", "type": "Union[List[Any], float, Any]"}, {"lineNumber": 245, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "ori_df", "type": "Any"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 249, "col_offset": 17, "nodeName": "ori_df", "type": "Any"}, {"lineNumber": 250, "col_offset": 7, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 253, "col_offset": 7, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 254, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 254, "col_offset": 18, "nodeName": "ori_df", "type": "Any"}, {"lineNumber": 255, "col_offset": 7, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 256, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "ori_df", "type": "Any"}, {"lineNumber": 257, "col_offset": 7, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 258, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "ori_df", "type": "Any"}, {"lineNumber": 259, "col_offset": 7, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "ori_df", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "df", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "df", "type": "Any"}, {"lineNumber": 271, "col_offset": 6, "nodeName": "ligand_pdb", "type": "nothing"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "protein_pdb", "type": "nothing"}, {"lineNumber": 272, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "featurize_complexes", "type": "Any"}, {"lineNumber": 279, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 279, "col_offset": 42, "nodeName": "ligand_pdbs", "type": "List[Any]"}, {"lineNumber": 279, "col_offset": 55, "nodeName": "protein_pdbs", "type": "List[Any]"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "map_sync", "type": "Any"}, {"lineNumber": 282, "col_offset": 38, "nodeName": "featurize_wrapper", "type": "Callable[[Any], Any]"}, {"lineNumber": 285, "col_offset": 7, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 309, "col_offset": 10, "nodeName": "ind", "type": "int"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "elem", "type": "Any"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 309, "col_offset": 33, "nodeName": "sample_elems", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "feature", "type": "Any"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "feature", "type": "Any"}, {"lineNumber": 333, "col_offset": 17, "nodeName": "map_sync", "type": "Any"}, {"lineNumber": 333, "col_offset": 38, "nodeName": "featurize_wrapper", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 334, "col_offset": 38, "nodeName": "sample_elems", "type": "Any"}, {"lineNumber": 336, "col_offset": 7, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 353, "col_offset": 47, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 358, "col_offset": 26, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 360, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 361, "col_offset": 7, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "_process_field", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "elt", "type": "Any"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "elt", "type": "Any"}, {"lineNumber": 30, "col_offset": 43, "nodeName": "val", "type": "Any"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "Mol", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "val", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 61, "col_offset": 6, "nodeName": "df_rows", "type": "List[List[Any]]"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "ind", "type": "int"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "smiles", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "mol", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 99, "col_offset": 9, "nodeName": "load_pickle_from_disk", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "keys", "type": "Any"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "label_file", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 143, "col_offset": 39, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 157, "col_offset": 6, "nodeName": "os", "type": "module"}, {"lineNumber": 160, "col_offset": 13, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "interval_points", "type": "Any"}, {"lineNumber": 179, "col_offset": 48, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "raw_df_shard", "type": "Any"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "log", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 45, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 190, "col_offset": 34, "nodeName": "UserDefinedFeaturizer", "type": "Type[deepchem.featurizers.UserDefinedFeaturizer]"}, {"lineNumber": 199, "col_offset": 6, "nodeName": "metadata_rows", "type": "List[nothing]"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "write_dataframe_partial", "type": "functools.partial[nothing]"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Union[float, List[Any], Any, int]]"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "_process_field", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "_process_field", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Union[float, List[Any], Any, int]]"}, {"lineNumber": 247, "col_offset": 27, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 249, "col_offset": 9, "nodeName": "task", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "ori_df", "type": "Any"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "ligand_pdb", "type": "nothing"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "protein_pdb", "type": "nothing"}, {"lineNumber": 274, "col_offset": 49, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "worker_pool", "type": "Any"}, {"lineNumber": 283, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 283, "col_offset": 42, "nodeName": "ligand_pdbs", "type": "List[Any]"}, {"lineNumber": 283, "col_offset": 55, "nodeName": "protein_pdbs", "type": "List[Any]"}, {"lineNumber": 285, "col_offset": 7, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "df", "type": "Any"}, {"lineNumber": 310, "col_offset": 11, "nodeName": "field", "type": "Any"}, {"lineNumber": 311, "col_offset": 10, "nodeName": "mol", "type": "Any"}, {"lineNumber": 313, "col_offset": 10, "nodeName": "mol", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "elem", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 325, "col_offset": 11, "nodeName": "field", "type": "Any"}, {"lineNumber": 326, "col_offset": 10, "nodeName": "mol", "type": "Any"}, {"lineNumber": 328, "col_offset": 10, "nodeName": "mol", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "elem", "type": "Any"}, {"lineNumber": 329, "col_offset": 21, "nodeName": "loads", "type": "Any"}, {"lineNumber": 329, "col_offset": 32, "nodeName": "dilled_featurizer", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "featurize", "type": "Any"}, {"lineNumber": 333, "col_offset": 17, "nodeName": "worker_pool", "type": "Any"}, {"lineNumber": 336, "col_offset": 7, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 360, "col_offset": 6, "nodeName": "features_data", "type": "List[numpy.ndarray]"}, {"lineNumber": 360, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 360, "col_offset": 36, "nodeName": "feature_list", "type": "List[Any]"}, {"lineNumber": 361, "col_offset": 7, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "reader", "type": "Callable[..., _csv._reader]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "inp_file_obj", "type": "file"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "inp_file_obj", "type": "file"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 47, "nodeName": "shard_size", "type": "Any"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 189, "col_offset": 45, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 191, "col_offset": 10, "nodeName": "_add_user_specified_features", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 191, "col_offset": 44, "nodeName": "df", "type": "Any"}, {"lineNumber": 191, "col_offset": 48, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "Featurizer", "type": "Type[deepchem.featurizers.Featurizer]"}, {"lineNumber": 199, "col_offset": 52, "nodeName": "basename", "type": "unicode"}, {"lineNumber": 199, "col_offset": 62, "nodeName": "df", "type": "Any"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "field", "type": "Any"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "row", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Union[float, List[Any], Any, int]]"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "_process_field", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 29, "nodeName": "data", "type": "Dict[Any, Union[float, List[Any], Any, int]]"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "raw", "type": "Union[List[Any], float, Any]"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 235, "col_offset": 13, "nodeName": "field", "type": "Any"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "raw", "type": "Union[List[Any], float, Any]"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 247, "col_offset": 27, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "task", "type": "Any"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "feature", "type": "Any"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "mol_field", "type": "Any"}, {"lineNumber": 256, "col_offset": 34, "nodeName": "protein_pdb_field", "type": "Any"}, {"lineNumber": 258, "col_offset": 33, "nodeName": "ligand_pdb_field", "type": "Any"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "ligand_mol2_field", "type": "Any"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "ligand_pdb", "type": "nothing"}, {"lineNumber": 274, "col_offset": 49, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 24, "nodeName": "featurize_wrapper", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 42, "nodeName": "ligand_protein_pdb_tuple", "type": "nothing"}, {"lineNumber": 285, "col_offset": 7, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 305, "col_offset": 22, "nodeName": "field", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "MolFromSmiles", "type": "Any"}, {"lineNumber": 311, "col_offset": 35, "nodeName": "elem", "type": "Any"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "ind", "type": "int"}, {"lineNumber": 314, "col_offset": 17, "nodeName": "log_every_n", "type": "Any"}, {"lineNumber": 315, "col_offset": 10, "nodeName": "log", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 45, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "featurize", "type": "Any"}, {"lineNumber": 324, "col_offset": 33, "nodeName": "elem", "type": "Any"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "MolFromSmiles", "type": "Any"}, {"lineNumber": 326, "col_offset": 35, "nodeName": "smiles", "type": "Any"}, {"lineNumber": 329, "col_offset": 21, "nodeName": "dill", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 330, "col_offset": 40, "nodeName": "mol", "type": "Any"}, {"lineNumber": 330, "col_offset": 56, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 336, "col_offset": 7, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "feature_list", "type": "List[Any]"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "row", "type": "Any"}, {"lineNumber": 360, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 361, "col_offset": 7, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 86, "col_offset": 51, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "csv", "type": "module"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "label_file", "type": "Any"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "label_file", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "readline", "type": "Callable[..., str]"}, {"lineNumber": 108, "col_offset": 55, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "nb_sample", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 180, "col_offset": 39, "nodeName": "interval_points", "type": "Any"}, {"lineNumber": 180, "col_offset": 59, "nodeName": "interval_points", "type": "Any"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 191, "col_offset": 10, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 193, "col_offset": 10, "nodeName": "_featurize_mol", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "df", "type": "Any"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "ComplexFeaturizer", "type": "Type[deepchem.featurizers.ComplexFeaturizer]"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "ind", "type": "int"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "field", "type": "Any"}, {"lineNumber": 227, "col_offset": 37, "nodeName": "row", "type": "Any"}, {"lineNumber": 232, "col_offset": 34, "nodeName": "task", "type": "Any"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "feature", "type": "Any"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 256, "col_offset": 34, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 258, "col_offset": 33, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 314, "col_offset": 17, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 315, "col_offset": 40, "nodeName": "ind", "type": "int"}, {"lineNumber": 315, "col_offset": 45, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 321, "col_offset": 46, "nodeName": "mol", "type": "Any"}, {"lineNumber": 321, "col_offset": 62, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 330, "col_offset": 56, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 359, "col_offset": 32, "nodeName": "feature_name", "type": "Any"}, {"lineNumber": 39, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 39, "col_offset": 60, "nodeName": "val", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "inp_file_obj", "type": "file"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "j", "type": "int"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "interval_points", "type": "Any"}, {"lineNumber": 180, "col_offset": 55, "nodeName": "j", "type": "int"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 193, "col_offset": 10, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 193, "col_offset": 52, "nodeName": "field", "type": "unicode"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "worker_pool", "type": "Any"}, {"lineNumber": 196, "col_offset": 10, "nodeName": "_featurize_complexes", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "df", "type": "Any"}, {"lineNumber": 196, "col_offset": 40, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "field", "type": "Any"}, {"lineNumber": 321, "col_offset": 62, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 180, "col_offset": 75, "nodeName": "j", "type": "int"}, {"lineNumber": 196, "col_offset": 10, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 197, "col_offset": 48, "nodeName": "worker_pool", "type": "Any"}]