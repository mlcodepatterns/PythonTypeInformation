[{"lineNumber": 7, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 7, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "coordinates", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "atom_index", "type": "int"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "box_width", "type": "int"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "voxel_width", "type": "int"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "coordinates1", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "coordinates2", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "atom_index_pair", "type": "Tuple[int, int]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "box_width", "type": "int"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "voxel_width", "type": "int"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "coordinates", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "box_width", "type": "int"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "voxel_width", "type": "int"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "voxels_per_edge", "type": "int"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "get_voxels", "type": "Callable[[numpy.ndarray, int, Union[float, int], Union[float, int]], numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "convert_atom_to_voxel", "type": "Callable[[numpy.ndarray, int, Union[float, int], Union[float, int]], numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "hash_function", "type": "Callable[..., int]"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "hash_ecfp", "type": "Callable[..., int]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "feature_dict", "type": "Dict[int, str]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "nb_channel", "type": "int"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "coordinates1", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "coordinates2", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "coordinates", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "box_width", "type": "int"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "voxel_width", "type": "int"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "voxels_per_edge", "type": "int"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "get_voxels", "type": "Callable[[Tuple[numpy.ndarray, numpy.ndarray], Tuple[int, int], Union[float, int], Union[float, int]], numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "convert_atom_pair_to_voxel", "type": "Callable[[Tuple[numpy.ndarray, numpy.ndarray], Tuple[int, int], Union[float, int], Union[float, int]], numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "hash_function", "type": "Callable[..., int]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "hash_ecfp_pair", "type": "Callable[..., int]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "feature_dict", "type": "Dict[Tuple[int, int], Tuple[str, str]]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "nb_channel", "type": "int"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "rand", "type": "Any"}, {"lineNumber": 11, "col_offset": 33, "nodeName": "N", "type": "int"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "convert_atom_to_voxel", "type": "Callable[[numpy.ndarray, int, Union[float, int], Union[float, int]], numpy.ndarray]"}, {"lineNumber": 15, "col_offset": 48, "nodeName": "coordinates", "type": "Any"}, {"lineNumber": 15, "col_offset": 61, "nodeName": "atom_index", "type": "int"}, {"lineNumber": 16, "col_offset": 48, "nodeName": "box_width", "type": "int"}, {"lineNumber": 16, "col_offset": 59, "nodeName": "voxel_width", "type": "int"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "N", "type": "int"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "M", "type": "int"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "convert_atom_pair_to_voxel", "type": "Callable[[Tuple[numpy.ndarray, numpy.ndarray], Tuple[int, int], Union[float, int], Union[float, int]], numpy.ndarray]"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "atom_index_pair", "type": "Tuple[int, int]"}, {"lineNumber": 28, "col_offset": 55, "nodeName": "box_width", "type": "int"}, {"lineNumber": 28, "col_offset": 66, "nodeName": "voxel_width", "type": "int"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "rand", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "N", "type": "int"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "voxel_utils", "type": "module"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "hash_utils", "type": "module"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "voxelize", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "get_voxels", "type": "Callable[[numpy.ndarray, int, Union[float, int], Union[float, int]], numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "coordinates", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "box_width", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "voxel_width", "type": "int"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "hash_function", "type": "Callable[..., int]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "feature_dict", "type": "Dict[int, str]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "N", "type": "int"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "M", "type": "int"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "coordinates1", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "coordinates2", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "voxel_utils", "type": "module"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "hash_utils", "type": "module"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "voxelize", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "get_voxels", "type": "Callable[[Tuple[numpy.ndarray, numpy.ndarray], Tuple[int, int], Union[float, int], Union[float, int]], numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "coordinates", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "box_width", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "voxel_width", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "hash_function", "type": "Callable[..., int]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "feature_dict", "type": "Dict[Tuple[int, int], Tuple[str, str]]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "voxel_utils", "type": "module"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "voxel_utils", "type": "module"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "coordinates1", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "coordinates2", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "indices", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "box_width", "type": "int"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "voxel_width", "type": "int"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "voxel_utils", "type": "module"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "nb_channel", "type": "int"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "features", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "voxels_per_edge", "type": "int"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "voxels_per_edge", "type": "int"}, {"lineNumber": 49, "col_offset": 64, "nodeName": "voxels_per_edge", "type": "int"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "nb_channel", "type": "int"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "box_width", "type": "int"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "voxel_width", "type": "int"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "voxel_utils", "type": "module"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "nb_channel", "type": "int"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "features", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "voxels_per_edge", "type": "int"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "voxels_per_edge", "type": "int"}, {"lineNumber": 73, "col_offset": 64, "nodeName": "voxels_per_edge", "type": "int"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "nb_channel", "type": "int"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "np", "type": "module"}]