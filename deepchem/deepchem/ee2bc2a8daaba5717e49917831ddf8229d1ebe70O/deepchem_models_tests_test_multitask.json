[{"lineNumber": 8, "col_offset": 0, "nodeName": "__author__", "type": "unicode"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "__copyright__", "type": "unicode"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "__license__", "type": "unicode"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "TestAPI", "type": "Type[deepchem.models.tests.TestAPI]"}, {"lineNumber": 24, "col_offset": 2, "nodeName": "test_multitask_order", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "test_multitask_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "splittype", "type": "unicode"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "output_transformers", "type": "List[nothing]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "input_transformers", "type": "List[nothing]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "task_type", "type": "unicode"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "compound_featurizers", "type": "List[deepchem.featurizers.fingerprints.CircularFingerprint]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "complex_featurizers", "type": "List[nothing]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "ids", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "task", "type": "unicode"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "task_type", "type": "unicode"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "_featurize_train_test_split", "type": "Callable[..., Tuple[Any, Any, List[Any], List[Any]]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "splittype", "type": "unicode"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "compound_featurizers", "type": "List[deepchem.featurizers.fingerprints.CircularFingerprint]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "complex_featurizers", "type": "List[nothing]"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "input_transformers", "type": "List[nothing]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "output_transformers", "type": "List[nothing]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "input_file", "type": "Union[unicode, str]"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., deepchem.datasets.Dataset]"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "X", "type": "Any"}, {"lineNumber": 70, "col_offset": 52, "nodeName": "y", "type": "Any"}, {"lineNumber": 70, "col_offset": 55, "nodeName": "w", "type": "Any"}, {"lineNumber": 70, "col_offset": 58, "nodeName": "ids", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 63, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "y_out", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "w_out", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "_", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "to_numpy", "type": "Callable[[], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "y_out", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "w", "type": "Any"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "w_out", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "self", "type": "TestMultitaskData"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "task", "type": "unicode"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "CircularFingerprint", "type": "Type[deepchem.featurizers.fingerprints.CircularFingerprint]"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "self", "type": "TestMultitaskData"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "get_task_names", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "get_task_names", "type": "Any"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "self", "type": "TestMultitaskData"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "test_dataset", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "np", "type": "module"}]