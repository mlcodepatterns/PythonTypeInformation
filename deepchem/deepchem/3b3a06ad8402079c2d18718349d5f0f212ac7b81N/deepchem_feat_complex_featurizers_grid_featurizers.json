[{"lineNumber": 30, "col_offset": 0, "nodeName": "compute_charge_dictionary", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "HBOND_DIST_BINS", "type": "List[Tuple[float, float]]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "HBOND_ANGLE_CUTOFFS", "type": "List[float]"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "ComplexFeaturizer", "type": "Type[deepchem.feat.base_classes.ComplexFeaturizer]"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "ComplexFeaturizer", "type": "Type[deepchem.feat.base_classes.ComplexFeaturizer]"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "ComplexFeaturizer", "type": "Type[deepchem.feat.base_classes.ComplexFeaturizer]"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "ComplexFeaturizer", "type": "Type[deepchem.feat.base_classes.ComplexFeaturizer]"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "ComplexFeaturizer", "type": "Type[deepchem.feat.base_classes.ComplexFeaturizer]"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "ComplexFeaturizer", "type": "Type[deepchem.feat.base_classes.ComplexFeaturizer]"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 2, "nodeName": "charge_dictionary", "type": "Dict[int, float]"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "charge_dictionary", "type": "Dict[int, float]"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 170, "col_offset": 52, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 255, "col_offset": 52, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 458, "col_offset": 52, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 563, "col_offset": 52, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 39, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "atom", "type": "deepchem.utils.fragment_utils.AtomShim"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "box_width", "type": "float"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "box_width", "type": "float"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "voxel_width", "type": "float"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "voxel_width", "type": "float"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "reduce_to_contacts", "type": "bool"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "reduce_to_contacts", "type": "bool"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "reduce_to_contacts", "type": "bool"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "box_width", "type": "float"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "box_width", "type": "float"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "voxel_width", "type": "float"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "voxel_width", "type": "float"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "reduce_to_contacts", "type": "bool"}, {"lineNumber": 168, "col_offset": 30, "nodeName": "reduce_to_contacts", "type": "bool"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 7, "nodeName": "reduce_to_contacts", "type": "bool"}, {"lineNumber": 170, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "angle_cutoff", "type": "float"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "angle_cutoff", "type": "float"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "box_width", "type": "float"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "box_width", "type": "float"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "voxel_width", "type": "float"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "voxel_width", "type": "float"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 255, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 341, "col_offset": 18, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "angle_cutoff", "type": "float"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "angle_cutoff", "type": "float"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "box_width", "type": "float"}, {"lineNumber": 343, "col_offset": 21, "nodeName": "box_width", "type": "float"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "voxel_width", "type": "float"}, {"lineNumber": 344, "col_offset": 23, "nodeName": "voxel_width", "type": "float"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 447, "col_offset": 18, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "reduce_to_contacts", "type": "bool"}, {"lineNumber": 456, "col_offset": 30, "nodeName": "reduce_to_contacts", "type": "bool"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 476, "col_offset": 7, "nodeName": "reduce_to_contacts", "type": "bool"}, {"lineNumber": 458, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 550, "col_offset": 18, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "box_width", "type": "float"}, {"lineNumber": 559, "col_offset": 21, "nodeName": "box_width", "type": "float"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "voxel_width", "type": "float"}, {"lineNumber": 560, "col_offset": 23, "nodeName": "voxel_width", "type": "float"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "reduce_to_contacts", "type": "bool"}, {"lineNumber": 561, "col_offset": 30, "nodeName": "reduce_to_contacts", "type": "bool"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 580, "col_offset": 4, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 581, "col_offset": 7, "nodeName": "reduce_to_contacts", "type": "bool"}, {"lineNumber": 563, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "GetAtoms", "type": "Callable[[], List[deepchem.utils.fragment_utils.AtomShim]]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "charge_dictionary", "type": "Dict[int, float]"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "get_partial_charge", "type": "Callable[[Any], float]"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "atom", "type": "deepchem.utils.fragment_utils.AtomShim"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "self", "type": "ChargeVoxelizer"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "self", "type": "ChargeVoxelizer"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "self", "type": "ChargeVoxelizer"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "self", "type": "ChargeVoxelizer"}, {"lineNumber": 94, "col_offset": 6, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "MoleculeLoadException", "type": "Type[deepchem.utils.fragment_utils.MoleculeLoadException]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "compute_contact_centroid", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "self", "type": "ChargeVoxelizer"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "frag1_xyz", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "frag2_xyz", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "xyzs", "type": "List[numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "rdks", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "self", "type": "SaltBridgeVoxelizer"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "self", "type": "SaltBridgeVoxelizer"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "self", "type": "SaltBridgeVoxelizer"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "self", "type": "SaltBridgeVoxelizer"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "MoleculeLoadException", "type": "Type[deepchem.utils.fragment_utils.MoleculeLoadException]"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "compute_contact_centroid", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 188, "col_offset": 7, "nodeName": "self", "type": "SaltBridgeVoxelizer"}, {"lineNumber": 189, "col_offset": 6, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]"}, {"lineNumber": 190, "col_offset": 34, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "distances", "type": "numpy.ndarray"}, {"lineNumber": 194, "col_offset": 6, "nodeName": "frag1_xyz", "type": "numpy.ndarray"}, {"lineNumber": 195, "col_offset": 6, "nodeName": "frag2_xyz", "type": "numpy.ndarray"}, {"lineNumber": 196, "col_offset": 6, "nodeName": "xyzs", "type": "List[numpy.ndarray]"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "self", "type": "CationPiVoxelizer"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "self", "type": "CationPiVoxelizer"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "self", "type": "CationPiVoxelizer"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "self", "type": "CationPiVoxelizer"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 267, "col_offset": 11, "nodeName": "MoleculeLoadException", "type": "Type[deepchem.utils.fragment_utils.MoleculeLoadException]"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "compute_contact_centroid", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 272, "col_offset": 40, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 273, "col_offset": 34, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 277, "col_offset": 6, "nodeName": "frag1_xyz", "type": "numpy.ndarray"}, {"lineNumber": 278, "col_offset": 6, "nodeName": "frag2_xyz", "type": "numpy.ndarray"}, {"lineNumber": 279, "col_offset": 6, "nodeName": "xyzs", "type": "List[numpy.ndarray]"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 300, "col_offset": 26, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "self", "type": "PiStackVoxelizer"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "self", "type": "PiStackVoxelizer"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "self", "type": "PiStackVoxelizer"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "self", "type": "PiStackVoxelizer"}, {"lineNumber": 356, "col_offset": 6, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 358, "col_offset": 11, "nodeName": "MoleculeLoadException", "type": "Type[deepchem.utils.fragment_utils.MoleculeLoadException]"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "compute_contact_centroid", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 363, "col_offset": 40, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 364, "col_offset": 34, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 367, "col_offset": 6, "nodeName": "distances", "type": "numpy.ndarray"}, {"lineNumber": 368, "col_offset": 6, "nodeName": "frag1_xyz", "type": "numpy.ndarray"}, {"lineNumber": 369, "col_offset": 6, "nodeName": "frag2_xyz", "type": "numpy.ndarray"}, {"lineNumber": 370, "col_offset": 6, "nodeName": "xyzs", "type": "List[numpy.ndarray]"}, {"lineNumber": 407, "col_offset": 11, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 407, "col_offset": 26, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "self", "type": "HydrogenBondCounter"}, {"lineNumber": 448, "col_offset": 7, "nodeName": "distance_bins", "type": "Optional[List[Tuple[float, float]]]"}, {"lineNumber": 449, "col_offset": 6, "nodeName": "distance_bins", "type": "List[Tuple[float, float]]"}, {"lineNumber": 449, "col_offset": 27, "nodeName": "HBOND_DIST_BINS", "type": "List[Tuple[float, float]]"}, {"lineNumber": 451, "col_offset": 6, "nodeName": "distance_bins", "type": "Optional[List[Tuple[float, float]]]"}, {"lineNumber": 451, "col_offset": 27, "nodeName": "distance_bins", "type": "Optional[List[Tuple[float, float]]]"}, {"lineNumber": 452, "col_offset": 7, "nodeName": "angle_cutoffs", "type": "Optional[List[float]]"}, {"lineNumber": 453, "col_offset": 6, "nodeName": "angle_cutoffs", "type": "List[float]"}, {"lineNumber": 453, "col_offset": 27, "nodeName": "HBOND_ANGLE_CUTOFFS", "type": "List[float]"}, {"lineNumber": 455, "col_offset": 6, "nodeName": "angle_cutoffs", "type": "Optional[List[float]]"}, {"lineNumber": 455, "col_offset": 27, "nodeName": "angle_cutoffs", "type": "Optional[List[float]]"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "self", "type": "HydrogenBondCounter"}, {"lineNumber": 468, "col_offset": 6, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 470, "col_offset": 11, "nodeName": "MoleculeLoadException", "type": "Type[deepchem.utils.fragment_utils.MoleculeLoadException]"}, {"lineNumber": 476, "col_offset": 7, "nodeName": "self", "type": "HydrogenBondCounter"}, {"lineNumber": 477, "col_offset": 6, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]"}, {"lineNumber": 479, "col_offset": 34, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 482, "col_offset": 6, "nodeName": "distances", "type": "numpy.ndarray"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 497, "col_offset": 26, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "self", "type": "HydrogenBondVoxelizer"}, {"lineNumber": 551, "col_offset": 7, "nodeName": "distance_bins", "type": "Optional[List[Tuple[float, float]]]"}, {"lineNumber": 552, "col_offset": 6, "nodeName": "distance_bins", "type": "List[Tuple[float, float]]"}, {"lineNumber": 552, "col_offset": 27, "nodeName": "HBOND_DIST_BINS", "type": "List[Tuple[float, float]]"}, {"lineNumber": 554, "col_offset": 6, "nodeName": "distance_bins", "type": "Optional[List[Tuple[float, float]]]"}, {"lineNumber": 554, "col_offset": 27, "nodeName": "distance_bins", "type": "Optional[List[Tuple[float, float]]]"}, {"lineNumber": 555, "col_offset": 7, "nodeName": "angle_cutoffs", "type": "Optional[List[float]]"}, {"lineNumber": 556, "col_offset": 6, "nodeName": "angle_cutoffs", "type": "List[float]"}, {"lineNumber": 556, "col_offset": 27, "nodeName": "HBOND_ANGLE_CUTOFFS", "type": "List[float]"}, {"lineNumber": 558, "col_offset": 6, "nodeName": "angle_cutoffs", "type": "Optional[List[float]]"}, {"lineNumber": 558, "col_offset": 27, "nodeName": "angle_cutoffs", "type": "Optional[List[float]]"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "self", "type": "HydrogenBondVoxelizer"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "self", "type": "HydrogenBondVoxelizer"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "self", "type": "HydrogenBondVoxelizer"}, {"lineNumber": 573, "col_offset": 6, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 575, "col_offset": 11, "nodeName": "MoleculeLoadException", "type": "Type[deepchem.utils.fragment_utils.MoleculeLoadException]"}, {"lineNumber": 580, "col_offset": 15, "nodeName": "compute_contact_centroid", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 580, "col_offset": 40, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 581, "col_offset": 7, "nodeName": "self", "type": "HydrogenBondVoxelizer"}, {"lineNumber": 582, "col_offset": 6, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]"}, {"lineNumber": 583, "col_offset": 34, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 586, "col_offset": 6, "nodeName": "distances", "type": "numpy.ndarray"}, {"lineNumber": 587, "col_offset": 6, "nodeName": "frag1_xyz", "type": "numpy.ndarray"}, {"lineNumber": 588, "col_offset": 6, "nodeName": "frag2_xyz", "type": "numpy.ndarray"}, {"lineNumber": 589, "col_offset": 6, "nodeName": "xyzs", "type": "List[numpy.ndarray]"}, {"lineNumber": 609, "col_offset": 11, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 609, "col_offset": 26, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "molecule", "type": "deepchem.utils.fragment_utils.MolecularFragment"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "load_complex", "type": "Callable[..., List[Tuple[numpy.ndarray, Any]]]"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "complex", "type": "Tuple[str, str]"}, {"lineNumber": 101, "col_offset": 58, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "reduce_molecular_complex_to_contacts", "type": "Callable[..., List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]]"}, {"lineNumber": 103, "col_offset": 55, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 103, "col_offset": 66, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "itertools", "type": "module"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "frag1", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "frag2", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "subtract_centroid", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "subtract_centroid", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "frag1_xyz", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "frag2_xyz", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "load_complex", "type": "Callable[..., List[Tuple[numpy.ndarray, Any]]]"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "complex", "type": "Tuple[str, str]"}, {"lineNumber": 187, "col_offset": 58, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 189, "col_offset": 18, "nodeName": "reduce_molecular_complex_to_contacts", "type": "Callable[..., List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]]"}, {"lineNumber": 189, "col_offset": 55, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 189, "col_offset": 66, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 190, "col_offset": 34, "nodeName": "itertools", "type": "module"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 192, "col_offset": 6, "nodeName": "frag1", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "frag2", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "compute_pairwise_distances", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "subtract_centroid", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 194, "col_offset": 46, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "subtract_centroid", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 195, "col_offset": 46, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "frag1_xyz", "type": "numpy.ndarray"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "frag2_xyz", "type": "numpy.ndarray"}, {"lineNumber": 198, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 32, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "load_complex", "type": "Callable[..., List[Tuple[numpy.ndarray, Any]]]"}, {"lineNumber": 265, "col_offset": 43, "nodeName": "complex", "type": "Tuple[str, str]"}, {"lineNumber": 272, "col_offset": 58, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 273, "col_offset": 34, "nodeName": "itertools", "type": "module"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 275, "col_offset": 6, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "subtract_centroid", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 277, "col_offset": 46, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 278, "col_offset": 18, "nodeName": "subtract_centroid", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 278, "col_offset": 46, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 279, "col_offset": 14, "nodeName": "frag1_xyz", "type": "numpy.ndarray"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "frag2_xyz", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 356, "col_offset": 18, "nodeName": "load_complex", "type": "Callable[..., List[Tuple[numpy.ndarray, Any]]]"}, {"lineNumber": 356, "col_offset": 43, "nodeName": "complex", "type": "Any"}, {"lineNumber": 363, "col_offset": 58, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 364, "col_offset": 34, "nodeName": "itertools", "type": "module"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 366, "col_offset": 6, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 366, "col_offset": 13, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 367, "col_offset": 18, "nodeName": "compute_pairwise_distances", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 368, "col_offset": 18, "nodeName": "subtract_centroid", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 368, "col_offset": 46, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 369, "col_offset": 18, "nodeName": "subtract_centroid", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 369, "col_offset": 46, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 370, "col_offset": 14, "nodeName": "frag1_xyz", "type": "numpy.ndarray"}, {"lineNumber": 370, "col_offset": 25, "nodeName": "frag2_xyz", "type": "numpy.ndarray"}, {"lineNumber": 373, "col_offset": 10, "nodeName": "compute_pi_stack", "type": "Callable[..., Tuple[Counter[Any], Counter[Any], Counter[Any], Counter[Any]]]"}, {"lineNumber": 376, "col_offset": 14, "nodeName": "distances", "type": "numpy.ndarray"}, {"lineNumber": 379, "col_offset": 27, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 404, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 407, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 427, "col_offset": 21, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 449, "col_offset": 6, "nodeName": "self", "type": "HydrogenBondCounter"}, {"lineNumber": 451, "col_offset": 6, "nodeName": "self", "type": "HydrogenBondCounter"}, {"lineNumber": 453, "col_offset": 6, "nodeName": "self", "type": "HydrogenBondCounter"}, {"lineNumber": 455, "col_offset": 6, "nodeName": "self", "type": "HydrogenBondCounter"}, {"lineNumber": 458, "col_offset": 32, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 468, "col_offset": 18, "nodeName": "load_complex", "type": "Callable[..., List[Tuple[numpy.ndarray, Any]]]"}, {"lineNumber": 468, "col_offset": 43, "nodeName": "complex", "type": "Tuple[str, str]"}, {"lineNumber": 477, "col_offset": 18, "nodeName": "reduce_molecular_complex_to_contacts", "type": "Callable[..., List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]]"}, {"lineNumber": 477, "col_offset": 55, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 477, "col_offset": 66, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 479, "col_offset": 34, "nodeName": "itertools", "type": "module"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 481, "col_offset": 6, "nodeName": "frag1", "type": "Union[Tuple[numpy.ndarray, Any], Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]"}, {"lineNumber": 481, "col_offset": 13, "nodeName": "frag2", "type": "Union[Tuple[numpy.ndarray, Any], Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]"}, {"lineNumber": 482, "col_offset": 18, "nodeName": "compute_pairwise_distances", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 487, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 525, "col_offset": 21, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 552, "col_offset": 6, "nodeName": "self", "type": "HydrogenBondVoxelizer"}, {"lineNumber": 554, "col_offset": 6, "nodeName": "self", "type": "HydrogenBondVoxelizer"}, {"lineNumber": 556, "col_offset": 6, "nodeName": "self", "type": "HydrogenBondVoxelizer"}, {"lineNumber": 558, "col_offset": 6, "nodeName": "self", "type": "HydrogenBondVoxelizer"}, {"lineNumber": 563, "col_offset": 32, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 573, "col_offset": 18, "nodeName": "load_complex", "type": "Callable[..., List[Tuple[numpy.ndarray, Any]]]"}, {"lineNumber": 573, "col_offset": 43, "nodeName": "complex", "type": "Tuple[str, str]"}, {"lineNumber": 580, "col_offset": 58, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 582, "col_offset": 18, "nodeName": "reduce_molecular_complex_to_contacts", "type": "Callable[..., List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]]"}, {"lineNumber": 582, "col_offset": 55, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 582, "col_offset": 66, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 583, "col_offset": 34, "nodeName": "itertools", "type": "module"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 585, "col_offset": 6, "nodeName": "frag1", "type": "Union[Tuple[numpy.ndarray, Any], Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]"}, {"lineNumber": 585, "col_offset": 13, "nodeName": "frag2", "type": "Union[Tuple[numpy.ndarray, Any], Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]"}, {"lineNumber": 586, "col_offset": 18, "nodeName": "compute_pairwise_distances", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 587, "col_offset": 18, "nodeName": "subtract_centroid", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 587, "col_offset": 46, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 588, "col_offset": 18, "nodeName": "subtract_centroid", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 588, "col_offset": 46, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 589, "col_offset": 14, "nodeName": "frag1_xyz", "type": "numpy.ndarray"}, {"lineNumber": 589, "col_offset": 25, "nodeName": "frag2_xyz", "type": "numpy.ndarray"}, {"lineNumber": 591, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 609, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "rdkit_utils", "type": "module"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 58, "nodeName": "self", "type": "ChargeVoxelizer"}, {"lineNumber": 103, "col_offset": 66, "nodeName": "self", "type": "ChargeVoxelizer"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "fragments", "type": "Union[List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]], List[Tuple[numpy.ndarray, Any]]]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "fragments", "type": "Union[List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]], List[Tuple[numpy.ndarray, Any]]]"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "fragments", "type": "Union[List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]], List[Tuple[numpy.ndarray, Any]]]"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "frag1", "type": "Union[Tuple[numpy.ndarray, Any], Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "frag2", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "frag1", "type": "Union[Tuple[numpy.ndarray, Any], Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "frag2", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 112, "col_offset": 6, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 10, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "rdkit_utils", "type": "module"}, {"lineNumber": 183, "col_offset": 6, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 58, "nodeName": "self", "type": "SaltBridgeVoxelizer"}, {"lineNumber": 189, "col_offset": 66, "nodeName": "self", "type": "SaltBridgeVoxelizer"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "fragments", "type": "Union[List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]], List[Tuple[numpy.ndarray, Any]]]"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "fragments", "type": "Union[List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]], List[Tuple[numpy.ndarray, Any]]]"}, {"lineNumber": 192, "col_offset": 43, "nodeName": "fragments", "type": "Union[List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]], List[Tuple[numpy.ndarray, Any]]]"}, {"lineNumber": 193, "col_offset": 45, "nodeName": "frag1", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 193, "col_offset": 55, "nodeName": "frag2", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 194, "col_offset": 36, "nodeName": "frag1", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "frag2", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 198, "col_offset": 6, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 199, "col_offset": 10, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "rdkit_utils", "type": "module"}, {"lineNumber": 268, "col_offset": 6, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 58, "nodeName": "self", "type": "CationPiVoxelizer"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 274, "col_offset": 18, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 275, "col_offset": 43, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 277, "col_offset": 36, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 278, "col_offset": 36, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 281, "col_offset": 6, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 282, "col_offset": 10, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 356, "col_offset": 18, "nodeName": "rdkit_utils", "type": "module"}, {"lineNumber": 359, "col_offset": 6, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 363, "col_offset": 58, "nodeName": "self", "type": "PiStackVoxelizer"}, {"lineNumber": 365, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 365, "col_offset": 18, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 366, "col_offset": 43, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 367, "col_offset": 45, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 367, "col_offset": 55, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 368, "col_offset": 36, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 369, "col_offset": 36, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 374, "col_offset": 14, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 375, "col_offset": 14, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 377, "col_offset": 26, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "angle_cutoff", "type": "float"}, {"lineNumber": 404, "col_offset": 6, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 405, "col_offset": 10, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 468, "col_offset": 18, "nodeName": "rdkit_utils", "type": "module"}, {"lineNumber": 471, "col_offset": 6, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 477, "col_offset": 66, "nodeName": "self", "type": "HydrogenBondCounter"}, {"lineNumber": 480, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 480, "col_offset": 18, "nodeName": "fragments", "type": "Union[List[Tuple[numpy.ndarray, Any]], List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]]"}, {"lineNumber": 481, "col_offset": 21, "nodeName": "fragments", "type": "Union[List[Tuple[numpy.ndarray, Any]], List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]]"}, {"lineNumber": 481, "col_offset": 43, "nodeName": "fragments", "type": "Union[List[Tuple[numpy.ndarray, Any]], List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]]"}, {"lineNumber": 482, "col_offset": 45, "nodeName": "frag1", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 482, "col_offset": 55, "nodeName": "frag2", "type": "Union[Tuple[numpy.ndarray, Any], Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]"}, {"lineNumber": 487, "col_offset": 6, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 488, "col_offset": 10, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 573, "col_offset": 18, "nodeName": "rdkit_utils", "type": "module"}, {"lineNumber": 576, "col_offset": 6, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 580, "col_offset": 58, "nodeName": "self", "type": "HydrogenBondVoxelizer"}, {"lineNumber": 582, "col_offset": 66, "nodeName": "self", "type": "HydrogenBondVoxelizer"}, {"lineNumber": 584, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 584, "col_offset": 18, "nodeName": "fragments", "type": "Union[List[Tuple[numpy.ndarray, Any]], List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]]"}, {"lineNumber": 585, "col_offset": 21, "nodeName": "fragments", "type": "Union[List[Tuple[numpy.ndarray, Any]], List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]]"}, {"lineNumber": 585, "col_offset": 43, "nodeName": "fragments", "type": "Union[List[Tuple[numpy.ndarray, Any]], List[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]]"}, {"lineNumber": 586, "col_offset": 45, "nodeName": "frag1", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 586, "col_offset": 55, "nodeName": "frag2", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 587, "col_offset": 36, "nodeName": "frag1", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 588, "col_offset": 36, "nodeName": "frag2", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 591, "col_offset": 6, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 592, "col_offset": 10, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "frag1_ind", "type": "int"}, {"lineNumber": 107, "col_offset": 53, "nodeName": "frag2_ind", "type": "int"}, {"lineNumber": 170, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 170, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 183, "col_offset": 6, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "frag1_ind", "type": "int"}, {"lineNumber": 192, "col_offset": 53, "nodeName": "frag2_ind", "type": "int"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 255, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 268, "col_offset": 6, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "frag1_ind", "type": "int"}, {"lineNumber": 275, "col_offset": 53, "nodeName": "frag2_ind", "type": "int"}, {"lineNumber": 359, "col_offset": 6, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 366, "col_offset": 31, "nodeName": "frag1_ind", "type": "int"}, {"lineNumber": 366, "col_offset": 53, "nodeName": "frag2_ind", "type": "int"}, {"lineNumber": 377, "col_offset": 26, "nodeName": "self", "type": "PiStackVoxelizer"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "self", "type": "PiStackVoxelizer"}, {"lineNumber": 405, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "pi_parallel_tensor", "type": "Any"}, {"lineNumber": 405, "col_offset": 46, "nodeName": "pi_t_tensor", "type": "Any"}, {"lineNumber": 427, "col_offset": 30, "nodeName": "List", "type": "Any"}, {"lineNumber": 458, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 458, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 471, "col_offset": 6, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 481, "col_offset": 31, "nodeName": "frag1_ind", "type": "int"}, {"lineNumber": 481, "col_offset": 53, "nodeName": "frag2_ind", "type": "int"}, {"lineNumber": 488, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 525, "col_offset": 30, "nodeName": "List", "type": "Any"}, {"lineNumber": 563, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 563, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 576, "col_offset": 6, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 585, "col_offset": 31, "nodeName": "frag1_ind", "type": "int"}, {"lineNumber": 585, "col_offset": 53, "nodeName": "frag2_ind", "type": "int"}, {"lineNumber": 592, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 36, "nodeName": "xyz", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 43, "nodeName": "xyzs", "type": "List[numpy.ndarray]"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "xyz", "type": "numpy.ndarray"}, {"lineNumber": 388, "col_offset": 20, "nodeName": "feature_dict", "type": "Counter[nothing]"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 389, "col_offset": 23, "nodeName": "xyzs", "type": "List[numpy.ndarray]"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "xyz", "type": "numpy.ndarray"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "feature_dict", "type": "Counter[nothing]"}, {"lineNumber": 401, "col_offset": 37, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 401, "col_offset": 41, "nodeName": "xyzs", "type": "List[numpy.ndarray]"}, {"lineNumber": 427, "col_offset": 35, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 491, "col_offset": 22, "nodeName": "hbond_list", "type": "Any"}, {"lineNumber": 525, "col_offset": 35, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 603, "col_offset": 25, "nodeName": "hbond_list", "type": "Any"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "xyz", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "mol", "type": "deepchem.utils.fragment_utils.MolecularFragment"}, {"lineNumber": 122, "col_offset": 54, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 122, "col_offset": 58, "nodeName": "xyzs", "type": "List[numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 64, "nodeName": "rdks", "type": "List[Any]"}, {"lineNumber": 290, "col_offset": 36, "nodeName": "xyz", "type": "numpy.ndarray"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "cation_pi_dict", "type": "Counter[nothing]"}, {"lineNumber": 290, "col_offset": 59, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 291, "col_offset": 22, "nodeName": "xyzs", "type": "List[numpy.ndarray]"}, {"lineNumber": 389, "col_offset": 30, "nodeName": "ligand_pi_parallel", "type": "Counter[nothing]"}, {"lineNumber": 389, "col_offset": 50, "nodeName": "protein_pi_parallel", "type": "Counter[nothing]"}, {"lineNumber": 401, "col_offset": 48, "nodeName": "ligand_pi_t", "type": "Counter[nothing]"}, {"lineNumber": 401, "col_offset": 61, "nodeName": "protein_pi_t", "type": "Counter[nothing]"}, {"lineNumber": 491, "col_offset": 36, "nodeName": "compute_hydrogen_bonds", "type": "Callable[[Any, Any, Any, Any, Any], List[Any]]"}, {"lineNumber": 492, "col_offset": 22, "nodeName": "frag1", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 492, "col_offset": 29, "nodeName": "frag2", "type": "Union[Tuple[numpy.ndarray, Any], Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment]]"}, {"lineNumber": 492, "col_offset": 36, "nodeName": "distances", "type": "numpy.ndarray"}, {"lineNumber": 492, "col_offset": 47, "nodeName": "distance_bins", "type": "Any"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "angle_cutoffs", "type": "Any"}, {"lineNumber": 603, "col_offset": 39, "nodeName": "compute_hydrogen_bonds", "type": "Callable[[Any, Any, Any, Any, Any], List[Any]]"}, {"lineNumber": 604, "col_offset": 22, "nodeName": "frag1", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 604, "col_offset": 29, "nodeName": "frag2", "type": "Union[Tuple[numpy.ndarray, deepchem.utils.fragment_utils.MolecularFragment], Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 604, "col_offset": 36, "nodeName": "distances", "type": "numpy.ndarray"}, {"lineNumber": 604, "col_offset": 47, "nodeName": "distance_bins", "type": "Any"}, {"lineNumber": 605, "col_offset": 22, "nodeName": "angle_cutoffs", "type": "Any"}, {"lineNumber": 292, "col_offset": 22, "nodeName": "compute_binding_pocket_cation_pi", "type": "Callable[..., Tuple[Counter[Any], Counter[Any]]]"}, {"lineNumber": 492, "col_offset": 47, "nodeName": "self", "type": "HydrogenBondCounter"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "self", "type": "HydrogenBondCounter"}, {"lineNumber": 602, "col_offset": 44, "nodeName": "xyz", "type": "numpy.ndarray"}, {"lineNumber": 604, "col_offset": 47, "nodeName": "self", "type": "HydrogenBondVoxelizer"}, {"lineNumber": 605, "col_offset": 22, "nodeName": "self", "type": "HydrogenBondVoxelizer"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 294, "col_offset": 26, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 295, "col_offset": 38, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 296, "col_offset": 39, "nodeName": "angle_cutoff", "type": "float"}, {"lineNumber": 295, "col_offset": 38, "nodeName": "self", "type": "CationPiVoxelizer"}, {"lineNumber": 296, "col_offset": 39, "nodeName": "self", "type": "CationPiVoxelizer"}]