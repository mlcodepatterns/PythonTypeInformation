[{"lineNumber": 67, "col_offset": 0, "nodeName": "featurize_splif", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "SPLIF_CONTACT_BINS", "type": "List[Union[Tuple[int, float], Tuple[float, float]]]"}, {"lineNumber": 30, "col_offset": 61, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "ComplexFeaturizer", "type": "Type[deepchem.feat.base_classes.ComplexFeaturizer]"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "ComplexFeaturizer", "type": "Type[deepchem.feat.base_classes.ComplexFeaturizer]"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 54, "col_offset": 2, "nodeName": "frag1_atoms", "type": "Set[Any]"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "contacts", "type": "Iterator[Tuple[Any, Any]]"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "frag2_ecfp_dict", "type": "Dict[int, str]"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "splif_dict", "type": "Any"}, {"lineNumber": 94, "col_offset": 2, "nodeName": "splif_dicts", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "splif_dicts", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 30, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "nonzero", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "compute_all_ecfp", "type": "Callable[..., Dict[int, str]]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "compute_all_ecfp", "type": "Callable[..., Dict[int, str]]"}, {"lineNumber": 95, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "contact_bin", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "contact_bins", "type": "Union[List[Union[Tuple[int, float], Tuple[float, float]]], Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "size", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "size", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "radius", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "radius", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "pairwise_features", "type": "List[numpy.ndarray]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "pairwise_features", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "pairwise_features", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 228, "col_offset": 18, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "size", "type": "int"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "radius", "type": "int"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "radius", "type": "int"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "box_width", "type": "float"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "box_width", "type": "float"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "voxel_width", "type": "float"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "voxel_width", "type": "float"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "voxels_per_edge", "type": "int"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "contacts", "type": "Any"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "contacts", "type": "Any"}, {"lineNumber": 58, "col_offset": 6, "nodeName": "frag1", "type": "Tuple[Any, ...]"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "frag1_atoms", "type": "Set[Any]"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "ecfp_degree", "type": "int"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "frag2", "type": "Tuple[Any, ...]"}, {"lineNumber": 59, "col_offset": 54, "nodeName": "ecfp_degree", "type": "int"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "contact", "type": "Tuple[Any, Any]"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "contacts", "type": "Iterator[Tuple[Any, Any]]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 142, "col_offset": 7, "nodeName": "contact_bins", "type": "Any"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "contact_bins", "type": "List[Union[Tuple[int, float], Tuple[float, float]]]"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "SPLIF_CONTACT_BINS", "type": "List[Union[Tuple[int, float], Tuple[float, float]]]"}, {"lineNumber": 145, "col_offset": 6, "nodeName": "contact_bins", "type": "Any"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "contact_bins", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "self", "type": "SplifFingerprint"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "self", "type": "SplifFingerprint"}, {"lineNumber": 159, "col_offset": 6, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "MoleculeLoadException", "type": "Type[deepchem.utils.fragment_utils.MoleculeLoadException]"}, {"lineNumber": 166, "col_offset": 9, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 166, "col_offset": 49, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 168, "col_offset": 6, "nodeName": "distances", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 6, "nodeName": "pairwise_features", "type": "List[numpy.ndarray]"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "vectors", "type": "List[numpy.ndarray]"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "pairwise_features", "type": "List[numpy.ndarray]"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "self", "type": "SplifVoxelizer"}, {"lineNumber": 229, "col_offset": 7, "nodeName": "contact_bins", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 6, "nodeName": "contact_bins", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "contact_bins", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "self", "type": "SplifVoxelizer"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "self", "type": "SplifVoxelizer"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "self", "type": "SplifVoxelizer"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "self", "type": "SplifVoxelizer"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "self", "type": "SplifVoxelizer"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "MoleculeLoadException", "type": "Type[deepchem.utils.fragment_utils.MoleculeLoadException]"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "compute_contact_centroid", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 256, "col_offset": 40, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 257, "col_offset": 9, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 257, "col_offset": 26, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 257, "col_offset": 49, "nodeName": "fragments", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 258, "col_offset": 6, "nodeName": "distances", "type": "numpy.ndarray"}, {"lineNumber": 259, "col_offset": 6, "nodeName": "frag1_xyz", "type": "numpy.ndarray"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "frag2_xyz", "type": "numpy.ndarray"}, {"lineNumber": 261, "col_offset": 6, "nodeName": "xyzs", "type": "List[numpy.ndarray]"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 278, "col_offset": 26, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "pairwise_distances", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "pairwise_distances", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "splif_dicts", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "compute_splif_features_in_range", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 97, "col_offset": 54, "nodeName": "pairwise_distances", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "contact_bin", "type": "Any"}, {"lineNumber": 98, "col_offset": 53, "nodeName": "ecfp_degree", "type": "Any"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "self", "type": "SplifFingerprint"}, {"lineNumber": 145, "col_offset": 6, "nodeName": "self", "type": "SplifFingerprint"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "load_complex", "type": "Callable[..., List[Tuple[numpy.ndarray, Any]]]"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "complex", "type": "Tuple[str, str]"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "itertools", "type": "module"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "compute_pairwise_distances", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 6, "nodeName": "self", "type": "SplifVoxelizer"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "box_width", "type": "float"}, {"lineNumber": 237, "col_offset": 48, "nodeName": "voxel_width", "type": "float"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "load_complex", "type": "Callable[..., List[Tuple[numpy.ndarray, Any]]]"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "complex", "type": "Tuple[str, str]"}, {"lineNumber": 256, "col_offset": 58, "nodeName": "cutoff", "type": "float"}, {"lineNumber": 257, "col_offset": 26, "nodeName": "itertools", "type": "module"}, {"lineNumber": 258, "col_offset": 18, "nodeName": "compute_pairwise_distances", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "subtract_centroid", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 259, "col_offset": 46, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "subtract_centroid", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 260, "col_offset": 46, "nodeName": "centroid", "type": "numpy.ndarray"}, {"lineNumber": 261, "col_offset": 14, "nodeName": "frag1_xyz", "type": "numpy.ndarray"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "frag2_xyz", "type": "numpy.ndarray"}, {"lineNumber": 262, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "contact_bin", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "contact_bin", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 162, "col_offset": 6, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 45, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 168, "col_offset": 55, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "splif_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "self", "type": "SplifVoxelizer"}, {"lineNumber": 237, "col_offset": 48, "nodeName": "self", "type": "SplifVoxelizer"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 58, "nodeName": "self", "type": "SplifVoxelizer"}, {"lineNumber": 258, "col_offset": 45, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 258, "col_offset": 55, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 259, "col_offset": 36, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 260, "col_offset": 36, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 262, "col_offset": 6, "nodeName": "pairwise_features", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 10, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 162, "col_offset": 6, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 172, "col_offset": 54, "nodeName": "featurize_splif", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 173, "col_offset": 38, "nodeName": "contact_bins", "type": "Union[List[Union[Tuple[int, float], Tuple[float, float]]], Any]"}, {"lineNumber": 173, "col_offset": 57, "nodeName": "distances", "type": "numpy.ndarray"}, {"lineNumber": 173, "col_offset": 68, "nodeName": "radius", "type": "Any"}, {"lineNumber": 239, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 239, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 263, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "contacts", "type": "Any"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "self", "type": "SplifFingerprint"}, {"lineNumber": 173, "col_offset": 38, "nodeName": "self", "type": "SplifFingerprint"}, {"lineNumber": 173, "col_offset": 68, "nodeName": "self", "type": "SplifFingerprint"}, {"lineNumber": 273, "col_offset": 22, "nodeName": "splif_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 273, "col_offset": 36, "nodeName": "featurize_splif", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "frag1", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "frag2", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "contact_bins", "type": "List[Any]"}, {"lineNumber": 274, "col_offset": 55, "nodeName": "distances", "type": "numpy.ndarray"}, {"lineNumber": 274, "col_offset": 66, "nodeName": "radius", "type": "int"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "self", "type": "SplifVoxelizer"}, {"lineNumber": 274, "col_offset": 66, "nodeName": "self", "type": "SplifVoxelizer"}]