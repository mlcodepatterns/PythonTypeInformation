[{"lineNumber": 8, "col_offset": 0, "nodeName": "__author__", "type": "unicode"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "__copyright__", "type": "unicode"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "__license__", "type": "unicode"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 23, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 2, "nodeName": "_featurize_train_valid_test_split", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "scaffold_test_train_valid_test_split", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 2, "nodeName": "scaffold_test_train_test_split", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 2, "nodeName": "random_test_train_valid_test_split", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 2, "nodeName": "random_test_train_test_split", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "smiles_field", "type": "unicode"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "feature_dir", "type": "str"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "samples_dir", "type": "str"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "valid_dir", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "compound_featurizers", "type": "List[deepchem.featurizers.fingerprints.CircularFingerprint]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "complex_featurizers", "type": "List[nothing]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "featurizers", "type": "List[deepchem.featurizers.fingerprints.CircularFingerprint]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "samples", "type": "deepchem.featurizers.featurize.FeaturizedSamples"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "splittype", "type": "unicode"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "input_transforms", "type": "List[nothing]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "output_transforms", "type": "List[unicode]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "model_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "input_file", "type": "unicode"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "splittype", "type": "unicode"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "input_transforms", "type": "List[nothing]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "output_transforms", "type": "List[unicode]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "model_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "input_file", "type": "unicode"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "splittype", "type": "unicode"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "input_transforms", "type": "List[nothing]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "output_transforms", "type": "List[unicode]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "model_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "input_file", "type": "unicode"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "splittype", "type": "unicode"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "input_transforms", "type": "List[nothing]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "output_transforms", "type": "List[unicode]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "model_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "input_file", "type": "unicode"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "compound_featurizers", "type": "List[deepchem.featurizers.fingerprints.CircularFingerprint]"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "complex_featurizers", "type": "List[nothing]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 39, "col_offset": 48, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "DataFeaturizer", "type": "Type[deepchem.featurizers.featurize.DataFeaturizer]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., deepchem.featurizers.featurize.FeaturizedSamples]"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "feature_dir", "type": "str"}, {"lineNumber": 49, "col_offset": 65, "nodeName": "samples_dir", "type": "str"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "frac_valid", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_featurize_train_valid_test_split", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "splittype", "type": "unicode"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "input_file", "type": "unicode"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_featurize_train_valid_test_split", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "splittype", "type": "unicode"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "input_file", "type": "unicode"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "_featurize_train_valid_test_split", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "splittype", "type": "unicode"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "input_file", "type": "unicode"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "_featurize_train_valid_test_split", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "splittype", "type": "unicode"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "input_file", "type": "unicode"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 24, "col_offset": 55, "nodeName": "__file__", "type": "str"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "CircularFingerprint", "type": "Type[deepchem.featurizers.fingerprints.CircularFingerprint]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "smiles_field", "type": "unicode"}, {"lineNumber": 42, "col_offset": 53, "nodeName": "compound_featurizers", "type": "List[deepchem.featurizers.fingerprints.CircularFingerprint]"}, {"lineNumber": 43, "col_offset": 52, "nodeName": "complex_featurizers", "type": "List[nothing]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "featurizer", "type": "deepchem.featurizers.featurize.DataFeaturizer"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 49, "col_offset": 65, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 53, "col_offset": 51, "nodeName": "train_valid_test_split", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "splittype", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "train_samples", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "valid_samples", "type": "Any"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "train_test_split", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "splittype", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "train_samples", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "train_samples", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "valid_samples", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "train_samples", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "train_samples", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "valid_samples", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "train_samples", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "path", "type": "module"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 53, "col_offset": 51, "nodeName": "samples", "type": "deepchem.featurizers.featurize.FeaturizedSamples"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 54, "col_offset": 57, "nodeName": "valid_dir", "type": "str"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "frac_valid", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "frac_test", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "samples", "type": "deepchem.featurizers.featurize.FeaturizedSamples"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 61, "col_offset": 56, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "os", "type": "module"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 54, "col_offset": 57, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "self", "type": "TestFeaturizedSamples"}, {"lineNumber": 61, "col_offset": 56, "nodeName": "self", "type": "TestFeaturizedSamples"}]