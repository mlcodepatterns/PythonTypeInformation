[{"lineNumber": 20, "col_offset": 0, "nodeName": "weight_decay", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "TensorflowGraphModel", "type": "Type[deepchem.models.tensorflow_models.TensorflowGraphModel]"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "build", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 2, "nodeName": "add_label_placeholders", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 2, "nodeName": "add_training_cost", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 2, "nodeName": "cost", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 2, "nodeName": "add_output_ops", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 2, "nodeName": "construct_feed_dict", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 2, "nodeName": "predict_proba_on_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 191, "col_offset": 2, "nodeName": "predict_on_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 2, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 6, "nodeName": "v", "type": "Any"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "cost", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "cost", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "lg_list", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "placeholder_scope", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "orig_dict", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "X_b", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "task", "type": "int"}, {"lineNumber": 160, "col_offset": 7, "nodeName": "pad_batches", "type": "Any"}, {"lineNumber": 193, "col_offset": 7, "nodeName": "pad_batches", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 31, "col_offset": 6, "nodeName": "cost", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "scalar_summary", "type": "Any"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "cost", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "get_placeholder_scope", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "name_scopes", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 60, "col_offset": 6, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 61, "col_offset": 6, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 62, "col_offset": 6, "nodeName": "lg_list", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "task", "type": "int"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "get_placeholder_scope", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 62, "nodeName": "graph", "type": "Any"}, {"lineNumber": 79, "col_offset": 69, "nodeName": "name_scopes", "type": "Any"}, {"lineNumber": 80, "col_offset": 9, "nodeName": "placeholder_scope", "type": "Any"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "task", "type": "int"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 90, "col_offset": 6, "nodeName": "weighted_costs", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "gradient_costs", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "loss", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "mul", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "weights", "type": "Any"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "sigmoid", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "sigmoid", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "orig_dict", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "get_feed_dict", "type": "Callable[[Any], Dict[unicode, Any]]"}, {"lineNumber": 157, "col_offset": 41, "nodeName": "orig_dict", "type": "Dict[str, Any]"}, {"lineNumber": 160, "col_offset": 7, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 161, "col_offset": 6, "nodeName": "X", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "_restored_model", "type": "bool"}, {"lineNumber": 166, "col_offset": 6, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 187, "col_offset": 6, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "batch_outputs", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "copy", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 193, "col_offset": 7, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 194, "col_offset": 6, "nodeName": "X", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "_restored_model", "type": "bool"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 202, "col_offset": 6, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 203, "col_offset": 6, "nodeName": "start", "type": "float"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "copy", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "outputs", "type": "numpy.ndarray"}, {"lineNumber": 27, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "v", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "add_n", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 33, "col_offset": 6, "nodeName": "cost", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "TensorflowGraph", "type": "Type[deepchem.models.tensorflow_models.TensorflowGraph]"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "placeholder_scope", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "TensorflowGraph", "type": "Type[deepchem.models.tensorflow_models.TensorflowGraph]"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "task", "type": "int"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "sigmoid_cross_entropy_with_logits", "type": "Any"}, {"lineNumber": 126, "col_offset": 58, "nodeName": "logits", "type": "Any"}, {"lineNumber": 126, "col_offset": 66, "nodeName": "labels", "type": "Any"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 144, "col_offset": 9, "nodeName": "y_b", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "y_2column", "type": "Any"}, {"lineNumber": 151, "col_offset": 9, "nodeName": "w_b", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "TensorflowGraph", "type": "Type[deepchem.models.tensorflow_models.TensorflowGraph]"}, {"lineNumber": 161, "col_offset": 10, "nodeName": "pad_features", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 161, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 163, "col_offset": 6, "nodeName": "restore", "type": "Callable[[], None]"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "feed_dict", "type": "Dict[unicode, Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "batch_outputs", "type": "numpy.ndarray"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "complimentary", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "complimentary", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 10, "nodeName": "pad_features", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 194, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 197, "col_offset": 6, "nodeName": "restore", "type": "Callable[[], None]"}, {"lineNumber": 198, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "feed_dict", "type": "Dict[unicode, Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "batch_output", "type": "numpy.ndarray"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "complimentary", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "complimentary", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 27, "col_offset": 6, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "add_n", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "graph", "type": "Any"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "float32", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "fully_connected_layer", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "lg", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "graph", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "shared_name_scope", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "graph", "type": "Any"}, {"lineNumber": 93, "col_offset": 61, "nodeName": "name_scopes", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "task_str", "type": "str"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "graph", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "logits", "type": "Any"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "to_one_hot", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "orig_dict", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "y_2column", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "orig_dict", "type": "Dict[str, Any]"}, {"lineNumber": 150, "col_offset": 40, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "orig_dict", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "w_b", "type": "Any"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "ones", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 163, "col_offset": 6, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "graph", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "construct_feed_dict", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "complimentary", "type": "Any"}, {"lineNumber": 174, "col_offset": 40, "nodeName": "batch_outputs", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 179, "col_offset": 10, "nodeName": "batch_outputs", "type": "Any"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 197, "col_offset": 6, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 198, "col_offset": 9, "nodeName": "graph", "type": "Any"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "time", "type": "module"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "construct_feed_dict", "type": "Callable[..., Any]"}, {"lineNumber": 205, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "complimentary", "type": "Any"}, {"lineNumber": 211, "col_offset": 40, "nodeName": "batch_output", "type": "numpy.ndarray"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 216, "col_offset": 10, "nodeName": "batch_output", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "batch_output", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 31, "col_offset": 52, "nodeName": "v", "type": "Any"}, {"lineNumber": 31, "col_offset": 57, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 35, "col_offset": 64, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "model_ops", "type": "module"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "mol_features", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "lg_list", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "identity", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "TensorflowGraph", "type": "Type[deepchem.models.tensorflow_models.TensorflowGraph]"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "zfill", "type": "Callable[[int], str]"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "shared_name_scope", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 61, "nodeName": "graph", "type": "Any"}, {"lineNumber": 113, "col_offset": 68, "nodeName": "name_scopes", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "append", "type": "Callable"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "y_b", "type": "Any"}, {"lineNumber": 150, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 50, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "eval_graph", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "eval_graph", "type": "Any"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "feed_dict", "type": "Dict[unicode, Any]"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 171, "col_offset": 57, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 173, "col_offset": 41, "nodeName": "batch_outputs", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "complimentary", "type": "Any"}, {"lineNumber": 175, "col_offset": 55, "nodeName": "batch_outputs", "type": "numpy.ndarray"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "batch_outputs", "type": "Any"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 181, "col_offset": 10, "nodeName": "batch_outputs", "type": "Any"}, {"lineNumber": 198, "col_offset": 9, "nodeName": "eval_graph", "type": "Any"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "eval_graph", "type": "Any"}, {"lineNumber": 207, "col_offset": 46, "nodeName": "feed_dict", "type": "Dict[unicode, Any]"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 208, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 210, "col_offset": 41, "nodeName": "batch_output", "type": "numpy.ndarray"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 39, "nodeName": "complimentary", "type": "Any"}, {"lineNumber": 212, "col_offset": 54, "nodeName": "batch_output", "type": "numpy.ndarray"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "batch_output", "type": "Any"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 218, "col_offset": 10, "nodeName": "batch_output", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "from_one_hot", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "abs", "type": "Any"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "v", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "l2_loss", "type": "Any"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "v", "type": "Any"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "v", "type": "Any"}, {"lineNumber": 33, "col_offset": 49, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "truncated_normal", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "constant", "type": "Any"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "shared_name_scope", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "graph", "type": "Any"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "name_scopes", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "TensorflowGraph", "type": "Type[deepchem.models.tensorflow_models.TensorflowGraph]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "add_n", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "gradient_costs", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "weight_decay", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 120, "col_offset": 54, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "sigmoid", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 135, "col_offset": 39, "nodeName": "logits", "type": "Any"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "task", "type": "int"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "task", "type": "int"}, {"lineNumber": 150, "col_offset": 50, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "task", "type": "int"}, {"lineNumber": 152, "col_offset": 48, "nodeName": "task", "type": "int"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "_get_shared_session", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "_get_shared_session", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 171, "col_offset": 41, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "batch_outputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "batch_outputs", "type": "Any"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 198, "col_offset": 9, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "_get_shared_session", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "_get_shared_session", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 210, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 213, "col_offset": 51, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "batch_output", "type": "Any"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "batch_output", "type": "Any"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "v", "type": "Any"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "task", "type": "int"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "TensorflowGraph", "type": "Type[deepchem.models.tensorflow_models.TensorflowGraph]"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "task_str", "type": "str"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "cost", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "append", "type": "Callable"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "weighted_cost", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "div", "type": "Any"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "append", "type": "Callable"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "gradient_cost", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 120, "col_offset": 54, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 145, "col_offset": 38, "nodeName": "task", "type": "int"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "batch_outputs", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "batch_outputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 213, "col_offset": 51, "nodeName": "batch_output", "type": "numpy.ndarray"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "batch_output", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 226, "col_offset": 38, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "task", "type": "int"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 99, "col_offset": 54, "nodeName": "labels", "type": "Any"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "weights", "type": "Any"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "weighted_costs", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 108, "col_offset": 51, "nodeName": "weighted_cost", "type": "Any"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "gradient_costs", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 135, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "self", "type": "TensorflowLogisticRegression"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "task", "type": "int"}, {"lineNumber": 99, "col_offset": 61, "nodeName": "task", "type": "int"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "task", "type": "int"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "batch_outputs", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "batch_output", "type": "Any"}]