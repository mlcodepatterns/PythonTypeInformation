[{"lineNumber": 12, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 14, "nodeName": "unittest", "type": "module"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "Environment", "type": "Type[deepchem.rl.Environment]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "Policy", "type": "Type[deepchem.rl.Policy]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "new_a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "new_a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "Environment", "type": "Type[deepchem.rl.Environment]"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "Policy", "type": "Type[deepchem.rl.Policy]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "Environment", "type": "Type[deepchem.rl.Environment]"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "Policy", "type": "Type[deepchem.rl.Policy]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "pass_count", "type": "int"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "Environment", "type": "Type[deepchem.rl.Environment]"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "Policy", "type": "Type[deepchem.rl.Policy]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "distance", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "tolerance", "type": "Union[float, Any]"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "rl", "type": "module"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "RouletteEnvironment", "type": "Type[Any]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "rl", "type": "module"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "A3C", "type": "Type[deepchem.rl.a3c.A3C]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "action_prob", "type": "Any"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "A3C", "type": "Type[deepchem.rl.a3c.A3C]"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "restore", "type": "Callable[[], None]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "action_prob2", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "value2", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "value2", "type": "Any"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "A3C", "type": "Type[deepchem.rl.a3c.A3C]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "action_prob2", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "value2", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "value2", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "rl", "type": "module"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "rl", "type": "module"}, {"lineNumber": 134, "col_offset": 10, "nodeName": "TestEnvironment", "type": "Type[Any]"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "A3C", "type": "Type[deepchem.rl.a3c.A3C]"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "prob5", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "prob3", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "prob4", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "rl", "type": "module"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "rl", "type": "module"}, {"lineNumber": 238, "col_offset": 10, "nodeName": "TestEnvironment", "type": "Type[Any]"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "PolynomialDecay", "type": "Type[deepchem.models.tensorgraph.optimizers.PolynomialDecay]"}, {"lineNumber": 241, "col_offset": 10, "nodeName": "A3C", "type": "Type[deepchem.rl.a3c.A3C]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "pass_count", "type": "int"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "rl", "type": "module"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "rl", "type": "module"}, {"lineNumber": 311, "col_offset": 10, "nodeName": "TestEnvironment", "type": "Type[Any]"}, {"lineNumber": 312, "col_offset": 20, "nodeName": "PolynomialDecay", "type": "Type[deepchem.models.tensorgraph.optimizers.PolynomialDecay]"}, {"lineNumber": 314, "col_offset": 10, "nodeName": "A3C", "type": "Type[deepchem.rl.a3c.A3C]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 324, "col_offset": 14, "nodeName": "terminated", "type": "Any"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "abs", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "max", "type": "Callable"}, {"lineNumber": 328, "col_offset": 11, "nodeName": "distance", "type": "Any"}, {"lineNumber": 328, "col_offset": 22, "nodeName": "tolerance", "type": "Union[Any, float]"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "dc", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "_state", "type": "List[numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "wheel", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_terminated", "type": "bool"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "dc", "type": "module"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "Model", "type": "Any"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "rl", "type": "module"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "TestPolicy", "type": "Type[Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "value", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "select_action", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "rl", "type": "module"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "TestPolicy", "type": "Type[Any]"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "new_a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "new_a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "rl", "type": "module"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "TestPolicy", "type": "Type[Any]"}, {"lineNumber": 95, "col_offset": 53, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "new_a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "new_a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "dc", "type": "module"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_state", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_state", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "dc", "type": "module"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "reshaped", "type": "deepchem.models.tensorgraph.layers.Reshape"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "gru", "type": "deepchem.models.tensorgraph.layers.GRU"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "value", "type": "deepchem.models.tensorgraph.layers.Variable"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "rl", "type": "module"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "TestPolicy", "type": "Type[Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "prob3", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "dc", "type": "module"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "moves", "type": "List[Tuple[int, int]]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "_state", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "_terminated", "type": "bool"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "count", "type": "int"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "_state", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "count", "type": "int"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "reward", "type": "int"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "reward", "type": "int"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "new_states", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "rewards", "type": "List[int]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "goal_pos", "type": "Any"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "dc", "type": "module"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "dense1", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "dense2", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "dense1", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "dense2", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "value", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 241, "col_offset": 10, "nodeName": "rl", "type": "module"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "TestPolicy", "type": "Type[Any]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "terminated", "type": "Any"}, {"lineNumber": 255, "col_offset": 9, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "pass_count", "type": "int"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "dc", "type": "module"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "_state", "type": "numpy.ndarray"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "_terminated", "type": "bool"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "count", "type": "int"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "old_dist", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "new_state", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "_state", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "new_state", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "count", "type": "int"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "reward", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "_terminated", "type": "bool"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "reward", "type": "Any"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "dc", "type": "module"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "Model", "type": "Any"}, {"lineNumber": 314, "col_offset": 10, "nodeName": "rl", "type": "module"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "TestPolicy", "type": "Type[Any]"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 324, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 325, "col_offset": 6, "nodeName": "step", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "_terminated", "type": "bool"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "randint", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "wheel", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "keras", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "TestModel", "type": "Type[Any]"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "dc", "type": "module"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "action_prob", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "_model", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 95, "col_offset": 53, "nodeName": "_model", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "Reshape", "type": "Type[deepchem.models.tensorgraph.layers.Reshape]"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "GRU", "type": "Type[deepchem.models.tensorgraph.layers.GRU]"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "SoftMax", "type": "Type[deepchem.models.tensorgraph.layers.SoftMax]"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "Variable", "type": "Type[deepchem.models.tensorgraph.layers.Variable]"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "output", "type": "deepchem.models.tensorgraph.layers.SoftMax"}, {"lineNumber": 129, "col_offset": 48, "nodeName": "value", "type": "deepchem.models.tensorgraph.layers.Variable"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "dc", "type": "module"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "copy", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "moves", "type": "List[Tuple[int, int]]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 184, "col_offset": 10, "nodeName": "_terminated", "type": "bool"}, {"lineNumber": 185, "col_offset": 10, "nodeName": "reward", "type": "int"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "goal", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "action", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "states", "type": "Any"}, {"lineNumber": 194, "col_offset": 41, "nodeName": "actions", "type": "Any"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "goal_pos", "type": "Any"}, {"lineNumber": 198, "col_offset": 10, "nodeName": "pos_after_action", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "new_states", "type": "List[Any]"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "rewards", "type": "List[int]"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "Input", "type": "Any"}, {"lineNumber": 211, "col_offset": 65, "nodeName": "state", "type": "Any"}, {"lineNumber": 212, "col_offset": 65, "nodeName": "dense1", "type": "Any"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "dense2", "type": "Any"}, {"lineNumber": 217, "col_offset": 41, "nodeName": "dense2", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "Model", "type": "Any"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "output", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 234, "col_offset": 48, "nodeName": "value", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 241, "col_offset": 10, "nodeName": "dc", "type": "module"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "env", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "step", "type": "Callable[[Any], Any]"}, {"lineNumber": 255, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 255, "col_offset": 39, "nodeName": "state", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "_state", "type": "numpy.ndarray"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "abs", "type": "Any"}, {"lineNumber": 280, "col_offset": 19, "nodeName": "abs", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "old_dist", "type": "Any"}, {"lineNumber": 284, "col_offset": 28, "nodeName": "dist", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 28, "nodeName": "count", "type": "int"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "keras", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "TestModel", "type": "Type[Any]"}, {"lineNumber": 314, "col_offset": 10, "nodeName": "dc", "type": "module"}, {"lineNumber": 318, "col_offset": 18, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 325, "col_offset": 6, "nodeName": "env", "type": "Any"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "select_action", "type": "Callable[..., Any]"}, {"lineNumber": 325, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "state", "type": "Any"}, {"lineNumber": 326, "col_offset": 37, "nodeName": "state", "type": "Any"}, {"lineNumber": 327, "col_offset": 31, "nodeName": "abs", "type": "Any"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "prob", "type": "Any"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 95, "col_offset": 53, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 124, "col_offset": 56, "nodeName": "state", "type": "Any"}, {"lineNumber": 125, "col_offset": 55, "nodeName": "reshaped", "type": "deepchem.models.tensorgraph.layers.Reshape"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "_state", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 36, "nodeName": "action", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 184, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "count", "type": "int"}, {"lineNumber": 187, "col_offset": 10, "nodeName": "_terminated", "type": "bool"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "copy", "type": "Any"}, {"lineNumber": 196, "col_offset": 10, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 197, "col_offset": 10, "nodeName": "append", "type": "Callable"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "pos_after_action", "type": "Any"}, {"lineNumber": 199, "col_offset": 46, "nodeName": "goal_pos", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "keras", "type": "Any"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "state", "type": "Any"}, {"lineNumber": 226, "col_offset": 40, "nodeName": "relu", "type": "Any"}, {"lineNumber": 226, "col_offset": 62, "nodeName": "state", "type": "Any"}, {"lineNumber": 227, "col_offset": 40, "nodeName": "relu", "type": "Any"}, {"lineNumber": 227, "col_offset": 62, "nodeName": "dense1", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "dense2", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 233, "col_offset": 35, "nodeName": "dense2", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 245, "col_offset": 37, "nodeName": "learning_rate", "type": "deepchem.models.tensorgraph.optimizers.PolynomialDecay"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "select_action", "type": "Callable[..., Any]"}, {"lineNumber": 254, "col_offset": 35, "nodeName": "state", "type": "Any"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 255, "col_offset": 39, "nodeName": "env", "type": "Any"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 273, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 35, "nodeName": "target", "type": "Any"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 280, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 281, "col_offset": 41, "nodeName": "target", "type": "Any"}, {"lineNumber": 285, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "std", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 318, "col_offset": 37, "nodeName": "learning_rate", "type": "deepchem.models.tensorgraph.optimizers.PolynomialDecay"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 325, "col_offset": 33, "nodeName": "env", "type": "Any"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 326, "col_offset": 37, "nodeName": "env", "type": "Any"}, {"lineNumber": 327, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 327, "col_offset": 38, "nodeName": "state", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "RouletteEnvironment", "type": "Type[Any]"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "wheel", "type": "Any"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "action", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "TestEnvironment", "type": "Type[Any]"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "TestEnvironment", "type": "Type[Any]"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 46, "nodeName": "randint", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "state", "type": "Any"}, {"lineNumber": 197, "col_offset": 10, "nodeName": "new_states", "type": "List[Any]"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 198, "col_offset": 45, "nodeName": "moves", "type": "Any"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "keras", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 211, "col_offset": 53, "nodeName": "relu", "type": "Any"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 212, "col_offset": 53, "nodeName": "relu", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 218, "col_offset": 53, "nodeName": "output", "type": "Any"}, {"lineNumber": 218, "col_offset": 61, "nodeName": "value", "type": "Any"}, {"lineNumber": 226, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 227, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "a3c", "type": "deepchem.rl.a3c.A3C"}, {"lineNumber": 254, "col_offset": 35, "nodeName": "env", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 269, "col_offset": 14, "nodeName": "TestEnvironment", "type": "Type[Any]"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "action", "type": "Any"}, {"lineNumber": 280, "col_offset": 35, "nodeName": "_state", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "action", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 298, "col_offset": 23, "nodeName": "constant", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 301, "col_offset": 39, "nodeName": "std", "type": "Any"}, {"lineNumber": 327, "col_offset": 38, "nodeName": "env", "type": "Any"}, {"lineNumber": 55, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 56, "col_offset": 46, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 56, "col_offset": 61, "nodeName": "float32", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "action", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "Reshape", "type": "Type[deepchem.models.tensorgraph.layers.Reshape]"}, {"lineNumber": 173, "col_offset": 46, "nodeName": "random", "type": "Any"}, {"lineNumber": 198, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 56, "nodeName": "action", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "rewards", "type": "List[int]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "rewards", "type": "List[int]"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 211, "col_offset": 53, "nodeName": "nn", "type": "Any"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 212, "col_offset": 53, "nodeName": "nn", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "keras", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "keras", "type": "Any"}, {"lineNumber": 226, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 227, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 280, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "layers", "type": "Any"}, {"lineNumber": 298, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "layers", "type": "Any"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "mean", "type": "Any"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 301, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 301, "col_offset": 49, "nodeName": "value", "type": "Any"}, {"lineNumber": 301, "col_offset": 60, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "TestModel", "type": "Type[Any]"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 46, "nodeName": "env", "type": "Any"}, {"lineNumber": 56, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 62, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 173, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 211, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 212, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "TestModel", "type": "Type[Any]"}, {"lineNumber": 296, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "keras", "type": "Any"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "keras", "type": "Any"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 301, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 62, "nodeName": "env", "type": "Any"}, {"lineNumber": 127, "col_offset": 42, "nodeName": "gru", "type": "deepchem.models.tensorgraph.layers.GRU"}, {"lineNumber": 127, "col_offset": 59, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 127, "col_offset": 59, "nodeName": "env", "type": "Any"}]