[{"lineNumber": 24, "col_offset": 0, "nodeName": "log", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "save_to_disk", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "get_input_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "load_data", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "load_sdf_files", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "load_csv_files", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "seq_one_hot_encode", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 0, "nodeName": "_seq_to_encoded", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 179, "col_offset": 0, "nodeName": "encode_fasta_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 0, "nodeName": "encode_bio_sequence", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 0, "nodeName": "save_metadata", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 245, "col_offset": 0, "nodeName": "load_from_disk", "type": "Callable[[Any], Any]"}, {"lineNumber": 269, "col_offset": 0, "nodeName": "load_sharded_csv", "type": "Callable[[Any], Any]"}, {"lineNumber": 292, "col_offset": 0, "nodeName": "load_pickle_from_disk", "type": "Callable[[Any], Any]"}, {"lineNumber": 303, "col_offset": 0, "nodeName": "load_dataset_from_disk", "type": "Callable[[Any], Any]"}, {"lineNumber": 336, "col_offset": 0, "nodeName": "save_dataset_to_disk", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "Alphabet", "type": "Any"}, {"lineNumber": 26, "col_offset": 5, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 60, "col_offset": 2, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 76, "col_offset": 2, "nodeName": "dataframes", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 6, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "input_files", "type": "Any"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "dataframes", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 2, "nodeName": "shard_num", "type": "int"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "filename", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "filenames", "type": "Any"}, {"lineNumber": 134, "col_offset": 2, "nodeName": "letter_encoder", "type": "Dict[Any, int]"}, {"lineNumber": 135, "col_offset": 2, "nodeName": "alphabet_length", "type": "int"}, {"lineNumber": 145, "col_offset": 2, "nodeName": "sequence_length", "type": "int"}, {"lineNumber": 147, "col_offset": 2, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "other_seq", "type": "Any"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "tail_seq", "type": "Any"}, {"lineNumber": 165, "col_offset": 2, "nodeName": "b", "type": "Any"}, {"lineNumber": 166, "col_offset": 2, "nodeName": "seq_ints", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "b", "type": "Any"}, {"lineNumber": 176, "col_offset": 2, "nodeName": "letters", "type": "unicode"}, {"lineNumber": 193, "col_offset": 2, "nodeName": "dna_alphabet", "type": "IUPACUnambiguousDNAWithN"}, {"lineNumber": 219, "col_offset": 2, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 238, "col_offset": 2, "nodeName": "metadata_filename", "type": "Union[str, unicode]"}, {"lineNumber": 239, "col_offset": 2, "nodeName": "tasks_filename", "type": "Union[str, unicode]"}, {"lineNumber": 247, "col_offset": 2, "nodeName": "name", "type": "Any"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "filename", "type": "Any"}, {"lineNumber": 271, "col_offset": 2, "nodeName": "dataframes", "type": "List[Any]"}, {"lineNumber": 272, "col_offset": 6, "nodeName": "name", "type": "Any"}, {"lineNumber": 272, "col_offset": 14, "nodeName": "filenames", "type": "Any"}, {"lineNumber": 285, "col_offset": 2, "nodeName": "combined_df", "type": "Any"}, {"lineNumber": 286, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 288, "col_offset": 2, "nodeName": "combined_df", "type": "Any"}, {"lineNumber": 289, "col_offset": 9, "nodeName": "combined_df", "type": "Any"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 320, "col_offset": 2, "nodeName": "train_dir", "type": "Union[str, unicode]"}, {"lineNumber": 321, "col_offset": 2, "nodeName": "valid_dir", "type": "Union[str, unicode]"}, {"lineNumber": 322, "col_offset": 2, "nodeName": "test_dir", "type": "Union[str, unicode]"}, {"lineNumber": 326, "col_offset": 2, "nodeName": "loaded", "type": "bool"}, {"lineNumber": 327, "col_offset": 2, "nodeName": "train", "type": "deepchem.data.datasets.DiskDataset"}, {"lineNumber": 328, "col_offset": 2, "nodeName": "valid", "type": "deepchem.data.datasets.DiskDataset"}, {"lineNumber": 329, "col_offset": 2, "nodeName": "test", "type": "deepchem.data.datasets.DiskDataset"}, {"lineNumber": 330, "col_offset": 2, "nodeName": "all_dataset", "type": "Tuple[deepchem.data.datasets.DiskDataset, deepchem.data.datasets.DiskDataset, deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 337, "col_offset": 2, "nodeName": "train_dir", "type": "Union[str, unicode]"}, {"lineNumber": 338, "col_offset": 2, "nodeName": "valid_dir", "type": "Union[str, unicode]"}, {"lineNumber": 339, "col_offset": 2, "nodeName": "test_dir", "type": "Union[str, unicode]"}, {"lineNumber": 32, "col_offset": 2, "nodeName": "dump", "type": "Any"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "filename", "type": "Any"}, {"lineNumber": 37, "col_offset": 2, "nodeName": "filename", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 39, "col_offset": 5, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 41, "col_offset": 5, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "get_input_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 5, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "suppl", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "df_rows", "type": "List[List[Any]]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "mol_df", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "l", "type": "Any"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "letter_encoder", "type": "Dict[Any, int]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "first_seq", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "tail_seq", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 141, "col_offset": 9, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "first_seq", "type": "Any"}, {"lineNumber": 149, "col_offset": 2, "nodeName": "append", "type": "Callable"}, {"lineNumber": 161, "col_offset": 9, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 165, "col_offset": 6, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 167, "col_offset": 2, "nodeName": "b", "type": "Any"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "IUPACUnambiguousDNAWithN", "type": "Type[IUPACUnambiguousDNAWithN]"}, {"lineNumber": 194, "col_offset": 9, "nodeName": "encode_bio_sequence", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "fname", "type": "Any"}, {"lineNumber": 194, "col_offset": 45, "nodeName": "dna_alphabet", "type": "IUPACUnambiguousDNAWithN"}, {"lineNumber": 216, "col_offset": 5, "nodeName": "alphabet", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "alphabet", "type": "IUPACUnambiguousDNAWithN"}, {"lineNumber": 219, "col_offset": 14, "nodeName": "parse", "type": "Any"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "fname", "type": "Any"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "file_type", "type": "Any"}, {"lineNumber": 219, "col_offset": 44, "nodeName": "alphabet", "type": "Union[IUPACUnambiguousDNAWithN, Any]"}, {"lineNumber": 220, "col_offset": 9, "nodeName": "seq_one_hot_encode", "type": "Callable[..., Any]"}, {"lineNumber": 220, "col_offset": 28, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 220, "col_offset": 39, "nodeName": "letters", "type": "Union[unicode, Any]"}, {"lineNumber": 236, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 238, "col_offset": 35, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "fout", "type": "file"}, {"lineNumber": 242, "col_offset": 2, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "metadata_filename", "type": "Union[unicode, str]"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "placeholder_name", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "dataframes", "type": "List[Any]"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "combined_df", "type": "Any"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "reset_index", "type": "Any"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "filename", "type": "Any"}, {"lineNumber": 320, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 320, "col_offset": 27, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 321, "col_offset": 27, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 322, "col_offset": 26, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 327, "col_offset": 10, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 327, "col_offset": 36, "nodeName": "train_dir", "type": "Union[unicode, str]"}, {"lineNumber": 328, "col_offset": 10, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 328, "col_offset": 36, "nodeName": "valid_dir", "type": "Union[str, unicode]"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 329, "col_offset": 35, "nodeName": "test_dir", "type": "Union[unicode, str]"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "train", "type": "deepchem.data.datasets.DiskDataset"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "valid", "type": "deepchem.data.datasets.DiskDataset"}, {"lineNumber": 330, "col_offset": 31, "nodeName": "test", "type": "deepchem.data.datasets.DiskDataset"}, {"lineNumber": 331, "col_offset": 65, "nodeName": "f", "type": "file"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 337, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 337, "col_offset": 27, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 338, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 338, "col_offset": 27, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 339, "col_offset": 26, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 340, "col_offset": 2, "nodeName": "move", "type": "Any"}, {"lineNumber": 340, "col_offset": 13, "nodeName": "train_dir", "type": "Union[unicode, str]"}, {"lineNumber": 341, "col_offset": 2, "nodeName": "move", "type": "Any"}, {"lineNumber": 341, "col_offset": 13, "nodeName": "valid_dir", "type": "Union[str, unicode]"}, {"lineNumber": 342, "col_offset": 2, "nodeName": "move", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "test_dir", "type": "Union[unicode, str]"}, {"lineNumber": 343, "col_offset": 65, "nodeName": "f", "type": "file"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "string", "type": "unicode"}, {"lineNumber": 32, "col_offset": 2, "nodeName": "joblib", "type": "Any"}, {"lineNumber": 32, "col_offset": 42, "nodeName": "compress", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "path", "type": "module"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "filename", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "filename", "type": "Any"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "input_files", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "input_files", "type": "Any"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "shard_size", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "load_sdf_files", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "input_files", "type": "Any"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "next", "type": "Callable"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "SDMolSupplier", "type": "Any"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "clean_mols", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "ind", "type": "int"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "mol", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "suppl", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "df_rows", "type": "List[List[Any]]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 98, "col_offset": 7, "nodeName": "shard_size", "type": "Any"}, {"lineNumber": 102, "col_offset": 10, "nodeName": "df", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "next", "type": "Callable"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "first_seq", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "tail_seq", "type": "Any"}, {"lineNumber": 149, "col_offset": 2, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 6, "nodeName": "_seq_to_encoded", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "first_seq", "type": "Any"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "letter_encoder", "type": "Dict[Any, int]"}, {"lineNumber": 150, "col_offset": 49, "nodeName": "alphabet_length", "type": "int"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "sequence_length", "type": "int"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "sequence_length", "type": "int"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 161, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "alphabet_length", "type": "Any"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "letter_encoder", "type": "Any"}, {"lineNumber": 166, "col_offset": 36, "nodeName": "s", "type": "Any"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "seq", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "IUPACUnambiguousDNAWithN", "type": "Type[IUPACUnambiguousDNAWithN]"}, {"lineNumber": 219, "col_offset": 14, "nodeName": "SeqIO", "type": "Any"}, {"lineNumber": 220, "col_offset": 39, "nodeName": "alphabet", "type": "Union[IUPACUnambiguousDNAWithN, Any]"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 240, "col_offset": 7, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "tasks_filename", "type": "Union[str, unicode]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 241, "col_offset": 21, "nodeName": "fout", "type": "file"}, {"lineNumber": 242, "col_offset": 2, "nodeName": "metadata_df", "type": "Any"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "load_pickle_from_disk", "type": "Callable[[Any], Any]"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "filename", "type": "Any"}, {"lineNumber": 275, "col_offset": 6, "nodeName": "name", "type": "Any"}, {"lineNumber": 278, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 279, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "append", "type": "Any"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "combined_df", "type": "Any"}, {"lineNumber": 295, "col_offset": 38, "nodeName": "f", "type": "gzip.GzipFile"}, {"lineNumber": 296, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "f", "type": "file"}, {"lineNumber": 299, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 320, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 327, "col_offset": 10, "nodeName": "data", "type": "module"}, {"lineNumber": 328, "col_offset": 10, "nodeName": "data", "type": "module"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "data", "type": "module"}, {"lineNumber": 331, "col_offset": 7, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 332, "col_offset": 19, "nodeName": "load", "type": "Callable[[IO[str]], Any]"}, {"lineNumber": 332, "col_offset": 31, "nodeName": "f", "type": "file"}, {"lineNumber": 333, "col_offset": 11, "nodeName": "loaded", "type": "bool"}, {"lineNumber": 333, "col_offset": 19, "nodeName": "all_dataset", "type": "Tuple[deepchem.data.datasets.DiskDataset, deepchem.data.datasets.DiskDataset, deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 333, "col_offset": 32, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 337, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 338, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 340, "col_offset": 2, "nodeName": "train", "type": "Any"}, {"lineNumber": 341, "col_offset": 2, "nodeName": "valid", "type": "Any"}, {"lineNumber": 342, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 343, "col_offset": 7, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 344, "col_offset": 30, "nodeName": "f", "type": "file"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "os", "type": "module"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 45, "col_offset": 7, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "log", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "load_csv_files", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "input_files", "type": "Any"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "shard_size", "type": "Any"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "input_files", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "load_csv_files", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "mol", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "smiles", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "dataframes", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "concat", "type": "Any"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "log", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 59, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "filename", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "shard_num", "type": "int"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "l", "type": "Any"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "letters", "type": "Union[unicode, Any]"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 154, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "other_seq", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "seqs", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "_seq_to_encoded", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "other_seq", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "letter_encoder", "type": "Dict[Any, int]"}, {"lineNumber": 158, "col_offset": 51, "nodeName": "alphabet_length", "type": "int"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "sequence_length", "type": "int"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "seq_ints", "type": "List[Any]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "json", "type": "module"}, {"lineNumber": 248, "col_offset": 5, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 250, "col_offset": 5, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "placeholder_name", "type": "Any"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "replace", "type": "Any"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "nan", "type": "Any"}, {"lineNumber": 280, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 280, "col_offset": 24, "nodeName": "df", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "dataframes", "type": "List[Any]"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "combined_df", "type": "Any"}, {"lineNumber": 287, "col_offset": 37, "nodeName": "dataframes", "type": "List[Any]"}, {"lineNumber": 295, "col_offset": 9, "nodeName": "open", "type": "Callable[..., gzip.GzipFile]"}, {"lineNumber": 295, "col_offset": 19, "nodeName": "filename", "type": "Any"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "load", "type": "Callable[[IO[str]], Any]"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "f", "type": "gzip.GzipFile"}, {"lineNumber": 298, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 298, "col_offset": 14, "nodeName": "filename", "type": "Any"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "load", "type": "Callable[[IO[str]], Any]"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "f", "type": "file"}, {"lineNumber": 320, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 323, "col_offset": 9, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "train_dir", "type": "Union[unicode, str]"}, {"lineNumber": 323, "col_offset": 42, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 324, "col_offset": 6, "nodeName": "valid_dir", "type": "Union[str, unicode]"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 324, "col_offset": 39, "nodeName": "test_dir", "type": "Union[unicode, str]"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 327, "col_offset": 10, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 328, "col_offset": 10, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 332, "col_offset": 19, "nodeName": "pickle", "type": "module"}, {"lineNumber": 337, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 338, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "pickle", "type": "module"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 7, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 67, "col_offset": 65, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "MolToSmiles", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "mol", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "pd", "type": "Any"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "mol_df", "type": "Any"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "raw_df", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "filename", "type": "Any"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "filename", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "pd", "type": "Any"}, {"lineNumber": 102, "col_offset": 48, "nodeName": "shard_size", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "log", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "replace", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "nan", "type": "Any"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "df", "type": "Any"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 248, "col_offset": 5, "nodeName": "path", "type": "module"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 250, "col_offset": 5, "nodeName": "path", "type": "module"}, {"lineNumber": 252, "col_offset": 7, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "load", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "filename", "type": "Any"}, {"lineNumber": 262, "col_offset": 9, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "filename", "type": "Any"}, {"lineNumber": 263, "col_offset": 9, "nodeName": "replace", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "nan", "type": "Any"}, {"lineNumber": 266, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 274, "col_offset": 7, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 274, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 275, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 276, "col_offset": 7, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 276, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 280, "col_offset": 6, "nodeName": "dataframes", "type": "List[Any]"}, {"lineNumber": 282, "col_offset": 56, "nodeName": "filename", "type": "Any"}, {"lineNumber": 295, "col_offset": 9, "nodeName": "gzip", "type": "module"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "pickle", "type": "module"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "pickle", "type": "module"}, {"lineNumber": 323, "col_offset": 9, "nodeName": "path", "type": "module"}, {"lineNumber": 323, "col_offset": 42, "nodeName": "path", "type": "module"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "df_rows", "type": "List[List[Any]]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "ind", "type": "int"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "smiles", "type": "Any"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "mol", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 5, "nodeName": "os", "type": "module"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 250, "col_offset": 5, "nodeName": "os", "type": "module"}, {"lineNumber": 252, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "joblib", "type": "Any"}, {"lineNumber": 260, "col_offset": 7, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 262, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 263, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 266, "col_offset": 54, "nodeName": "filename", "type": "Any"}, {"lineNumber": 274, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 276, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 287, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 323, "col_offset": 9, "nodeName": "os", "type": "module"}, {"lineNumber": 323, "col_offset": 42, "nodeName": "os", "type": "module"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "load_pickle_from_disk", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "shard_num", "type": "int"}, {"lineNumber": 252, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 260, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 274, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 276, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 103, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 103, "col_offset": 61, "nodeName": "shard_size", "type": "Any"}, {"lineNumber": 260, "col_offset": 7, "nodeName": "os", "type": "module"}]