[{"lineNumber": 11, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "__copyright__", "type": "str"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "__license__", "type": "str"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "Model", "type": "Type[deepchem.models.models.Model]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "uses_learning_phase", "type": "Any"}, {"lineNumber": 155, "col_offset": 9, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 266, "col_offset": 6, "nodeName": "preds", "type": "Any"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "preds", "type": "Any"}, {"lineNumber": 287, "col_offset": 6, "nodeName": "proba", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "prefix", "type": "str"}, {"lineNumber": 64, "col_offset": 6, "nodeName": "name", "type": "str"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "loss", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 9, "nodeName": "model", "type": "Any"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "model", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 177, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 182, "col_offset": 9, "nodeName": "model", "type": "Any"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "predict_on_batch", "type": "Any"}, {"lineNumber": 184, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 204, "col_offset": 9, "nodeName": "model", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 217, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 217, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "model", "type": "Any"}, {"lineNumber": 240, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "test_on_batch", "type": "Any"}, {"lineNumber": 250, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 250, "col_offset": 41, "nodeName": "y", "type": "Any"}, {"lineNumber": 266, "col_offset": 14, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 266, "col_offset": 30, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 266, "col_offset": 42, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 287, "col_offset": 14, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "prefix", "type": "str"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "layer", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "layer", "type": "Any"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "loss", "type": "Any"}, {"lineNumber": 145, "col_offset": 9, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 149, "col_offset": 10, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 150, "col_offset": 10, "nodeName": "warn", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 159, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 161, "col_offset": 47, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 176, "col_offset": 10, "nodeName": "build", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 177, "col_offset": 66, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 182, "col_offset": 9, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 183, "col_offset": 10, "nodeName": "build", "type": "Any"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 204, "col_offset": 9, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 208, "col_offset": 10, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 209, "col_offset": 10, "nodeName": "warn", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 218, "col_offset": 53, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 219, "col_offset": 52, "nodeName": "class_weight", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 241, "col_offset": 10, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 242, "col_offset": 10, "nodeName": "warn", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 251, "col_offset": 52, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 266, "col_offset": 14, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 268, "col_offset": 10, "nodeName": "warn", "type": "Any"}, {"lineNumber": 287, "col_offset": 14, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 287, "col_offset": 41, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 287, "col_offset": 61, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "shape", "type": "Any"}, {"lineNumber": 289, "col_offset": 17, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "graph", "type": "Any"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "layer", "type": "Any"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "graph", "type": "Any"}, {"lineNumber": 149, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 150, "col_offset": 10, "nodeName": "warnings", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 176, "col_offset": 10, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 183, "col_offset": 10, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 208, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 209, "col_offset": 10, "nodeName": "warnings", "type": "Any"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 241, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 242, "col_offset": 10, "nodeName": "warnings", "type": "Any"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 267, "col_offset": 9, "nodeName": "min", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "max", "type": "Any"}, {"lineNumber": 268, "col_offset": 10, "nodeName": "warnings", "type": "Any"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "proba", "type": "Any"}, {"lineNumber": 289, "col_offset": 17, "nodeName": "proba", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "get_uid", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "prefix", "type": "str"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "layer", "type": "Any"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "layer", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "InputLayer", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "self", "type": "Sequential"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 249, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 249, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 267, "col_offset": 9, "nodeName": "preds", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "preds", "type": "Any"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "proba", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "model_ops", "type": "module"}]