[{"lineNumber": 9, "col_offset": 0, "nodeName": "__author__", "type": "unicode"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "__copyright__", "type": "unicode"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "__license__", "type": "unicode"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "TestDatasetAPI", "type": "Type[deepchem.datasets.tests.TestDatasetAPI]"}, {"lineNumber": 25, "col_offset": 2, "nodeName": "test_multitask_train_valid_test_split", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "p", "type": "float"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "dataset", "type": "deepchem.datasets.NumpyDataset"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "task_splitter", "type": "deepchem.splits.task_splitter.TaskSplitter"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "p", "type": "float"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Type[deepchem.datasets.NumpyDataset]"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "dataset", "type": "deepchem.datasets.NumpyDataset"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "TaskSplitter", "type": "Type[deepchem.splits.task_splitter.TaskSplitter]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "train_valid_test_split", "type": "Callable[..., Tuple[deepchem.datasets.NumpyDataset, deepchem.datasets.NumpyDataset, deepchem.datasets.NumpyDataset]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "dataset", "type": "deepchem.datasets.NumpyDataset"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "task_splitter", "type": "deepchem.splits.task_splitter.TaskSplitter"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 34, "col_offset": 50, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "get_task_names", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "get_task_names", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "get_task_names", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "train", "type": "deepchem.datasets.NumpyDataset"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "valid", "type": "deepchem.datasets.NumpyDataset"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "test", "type": "deepchem.datasets.NumpyDataset"}]