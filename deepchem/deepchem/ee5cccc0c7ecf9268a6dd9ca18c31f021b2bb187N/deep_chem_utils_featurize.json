[{"lineNumber": 19, "col_offset": 0, "nodeName": "generate_directories", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "parse_float_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "get_rows", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "get_colnames", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 0, "nodeName": "get_row_data", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "process_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 0, "nodeName": "generate_targets", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "generate_scaffold", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 0, "nodeName": "generate_features", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 2, "nodeName": "dataset_dir", "type": "Any"}, {"lineNumber": 24, "col_offset": 2, "nodeName": "fingerprint_dir", "type": "Union[str, unicode]"}, {"lineNumber": 27, "col_offset": 2, "nodeName": "descriptor_dir", "type": "Union[str, unicode]"}, {"lineNumber": 30, "col_offset": 2, "nodeName": "target_dir", "type": "Union[str, unicode]"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "out_y_pkl", "type": "Union[str, unicode]"}, {"lineNumber": 62, "col_offset": 2, "nodeName": "dataset_dir", "type": "Any"}, {"lineNumber": 63, "col_offset": 2, "nodeName": "feature_dir", "type": "Any"}, {"lineNumber": 64, "col_offset": 2, "nodeName": "features_file", "type": "Union[str, unicode]"}, {"lineNumber": 74, "col_offset": 2, "nodeName": "smiles", "type": "Any"}, {"lineNumber": 81, "col_offset": 2, "nodeName": "feature_df", "type": "Any"}, {"lineNumber": 127, "col_offset": 2, "nodeName": "row_data", "type": "Dict[Any, Any]"}, {"lineNumber": 145, "col_offset": 9, "nodeName": "row_data", "type": "Dict[Any, Any]"}, {"lineNumber": 166, "col_offset": 2, "nodeName": "labels_df", "type": "Any"}, {"lineNumber": 169, "col_offset": 6, "nodeName": "target", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "target_fields", "type": "Any"}, {"lineNumber": 180, "col_offset": 2, "nodeName": "smiles_string", "type": "Any"}, {"lineNumber": 181, "col_offset": 2, "nodeName": "mol", "type": "Any"}, {"lineNumber": 182, "col_offset": 2, "nodeName": "engine", "type": "Any"}, {"lineNumber": 183, "col_offset": 2, "nodeName": "scaffold", "type": "Any"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "scaffold", "type": "Any"}, {"lineNumber": 192, "col_offset": 2, "nodeName": "features_df", "type": "Any"}, {"lineNumber": 199, "col_offset": 2, "nodeName": "features_data", "type": "List[Dict[unicode, numpy.ndarray]]"}, {"lineNumber": 200, "col_offset": 6, "nodeName": "row", "type": "Any"}, {"lineNumber": 216, "col_offset": 2, "nodeName": "colnames", "type": "List[nothing]"}, {"lineNumber": 240, "col_offset": 2, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "dataset_dir", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "dataset_dir", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "dataset_dir", "type": "Any"}, {"lineNumber": 33, "col_offset": 5, "nodeName": "feature_fields", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "feature_field_dir", "type": "Union[str, unicode]"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "target_dir", "type": "Union[str, unicode]"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "out_x_pkl", "type": "Optional[Union[unicode, str]]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "out_y_pkl", "type": "Union[unicode, str]"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "dataset_dir", "type": "Any"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "featuretype", "type": "Any"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "feature_dir", "type": "Any"}, {"lineNumber": 66, "col_offset": 5, "nodeName": "featuretype", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 72, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 2, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "mol", "type": "None"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 75, "col_offset": 6, "nodeName": "row_ind", "type": "int"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "row_data", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "smiles", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "mol", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 85, "col_offset": 2, "nodeName": "feature_df", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "apply", "type": "Any"}, {"lineNumber": 89, "col_offset": 2, "nodeName": "feature_df", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 91, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "gzip_file", "type": "gzip.GzipFile"}, {"lineNumber": 100, "col_offset": 5, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 122, "col_offset": 5, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "row", "type": "Any"}, {"lineNumber": 128, "col_offset": 5, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 149, "col_offset": 5, "nodeName": "field_type", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 167, "col_offset": 2, "nodeName": "labels_df", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 168, "col_offset": 2, "nodeName": "labels_df", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 171, "col_offset": 5, "nodeName": "split_field", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "pickle_file", "type": "gzip.GzipFile"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "smiles_elt", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "MolFromSmiles", "type": "Any"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "smiles_string", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "ScaffoldGenerator", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "get_scaffold", "type": "Any"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "mol", "type": "Any"}, {"lineNumber": 188, "col_offset": 5, "nodeName": "feature_fields", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 193, "col_offset": 2, "nodeName": "features_df", "type": "Any"}, {"lineNumber": 193, "col_offset": 26, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "apply", "type": "Any"}, {"lineNumber": 197, "col_offset": 2, "nodeName": "features_df", "type": "Any"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "iterrows", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "feature", "type": "Any"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "feature_fields", "type": "Any"}, {"lineNumber": 206, "col_offset": 2, "nodeName": "features_df", "type": "Any"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 206, "col_offset": 41, "nodeName": "features_data", "type": "List[Dict[unicode, numpy.ndarray]]"}, {"lineNumber": 208, "col_offset": 35, "nodeName": "pickle_file", "type": "gzip.GzipFile"}, {"lineNumber": 215, "col_offset": 2, "nodeName": "rows", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "mols", "type": "List[Any]"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "smiles", "type": "Any"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "row_index", "type": "int"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "raw_row", "type": "Any"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "mol", "type": "Any"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 240, "col_offset": 27, "nodeName": "rows", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 241, "col_offset": 10, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 241, "col_offset": 21, "nodeName": "mols", "type": "List[Any]"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "dataset_dir", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "dataset_dir", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "fingerprint_dir", "type": "Union[str, unicode]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "fingerprint_dir", "type": "Union[str, unicode]"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "descriptor_dir", "type": "Union[unicode, str]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "descriptor_dir", "type": "Union[unicode, str]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "target_dir", "type": "Union[str, unicode]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "target_dir", "type": "Union[str, unicode]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "dataset_dir", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 41, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "feature_fields", "type": "Any"}, {"lineNumber": 50, "col_offset": 7, "nodeName": "val", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "val", "type": "Any"}, {"lineNumber": 53, "col_offset": 6, "nodeName": "fval", "type": "float"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "fval", "type": "float"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "CircularFingerprint", "type": "Any"}, {"lineNumber": 68, "col_offset": 7, "nodeName": "featuretype", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "MolFromSmiles", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "row_data", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "pd", "type": "Any"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "generate_scaffold", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "open", "type": "Callable[..., gzip.GzipFile]"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "features_file", "type": "Union[str, unicode]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "feature_df", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "gzip_file", "type": "gzip.GzipFile"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "HIGHEST_PROTOCOL", "type": "int"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "inp_file_obj", "type": "file"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "ind", "type": "int"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "colname", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "colnames", "type": "Any"}, {"lineNumber": 132, "col_offset": 7, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "row", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "field", "type": "Any"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "fields", "type": "Any"}, {"lineNumber": 151, "col_offset": 7, "nodeName": "field_type", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "pd", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "labels_df", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "labels_df", "type": "Any"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 175, "col_offset": 7, "nodeName": "open", "type": "Callable[..., gzip.GzipFile]"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "out_pkl", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "labels_df", "type": "Any"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "pickle_file", "type": "gzip.GzipFile"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "HIGHEST_PROTOCOL", "type": "int"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 182, "col_offset": 47, "nodeName": "include_chirality", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "engine", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "pd", "type": "Any"}, {"lineNumber": 195, "col_offset": 6, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "generate_scaffold", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "row", "type": "Any"}, {"lineNumber": 202, "col_offset": 9, "nodeName": "feature_list", "type": "List[Any]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "pd", "type": "Any"}, {"lineNumber": 208, "col_offset": 7, "nodeName": "open", "type": "Callable[..., gzip.GzipFile]"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "out_pkl", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "features_df", "type": "Any"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "pickle_file", "type": "gzip.GzipFile"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "HIGHEST_PROTOCOL", "type": "int"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "SmilesGenerator", "type": "Any"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "get_rows", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 47, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 217, "col_offset": 59, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 217, "col_offset": 71, "nodeName": "delimiter", "type": "Any"}, {"lineNumber": 221, "col_offset": 7, "nodeName": "raw_row", "type": "Any"}, {"lineNumber": 227, "col_offset": 6, "nodeName": "colnames", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 229, "col_offset": 9, "nodeName": "row_data", "type": "Dict[Any, Any]"}, {"lineNumber": 230, "col_offset": 9, "nodeName": "field", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "field_type", "type": "Any"}, {"lineNumber": 230, "col_offset": 31, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 230, "col_offset": 35, "nodeName": "fields", "type": "Any"}, {"lineNumber": 230, "col_offset": 43, "nodeName": "field_types", "type": "Any"}, {"lineNumber": 236, "col_offset": 10, "nodeName": "MolFromSmiles", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "get_smiles", "type": "Any"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "mol", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "mol", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "pd", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "path", "type": "module"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "path", "type": "module"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "path", "type": "module"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "path", "type": "module"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "feature_field_dir", "type": "Union[str, unicode]"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "feature_field_dir", "type": "Union[str, unicode]"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 64, "col_offset": 62, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 68, "nodeName": "featuretype", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "SimpleDescriptors", "type": "Any"}, {"lineNumber": 71, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 76, "col_offset": 7, "nodeName": "row_ind", "type": "int"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "log_every_n", "type": "Any"}, {"lineNumber": 77, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "featurize", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "feature", "type": "Any"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "feature", "type": "Any"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "functools", "type": "module"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "gzip", "type": "module"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "pickle", "type": "module"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "pickle", "type": "module"}, {"lineNumber": 101, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "reader", "type": "Callable[..., _csv._reader]"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "inp_file_obj", "type": "file"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "inp_file_obj", "type": "gzip.GzipFile"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "iterrows", "type": "Any"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "colname", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "fields", "type": "Any"}, {"lineNumber": 134, "col_offset": 10, "nodeName": "row", "type": "Any"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "mol", "type": "Any"}, {"lineNumber": 138, "col_offset": 10, "nodeName": "row", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "field", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "fields", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "parse_float_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 153, "col_offset": 7, "nodeName": "field_type", "type": "Any"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "target", "type": "Any"}, {"lineNumber": 175, "col_offset": 7, "nodeName": "gzip", "type": "module"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "pickle", "type": "module"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "pickle", "type": "module"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 195, "col_offset": 6, "nodeName": "functools", "type": "module"}, {"lineNumber": 195, "col_offset": 56, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "row", "type": "Any"}, {"lineNumber": 204, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "features_data", "type": "List[Dict[unicode, numpy.ndarray]]"}, {"lineNumber": 208, "col_offset": 7, "nodeName": "gzip", "type": "module"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "pickle", "type": "module"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "pickle", "type": "module"}, {"lineNumber": 218, "col_offset": 7, "nodeName": "row_index", "type": "int"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "log_every_n", "type": "Any"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "row_index", "type": "int"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "row_index", "type": "int"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "get_colnames", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 227, "col_offset": 30, "nodeName": "raw_row", "type": "Any"}, {"lineNumber": 227, "col_offset": 39, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "get_row_data", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 37, "nodeName": "raw_row", "type": "Any"}, {"lineNumber": 229, "col_offset": 46, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 229, "col_offset": 58, "nodeName": "fields", "type": "Any"}, {"lineNumber": 229, "col_offset": 66, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 229, "col_offset": 80, "nodeName": "colnames", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "raw_val", "type": "Any"}, {"lineNumber": 236, "col_offset": 10, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 236, "col_offset": 29, "nodeName": "row_data", "type": "Dict[Any, Any]"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "smiles", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "mols", "type": "List[Any]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "rows", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "os", "type": "module"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "os", "type": "module"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "os", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "row_ind", "type": "int"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "mol", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "csv", "type": "module"}, {"lineNumber": 102, "col_offset": 50, "nodeName": "delimiter", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "open", "type": "Callable[..., gzip.GzipFile]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "load", "type": "Callable[[IO[str]], Any]"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "inp_file_obj", "type": "gzip.GzipFile"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "mols", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "mols", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "row_data", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "row", "type": "Any"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "row_data", "type": "Dict[Any, Any]"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "row", "type": "Any"}, {"lineNumber": 154, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "data", "type": "Any"}, {"lineNumber": 158, "col_offset": 7, "nodeName": "field_type", "type": "Any"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "target", "type": "Any"}, {"lineNumber": 172, "col_offset": 36, "nodeName": "split_field", "type": "Any"}, {"lineNumber": 204, "col_offset": 6, "nodeName": "feature_list", "type": "List[Any]"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "row", "type": "Any"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 42, "nodeName": "feature_list", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 9, "nodeName": "field", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "target_fields", "type": "Any"}, {"lineNumber": 231, "col_offset": 36, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 232, "col_offset": 18, "nodeName": "process_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 232, "col_offset": 49, "nodeName": "field_type", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "process_field", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 235, "col_offset": 52, "nodeName": "field_type", "type": "Any"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "gzip", "type": "module"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "pickle", "type": "module"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "inp_file_obj", "type": "gzip.GzipFile"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "supp", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "mols", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "inp_file_obj", "type": "file"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "supp", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "mols", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "colname", "type": "Any"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "ind", "type": "int"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "field", "type": "Any"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "field", "type": "Any"}, {"lineNumber": 140, "col_offset": 6, "nodeName": "row_data", "type": "Dict[Any, Any]"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "MolToSmiles", "type": "Any"}, {"lineNumber": 140, "col_offset": 48, "nodeName": "mol", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "split", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 7, "nodeName": "field_type", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 194, "col_offset": 40, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 204, "col_offset": 30, "nodeName": "feature", "type": "Any"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 32, "nodeName": "row_data", "type": "Dict[Any, Any]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "field", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "raw_val", "type": "Any"}, {"lineNumber": 233, "col_offset": 36, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "field", "type": "Any"}, {"lineNumber": 235, "col_offset": 35, "nodeName": "row_data", "type": "Dict[Any, Any]"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "open", "type": "Callable[..., gzip.GzipFile]"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "ForwardSDMolSupplier", "type": "Any"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "inp_file_obj", "type": "gzip.GzipFile"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "mol", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "ForwardSDMolSupplier", "type": "Any"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "inp_file_obj", "type": "file"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "mol", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "HasProp", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "field", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "row_data", "type": "Dict[Any, Any]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "row_data", "type": "Dict[Any, Any]"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "GetProp", "type": "Any"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "field", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "data", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 232, "col_offset": 41, "nodeName": "field", "type": "Any"}, {"lineNumber": 235, "col_offset": 44, "nodeName": "field", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "gzip", "type": "module"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "mol", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "supp", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "mol", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "supp", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "mol", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "field", "type": "Any"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "field", "type": "Any"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "mol", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "mol", "type": "Any"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "mol", "type": "Any"}]