[{"lineNumber": 11, "col_offset": 0, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 48, "col_offset": 2, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 49, "col_offset": 2, "nodeName": "paths", "type": "Dict[Any, Any]"}, {"lineNumber": 73, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 14, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 17, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 19, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 23, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 26, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 28, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 30, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 32, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 34, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 38, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "input_args", "type": "None"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "path", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "paths", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "path", "type": "Any"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "task_types", "type": "Dict[Any, str]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "task_transforms", "type": "Dict[Any, List[str]]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "get_default_task_types_and_transforms", "type": "Callable[[Any], Tuple[Dict[Any, str], Dict[Any, List[str]]]]"}, {"lineNumber": 53, "col_offset": 70, "nodeName": "paths", "type": "Dict[Any, Any]"}, {"lineNumber": 55, "col_offset": 5, "nodeName": "model", "type": "Any"}, {"lineNumber": 74, "col_offset": 2, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "argparse", "type": "module"}, {"lineNumber": 14, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 17, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 19, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 23, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 23, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 26, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 28, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 28, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 30, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 30, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 32, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 34, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 34, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 38, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 38, "col_offset": 49, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 40, "col_offset": 49, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 43, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "paths", "type": "Dict[Any, Any]"}, {"lineNumber": 55, "col_offset": 5, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "fit_singletask_mlp", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "task_types", "type": "Dict[Any, str]"}, {"lineNumber": 56, "col_offset": 51, "nodeName": "task_transforms", "type": "Dict[Any, List[str]]"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "model", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "values", "type": "Callable"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "splittype", "type": "Any"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "n_hidden", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "n_epochs", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "decay", "type": "Any"}, {"lineNumber": 59, "col_offset": 59, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "validation_split", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "weight_positives", "type": "Any"}, {"lineNumber": 61, "col_offset": 59, "nodeName": "num_to_train", "type": "Any"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "fit_multitask_mlp", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "task_types", "type": "Dict[Any, str]"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "task_transforms", "type": "Dict[Any, List[str]]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "fit_singletask_models", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 70, "col_offset": 54, "nodeName": "task_types", "type": "Dict[Any, str]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "task_transforms", "type": "Dict[Any, List[str]]"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "paths", "type": "Dict[Any, Any]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 59, "col_offset": 59, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 61, "col_offset": 59, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "values", "type": "Callable"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "splittype", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "n_hidden", "type": "Any"}, {"lineNumber": 65, "col_offset": 6, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 65, "col_offset": 61, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "n_epochs", "type": "Any"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "decay", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "validation_split", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "weight_positives", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "values", "type": "Callable"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "splittype", "type": "Any"}, {"lineNumber": 71, "col_offset": 64, "nodeName": "num_to_train", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "paths", "type": "Dict[Any, Any]"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 65, "col_offset": 6, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 65, "col_offset": 61, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "paths", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 71, "col_offset": 64, "nodeName": "args", "type": "argparse.Namespace"}]