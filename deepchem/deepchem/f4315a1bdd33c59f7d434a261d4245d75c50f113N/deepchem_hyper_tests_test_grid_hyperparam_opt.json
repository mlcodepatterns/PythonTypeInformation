[{"lineNumber": 11, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "rf_model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "rf_model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "optimizer", "type": "deepchem.hyper.grid_search.GridHyperparamOpt"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "params_dict", "type": "Dict[str, List[int]]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "metric", "type": "deepchem.metrics.metric.Metric"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "optimizer", "type": "deepchem.hyper.grid_search.GridHyperparamOpt"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "params_dict", "type": "Dict[str, List[int]]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "metric", "type": "deepchem.metrics.metric.Metric"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "optimizer", "type": "deepchem.hyper.grid_search.GridHyperparamOpt"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "params_dict", "type": "Dict[str, List[int]]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "metric", "type": "deepchem.metrics.metric.Metric"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "params_dict", "type": "Dict[str, List[int]]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "valid_score", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "params_dict", "type": "Dict[str, Union[List[int], List[float]]]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "hp_str", "type": "str"}, {"lineNumber": 20, "col_offset": 6, "nodeName": "rf_params", "type": "Dict[str, Any]"}, {"lineNumber": 21, "col_offset": 6, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 22, "col_offset": 6, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "self", "type": "TestGridHyperparamOpt"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "GridHyperparamOpt", "type": "Type[deepchem.hyper.grid_search.GridHyperparamOpt]"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "rf_model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.metric.Metric]"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "pearson_r2_score", "type": "Callable[[numpy.ndarray, numpy.ndarray], float]"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "hyperparam_search", "type": "Callable[..., Tuple[Any, Optional[Tuple[Any, ...]], Dict[str, Any]]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "params_dict", "type": "Dict[str, List[int]]"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 39, "col_offset": 61, "nodeName": "metric", "type": "deepchem.metrics.metric.Metric"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "GridHyperparamOpt", "type": "Type[deepchem.hyper.grid_search.GridHyperparamOpt]"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "rf_model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.metric.Metric]"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "pearson_r2_score", "type": "Callable[[numpy.ndarray, numpy.ndarray], float]"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "hyperparam_search", "type": "Callable[..., Tuple[Any, Optional[Tuple[Any, ...]], Dict[str, Any]]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "params_dict", "type": "Dict[str, List[int]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "metric", "type": "deepchem.metrics.metric.Metric"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "GridHyperparamOpt", "type": "Type[deepchem.hyper.grid_search.GridHyperparamOpt]"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "rf_model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.metric.Metric]"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "pearson_r2_score", "type": "Callable[[numpy.ndarray, numpy.ndarray], float]"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "tmpdirname", "type": "nothing"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "GridHyperparamOpt", "type": "Type[deepchem.hyper.grid_search.GridHyperparamOpt]"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.metric.Metric]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "hyperparam_search", "type": "Callable[..., Tuple[Any, Optional[Tuple[Any, ...]], Dict[str, Any]]]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "params_dict", "type": "Dict[str, List[int]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "metric", "type": "deepchem.metrics.metric.Metric"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "GridHyperparamOpt", "type": "Type[deepchem.hyper.grid_search.GridHyperparamOpt]"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.metric.Metric]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "tmpdirname", "type": "nothing"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "valid_score", "type": "Any"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "k", "type": "str"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "model_params", "type": "Dict[str, Any]"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "SklearnModel", "type": "Any"}, {"lineNumber": 23, "col_offset": 36, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 23, "col_offset": 51, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "data", "type": "module"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "data", "type": "module"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "hyper", "type": "module"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "self", "type": "TestGridHyperparamOpt"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "metrics", "type": "module"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "optimizer", "type": "deepchem.hyper.grid_search.GridHyperparamOpt"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "self", "type": "TestGridHyperparamOpt"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "self", "type": "TestGridHyperparamOpt"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "best_model", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "self", "type": "TestGridHyperparamOpt"}, {"lineNumber": 41, "col_offset": 59, "nodeName": "metric", "type": "deepchem.metrics.metric.Metric"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "valid_score", "type": "Any"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "max", "type": "Callable"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "valid_score", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "hyper", "type": "module"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "self", "type": "TestGridHyperparamOpt"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "metrics", "type": "module"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "optimizer", "type": "deepchem.hyper.grid_search.GridHyperparamOpt"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestGridHyperparamOpt"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestGridHyperparamOpt"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "best_model", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "self", "type": "TestGridHyperparamOpt"}, {"lineNumber": 61, "col_offset": 59, "nodeName": "metric", "type": "deepchem.metrics.metric.Metric"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "valid_score", "type": "Any"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "min", "type": "Callable"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "valid_score", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "hyper", "type": "module"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "self", "type": "TestGridHyperparamOpt"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "metrics", "type": "module"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "hyperparam_search", "type": "Callable[..., Tuple[Any, Optional[Tuple[Any, ...]], Dict[str, Any]]]"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "params_dict", "type": "Dict[str, List[int]]"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "metric", "type": "deepchem.metrics.metric.Metric"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "best_model", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "self", "type": "TestGridHyperparamOpt"}, {"lineNumber": 81, "col_offset": 59, "nodeName": "metric", "type": "deepchem.metrics.metric.Metric"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "valid_score", "type": "Any"}, {"lineNumber": 83, "col_offset": 46, "nodeName": "max", "type": "Callable"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "valid_score", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "ones", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "ones", "type": "Any"}, {"lineNumber": 94, "col_offset": 65, "nodeName": "arange", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "hyper", "type": "module"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 105, "col_offset": 53, "nodeName": "mean", "type": "Any"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "optimizer", "type": "deepchem.hyper.grid_search.GridHyperparamOpt"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "best_model", "type": "Any"}, {"lineNumber": 115, "col_offset": 54, "nodeName": "metric", "type": "deepchem.metrics.metric.Metric"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "valid_score", "type": "Any"}, {"lineNumber": 116, "col_offset": 53, "nodeName": "min", "type": "Callable"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "valid_score", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "ones", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 127, "col_offset": 48, "nodeName": "ones", "type": "Any"}, {"lineNumber": 127, "col_offset": 65, "nodeName": "arange", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "hyper", "type": "module"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 141, "col_offset": 53, "nodeName": "mean", "type": "Any"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "hyperparam_search", "type": "Callable[..., Tuple[Any, Optional[Tuple[Any, ...]], Dict[str, Any]]]"}, {"lineNumber": 145, "col_offset": 10, "nodeName": "params_dict", "type": "Dict[str, Union[List[int], List[float]]]"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 147, "col_offset": 10, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 148, "col_offset": 10, "nodeName": "metric", "type": "deepchem.metrics.metric.Metric"}, {"lineNumber": 149, "col_offset": 10, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "all_results", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "hp_str", "type": "str"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "hp_str", "type": "str"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "valid_score", "type": "Any"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "min", "type": "Callable"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "valid_score", "type": "Any"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "ensemble", "type": "Any"}, {"lineNumber": 22, "col_offset": 63, "nodeName": "rf_params", "type": "Dict[str, Any]"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "models", "type": "module"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "dc", "type": "module"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "rand", "type": "Any"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "rand", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "dc", "type": "module"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "rand", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "rand", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "dc", "type": "module"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "dc", "type": "module"}, {"lineNumber": 44, "col_offset": 50, "nodeName": "values", "type": "Callable"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "dc", "type": "module"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "dc", "type": "module"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "values", "type": "Callable"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "dc", "type": "module"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "dc", "type": "module"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "optimizer", "type": "deepchem.hyper.grid_search.GridHyperparamOpt"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "self", "type": "TestGridHyperparamOpt"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "self", "type": "TestGridHyperparamOpt"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "tmpdirname", "type": "nothing"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "values", "type": "Callable"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "dc", "type": "module"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "MultitaskRegressor", "type": "Type[deepchem.models.fcnet.MultitaskRegressor]"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 105, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 57, "nodeName": "values", "type": "Callable"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "dc", "type": "module"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "MultitaskRegressor", "type": "Type[deepchem.models.fcnet.MultitaskRegressor]"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 141, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "optimizer", "type": "deepchem.hyper.grid_search.GridHyperparamOpt"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "tmpdirname", "type": "nothing"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "best_model", "type": "Any"}, {"lineNumber": 152, "col_offset": 56, "nodeName": "metric", "type": "deepchem.metrics.metric.Metric"}, {"lineNumber": 159, "col_offset": 57, "nodeName": "values", "type": "Callable"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "k", "type": "str"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "v", "type": "Any"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "items", "type": "Callable"}, {"lineNumber": 20, "col_offset": 62, "nodeName": "k", "type": "str"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 44, "col_offset": 50, "nodeName": "all_results", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "all_results", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "all_results", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "models", "type": "module"}, {"lineNumber": 100, "col_offset": 77, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 57, "nodeName": "all_results", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "models", "type": "module"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 159, "col_offset": 57, "nodeName": "all_results", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "model_params", "type": "Dict[str, Any]"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "dc", "type": "module"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "dc", "type": "module"}, {"lineNumber": 99, "col_offset": 75, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 99, "col_offset": 88, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 99, "col_offset": 75, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 88, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "np", "type": "module"}]