[{"lineNumber": 10, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 10, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.fcnet.MultitaskClassifier"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.fcnet.MultitaskRegressor"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.sequential.Sequential"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "transformers", "type": "List[deepchem.trans.transformers.IRVTransformer]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "transformer", "type": "deepchem.trans.transformers.IRVTransformer"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "transformers", "type": "List[deepchem.trans.transformers.IRVTransformer]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "X", "type": "List[numpy.ndarray]"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "X", "type": "List[numpy.ndarray]"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "x_col1", "type": "Any"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "x_col2", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.tensor_graph.TensorGraph"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "features", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "labels", "type": "deepchem.models.tensorgraph.layers.Label"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "loss", "type": "deepchem.models.tensorgraph.layers.ReduceMean"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "MultitaskClassifier", "type": "Type[deepchem.models.tensorgraph.fcnet.MultitaskClassifier]"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 35, "col_offset": 51, "nodeName": "n_features", "type": "int"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "accuracy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "MultitaskRegressor", "type": "Type[deepchem.models.tensorgraph.fcnet.MultitaskRegressor]"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "n_features", "type": "int"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "RobustMultitaskClassifier", "type": "Type[deepchem.models.tensorgraph.robust_multitask.RobustMultitaskClassifier]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "accuracy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "RobustMultitaskRegressor", "type": "Type[deepchem.models.tensorgraph.robust_multitask.RobustMultitaskRegressor]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 204, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 206, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "Sequential", "type": "Type[deepchem.models.tensorgraph.sequential.Sequential]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 230, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 245, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "TensorflowMultitaskIRVClassifier", "type": "Type[deepchem.models.tensorgraph.IRV.TensorflowMultitaskIRVClassifier]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "build", "type": "Callable[[], None]"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 270, "col_offset": 27, "nodeName": "accuracy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 280, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "TextCNNModel", "type": "Type[deepchem.models.tensorgraph.models.text_cnn.TextCNNModel]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 303, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 303, "col_offset": 27, "nodeName": "X", "type": "List[numpy.ndarray]"}, {"lineNumber": 303, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 303, "col_offset": 33, "nodeName": "w", "type": "Any"}, {"lineNumber": 303, "col_offset": 36, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 306, "col_offset": 6, "nodeName": "labels", "type": "Any"}, {"lineNumber": 307, "col_offset": 6, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 308, "col_offset": 6, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 320, "col_offset": 27, "nodeName": "accuracy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "TextCNNModel", "type": "Type[deepchem.models.tensorgraph.models.text_cnn.TextCNNModel]"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 353, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 353, "col_offset": 27, "nodeName": "X", "type": "List[numpy.ndarray]"}, {"lineNumber": 353, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 353, "col_offset": 33, "nodeName": "w", "type": "Any"}, {"lineNumber": 353, "col_offset": 36, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 370, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 383, "col_offset": 37, "nodeName": "n_features", "type": "int"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 385, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 385, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 385, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 390, "col_offset": 6, "nodeName": "x1", "type": "Any"}, {"lineNumber": 391, "col_offset": 6, "nodeName": "x2", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "ScScoreModel", "type": "Type[deepchem.models.tensorgraph.models.scscore.ScScoreModel]"}, {"lineNumber": 396, "col_offset": 35, "nodeName": "n_features", "type": "int"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 398, "col_offset": 25, "nodeName": "difference", "type": "deepchem.models.tensorgraph.layers.Add"}, {"lineNumber": 401, "col_offset": 6, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 421, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 434, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 434, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 436, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 436, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 436, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "TensorGraph", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TensorGraph]"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "Feature", "type": "Type[deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "set_summary", "type": "Callable[..., None]"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "add_output", "type": "Callable[[Any], None]"}, {"lineNumber": 449, "col_offset": 21, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "Label", "type": "Type[deepchem.models.tensorgraph.layers.Label]"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "ReduceMean", "type": "Type[deepchem.models.tensorgraph.layers.ReduceMean]"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "set_loss", "type": "Callable[[Any], None]"}, {"lineNumber": 452, "col_offset": 19, "nodeName": "loss", "type": "deepchem.models.tensorgraph.layers.ReduceMean"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 43, "col_offset": 64, "nodeName": "weights", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.fcnet.MultitaskClassifier"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 47, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.fcnet.MultitaskRegressor"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 87, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 134, "col_offset": 64, "nodeName": "weights", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.robust_multitask.RobustMultitaskClassifier"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 138, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 166, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.robust_multitask.RobustMultitaskRegressor"}, {"lineNumber": 185, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 185, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.sequential.Sequential"}, {"lineNumber": 216, "col_offset": 14, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.sequential.Sequential"}, {"lineNumber": 222, "col_offset": 70, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 230, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "IRVTransformer", "type": "Type[deepchem.trans.transformers.IRVTransformer]"}, {"lineNumber": 246, "col_offset": 48, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 246, "col_offset": 57, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 254, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.IRV.TensorflowMultitaskIRVClassifier"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.IRV.TensorflowMultitaskIRVClassifier"}, {"lineNumber": 272, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 272, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 280, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 293, "col_offset": 18, "nodeName": "default_dict", "type": "Dict[str, int]"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "smiles_to_seq", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "smile", "type": "str"}, {"lineNumber": 300, "col_offset": 40, "nodeName": "smile", "type": "str"}, {"lineNumber": 300, "col_offset": 49, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 301, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 302, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "labels", "type": "Any"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 307, "col_offset": 30, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 308, "col_offset": 35, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 309, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 309, "col_offset": 41, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 309, "col_offset": 54, "nodeName": "weights", "type": "Any"}, {"lineNumber": 314, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 318, "col_offset": 40, "nodeName": "int32", "type": "Any"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNModel"}, {"lineNumber": 322, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 322, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 330, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 342, "col_offset": 18, "nodeName": "default_dict", "type": "Dict[str, int]"}, {"lineNumber": 343, "col_offset": 19, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 350, "col_offset": 9, "nodeName": "smiles_to_seq", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 350, "col_offset": 29, "nodeName": "smile", "type": "str"}, {"lineNumber": 350, "col_offset": 40, "nodeName": "smile", "type": "str"}, {"lineNumber": 350, "col_offset": 49, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 351, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 351, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 351, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 352, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 358, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 360, "col_offset": 10, "nodeName": "next", "type": "Callable"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNModel"}, {"lineNumber": 366, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 366, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 370, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 371, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 372, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 384, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 384, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 385, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 390, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 391, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 392, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 398, "col_offset": 25, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "relu", "type": "Any"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 402, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 402, "col_offset": 41, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 402, "col_offset": 54, "nodeName": "weights", "type": "Any"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 413, "col_offset": 22, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 421, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 423, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 435, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 435, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 436, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 441, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "layers", "type": "module"}, {"lineNumber": 447, "col_offset": 38, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 447, "col_offset": 57, "nodeName": "features", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.tensor_graph.TensorGraph"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "layers", "type": "module"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "layers", "type": "module"}, {"lineNumber": 451, "col_offset": 29, "nodeName": "L2Loss", "type": "Type[deepchem.models.tensorgraph.layers.L2Loss]"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.tensor_graph.TensorGraph"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.tensor_graph.TensorGraph"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 57, "nodeName": "n_features", "type": "int"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "round", "type": "Any"}, {"lineNumber": 43, "col_offset": 50, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 83, "col_offset": 57, "nodeName": "n_features", "type": "int"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 130, "col_offset": 57, "nodeName": "n_features", "type": "int"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 131, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "round", "type": "Any"}, {"lineNumber": 134, "col_offset": 50, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 181, "col_offset": 57, "nodeName": "n_features", "type": "int"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 182, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 28, "nodeName": "x", "type": "int"}, {"lineNumber": 206, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 216, "col_offset": 14, "nodeName": "layers", "type": "module"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 220, "col_offset": 57, "nodeName": "n_features", "type": "int"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 222, "col_offset": 54, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "trans", "type": "module"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "transformer", "type": "deepchem.trans.transformers.IRVTransformer"}, {"lineNumber": 254, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 254, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 264, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "round", "type": "Any"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNModel"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 314, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 314, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 318, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 319, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 350, "col_offset": 9, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNModel"}, {"lineNumber": 351, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 358, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "itersamples", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 362, "col_offset": 57, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 363, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 385, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "x1", "type": "Any"}, {"lineNumber": 392, "col_offset": 30, "nodeName": "x2", "type": "Any"}, {"lineNumber": 392, "col_offset": 45, "nodeName": "weights", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 401, "col_offset": 31, "nodeName": "sign", "type": "Any"}, {"lineNumber": 401, "col_offset": 39, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 406, "col_offset": 59, "nodeName": "n_features", "type": "int"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 407, "col_offset": 59, "nodeName": "n_features", "type": "int"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 411, "col_offset": 25, "nodeName": "x_col1", "type": "Any"}, {"lineNumber": 411, "col_offset": 33, "nodeName": "x_col2", "type": "Any"}, {"lineNumber": 412, "col_offset": 29, "nodeName": "accuracy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 436, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 441, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 441, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 446, "col_offset": 43, "nodeName": "n_features", "type": "int"}, {"lineNumber": 450, "col_offset": 39, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 451, "col_offset": 29, "nodeName": "layers", "type": "module"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 456, "col_offset": 57, "nodeName": "n_features", "type": "int"}, {"lineNumber": 457, "col_offset": 54, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 189, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 205, "col_offset": 39, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 226, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 263, "col_offset": 66, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 267, "col_offset": 50, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 276, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 325, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 356, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 369, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 388, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 401, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 417, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 421, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 439, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 451, "col_offset": 54, "nodeName": "labels", "type": "deepchem.models.tensorgraph.layers.Label"}, {"lineNumber": 451, "col_offset": 62, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 461, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 114, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 210, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 253, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 313, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 356, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 357, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 357, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 388, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 389, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 389, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 439, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 440, "col_offset": 39, "nodeName": "epochs", "type": "Any"}]