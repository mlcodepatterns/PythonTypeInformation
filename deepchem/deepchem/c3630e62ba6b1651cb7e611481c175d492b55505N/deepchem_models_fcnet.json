[{"lineNumber": 20, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "KerasModel", "type": "Type[deepchem.models.keras_model.KerasModel]"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "KerasModel", "type": "Type[deepchem.models.keras_model.KerasModel]"}, {"lineNumber": 344, "col_offset": 37, "nodeName": "MultitaskRegressor", "type": "Type[MultitaskRegressor]"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 20, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 47, "col_offset": 62, "nodeName": "relu", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "n_features", "type": "int"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "mol_features", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "mol_features", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "prev_size", "type": "int"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "n_features", "type": "int"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "next_activation", "type": "None"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "neural_fingerprint", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "epoch", "type": "int"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 197, "col_offset": 62, "nodeName": "relu", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "n_features", "type": "int"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 258, "col_offset": 7, "nodeName": "uncertainty", "type": "bool"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "mol_features", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "dropout_switch", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "mol_features", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "prev_size", "type": "int"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "n_features", "type": "int"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "next_activation", "type": "None"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "neural_fingerprint", "type": "Any"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 303, "col_offset": 7, "nodeName": "uncertainty", "type": "bool"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "epoch", "type": "int"}, {"lineNumber": 331, "col_offset": 35, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "fit_transformers", "type": "Sequence[Any]"}, {"lineNumber": 385, "col_offset": 28, "nodeName": "fit_transformers", "type": "Sequence[Any]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 395, "col_offset": 23, "nodeName": "fit_transformers", "type": "Sequence[Any]"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "epoch", "type": "int"}, {"lineNumber": 410, "col_offset": 35, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 433, "col_offset": 56, "nodeName": "OneOrMany", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 47, "col_offset": 62, "nodeName": "nn", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "self", "type": "MultitaskClassifier"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "self", "type": "MultitaskClassifier"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "self", "type": "MultitaskClassifier"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "layer_sizes", "type": "Sequence[int]"}, {"lineNumber": 98, "col_offset": 6, "nodeName": "weight_init_stddevs", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 6, "nodeName": "bias_init_consts", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "dropouts", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "activation_fns", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 7, "nodeName": "weight_decay_penalty", "type": "float"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "regularizer", "type": "None"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "Input", "type": "Any"}, {"lineNumber": 122, "col_offset": 67, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "layer_sizes", "type": "Sequence[int]"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 123, "col_offset": 60, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "activation_fns", "type": "Any"}, {"lineNumber": 125, "col_offset": 6, "nodeName": "layer", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 140, "col_offset": 6, "nodeName": "prev_size", "type": "Any"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "size", "type": "Any"}, {"lineNumber": 141, "col_offset": 6, "nodeName": "next_activation", "type": "Any"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 142, "col_offset": 7, "nodeName": "next_activation", "type": "Any"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "self", "type": "MultitaskClassifier"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "logits", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "Model", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "epochs", "type": "int"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 197, "col_offset": 62, "nodeName": "nn", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "self", "type": "MultitaskFitTransformRegressor"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "self", "type": "MultitaskFitTransformRegressor"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "layer_sizes", "type": "Sequence[int]"}, {"lineNumber": 244, "col_offset": 6, "nodeName": "weight_init_stddevs", "type": "List[Any]"}, {"lineNumber": 246, "col_offset": 6, "nodeName": "bias_init_consts", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "dropouts", "type": "List[Any]"}, {"lineNumber": 250, "col_offset": 6, "nodeName": "activation_fns", "type": "List[Any]"}, {"lineNumber": 251, "col_offset": 7, "nodeName": "weight_decay_penalty", "type": "float"}, {"lineNumber": 257, "col_offset": 6, "nodeName": "regularizer", "type": "None"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "Input", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "Input", "type": "Any"}, {"lineNumber": 273, "col_offset": 67, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "layer_sizes", "type": "Sequence[int]"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 274, "col_offset": 42, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 274, "col_offset": 60, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "activation_fns", "type": "Any"}, {"lineNumber": 276, "col_offset": 6, "nodeName": "layer", "type": "Any"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "prev_size", "type": "Any"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "size", "type": "Any"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "next_activation", "type": "Any"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 293, "col_offset": 7, "nodeName": "next_activation", "type": "Any"}, {"lineNumber": 294, "col_offset": 6, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "self", "type": "MultitaskFitTransformRegressor"}, {"lineNumber": 309, "col_offset": 6, "nodeName": "var", "type": "Any"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 311, "col_offset": 6, "nodeName": "output_types", "type": "List[str]"}, {"lineNumber": 317, "col_offset": 6, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 318, "col_offset": 6, "nodeName": "output_types", "type": "List[str]"}, {"lineNumber": 319, "col_offset": 6, "nodeName": "loss", "type": "deepchem.models.losses.L2Loss"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "Model", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "loss", "type": "Union[deepchem.models.losses.L2Loss, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 332, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 332, "col_offset": 23, "nodeName": "epochs", "type": "int"}, {"lineNumber": 369, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "self", "type": "MultitaskFitTransformRegressor"}, {"lineNumber": 389, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 389, "col_offset": 18, "nodeName": "n_features", "type": "int"}, {"lineNumber": 389, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 399, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 402, "col_offset": 17, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 411, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "epochs", "type": "int"}, {"lineNumber": 436, "col_offset": 37, "nodeName": "generator", "type": "Iterable[Tuple[Any, Any, Any]]"}, {"lineNumber": 442, "col_offset": 11, "nodeName": "predict_on_generator", "type": "Callable[..., Any]"}, {"lineNumber": 443, "col_offset": 31, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 443, "col_offset": 45, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 443, "col_offset": 54, "nodeName": "output_types", "type": "Any"}, {"lineNumber": 433, "col_offset": 66, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 97, "col_offset": 43, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 98, "col_offset": 52, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "activation_fns", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 106, "col_offset": 9, "nodeName": "weight_decay_penalty_type", "type": "str"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "next_activation", "type": "None"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "layer", "type": "Any"}, {"lineNumber": 134, "col_offset": 9, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 136, "col_offset": 9, "nodeName": "residual", "type": "bool"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "layer", "type": "Any"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "Reshape", "type": "Any"}, {"lineNumber": 146, "col_offset": 61, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "Softmax", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "mol_features", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "SoftmaxCrossEntropy", "type": "Type[deepchem.models.losses.SoftmaxCrossEntropy]"}, {"lineNumber": 153, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "iterbatches", "type": "Callable[..., Iterator[Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]]"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 197, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 243, "col_offset": 43, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 245, "col_offset": 40, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 247, "col_offset": 32, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 248, "col_offset": 30, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "activation_fns", "type": "Any"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 250, "col_offset": 42, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 252, "col_offset": 9, "nodeName": "weight_decay_penalty_type", "type": "str"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 259, "col_offset": 9, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 277, "col_offset": 9, "nodeName": "next_activation", "type": "None"}, {"lineNumber": 284, "col_offset": 42, "nodeName": "layer", "type": "Any"}, {"lineNumber": 285, "col_offset": 9, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 287, "col_offset": 9, "nodeName": "residual", "type": "bool"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "layer", "type": "Any"}, {"lineNumber": 294, "col_offset": 45, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 296, "col_offset": 13, "nodeName": "Reshape", "type": "Any"}, {"lineNumber": 301, "col_offset": 41, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 309, "col_offset": 31, "nodeName": "log_var", "type": "Any"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "output", "type": "Any"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "output", "type": "Any"}, {"lineNumber": 310, "col_offset": 38, "nodeName": "log_var", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "diff", "type": "Any"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "output", "type": "Any"}, {"lineNumber": 319, "col_offset": 13, "nodeName": "L2Loss", "type": "Type[deepchem.models.losses.L2Loss]"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 321, "col_offset": 55, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 323, "col_offset": 34, "nodeName": "output_types", "type": "List[str]"}, {"lineNumber": 323, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 333, "col_offset": 36, "nodeName": "iterbatches", "type": "Callable[..., Iterator[Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]]"}, {"lineNumber": 331, "col_offset": 44, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 391, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 391, "col_offset": 20, "nodeName": "n_features", "type": "int"}, {"lineNumber": 391, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 392, "col_offset": 6, "nodeName": "X_b", "type": "Any"}, {"lineNumber": 396, "col_offset": 13, "nodeName": "transform_X", "type": "Any"}, {"lineNumber": 398, "col_offset": 6, "nodeName": "X_b", "type": "Any"}, {"lineNumber": 398, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 398, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 398, "col_offset": 18, "nodeName": "transform_array", "type": "Any"}, {"lineNumber": 398, "col_offset": 46, "nodeName": "X_b", "type": "Any"}, {"lineNumber": 399, "col_offset": 17, "nodeName": "X_b", "type": "Any"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 400, "col_offset": 54, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 400, "col_offset": 58, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 402, "col_offset": 40, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 402, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 412, "col_offset": 36, "nodeName": "iterbatches", "type": "Callable[..., Iterator[Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]]]"}, {"lineNumber": 410, "col_offset": 44, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 433, "col_offset": 20, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 436, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 436, "col_offset": 18, "nodeName": "labels", "type": "Any"}, {"lineNumber": 436, "col_offset": 26, "nodeName": "weights", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "X_t", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 438, "col_offset": 27, "nodeName": "fit_transformers", "type": "Sequence[Any]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "transform_generator", "type": "Callable[[], Any]"}, {"lineNumber": 433, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 43, "nodeName": "collections", "type": "module"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "collections", "type": "module"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "collections", "type": "module"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "collections", "type": "module"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "activation_fns", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "l1", "type": "Any"}, {"lineNumber": 107, "col_offset": 47, "nodeName": "weight_decay_penalty", "type": "float"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "l2", "type": "Any"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "weight_decay_penalty", "type": "float"}, {"lineNumber": 115, "col_offset": 32, "nodeName": "n_features", "type": "int"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 129, "col_offset": 10, "nodeName": "size", "type": "Any"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "layer", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "prev_size", "type": "int"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "size", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 148, "col_offset": 57, "nodeName": "output", "type": "Any"}, {"lineNumber": 148, "col_offset": 65, "nodeName": "logits", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 149, "col_offset": 10, "nodeName": "MultitaskClassifier", "type": "Type[MultitaskClassifier]"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "self", "type": "MultitaskClassifier"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "losses", "type": "module"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "dataset", "type": "deepchem.data.datasets.Dataset"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "deterministic", "type": "bool"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "pad_batches", "type": "bool"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "y_b", "type": "numpy.ndarray"}, {"lineNumber": 243, "col_offset": 43, "nodeName": "collections", "type": "module"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 244, "col_offset": 53, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 245, "col_offset": 40, "nodeName": "collections", "type": "module"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 246, "col_offset": 47, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 247, "col_offset": 32, "nodeName": "collections", "type": "module"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "collections", "type": "module"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "activation_fns", "type": "Any"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "l1", "type": "Any"}, {"lineNumber": 253, "col_offset": 47, "nodeName": "weight_decay_penalty", "type": "float"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "l2", "type": "Any"}, {"lineNumber": 255, "col_offset": 47, "nodeName": "weight_decay_penalty", "type": "float"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 265, "col_offset": 32, "nodeName": "n_features", "type": "int"}, {"lineNumber": 266, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 279, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 280, "col_offset": 10, "nodeName": "size", "type": "Any"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "prev_size", "type": "int"}, {"lineNumber": 287, "col_offset": 35, "nodeName": "size", "type": "Any"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 294, "col_offset": 30, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 296, "col_offset": 22, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 296, "col_offset": 35, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "Reshape", "type": "Any"}, {"lineNumber": 308, "col_offset": 63, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "exp", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 319, "col_offset": 13, "nodeName": "losses", "type": "module"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "mol_features", "type": "Any"}, {"lineNumber": 321, "col_offset": 30, "nodeName": "dropout_switch", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 322, "col_offset": 10, "nodeName": "MultitaskRegressor", "type": "Type[MultitaskRegressor]"}, {"lineNumber": 322, "col_offset": 30, "nodeName": "self", "type": "MultitaskFitTransformRegressor"}, {"lineNumber": 333, "col_offset": 36, "nodeName": "dataset", "type": "deepchem.data.datasets.Dataset"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 335, "col_offset": 24, "nodeName": "deterministic", "type": "bool"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "pad_batches", "type": "bool"}, {"lineNumber": 337, "col_offset": 11, "nodeName": "mode", "type": "str"}, {"lineNumber": 338, "col_offset": 10, "nodeName": "dropout", "type": "numpy.ndarray"}, {"lineNumber": 340, "col_offset": 10, "nodeName": "dropout", "type": "numpy.ndarray"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 396, "col_offset": 13, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 398, "col_offset": 18, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 401, "col_offset": 10, "nodeName": "MultitaskFitTransformRegressor", "type": "Type[MultitaskFitTransformRegressor]"}, {"lineNumber": 401, "col_offset": 42, "nodeName": "self", "type": "MultitaskFitTransformRegressor"}, {"lineNumber": 412, "col_offset": 36, "nodeName": "dataset", "type": "deepchem.data.datasets.Dataset"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 414, "col_offset": 24, "nodeName": "deterministic", "type": "bool"}, {"lineNumber": 415, "col_offset": 22, "nodeName": "pad_batches", "type": "bool"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "y_b", "type": "numpy.ndarray"}, {"lineNumber": 417, "col_offset": 10, "nodeName": "y_b", "type": "Any"}, {"lineNumber": 418, "col_offset": 11, "nodeName": "X_b", "type": "numpy.ndarray"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "mode", "type": "str"}, {"lineNumber": 423, "col_offset": 10, "nodeName": "dropout", "type": "numpy.ndarray"}, {"lineNumber": 425, "col_offset": 10, "nodeName": "dropout", "type": "numpy.ndarray"}, {"lineNumber": 437, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 438, "col_offset": 27, "nodeName": "self", "type": "MultitaskFitTransformRegressor"}, {"lineNumber": 439, "col_offset": 10, "nodeName": "X_t", "type": "Any"}, {"lineNumber": 442, "col_offset": 11, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 442, "col_offset": 17, "nodeName": "MultitaskFitTransformRegressor", "type": "Type[MultitaskFitTransformRegressor]"}, {"lineNumber": 442, "col_offset": 49, "nodeName": "self", "type": "MultitaskFitTransformRegressor"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "Lambda", "type": "Any"}, {"lineNumber": 137, "col_offset": 52, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 137, "col_offset": 64, "nodeName": "layer", "type": "Any"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "models", "type": "module"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "self", "type": "MultitaskClassifier"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 161, "col_offset": 50, "nodeName": "List", "type": "Any"}, {"lineNumber": 161, "col_offset": 56, "nodeName": "List", "type": "Any"}, {"lineNumber": 161, "col_offset": 62, "nodeName": "List", "type": "Any"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "d", "type": "Any"}, {"lineNumber": 259, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 259, "col_offset": 31, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "SwitchedDropout", "type": "Type[deepchem.models.layers.SwitchedDropout]"}, {"lineNumber": 286, "col_offset": 47, "nodeName": "layer", "type": "Any"}, {"lineNumber": 286, "col_offset": 54, "nodeName": "dropout_switch", "type": "Any"}, {"lineNumber": 288, "col_offset": 21, "nodeName": "Lambda", "type": "Any"}, {"lineNumber": 288, "col_offset": 52, "nodeName": "prev_layer", "type": "Any"}, {"lineNumber": 288, "col_offset": 64, "nodeName": "layer", "type": "Any"}, {"lineNumber": 304, "col_offset": 25, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 304, "col_offset": 38, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 305, "col_offset": 10, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "labels", "type": "Any"}, {"lineNumber": 314, "col_offset": 27, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 319, "col_offset": 13, "nodeName": "models", "type": "module"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "self", "type": "MultitaskRegressor"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 331, "col_offset": 50, "nodeName": "List", "type": "Any"}, {"lineNumber": 331, "col_offset": 56, "nodeName": "List", "type": "Any"}, {"lineNumber": 331, "col_offset": 62, "nodeName": "List", "type": "Any"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 392, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 392, "col_offset": 33, "nodeName": "n_features", "type": "int"}, {"lineNumber": 396, "col_offset": 46, "nodeName": "transform_y", "type": "Any"}, {"lineNumber": 397, "col_offset": 46, "nodeName": "transform_w", "type": "Any"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "self", "type": "MultitaskFitTransformRegressor"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 417, "col_offset": 32, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 419, "col_offset": 13, "nodeName": "mode", "type": "str"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "fit_transformers", "type": "Sequence[Any]"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 410, "col_offset": 50, "nodeName": "List", "type": "Any"}, {"lineNumber": 410, "col_offset": 56, "nodeName": "List", "type": "Any"}, {"lineNumber": 410, "col_offset": 62, "nodeName": "List", "type": "Any"}, {"lineNumber": 433, "col_offset": 29, "nodeName": "OneOrMany", "type": "Any"}, {"lineNumber": 439, "col_offset": 16, "nodeName": "X_transform", "type": "Any"}, {"lineNumber": 439, "col_offset": 40, "nodeName": "X_t", "type": "Any"}, {"lineNumber": 440, "col_offset": 35, "nodeName": "labels", "type": "Any"}, {"lineNumber": 440, "col_offset": 43, "nodeName": "weights", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "keras", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "keras", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "TruncatedNormal", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "self", "type": "MultitaskClassifier"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "self", "type": "MultitaskClassifier"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "X_b", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "y_b", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "w_b", "type": "numpy.ndarray"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "keras", "type": "Any"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "keras", "type": "Any"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "TruncatedNormal", "type": "Any"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 286, "col_offset": 37, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "TruncatedNormal", "type": "Any"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 315, "col_offset": 65, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 319, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "X_b", "type": "numpy.ndarray"}, {"lineNumber": 341, "col_offset": 21, "nodeName": "dropout", "type": "numpy.ndarray"}, {"lineNumber": 341, "col_offset": 32, "nodeName": "y_b", "type": "numpy.ndarray"}, {"lineNumber": 341, "col_offset": 39, "nodeName": "w_b", "type": "numpy.ndarray"}, {"lineNumber": 396, "col_offset": 46, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 397, "col_offset": 46, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "y_b", "type": "numpy.ndarray"}, {"lineNumber": 417, "col_offset": 32, "nodeName": "self", "type": "MultitaskFitTransformRegressor"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "self", "type": "MultitaskFitTransformRegressor"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "X_b", "type": "Any"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "dropout", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 32, "nodeName": "y_b", "type": "Any"}, {"lineNumber": 426, "col_offset": 39, "nodeName": "w_b", "type": "numpy.ndarray"}, {"lineNumber": 433, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 439, "col_offset": 16, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "weight_stddev", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 132, "col_offset": 57, "nodeName": "bias_const", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "to_one_hot", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "weight_stddev", "type": "Any"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 283, "col_offset": 57, "nodeName": "bias_const", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "TruncatedNormal", "type": "Any"}, {"lineNumber": 308, "col_offset": 27, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 315, "col_offset": 30, "nodeName": "diff", "type": "Any"}, {"lineNumber": 315, "col_offset": 37, "nodeName": "diff", "type": "Any"}, {"lineNumber": 315, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 421, "col_offset": 14, "nodeName": "X_b", "type": "Any"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "_", "type": "Any"}, {"lineNumber": 421, "col_offset": 22, "nodeName": "_", "type": "Any"}, {"lineNumber": 421, "col_offset": 26, "nodeName": "transform_array", "type": "Any"}, {"lineNumber": 421, "col_offset": 54, "nodeName": "X_b", "type": "numpy.ndarray"}, {"lineNumber": 440, "col_offset": 16, "nodeName": "X_t", "type": "Any"}, {"lineNumber": 440, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "keras", "type": "Any"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "self", "type": "MultitaskClassifier"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "keras", "type": "Any"}, {"lineNumber": 288, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 288, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "keras", "type": "Any"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 301, "col_offset": 18, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 308, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 315, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 315, "col_offset": 51, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 421, "col_offset": 26, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "y_b", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "keras", "type": "Any"}, {"lineNumber": 307, "col_offset": 21, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "tf", "type": "Any"}]