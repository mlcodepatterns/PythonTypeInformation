[{"lineNumber": 19, "col_offset": 35, "nodeName": "HyperparamOpt", "type": "Type[deepchem.hyper.HyperparamOpt]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "params_dict", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "hp_list", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "hp_invalid_list", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "hp_list_class", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "n_param", "type": "int"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "param_range", "type": "List[Tuple[str, List[Any]]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "hp_list1", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "hp_list2", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "param_name", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "param", "type": "Dict[str, Tuple[str, List[Any]]]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "cov", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "gp", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "acq", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "gpgo", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "i", "type": "int"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "hp_list1", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "hp_list2", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "keys", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "args", "type": "Dict[str, object]"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "hp", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "hp_list1", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 10, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "hp_list2", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "matern32", "type": "Any"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "GaussianProcess", "type": "Any"}, {"lineNumber": 147, "col_offset": 59, "nodeName": "cov", "type": "Any"}, {"lineNumber": 148, "col_offset": 10, "nodeName": "Acquisition", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "GPGO", "type": "Any"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "gp", "type": "Any"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "acq", "type": "Any"}, {"lineNumber": 149, "col_offset": 37, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 40, "nodeName": "param", "type": "Dict[str, Tuple[str, List[Any]]]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "hp_opt", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "valid_performance_opt", "type": "Any"}, {"lineNumber": 152, "col_offset": 36, "nodeName": "getResult", "type": "Any"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 167, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "valid_performance_opt", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "hp", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "hp_list", "type": "Any"}, {"lineNumber": 46, "col_offset": 56, "nodeName": "hp", "type": "Any"}, {"lineNumber": 46, "col_offset": 62, "nodeName": "hp_list", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "hp_list_class", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "hp_list", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "hp_list1", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 84, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "param_range", "type": "List[Tuple[str, List[Any]]]"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "locals", "type": "Callable[[], Dict[str, object]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 123, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "multitask_scores", "type": "Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "pyGPGO_covfunc", "type": "module"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "pyGPGO_surrogates_GaussianProcess", "type": "module"}, {"lineNumber": 148, "col_offset": 10, "nodeName": "pyGPGO_acquisition", "type": "module"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "pyGPGO_GPGO", "type": "module"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "gpgo", "type": "Any"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 152, "col_offset": 36, "nodeName": "gpgo", "type": "Any"}, {"lineNumber": 157, "col_offset": 6, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 160, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 167, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "remove", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "hp", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 54, "col_offset": 68, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 84, "col_offset": 50, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "param_name", "type": "List[str]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "model_class", "type": "Callable[[Dict[Any, Any], str], Any]"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 125, "col_offset": 57, "nodeName": "model_class", "type": "Callable[[Dict[Any, Any], str], Any]"}, {"lineNumber": 125, "col_offset": 75, "nodeName": "unicode", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "model_class", "type": "Callable[[Dict[Any, Any], str], Any]"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 139, "col_offset": 51, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 142, "col_offset": 52, "nodeName": "output_transformers", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "compute_model_performance", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "multitask_scores", "type": "Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "hp", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "hp_opt", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 163, "col_offset": 10, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "j", "type": "int"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "map", "type": "Callable"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "hp_list", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "hp", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "hp_list", "type": "Any"}, {"lineNumber": 50, "col_offset": 75, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "hp_list", "type": "Any"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "hp_list_class", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 57, "col_offset": 45, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "hp_list2", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "param_range", "type": "List[Tuple[str, List[Any]]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "param_range", "type": "List[Tuple[str, List[Any]]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "param_range", "type": "List[Tuple[str, List[Any]]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "param_range", "type": "List[Tuple[str, List[Any]]]"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "n_param", "type": "int"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "hp", "type": "Any"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "args", "type": "Dict[str, object]"}, {"lineNumber": 113, "col_offset": 10, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "j", "type": "int"}, {"lineNumber": 120, "col_offset": 10, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "map", "type": "Callable"}, {"lineNumber": 120, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "self", "type": "GaussianProcessHyperparamOpt"}, {"lineNumber": 125, "col_offset": 57, "nodeName": "self", "type": "GaussianProcessHyperparamOpt"}, {"lineNumber": 127, "col_offset": 42, "nodeName": "benchmark_classification", "type": "Callable"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "output_transformers", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "metric", "type": "Any"}, {"lineNumber": 129, "col_offset": 55, "nodeName": "model_class", "type": "Callable[[Dict[Any, Any], str], Any]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "valid_scores", "type": "Dict[Callable[[Dict[Any, Any], str], Any], Any]"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "self", "type": "GaussianProcessHyperparamOpt"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 143, "col_offset": 64, "nodeName": "metric", "type": "Any"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 158, "col_offset": 9, "nodeName": "param_range", "type": "List[Tuple[str, List[Any]]]"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "hp", "type": "Any"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "hp_opt", "type": "Any"}, {"lineNumber": 163, "col_offset": 48, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 163, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "param_range", "type": "List[Tuple[str, List[Any]]]"}, {"lineNumber": 166, "col_offset": 43, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 50, "col_offset": 55, "nodeName": "hp_list_class", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "hp", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "param_range", "type": "List[Tuple[str, List[Any]]]"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "hp", "type": "Any"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "args", "type": "Dict[str, object]"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 117, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "param_range", "type": "List[Tuple[str, List[Any]]]"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 128, "col_offset": 71, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 129, "col_offset": 55, "nodeName": "self", "type": "GaussianProcessHyperparamOpt"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 132, "col_offset": 42, "nodeName": "benchmark_regression", "type": "Callable"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "output_transformers", "type": "Any"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "metric", "type": "Any"}, {"lineNumber": 134, "col_offset": 55, "nodeName": "model_class", "type": "Callable[[Dict[Any, Any], str], Any]"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "model_class", "type": "Callable[[Dict[Any, Any], str], Any]"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "metric", "type": "Any"}, {"lineNumber": 157, "col_offset": 42, "nodeName": "param_name", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "hp", "type": "Any"}, {"lineNumber": 163, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 50, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "search_range", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "search_range", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "search_range", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "search_range", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "param_name", "type": "List[str]"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 113, "col_offset": 54, "nodeName": "hp", "type": "Any"}, {"lineNumber": 117, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 133, "col_offset": 71, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 134, "col_offset": 55, "nodeName": "self", "type": "GaussianProcessHyperparamOpt"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "self", "type": "GaussianProcessHyperparamOpt"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "metric", "type": "Any"}, {"lineNumber": 157, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "param_name", "type": "List[str]"}, {"lineNumber": 163, "col_offset": 61, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 166, "col_offset": 60, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 111, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "param_name", "type": "List[str]"}, {"lineNumber": 117, "col_offset": 61, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 120, "col_offset": 62, "nodeName": "hp", "type": "Tuple[Any, int]"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "j", "type": "int"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "hp", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "hp", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "hp", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "hp", "type": "Any"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "j", "type": "int"}]