[{"lineNumber": 10, "col_offset": 0, "nodeName": "generate_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "test_cgan", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_cgan_reload", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "test_mix_gan_reload", "type": "Callable[[], Any]"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "test_mix_gan", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "test_wgan", "type": "Callable[[], Any]"}, {"lineNumber": 200, "col_offset": 0, "nodeName": "test_wgan_reload", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "GAN", "type": "Type[deepchem.models.gan.GAN]"}, {"lineNumber": 12, "col_offset": 2, "nodeName": "means", "type": "Any"}, {"lineNumber": 13, "col_offset": 2, "nodeName": "values", "type": "Any"}, {"lineNumber": 18, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "models", "type": "module"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 63, "col_offset": 2, "nodeName": "means", "type": "Any"}, {"lineNumber": 64, "col_offset": 2, "nodeName": "values", "type": "Any"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 75, "col_offset": 2, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 76, "col_offset": 2, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 80, "col_offset": 2, "nodeName": "means", "type": "Any"}, {"lineNumber": 81, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 82, "col_offset": 2, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 85, "col_offset": 2, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 90, "col_offset": 2, "nodeName": "reloaded_gan", "type": "ExampleGAN"}, {"lineNumber": 102, "col_offset": 2, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 118, "col_offset": 2, "nodeName": "means", "type": "Any"}, {"lineNumber": 119, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 120, "col_offset": 2, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 121, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 136, "col_offset": 2, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 142, "col_offset": 2, "nodeName": "means", "type": "Any"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "WGAN", "type": "Type[deepchem.models.gan.WGAN]"}, {"lineNumber": 188, "col_offset": 2, "nodeName": "gan", "type": "Any"}, {"lineNumber": 193, "col_offset": 2, "nodeName": "means", "type": "Any"}, {"lineNumber": 194, "col_offset": 2, "nodeName": "values", "type": "Any"}, {"lineNumber": 195, "col_offset": 2, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "WGAN", "type": "Type[deepchem.models.gan.WGAN]"}, {"lineNumber": 236, "col_offset": 2, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 246, "col_offset": 2, "nodeName": "means", "type": "Any"}, {"lineNumber": 247, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 248, "col_offset": 2, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "normal", "type": "Any"}, {"lineNumber": 13, "col_offset": 28, "nodeName": "means", "type": "Any"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "means", "type": "Any"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "values", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "batches", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "gen_in", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "data_input", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "discrim_in", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "dense", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "ExampleGAN", "type": "Type[ExampleGAN]"}, {"lineNumber": 58, "col_offset": 2, "nodeName": "fit_gan", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "values", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "means", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "ExampleGAN", "type": "Type[ExampleGAN]"}, {"lineNumber": 77, "col_offset": 2, "nodeName": "fit_gan", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "means", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "get_noise_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "values", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "means", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "ExampleGAN", "type": "Type[ExampleGAN]"}, {"lineNumber": 91, "col_offset": 2, "nodeName": "restore", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "all", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "ExampleGAN", "type": "Type[ExampleGAN]"}, {"lineNumber": 108, "col_offset": 2, "nodeName": "fit_gan", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "ExampleGAN", "type": "Type[ExampleGAN]"}, {"lineNumber": 115, "col_offset": 2, "nodeName": "restore", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "means", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "get_noise_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "ExampleGAN", "type": "Type[ExampleGAN]"}, {"lineNumber": 137, "col_offset": 2, "nodeName": "fit_gan", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "models", "type": "module"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "ExampleWGAN", "type": "Type[Any]"}, {"lineNumber": 189, "col_offset": 2, "nodeName": "fit_gan", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "values", "type": "Any"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "means", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "models", "type": "module"}, {"lineNumber": 236, "col_offset": 14, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "ExampleWGAN", "type": "Type[Any]"}, {"lineNumber": 239, "col_offset": 2, "nodeName": "fit_gan", "type": "Callable[..., None]"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "ExampleWGAN", "type": "Type[Any]"}, {"lineNumber": 243, "col_offset": 2, "nodeName": "restore", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "means", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "get_noise_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 9, "nodeName": "all", "type": "Any"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "means", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "values", "type": "Any"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "generate_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 20, "col_offset": 33, "nodeName": "values", "type": "Any"}, {"lineNumber": 20, "col_offset": 68, "nodeName": "means", "type": "Any"}, {"lineNumber": 21, "col_offset": 10, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "Input", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "Input", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "gen_in", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "Model", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "Input", "type": "Any"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "Input", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "data_input", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "discrim_in", "type": "Any"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "dense", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "Model", "type": "Any"}, {"lineNumber": 58, "col_offset": 2, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 59, "col_offset": 6, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "std", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 68, "col_offset": 9, "nodeName": "get_global_step", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 77, "col_offset": 2, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 82, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "std", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "get_global_step", "type": "Any"}, {"lineNumber": 90, "col_offset": 58, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 91, "col_offset": 2, "nodeName": "reloaded_gan", "type": "ExampleGAN"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "reloaded_gan", "type": "ExampleGAN"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "values", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "reloaded_values", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 108, "col_offset": 2, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 115, "col_offset": 2, "nodeName": "reloaded_gan", "type": "ExampleGAN"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 120, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "get_global_step", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "get_global_step", "type": "Any"}, {"lineNumber": 137, "col_offset": 2, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 138, "col_offset": 6, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "values", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "means", "type": "Any"}, {"lineNumber": 149, "col_offset": 9, "nodeName": "get_global_step", "type": "Any"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 168, "col_offset": 6, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 169, "col_offset": 6, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 170, "col_offset": 6, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 6, "nodeName": "gen_in", "type": "Any"}, {"lineNumber": 172, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "data_input", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 179, "col_offset": 6, "nodeName": "discrim_in", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "dense", "type": "Any"}, {"lineNumber": 181, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 189, "col_offset": 2, "nodeName": "gan", "type": "Any"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "gan", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "gan", "type": "Any"}, {"lineNumber": 196, "col_offset": 9, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 9, "nodeName": "std", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 218, "col_offset": 6, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "gen_in", "type": "Any"}, {"lineNumber": 220, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 224, "col_offset": 6, "nodeName": "data_input", "type": "Any"}, {"lineNumber": 225, "col_offset": 6, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 226, "col_offset": 6, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 227, "col_offset": 6, "nodeName": "discrim_in", "type": "Any"}, {"lineNumber": 228, "col_offset": 6, "nodeName": "dense", "type": "Any"}, {"lineNumber": 229, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 236, "col_offset": 14, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 238, "col_offset": 58, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 239, "col_offset": 2, "nodeName": "gan", "type": "Any"}, {"lineNumber": 239, "col_offset": 14, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "gan", "type": "Any"}, {"lineNumber": 242, "col_offset": 58, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 243, "col_offset": 2, "nodeName": "reloaded_gan", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "gan", "type": "Any"}, {"lineNumber": 248, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "gan", "type": "Any"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "reloaded_gan", "type": "Any"}, {"lineNumber": 252, "col_offset": 18, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 253, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "values", "type": "Any"}, {"lineNumber": 253, "col_offset": 26, "nodeName": "reloaded_values", "type": "Any"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 12, "col_offset": 33, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "data_inputs", "type": "Any"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "conditional_inputs", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "get_noise_input_shape", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "output", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "output", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 64, "col_offset": 57, "nodeName": "means", "type": "Any"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "mean", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 9, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 84, "col_offset": 51, "nodeName": "means", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "mean", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 93, "col_offset": 51, "nodeName": "means", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 123, "col_offset": 77, "nodeName": "i", "type": "int"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "reloaded_gan", "type": "ExampleGAN"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 125, "col_offset": 77, "nodeName": "i", "type": "int"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "values", "type": "Any"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "reloaded_values", "type": "Any"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "reloaded_gan", "type": "ExampleGAN"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 145, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "std", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 149, "col_offset": 9, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "Input", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "Input", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "gen_in", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "Model", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "Input", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "Input", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "data_input", "type": "Any"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 47, "nodeName": "discrim_in", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "dense", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "Model", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 194, "col_offset": 57, "nodeName": "means", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "mean", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 197, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "Input", "type": "Any"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "Input", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "gen_in", "type": "Any"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "Model", "type": "Any"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "Input", "type": "Any"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "Input", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "data_input", "type": "Any"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "conditional_input", "type": "Any"}, {"lineNumber": 227, "col_offset": 39, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 228, "col_offset": 47, "nodeName": "discrim_in", "type": "Any"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "dense", "type": "Any"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "Model", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 250, "col_offset": 51, "nodeName": "means", "type": "Any"}, {"lineNumber": 252, "col_offset": 51, "nodeName": "means", "type": "Any"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "gan", "type": "Any"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "gan", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "self", "type": "ExampleGAN"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "get_conditional_input_shapes", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "get_data_input_shapes", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "get_conditional_input_shapes", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "relu", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 53, "nodeName": "means", "type": "Any"}, {"lineNumber": 125, "col_offset": 53, "nodeName": "means", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "means", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "get_noise_input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "keras", "type": "Any"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 51, "nodeName": "output", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "keras", "type": "Any"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 51, "nodeName": "output", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "get_noise_input_shape", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "keras", "type": "Any"}, {"lineNumber": 221, "col_offset": 35, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 51, "nodeName": "output", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 228, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "keras", "type": "Any"}, {"lineNumber": 230, "col_offset": 35, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 230, "col_offset": 51, "nodeName": "output", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "self", "type": "ExampleGAN"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "self", "type": "ExampleGAN"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "self", "type": "ExampleGAN"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "nn", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "get_conditional_input_shapes", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "get_data_input_shapes", "type": "Any"}, {"lineNumber": 177, "col_offset": 32, "nodeName": "get_conditional_input_shapes", "type": "Any"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "relu", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "get_conditional_input_shapes", "type": "Any"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "get_data_input_shapes", "type": "Any"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "get_conditional_input_shapes", "type": "Any"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "relu", "type": "Any"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "tf", "type": "Any"}]