[{"lineNumber": 8, "col_offset": 0, "nodeName": "__author__", "type": "unicode"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "__copyright__", "type": "unicode"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "__license__", "type": "unicode"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "TensorFlowTestCase", "type": "Any"}, {"lineNumber": 33, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 2, "nodeName": "test_sklearn_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 2, "nodeName": "test_sklearn_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 2, "nodeName": "test_sklearn_skewed_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 2, "nodeName": "test_tf_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 2, "nodeName": "test_tg_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 2, "nodeName": "test_tf_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 2, "nodeName": "test_tg_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 245, "col_offset": 2, "nodeName": "test_tf_fittransform_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 2, "nodeName": "test_tg_fittransform_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 311, "col_offset": 2, "nodeName": "test_tf_skewed_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 346, "col_offset": 2, "nodeName": "test_tg_skewed_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 381, "col_offset": 2, "nodeName": "test_tf_skewed_missing_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 426, "col_offset": 2, "nodeName": "test_tg_skewed_missing_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 471, "col_offset": 2, "nodeName": "test_sklearn_multitask_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 503, "col_offset": 2, "nodeName": "test_tf_multitask_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 536, "col_offset": 2, "nodeName": "test_tg_multitask_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 570, "col_offset": 2, "nodeName": "test_tf_robust_multitask_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 605, "col_offset": 2, "nodeName": "test_tf_logreg_multitask_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 637, "col_offset": 2, "nodeName": "test_IRV_multitask_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 666, "col_offset": 2, "nodeName": "test_sklearn_multitask_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 699, "col_offset": 2, "nodeName": "test_tf_multitask_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 733, "col_offset": 2, "nodeName": "test_tg_multitask_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 767, "col_offset": 2, "nodeName": "test_tf_robust_multitask_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 805, "col_offset": 2, "nodeName": "test_graph_conv_singletask_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 858, "col_offset": 2, "nodeName": "test_graph_conv_singletask_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 912, "col_offset": 2, "nodeName": "test_DTNN_multitask_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 954, "col_offset": 2, "nodeName": "test_tensorgraph_DTNN_multitask_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 987, "col_offset": 2, "nodeName": "test_ANI_multitask_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1036, "col_offset": 2, "nodeName": "test_BP_symmetry_function_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1086, "col_offset": 2, "nodeName": "test_DAG_singletask_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1131, "col_offset": 2, "nodeName": "test_tensorgraph_DAG_singletask_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1169, "col_offset": 2, "nodeName": "test_weave_singletask_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1224, "col_offset": 2, "nodeName": "test_tensorgraph_weave_singletask_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1263, "col_offset": 2, "nodeName": "test_weave_singletask_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1319, "col_offset": 2, "nodeName": "test_tensorgraph_weave_singletask_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1359, "col_offset": 2, "nodeName": "test_siamese_singletask_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1429, "col_offset": 2, "nodeName": "test_attn_lstm_singletask_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1504, "col_offset": 2, "nodeName": "test_residual_lstm_singletask_classification_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1579, "col_offset": 2, "nodeName": "test_tf_progressive_regression_overfit", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "test_util", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "model_builder", "type": "Callable[[Any], Any]"}, {"lineNumber": 685, "col_offset": 4, "nodeName": "model_builder", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "p", "type": "float"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "fit_transformers", "type": "List[deepchem.trans.transformers.CoulombFitTransformer]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "fit_transformers", "type": "List[deepchem.trans.transformers.CoulombFitTransformer]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "p", "type": "float"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "p", "type": "float"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "p", "type": "float"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "y_nonzero", "type": "Any"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "num_nonzero", "type": "Any"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "weight_nonzero", "type": "Any"}, {"lineNumber": 404, "col_offset": 26, "nodeName": "weight_nonzero", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "p", "type": "float"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "y_nonzero", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "num_nonzero", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "weight_nonzero", "type": "Any"}, {"lineNumber": 449, "col_offset": 26, "nodeName": "weight_nonzero", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 512, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 580, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 639, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 646, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 647, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 651, "col_offset": 4, "nodeName": "IRV_transformer", "type": "deepchem.trans.transformers.IRVTransformer"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "dataset_trans", "type": "Any"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 668, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 678, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 680, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 701, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 702, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 704, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 735, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 737, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 738, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 743, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 744, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 745, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 771, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 772, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 778, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 802, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "g", "type": "Any"}, {"lineNumber": 810, "col_offset": 4, "nodeName": "sess", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 822, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 824, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 826, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 827, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 829, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "g", "type": "Any"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "sess", "type": "Any"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 865, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 867, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 871, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 872, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 875, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 881, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 908, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 917, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 918, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 919, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 920, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 921, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 922, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 925, "col_offset": 4, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 926, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 928, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialDTNNGraph"}, {"lineNumber": 933, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 950, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 959, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 960, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 961, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 962, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 963, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 964, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 967, "col_offset": 4, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 968, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 983, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 989, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 992, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 993, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 994, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 995, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 996, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 997, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1000, "col_offset": 4, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 1001, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1014, "col_offset": 8, "nodeName": "transformer", "type": "Union[deepchem.trans.transformers.NormalizationTransformer, deepchem.trans.transformers.ANITransformer]"}, {"lineNumber": 1014, "col_offset": 23, "nodeName": "transformers", "type": "List[Union[deepchem.trans.transformers.NormalizationTransformer, deepchem.trans.transformers.ANITransformer]]"}, {"lineNumber": 1017, "col_offset": 4, "nodeName": "n_feat", "type": "Any"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 1038, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 1041, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1042, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 1043, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 1044, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 1045, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 1046, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1049, "col_offset": 4, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 1050, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1064, "col_offset": 8, "nodeName": "transformer", "type": "Union[deepchem.trans.transformers.NormalizationTransformer, deepchem.trans.transformers.ANITransformer]"}, {"lineNumber": 1064, "col_offset": 23, "nodeName": "transformers", "type": "List[Union[deepchem.trans.transformers.NormalizationTransformer, deepchem.trans.transformers.ANITransformer]]"}, {"lineNumber": 1067, "col_offset": 4, "nodeName": "n_feat", "type": "Any"}, {"lineNumber": 1082, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 1090, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1093, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 1094, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1095, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 1098, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1103, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1104, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1105, "col_offset": 4, "nodeName": "transformer", "type": "deepchem.trans.transformers.DAGTransformer"}, {"lineNumber": 1106, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1108, "col_offset": 4, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.SequentialDAGGraph"}, {"lineNumber": 1127, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 1135, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1138, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 1139, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1140, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 1143, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1148, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1149, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1150, "col_offset": 4, "nodeName": "transformer", "type": "deepchem.trans.transformers.DAGTransformer"}, {"lineNumber": 1151, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1165, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 1173, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1176, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 1177, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1178, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 1181, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1183, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1185, "col_offset": 4, "nodeName": "n_atom_feat", "type": "int"}, {"lineNumber": 1186, "col_offset": 4, "nodeName": "n_pair_feat", "type": "int"}, {"lineNumber": 1187, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1188, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1189, "col_offset": 4, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 1220, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 1228, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1231, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 1232, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1233, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 1236, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1238, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1240, "col_offset": 4, "nodeName": "n_atom_feat", "type": "int"}, {"lineNumber": 1241, "col_offset": 4, "nodeName": "n_pair_feat", "type": "int"}, {"lineNumber": 1242, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1243, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1259, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 1267, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1270, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 1271, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1272, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 1275, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1280, "col_offset": 4, "nodeName": "n_atom_feat", "type": "int"}, {"lineNumber": 1281, "col_offset": 4, "nodeName": "n_pair_feat", "type": "int"}, {"lineNumber": 1282, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1283, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1284, "col_offset": 4, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 1315, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 1323, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1326, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 1327, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1328, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 1331, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1336, "col_offset": 4, "nodeName": "n_atom_feat", "type": "int"}, {"lineNumber": 1337, "col_offset": 4, "nodeName": "n_pair_feat", "type": "int"}, {"lineNumber": 1338, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1339, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1355, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 1363, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1364, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1365, "col_offset": 4, "nodeName": "max_depth", "type": "int"}, {"lineNumber": 1366, "col_offset": 4, "nodeName": "n_pos", "type": "int"}, {"lineNumber": 1367, "col_offset": 4, "nodeName": "n_neg", "type": "int"}, {"lineNumber": 1368, "col_offset": 4, "nodeName": "test_batch_size", "type": "int"}, {"lineNumber": 1369, "col_offset": 4, "nodeName": "n_train_trials", "type": "int"}, {"lineNumber": 1370, "col_offset": 4, "nodeName": "support_batch_size", "type": "int"}, {"lineNumber": 1373, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 1374, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1375, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 1378, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1380, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1382, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1433, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1434, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1435, "col_offset": 4, "nodeName": "max_depth", "type": "int"}, {"lineNumber": 1436, "col_offset": 4, "nodeName": "n_pos", "type": "int"}, {"lineNumber": 1437, "col_offset": 4, "nodeName": "n_neg", "type": "int"}, {"lineNumber": 1438, "col_offset": 4, "nodeName": "test_batch_size", "type": "int"}, {"lineNumber": 1439, "col_offset": 4, "nodeName": "support_batch_size", "type": "int"}, {"lineNumber": 1440, "col_offset": 4, "nodeName": "n_train_trials", "type": "int"}, {"lineNumber": 1443, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 1444, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1445, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 1448, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1449, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1451, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1506, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1507, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1508, "col_offset": 4, "nodeName": "max_depth", "type": "int"}, {"lineNumber": 1509, "col_offset": 4, "nodeName": "n_pos", "type": "int"}, {"lineNumber": 1510, "col_offset": 4, "nodeName": "n_neg", "type": "int"}, {"lineNumber": 1511, "col_offset": 4, "nodeName": "test_batch_size", "type": "int"}, {"lineNumber": 1512, "col_offset": 4, "nodeName": "support_batch_size", "type": "int"}, {"lineNumber": 1513, "col_offset": 4, "nodeName": "n_train_trials", "type": "int"}, {"lineNumber": 1516, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 1517, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1518, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 1521, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1523, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1525, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1582, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1583, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 1584, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 1585, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 1589, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 1590, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 1591, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 1592, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 1594, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1596, "col_offset": 4, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1614, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 1615, "col_offset": 4, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 71, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "p", "type": "float"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 103, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 129, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "TensorflowMultiTaskRegressor", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskRegressor]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 157, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 161, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "TensorGraphMultiTaskRegressor", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskRegressor]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "set_optimizer", "type": "Callable[[Any], None]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 190, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 191, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 194, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 194, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 196, "col_offset": 46, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "TensorflowMultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 222, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 226, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 226, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 226, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 228, "col_offset": 46, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "TensorGraphMultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "set_optimizer", "type": "Callable[[Any], None]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 253, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 254, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 254, "col_offset": 46, "nodeName": "n_features", "type": "int"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 257, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 257, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 257, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 260, "col_offset": 42, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "TensorflowMultiTaskFitTransformRegressor", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskFitTransformRegressor]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 286, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 287, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 287, "col_offset": 46, "nodeName": "n_features", "type": "int"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 290, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 290, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 290, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 290, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 293, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 293, "col_offset": 42, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "TensorGraphMultiTaskFitTransformRegressor", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskFitTransformRegressor]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "set_optimizer", "type": "Callable[[Any], None]"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 322, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 323, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 324, "col_offset": 30, "nodeName": "p", "type": "float"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 327, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 327, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 327, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 327, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 327, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 329, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 329, "col_offset": 46, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "TensorflowMultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 339, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 343, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 343, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 357, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 357, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 359, "col_offset": 30, "nodeName": "p", "type": "float"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 362, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 362, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 362, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 362, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 362, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 364, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 364, "col_offset": 46, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "TensorGraphMultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "set_optimizer", "type": "Callable[[Any], None]"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 374, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 378, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 378, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 396, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 396, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 397, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 397, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 398, "col_offset": 30, "nodeName": "p", "type": "float"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "y_flat", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "w_flat", "type": "Any"}, {"lineNumber": 401, "col_offset": 16, "nodeName": "y_flat", "type": "Any"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "count_nonzero", "type": "Any"}, {"lineNumber": 402, "col_offset": 35, "nodeName": "y_nonzero", "type": "Any"}, {"lineNumber": 403, "col_offset": 38, "nodeName": "num_nonzero", "type": "Any"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "w_flat", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 405, "col_offset": 19, "nodeName": "w_flat", "type": "Any"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 407, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 407, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 407, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 407, "col_offset": 54, "nodeName": "ids", "type": "Any"}, {"lineNumber": 409, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 409, "col_offset": 46, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "TensorflowMultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier]"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 423, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 423, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 441, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 442, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 442, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 443, "col_offset": 30, "nodeName": "p", "type": "float"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "y_flat", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "w_flat", "type": "Any"}, {"lineNumber": 446, "col_offset": 16, "nodeName": "y_flat", "type": "Any"}, {"lineNumber": 447, "col_offset": 18, "nodeName": "count_nonzero", "type": "Any"}, {"lineNumber": 447, "col_offset": 35, "nodeName": "y_nonzero", "type": "Any"}, {"lineNumber": 448, "col_offset": 38, "nodeName": "num_nonzero", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "w_flat", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 450, "col_offset": 19, "nodeName": "w_flat", "type": "Any"}, {"lineNumber": 452, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 452, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 452, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 452, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 452, "col_offset": 54, "nodeName": "ids", "type": "Any"}, {"lineNumber": 454, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 454, "col_offset": 46, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "TensorGraphMultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier]"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "set_optimizer", "type": "Callable[[Any], None]"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 464, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 468, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 468, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 480, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 480, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 481, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 481, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 484, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 484, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 484, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 484, "col_offset": 54, "nodeName": "ids", "type": "Any"}, {"lineNumber": 486, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 490, "col_offset": 6, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "SingletaskToMultitask", "type": "Type[deepchem.models.multitask.SingletaskToMultitask]"}, {"lineNumber": 493, "col_offset": 44, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 493, "col_offset": 51, "nodeName": "model_builder", "type": "Callable[[Any], Any]"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 496, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 500, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 512, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 512, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 513, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 513, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 516, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 516, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 516, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 516, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 516, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 518, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "TensorflowMultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier]"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 529, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 533, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 533, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 546, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 546, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 547, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 547, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 550, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 550, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 550, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 550, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 550, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 552, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "TensorGraphMultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier]"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "set_optimizer", "type": "Callable[[Any], None]"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 563, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 567, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 567, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 579, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 579, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 580, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 580, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 583, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 583, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 583, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 583, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 583, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 585, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "RobustMultitaskClassifier", "type": "Type[deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier]"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 598, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 602, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 602, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 614, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 614, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 615, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 615, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 618, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 618, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 618, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 618, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 618, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 620, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "TensorflowLogisticRegression", "type": "Type[deepchem.models.tensorflow_models.lr.TensorflowLogisticRegression]"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 630, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 634, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 634, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 646, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 646, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 650, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 650, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 650, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 650, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 650, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 651, "col_offset": 22, "nodeName": "IRVTransformer", "type": "Type[deepchem.trans.transformers.IRVTransformer]"}, {"lineNumber": 651, "col_offset": 49, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 651, "col_offset": 58, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 652, "col_offset": 20, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 652, "col_offset": 46, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 653, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "TensorflowMultiTaskIRVClassifier", "type": "Type[deepchem.models.tensorflow_models.IRV.TensorflowMultiTaskIRVClassifier]"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 659, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 659, "col_offset": 14, "nodeName": "dataset_trans", "type": "Any"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 663, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 663, "col_offset": 28, "nodeName": "dataset_trans", "type": "Any"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 675, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 675, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 676, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 676, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 677, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 677, "col_offset": 34, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 680, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 680, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 680, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 680, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 680, "col_offset": 54, "nodeName": "ids", "type": "Any"}, {"lineNumber": 682, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 686, "col_offset": 6, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 689, "col_offset": 12, "nodeName": "SingletaskToMultitask", "type": "Type[deepchem.models.multitask.SingletaskToMultitask]"}, {"lineNumber": 689, "col_offset": 44, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 689, "col_offset": 51, "nodeName": "model_builder", "type": "Callable[[Any], Any]"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 692, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 696, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 696, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 708, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 708, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 709, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 709, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 713, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 713, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 713, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 713, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 713, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 715, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 717, "col_offset": 12, "nodeName": "TensorflowMultiTaskRegressor", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskRegressor]"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 726, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 730, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 730, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 741, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 742, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 742, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 743, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 743, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 745, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 747, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 747, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 747, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 747, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 747, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 749, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 751, "col_offset": 12, "nodeName": "TensorGraphMultiTaskRegressor", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskRegressor]"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 757, "col_offset": 4, "nodeName": "set_optimizer", "type": "Callable[[Any], None]"}, {"lineNumber": 760, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 760, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 761, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 764, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 764, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 770, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 778, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 778, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 779, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 779, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 783, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 783, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 783, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 783, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 783, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 785, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 787, "col_offset": 12, "nodeName": "RobustMultitaskRegressor", "type": "Type[deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskRegressor]"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 798, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 799, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 802, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 802, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 810, "col_offset": 11, "nodeName": "Session", "type": "Any"}, {"lineNumber": 817, "col_offset": 17, "nodeName": "ConvMolFeaturizer", "type": "Type[deepchem.feat.graph_features.ConvMolFeaturizer]"}, {"lineNumber": 819, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 819, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 820, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 822, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 822, "col_offset": 31, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 824, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 824, "col_offset": 46, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 829, "col_offset": 18, "nodeName": "SequentialGraph", "type": "Type[deepchem.models.tf_new_models.graph_models.SequentialGraph]"}, {"lineNumber": 829, "col_offset": 40, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 835, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 838, "col_offset": 12, "nodeName": "MultitaskGraphClassifier", "type": "Type[deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier]"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 850, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 851, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 854, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 854, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 862, "col_offset": 8, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 863, "col_offset": 11, "nodeName": "Session", "type": "Any"}, {"lineNumber": 870, "col_offset": 17, "nodeName": "ConvMolFeaturizer", "type": "Type[deepchem.feat.graph_features.ConvMolFeaturizer]"}, {"lineNumber": 872, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 872, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 873, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 875, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 875, "col_offset": 31, "nodeName": "input_file", "type": "Union[unicode, str]"}, {"lineNumber": 877, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 883, "col_offset": 18, "nodeName": "SequentialGraph", "type": "Type[deepchem.models.tf_new_models.graph_models.SequentialGraph]"}, {"lineNumber": 883, "col_offset": 40, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 886, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "MultitaskGraphRegressor", "type": "Type[deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor]"}, {"lineNumber": 893, "col_offset": 8, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 894, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 895, "col_offset": 8, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 904, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 904, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 905, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 908, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 908, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 917, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 917, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 918, "col_offset": 14, "nodeName": "loadmat", "type": "Any"}, {"lineNumber": 918, "col_offset": 31, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 919, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 920, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 921, "col_offset": 8, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 921, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 922, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 922, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 922, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 922, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 923, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 924, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 925, "col_offset": 14, "nodeName": "shape", "type": "Any"}, {"lineNumber": 928, "col_offset": 18, "nodeName": "SequentialDTNNGraph", "type": "Type[deepchem.models.tf_new_models.graph_models.SequentialDTNNGraph]"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 930, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 934, "col_offset": 12, "nodeName": "MultitaskGraphRegressor", "type": "Type[deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor]"}, {"lineNumber": 935, "col_offset": 8, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialDTNNGraph"}, {"lineNumber": 936, "col_offset": 8, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 937, "col_offset": 8, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 946, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 946, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 950, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 950, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 956, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 959, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 959, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 960, "col_offset": 14, "nodeName": "loadmat", "type": "Any"}, {"lineNumber": 960, "col_offset": 31, "nodeName": "input_file", "type": "Union[unicode, str]"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 962, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 963, "col_offset": 8, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 963, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 964, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 964, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 964, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 964, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 965, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 966, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 967, "col_offset": 14, "nodeName": "shape", "type": "Any"}, {"lineNumber": 970, "col_offset": 12, "nodeName": "DTNNTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.graph_models.DTNNTensorGraph]"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 980, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 980, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 983, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 983, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 989, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 989, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 990, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 991, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 992, "col_offset": 14, "nodeName": "loadmat", "type": "Any"}, {"lineNumber": 992, "col_offset": 31, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 993, "col_offset": 8, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 994, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 995, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 996, "col_offset": 8, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 996, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 997, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 997, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 997, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 997, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 998, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 999, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1000, "col_offset": 14, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1015, "col_offset": 6, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1018, "col_offset": 12, "nodeName": "ANIRegression", "type": "Type[deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression]"}, {"lineNumber": 1019, "col_offset": 8, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 1021, "col_offset": 8, "nodeName": "n_feat", "type": "Any"}, {"lineNumber": 1029, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 1029, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1032, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 1032, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1038, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1038, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 1039, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1040, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 1041, "col_offset": 14, "nodeName": "loadmat", "type": "Any"}, {"lineNumber": 1041, "col_offset": 31, "nodeName": "input_file", "type": "Union[unicode, str]"}, {"lineNumber": 1042, "col_offset": 8, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 1043, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 1044, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1045, "col_offset": 8, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 1045, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 1046, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 1046, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 1046, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 1046, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 1047, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 1048, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1049, "col_offset": 14, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1065, "col_offset": 6, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1068, "col_offset": 12, "nodeName": "ANIRegression", "type": "Type[deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression]"}, {"lineNumber": 1069, "col_offset": 8, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "n_feat", "type": "Any"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 1079, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1082, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 1082, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1088, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1089, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 1093, "col_offset": 17, "nodeName": "ConvMolFeaturizer", "type": "Type[deepchem.feat.graph_features.ConvMolFeaturizer]"}, {"lineNumber": 1095, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1095, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 1096, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 1098, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 1098, "col_offset": 31, "nodeName": "input_file", "type": "Union[unicode, str]"}, {"lineNumber": 1100, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 1101, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1105, "col_offset": 18, "nodeName": "DAGTransformer", "type": "Type[deepchem.trans.transformers.DAGTransformer]"}, {"lineNumber": 1106, "col_offset": 14, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 1106, "col_offset": 36, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1108, "col_offset": 12, "nodeName": "SequentialDAGGraph", "type": "Type[deepchem.models.tf_new_models.graph_models.SequentialDAGGraph]"}, {"lineNumber": 1109, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1110, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1112, "col_offset": 12, "nodeName": "MultitaskGraphRegressor", "type": "Type[deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor]"}, {"lineNumber": 1113, "col_offset": 8, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.SequentialDAGGraph"}, {"lineNumber": 1114, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1115, "col_offset": 8, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1124, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 1124, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1125, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 1127, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1127, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1133, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1134, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 1138, "col_offset": 17, "nodeName": "ConvMolFeaturizer", "type": "Type[deepchem.feat.graph_features.ConvMolFeaturizer]"}, {"lineNumber": 1140, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1140, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 1141, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 1143, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 1143, "col_offset": 31, "nodeName": "input_file", "type": "Union[unicode, str]"}, {"lineNumber": 1145, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 1146, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1150, "col_offset": 18, "nodeName": "DAGTransformer", "type": "Type[deepchem.trans.transformers.DAGTransformer]"}, {"lineNumber": 1151, "col_offset": 14, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 1151, "col_offset": 36, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1153, "col_offset": 12, "nodeName": "DAGTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.graph_models.DAGTensorGraph]"}, {"lineNumber": 1154, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1163, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 1163, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1165, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 1165, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1171, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1172, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 1176, "col_offset": 17, "nodeName": "WeaveFeaturizer", "type": "Type[deepchem.feat.graph_features.WeaveFeaturizer]"}, {"lineNumber": 1178, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1178, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 1179, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 1181, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 1181, "col_offset": 31, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 1183, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 1183, "col_offset": 46, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 1191, "col_offset": 12, "nodeName": "AlternateSequentialWeaveGraph", "type": "Type[deepchem.models.tf_new_models.graph_models.AlternateSequentialWeaveGraph]"}, {"lineNumber": 1192, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1196, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1197, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1198, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1199, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1200, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1204, "col_offset": 12, "nodeName": "MultitaskGraphClassifier", "type": "Type[deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier]"}, {"lineNumber": 1205, "col_offset": 8, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.AlternateSequentialWeaveGraph"}, {"lineNumber": 1206, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1207, "col_offset": 8, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1216, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 1216, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1217, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 1220, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1220, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1226, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1227, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 1231, "col_offset": 17, "nodeName": "WeaveFeaturizer", "type": "Type[deepchem.feat.graph_features.WeaveFeaturizer]"}, {"lineNumber": 1233, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1233, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 1234, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 1236, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 1236, "col_offset": 31, "nodeName": "input_file", "type": "Union[unicode, str]"}, {"lineNumber": 1238, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 1238, "col_offset": 46, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 1245, "col_offset": 12, "nodeName": "WeaveTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.graph_models.WeaveTensorGraph]"}, {"lineNumber": 1246, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1256, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 1256, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1259, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 1259, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1265, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1266, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 1270, "col_offset": 17, "nodeName": "WeaveFeaturizer", "type": "Type[deepchem.feat.graph_features.WeaveFeaturizer]"}, {"lineNumber": 1272, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1272, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 1273, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 1275, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 1275, "col_offset": 31, "nodeName": "input_file", "type": "Union[unicode, str]"}, {"lineNumber": 1277, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 1278, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1286, "col_offset": 12, "nodeName": "AlternateSequentialWeaveGraph", "type": "Type[deepchem.models.tf_new_models.graph_models.AlternateSequentialWeaveGraph]"}, {"lineNumber": 1287, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1291, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1292, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1293, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1294, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1295, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1299, "col_offset": 12, "nodeName": "MultitaskGraphRegressor", "type": "Type[deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor]"}, {"lineNumber": 1300, "col_offset": 8, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.AlternateSequentialWeaveGraph"}, {"lineNumber": 1301, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1302, "col_offset": 8, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1311, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 1311, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1312, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 1315, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1315, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1321, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1322, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 1326, "col_offset": 17, "nodeName": "WeaveFeaturizer", "type": "Type[deepchem.feat.graph_features.WeaveFeaturizer]"}, {"lineNumber": 1328, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1328, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 1329, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 1331, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 1331, "col_offset": 31, "nodeName": "input_file", "type": "Union[unicode, str]"}, {"lineNumber": 1333, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 1334, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1341, "col_offset": 12, "nodeName": "WeaveTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.graph_models.WeaveTensorGraph]"}, {"lineNumber": 1342, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1352, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 1352, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1355, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 1355, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1361, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1362, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 1370, "col_offset": 25, "nodeName": "n_pos", "type": "int"}, {"lineNumber": 1370, "col_offset": 33, "nodeName": "n_neg", "type": "int"}, {"lineNumber": 1373, "col_offset": 17, "nodeName": "ConvMolFeaturizer", "type": "Type[deepchem.feat.graph_features.ConvMolFeaturizer]"}, {"lineNumber": 1375, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1375, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 1376, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 1378, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 1378, "col_offset": 31, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 1380, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 1380, "col_offset": 46, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 1382, "col_offset": 20, "nodeName": "SequentialSupportGraph", "type": "Type[deepchem.models.tf_new_models.graph_models.SequentialSupportGraph]"}, {"lineNumber": 1382, "col_offset": 49, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1386, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1390, "col_offset": 4, "nodeName": "add_test", "type": "Callable[[Any], None]"}, {"lineNumber": 1392, "col_offset": 4, "nodeName": "add_support", "type": "Callable[[Any], None]"}, {"lineNumber": 1393, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1394, "col_offset": 4, "nodeName": "add_test", "type": "Callable[[Any], None]"}, {"lineNumber": 1395, "col_offset": 4, "nodeName": "add_support", "type": "Callable[[Any], None]"}, {"lineNumber": 1397, "col_offset": 12, "nodeName": "SupportGraphClassifier", "type": "Type[deepchem.models.tf_new_models.support_classifier.SupportGraphClassifier]"}, {"lineNumber": 1398, "col_offset": 8, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1405, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 1406, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1407, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 1414, "col_offset": 16, "nodeName": "evaluate", "type": "Callable[..., Tuple[Dict[int, Any], Dict[int, Any]]]"}, {"lineNumber": 1415, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1416, "col_offset": 8, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1431, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1432, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 1439, "col_offset": 25, "nodeName": "n_pos", "type": "int"}, {"lineNumber": 1439, "col_offset": 33, "nodeName": "n_neg", "type": "int"}, {"lineNumber": 1443, "col_offset": 17, "nodeName": "ConvMolFeaturizer", "type": "Type[deepchem.feat.graph_features.ConvMolFeaturizer]"}, {"lineNumber": 1445, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1445, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 1446, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 1448, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 1448, "col_offset": 31, "nodeName": "input_file", "type": "Union[unicode, str]"}, {"lineNumber": 1449, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 1449, "col_offset": 46, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 1451, "col_offset": 20, "nodeName": "SequentialSupportGraph", "type": "Type[deepchem.models.tf_new_models.graph_models.SequentialSupportGraph]"}, {"lineNumber": 1451, "col_offset": 49, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1455, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1459, "col_offset": 4, "nodeName": "add_test", "type": "Callable[[Any], None]"}, {"lineNumber": 1461, "col_offset": 4, "nodeName": "add_support", "type": "Callable[[Any], None]"}, {"lineNumber": 1462, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1463, "col_offset": 4, "nodeName": "add_test", "type": "Callable[[Any], None]"}, {"lineNumber": 1464, "col_offset": 4, "nodeName": "add_support", "type": "Callable[[Any], None]"}, {"lineNumber": 1467, "col_offset": 4, "nodeName": "join", "type": "Callable[[Any], None]"}, {"lineNumber": 1471, "col_offset": 12, "nodeName": "SupportGraphClassifier", "type": "Type[deepchem.models.tf_new_models.support_classifier.SupportGraphClassifier]"}, {"lineNumber": 1472, "col_offset": 8, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1479, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 1480, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1481, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 1488, "col_offset": 16, "nodeName": "evaluate", "type": "Callable[..., Tuple[Dict[int, Any], Dict[int, Any]]]"}, {"lineNumber": 1489, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1490, "col_offset": 8, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1512, "col_offset": 25, "nodeName": "n_pos", "type": "int"}, {"lineNumber": 1512, "col_offset": 33, "nodeName": "n_neg", "type": "int"}, {"lineNumber": 1516, "col_offset": 17, "nodeName": "ConvMolFeaturizer", "type": "Type[deepchem.feat.graph_features.ConvMolFeaturizer]"}, {"lineNumber": 1518, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1518, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 1519, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 1521, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 1521, "col_offset": 31, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 1523, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 1523, "col_offset": 46, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 1525, "col_offset": 20, "nodeName": "SequentialSupportGraph", "type": "Type[deepchem.models.tf_new_models.graph_models.SequentialSupportGraph]"}, {"lineNumber": 1525, "col_offset": 49, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1529, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1533, "col_offset": 4, "nodeName": "add_test", "type": "Callable[[Any], None]"}, {"lineNumber": 1535, "col_offset": 4, "nodeName": "add_support", "type": "Callable[[Any], None]"}, {"lineNumber": 1536, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 1537, "col_offset": 4, "nodeName": "add_test", "type": "Callable[[Any], None]"}, {"lineNumber": 1538, "col_offset": 4, "nodeName": "add_support", "type": "Callable[[Any], None]"}, {"lineNumber": 1541, "col_offset": 4, "nodeName": "join", "type": "Callable[[Any], None]"}, {"lineNumber": 1545, "col_offset": 12, "nodeName": "SupportGraphClassifier", "type": "Type[deepchem.models.tf_new_models.support_classifier.SupportGraphClassifier]"}, {"lineNumber": 1546, "col_offset": 8, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1554, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 1555, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1556, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 1563, "col_offset": 16, "nodeName": "evaluate", "type": "Callable[..., Tuple[Dict[int, Any], Dict[int, Any]]]"}, {"lineNumber": 1564, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1565, "col_offset": 8, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1581, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1588, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 1589, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 1589, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 1590, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1590, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 1590, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 1591, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1592, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1594, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 1594, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 1594, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 1594, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 1594, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 1596, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 1596, "col_offset": 31, "nodeName": "rms_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1597, "col_offset": 12, "nodeName": "ProgressiveMultitaskRegressor", "type": "Type[deepchem.models.tensorflow_models.progressive_multitask.ProgressiveMultitaskRegressor]"}, {"lineNumber": 1598, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1599, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 1610, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 1610, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1611, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 1614, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1614, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1615, "col_offset": 13, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 1615, "col_offset": 27, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 35, "col_offset": 55, "nodeName": "__file__", "type": "str"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "metrics", "type": "module"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 71, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "metrics", "type": "module"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskRegressor"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskRegressor"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskRegressor"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 157, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "metrics", "type": "module"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskRegressor"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskRegressor"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskRegressor"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskRegressor"}, {"lineNumber": 178, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 190, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 196, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 222, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 226, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 228, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 253, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "CoulombFitTransformer", "type": "Type[deepchem.trans.transformers.CoulombFitTransformer]"}, {"lineNumber": 259, "col_offset": 55, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 260, "col_offset": 42, "nodeName": "metrics", "type": "module"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "n_features", "type": "int"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "n_features", "type": "int"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "fit_transformers", "type": "List[deepchem.trans.transformers.CoulombFitTransformer]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskFitTransformRegressor"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskFitTransformRegressor"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskFitTransformRegressor"}, {"lineNumber": 275, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 286, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 288, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 289, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 290, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "CoulombFitTransformer", "type": "Type[deepchem.trans.transformers.CoulombFitTransformer]"}, {"lineNumber": 292, "col_offset": 55, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 293, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 293, "col_offset": 42, "nodeName": "metrics", "type": "module"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "n_features", "type": "int"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "n_features", "type": "int"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "fit_transformers", "type": "List[deepchem.trans.transformers.CoulombFitTransformer]"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskFitTransformRegressor"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskFitTransformRegressor"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskFitTransformRegressor"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskFitTransformRegressor"}, {"lineNumber": 308, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 322, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 325, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 327, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 329, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 329, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 343, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 343, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 357, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 360, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 362, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 364, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 364, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 371, "col_offset": 24, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 378, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 378, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 396, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 399, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 399, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 400, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 400, "col_offset": 36, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 400, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 403, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "y_nonzero", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 405, "col_offset": 28, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 405, "col_offset": 39, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 409, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 409, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 416, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 423, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 423, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 441, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 444, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 445, "col_offset": 21, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 445, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 445, "col_offset": 36, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 445, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 447, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 448, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "y_nonzero", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 450, "col_offset": 28, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 450, "col_offset": 39, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 452, "col_offset": 14, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 454, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 454, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 460, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 461, "col_offset": 24, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 468, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 468, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 469, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "task", "type": "int"}, {"lineNumber": 474, "col_offset": 33, "nodeName": "task", "type": "int"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 480, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 483, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 483, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 484, "col_offset": 14, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 486, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 487, "col_offset": 48, "nodeName": "mean", "type": "Any"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 491, "col_offset": 13, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 491, "col_offset": 36, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 491, "col_offset": 51, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 500, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 500, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 501, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 512, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 514, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 514, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 515, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 515, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 516, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 518, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 519, "col_offset": 49, "nodeName": "mean", "type": "Any"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 526, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 533, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 533, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 534, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 546, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 548, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 548, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 549, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 549, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 550, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 552, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 553, "col_offset": 49, "nodeName": "mean", "type": "Any"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 559, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 560, "col_offset": 24, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 567, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskClassifier"}, {"lineNumber": 567, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 568, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 579, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 581, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 581, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 582, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 582, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 583, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 585, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 586, "col_offset": 49, "nodeName": "mean", "type": "Any"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 595, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier"}, {"lineNumber": 602, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier"}, {"lineNumber": 602, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 603, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 614, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 616, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 616, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 617, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 617, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 618, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 620, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 621, "col_offset": 49, "nodeName": "mean", "type": "Any"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 627, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.lr.TensorflowLogisticRegression"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.lr.TensorflowLogisticRegression"}, {"lineNumber": 634, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.lr.TensorflowLogisticRegression"}, {"lineNumber": 634, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 635, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 646, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 648, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 648, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 649, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 649, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 650, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 651, "col_offset": 22, "nodeName": "trans", "type": "module"}, {"lineNumber": 652, "col_offset": 20, "nodeName": "IRV_transformer", "type": "deepchem.trans.transformers.IRVTransformer"}, {"lineNumber": 653, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 654, "col_offset": 49, "nodeName": "mean", "type": "Any"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 656, "col_offset": 53, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 659, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.IRV.TensorflowMultiTaskIRVClassifier"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.IRV.TensorflowMultiTaskIRVClassifier"}, {"lineNumber": 663, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.IRV.TensorflowMultiTaskIRVClassifier"}, {"lineNumber": 663, "col_offset": 44, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 664, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 669, "col_offset": 24, "nodeName": "task", "type": "int"}, {"lineNumber": 669, "col_offset": 33, "nodeName": "task", "type": "int"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 675, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 678, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 678, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 680, "col_offset": 14, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 682, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 683, "col_offset": 43, "nodeName": "mean", "type": "Any"}, {"lineNumber": 686, "col_offset": 22, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 687, "col_offset": 13, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 687, "col_offset": 36, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 687, "col_offset": 51, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 689, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 696, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 696, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 697, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 708, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 710, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 710, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 711, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 711, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 713, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 715, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 716, "col_offset": 53, "nodeName": "mean", "type": "Any"}, {"lineNumber": 717, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 723, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskRegressor"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskRegressor"}, {"lineNumber": 730, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskRegressor"}, {"lineNumber": 730, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 731, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 741, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 742, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 744, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 744, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 745, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 745, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 745, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 747, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 749, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 750, "col_offset": 53, "nodeName": "mean", "type": "Any"}, {"lineNumber": 751, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 756, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 757, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskRegressor"}, {"lineNumber": 757, "col_offset": 24, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 760, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskRegressor"}, {"lineNumber": 761, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskRegressor"}, {"lineNumber": 764, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.TensorGraphMultiTaskRegressor"}, {"lineNumber": 764, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 765, "col_offset": 11, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 770, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 778, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 780, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 780, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 781, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 781, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 783, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 785, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 786, "col_offset": 53, "nodeName": "mean", "type": "Any"}, {"lineNumber": 787, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 795, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskRegressor"}, {"lineNumber": 799, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskRegressor"}, {"lineNumber": 802, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskRegressor"}, {"lineNumber": 802, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 803, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 810, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 810, "col_offset": 28, "nodeName": "g", "type": "Any"}, {"lineNumber": 817, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 819, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 819, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 820, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 821, "col_offset": 14, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 821, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 822, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 824, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 824, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 829, "col_offset": 18, "nodeName": "nn", "type": "module"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 830, "col_offset": 20, "nodeName": "GraphConv", "type": "Type[deepchem.nn.layers.GraphConv]"}, {"lineNumber": 830, "col_offset": 40, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 831, "col_offset": 20, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 832, "col_offset": 20, "nodeName": "GraphPool", "type": "Type[deepchem.nn.layers.GraphPool]"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 834, "col_offset": 20, "nodeName": "Dense", "type": "Type[deepchem.nn.copy.Dense]"}, {"lineNumber": 835, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 835, "col_offset": 20, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 836, "col_offset": 20, "nodeName": "GraphGather", "type": "Type[deepchem.nn.layers.GraphGather]"}, {"lineNumber": 836, "col_offset": 38, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 838, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 842, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier"}, {"lineNumber": 851, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier"}, {"lineNumber": 854, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier"}, {"lineNumber": 854, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 856, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 862, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 863, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 863, "col_offset": 28, "nodeName": "g", "type": "Any"}, {"lineNumber": 870, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 872, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 872, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 873, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 874, "col_offset": 14, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 874, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 875, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 877, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 878, "col_offset": 53, "nodeName": "mean", "type": "Any"}, {"lineNumber": 883, "col_offset": 18, "nodeName": "nn", "type": "module"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 884, "col_offset": 20, "nodeName": "GraphConv", "type": "Type[deepchem.nn.layers.GraphConv]"}, {"lineNumber": 884, "col_offset": 40, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 885, "col_offset": 20, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 886, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 886, "col_offset": 20, "nodeName": "GraphPool", "type": "Type[deepchem.nn.layers.GraphPool]"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 888, "col_offset": 20, "nodeName": "Dense", "type": "Type[deepchem.nn.copy.Dense]"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 889, "col_offset": 20, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 890, "col_offset": 20, "nodeName": "GraphGather", "type": "Type[deepchem.nn.layers.GraphGather]"}, {"lineNumber": 890, "col_offset": 38, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 896, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 904, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor"}, {"lineNumber": 905, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor"}, {"lineNumber": 908, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor"}, {"lineNumber": 908, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 910, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 917, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 917, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 918, "col_offset": 14, "nodeName": "io", "type": "Any"}, {"lineNumber": 921, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 922, "col_offset": 14, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 923, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 924, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 924, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 925, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 928, "col_offset": 18, "nodeName": "nn", "type": "module"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialDTNNGraph"}, {"lineNumber": 929, "col_offset": 20, "nodeName": "DTNNEmbedding", "type": "Type[deepchem.nn.layers.DTNNEmbedding]"}, {"lineNumber": 930, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialDTNNGraph"}, {"lineNumber": 930, "col_offset": 20, "nodeName": "DTNNStep", "type": "Type[deepchem.nn.layers.DTNNStep]"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialDTNNGraph"}, {"lineNumber": 931, "col_offset": 20, "nodeName": "DTNNStep", "type": "Type[deepchem.nn.layers.DTNNStep]"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialDTNNGraph"}, {"lineNumber": 932, "col_offset": 20, "nodeName": "DTNNGather", "type": "Type[deepchem.nn.layers.DTNNGather]"}, {"lineNumber": 934, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 938, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 946, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor"}, {"lineNumber": 950, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor"}, {"lineNumber": 950, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 952, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 956, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 959, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 959, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 960, "col_offset": 14, "nodeName": "io", "type": "Any"}, {"lineNumber": 963, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 964, "col_offset": 14, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 965, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 966, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 966, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 967, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 970, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 974, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 980, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.DTNNTensorGraph"}, {"lineNumber": 983, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.DTNNTensorGraph"}, {"lineNumber": 983, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 985, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 989, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 989, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 990, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 991, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 992, "col_offset": 14, "nodeName": "io", "type": "Any"}, {"lineNumber": 993, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 996, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 997, "col_offset": 14, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 998, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 999, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1000, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 1004, "col_offset": 8, "nodeName": "NormalizationTransformer", "type": "Type[deepchem.trans.transformers.NormalizationTransformer]"}, {"lineNumber": 1005, "col_offset": 8, "nodeName": "ANITransformer", "type": "Type[deepchem.trans.transformers.ANITransformer]"}, {"lineNumber": 1015, "col_offset": 16, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 1015, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1017, "col_offset": 13, "nodeName": "get_num_feats", "type": "Callable[[], Any]"}, {"lineNumber": 1018, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 1023, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1029, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 1032, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 1032, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1032, "col_offset": 58, "nodeName": "transformers", "type": "List[Union[deepchem.trans.transformers.NormalizationTransformer, deepchem.trans.transformers.ANITransformer]]"}, {"lineNumber": 1034, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 1038, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 1038, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 1039, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 1040, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1041, "col_offset": 14, "nodeName": "io", "type": "Any"}, {"lineNumber": 1042, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1045, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1046, "col_offset": 14, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 1047, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1048, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1049, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 1053, "col_offset": 8, "nodeName": "NormalizationTransformer", "type": "Type[deepchem.trans.transformers.NormalizationTransformer]"}, {"lineNumber": 1054, "col_offset": 8, "nodeName": "ANITransformer", "type": "Type[deepchem.trans.transformers.ANITransformer]"}, {"lineNumber": 1065, "col_offset": 16, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 1065, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1067, "col_offset": 13, "nodeName": "get_num_feats", "type": "Callable[[], Any]"}, {"lineNumber": 1068, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 1073, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 1082, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 1082, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1082, "col_offset": 58, "nodeName": "transformers", "type": "List[Union[deepchem.trans.transformers.NormalizationTransformer, deepchem.trans.transformers.ANITransformer]]"}, {"lineNumber": 1084, "col_offset": 11, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 1088, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 1089, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1093, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 1095, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 1095, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 1096, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 1097, "col_offset": 14, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1097, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 1098, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 1100, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1101, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1101, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1105, "col_offset": 18, "nodeName": "trans", "type": "module"}, {"lineNumber": 1106, "col_offset": 14, "nodeName": "transformer", "type": "deepchem.trans.transformers.DAGTransformer"}, {"lineNumber": 1108, "col_offset": 12, "nodeName": "nn", "type": "module"}, {"lineNumber": 1108, "col_offset": 49, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1109, "col_offset": 4, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.SequentialDAGGraph"}, {"lineNumber": 1109, "col_offset": 14, "nodeName": "DAGLayer", "type": "Type[deepchem.nn.layers.DAGLayer]"}, {"lineNumber": 1109, "col_offset": 33, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1110, "col_offset": 4, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.SequentialDAGGraph"}, {"lineNumber": 1110, "col_offset": 14, "nodeName": "DAGGather", "type": "Type[deepchem.nn.layers.DAGGather]"}, {"lineNumber": 1112, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 1116, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1124, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor"}, {"lineNumber": 1125, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor"}, {"lineNumber": 1127, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor"}, {"lineNumber": 1127, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1129, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 1133, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 1134, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1138, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 1140, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 1140, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 1141, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 1142, "col_offset": 14, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1142, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 1143, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 1145, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1146, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1146, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1150, "col_offset": 18, "nodeName": "trans", "type": "module"}, {"lineNumber": 1151, "col_offset": 14, "nodeName": "transformer", "type": "deepchem.trans.transformers.DAGTransformer"}, {"lineNumber": 1153, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 1156, "col_offset": 20, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1157, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1163, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.DAGTensorGraph"}, {"lineNumber": 1165, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.DAGTensorGraph"}, {"lineNumber": 1165, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1167, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 1171, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 1172, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1176, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 1178, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 1178, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 1179, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 1180, "col_offset": 14, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1180, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 1181, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 1183, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1183, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1191, "col_offset": 12, "nodeName": "nn", "type": "module"}, {"lineNumber": 1193, "col_offset": 18, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 1194, "col_offset": 20, "nodeName": "n_atom_feat", "type": "int"}, {"lineNumber": 1195, "col_offset": 20, "nodeName": "n_pair_feat", "type": "int"}, {"lineNumber": 1196, "col_offset": 4, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.AlternateSequentialWeaveGraph"}, {"lineNumber": 1196, "col_offset": 14, "nodeName": "AlternateWeaveLayer", "type": "Type[deepchem.nn.weave_layers.AlternateWeaveLayer]"}, {"lineNumber": 1196, "col_offset": 40, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 1197, "col_offset": 4, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.AlternateSequentialWeaveGraph"}, {"lineNumber": 1197, "col_offset": 14, "nodeName": "AlternateWeaveLayer", "type": "Type[deepchem.nn.weave_layers.AlternateWeaveLayer]"}, {"lineNumber": 1197, "col_offset": 40, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 1198, "col_offset": 4, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.AlternateSequentialWeaveGraph"}, {"lineNumber": 1198, "col_offset": 14, "nodeName": "Dense", "type": "Type[deepchem.nn.copy.Dense]"}, {"lineNumber": 1198, "col_offset": 26, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1199, "col_offset": 4, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.AlternateSequentialWeaveGraph"}, {"lineNumber": 1199, "col_offset": 14, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 1200, "col_offset": 4, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.AlternateSequentialWeaveGraph"}, {"lineNumber": 1201, "col_offset": 8, "nodeName": "AlternateWeaveGather", "type": "Type[deepchem.nn.weave_layers.AlternateWeaveGather]"}, {"lineNumber": 1202, "col_offset": 12, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1204, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 1208, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1216, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier"}, {"lineNumber": 1217, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier"}, {"lineNumber": 1220, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier"}, {"lineNumber": 1220, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1222, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 1226, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 1227, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1231, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 1233, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 1233, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 1234, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 1235, "col_offset": 14, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1235, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 1236, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 1238, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1238, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1245, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 1247, "col_offset": 20, "nodeName": "n_atom_feat", "type": "int"}, {"lineNumber": 1248, "col_offset": 20, "nodeName": "n_pair_feat", "type": "int"}, {"lineNumber": 1249, "col_offset": 21, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1250, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1256, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.WeaveTensorGraph"}, {"lineNumber": 1259, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.WeaveTensorGraph"}, {"lineNumber": 1259, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1261, "col_offset": 11, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 1265, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 1266, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1270, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 1272, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 1272, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 1273, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 1274, "col_offset": 14, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1274, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 1275, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 1277, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1278, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1278, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1286, "col_offset": 12, "nodeName": "nn", "type": "module"}, {"lineNumber": 1288, "col_offset": 18, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 1289, "col_offset": 20, "nodeName": "n_atom_feat", "type": "int"}, {"lineNumber": 1290, "col_offset": 20, "nodeName": "n_pair_feat", "type": "int"}, {"lineNumber": 1291, "col_offset": 4, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.AlternateSequentialWeaveGraph"}, {"lineNumber": 1291, "col_offset": 14, "nodeName": "AlternateWeaveLayer", "type": "Type[deepchem.nn.weave_layers.AlternateWeaveLayer]"}, {"lineNumber": 1291, "col_offset": 40, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 1292, "col_offset": 4, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.AlternateSequentialWeaveGraph"}, {"lineNumber": 1292, "col_offset": 14, "nodeName": "AlternateWeaveLayer", "type": "Type[deepchem.nn.weave_layers.AlternateWeaveLayer]"}, {"lineNumber": 1292, "col_offset": 40, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 1293, "col_offset": 4, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.AlternateSequentialWeaveGraph"}, {"lineNumber": 1293, "col_offset": 14, "nodeName": "Dense", "type": "Type[deepchem.nn.copy.Dense]"}, {"lineNumber": 1293, "col_offset": 26, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1294, "col_offset": 4, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.AlternateSequentialWeaveGraph"}, {"lineNumber": 1294, "col_offset": 14, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 1295, "col_offset": 4, "nodeName": "graph", "type": "deepchem.models.tf_new_models.graph_models.AlternateSequentialWeaveGraph"}, {"lineNumber": 1296, "col_offset": 8, "nodeName": "AlternateWeaveGather", "type": "Type[deepchem.nn.weave_layers.AlternateWeaveGather]"}, {"lineNumber": 1297, "col_offset": 12, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1299, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 1303, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1311, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor"}, {"lineNumber": 1312, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor"}, {"lineNumber": 1315, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor"}, {"lineNumber": 1315, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1317, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 1321, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 1322, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1326, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 1328, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 1328, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 1329, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 1330, "col_offset": 14, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1330, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 1331, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 1333, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1334, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1334, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1341, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 1343, "col_offset": 20, "nodeName": "n_atom_feat", "type": "int"}, {"lineNumber": 1344, "col_offset": 20, "nodeName": "n_pair_feat", "type": "int"}, {"lineNumber": 1345, "col_offset": 21, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1346, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1352, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.WeaveTensorGraph"}, {"lineNumber": 1355, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.WeaveTensorGraph"}, {"lineNumber": 1355, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1357, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 1361, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 1362, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1373, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 1375, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 1375, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 1376, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 1377, "col_offset": 14, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1377, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 1378, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 1380, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1380, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1382, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 1386, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1386, "col_offset": 22, "nodeName": "GraphConv", "type": "Type[deepchem.nn.layers.GraphConv]"}, {"lineNumber": 1386, "col_offset": 42, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1390, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1390, "col_offset": 27, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 1392, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1392, "col_offset": 30, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 1393, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1393, "col_offset": 22, "nodeName": "GraphPool", "type": "Type[deepchem.nn.layers.GraphPool]"}, {"lineNumber": 1394, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1394, "col_offset": 27, "nodeName": "GraphGather", "type": "Type[deepchem.nn.layers.GraphGather]"}, {"lineNumber": 1394, "col_offset": 45, "nodeName": "test_batch_size", "type": "int"}, {"lineNumber": 1395, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1395, "col_offset": 30, "nodeName": "GraphGather", "type": "Type[deepchem.nn.layers.GraphGather]"}, {"lineNumber": 1395, "col_offset": 48, "nodeName": "support_batch_size", "type": "int"}, {"lineNumber": 1397, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 1399, "col_offset": 24, "nodeName": "test_batch_size", "type": "int"}, {"lineNumber": 1400, "col_offset": 27, "nodeName": "support_batch_size", "type": "int"}, {"lineNumber": 1405, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.support_classifier.SupportGraphClassifier"}, {"lineNumber": 1406, "col_offset": 38, "nodeName": "n_train_trials", "type": "int"}, {"lineNumber": 1406, "col_offset": 60, "nodeName": "n_pos", "type": "int"}, {"lineNumber": 1406, "col_offset": 73, "nodeName": "n_neg", "type": "int"}, {"lineNumber": 1407, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.support_classifier.SupportGraphClassifier"}, {"lineNumber": 1414, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tf_new_models.support_classifier.SupportGraphClassifier"}, {"lineNumber": 1418, "col_offset": 14, "nodeName": "n_pos", "type": "int"}, {"lineNumber": 1419, "col_offset": 14, "nodeName": "n_neg", "type": "int"}, {"lineNumber": 1426, "col_offset": 11, "nodeName": "scores", "type": "Dict[int, Any]"}, {"lineNumber": 1431, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 1432, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1443, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 1445, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 1445, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 1446, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 1447, "col_offset": 14, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1447, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 1448, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 1449, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1449, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1451, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 1455, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1455, "col_offset": 22, "nodeName": "GraphConv", "type": "Type[deepchem.nn.layers.GraphConv]"}, {"lineNumber": 1455, "col_offset": 42, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1459, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1459, "col_offset": 27, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 1461, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1461, "col_offset": 30, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 1462, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1462, "col_offset": 22, "nodeName": "GraphPool", "type": "Type[deepchem.nn.layers.GraphPool]"}, {"lineNumber": 1463, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1463, "col_offset": 27, "nodeName": "GraphGather", "type": "Type[deepchem.nn.layers.GraphGather]"}, {"lineNumber": 1463, "col_offset": 45, "nodeName": "test_batch_size", "type": "int"}, {"lineNumber": 1464, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1464, "col_offset": 30, "nodeName": "GraphGather", "type": "Type[deepchem.nn.layers.GraphGather]"}, {"lineNumber": 1464, "col_offset": 48, "nodeName": "support_batch_size", "type": "int"}, {"lineNumber": 1467, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1468, "col_offset": 8, "nodeName": "AttnLSTMEmbedding", "type": "Type[deepchem.nn.layers.AttnLSTMEmbedding]"}, {"lineNumber": 1468, "col_offset": 32, "nodeName": "test_batch_size", "type": "int"}, {"lineNumber": 1468, "col_offset": 49, "nodeName": "support_batch_size", "type": "int"}, {"lineNumber": 1469, "col_offset": 32, "nodeName": "max_depth", "type": "int"}, {"lineNumber": 1471, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 1473, "col_offset": 24, "nodeName": "test_batch_size", "type": "int"}, {"lineNumber": 1474, "col_offset": 27, "nodeName": "support_batch_size", "type": "int"}, {"lineNumber": 1479, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.support_classifier.SupportGraphClassifier"}, {"lineNumber": 1480, "col_offset": 38, "nodeName": "n_train_trials", "type": "int"}, {"lineNumber": 1480, "col_offset": 60, "nodeName": "n_pos", "type": "int"}, {"lineNumber": 1480, "col_offset": 73, "nodeName": "n_neg", "type": "int"}, {"lineNumber": 1481, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.support_classifier.SupportGraphClassifier"}, {"lineNumber": 1488, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tf_new_models.support_classifier.SupportGraphClassifier"}, {"lineNumber": 1492, "col_offset": 14, "nodeName": "n_pos", "type": "int"}, {"lineNumber": 1493, "col_offset": 14, "nodeName": "n_neg", "type": "int"}, {"lineNumber": 1501, "col_offset": 11, "nodeName": "scores", "type": "Dict[int, Any]"}, {"lineNumber": 1516, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 1518, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 1518, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 1519, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 1520, "col_offset": 14, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 1520, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 1521, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 1523, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1523, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1525, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 1529, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1529, "col_offset": 22, "nodeName": "GraphConv", "type": "Type[deepchem.nn.layers.GraphConv]"}, {"lineNumber": 1529, "col_offset": 42, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1533, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1533, "col_offset": 27, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 1535, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1535, "col_offset": 30, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 1536, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1536, "col_offset": 22, "nodeName": "GraphPool", "type": "Type[deepchem.nn.layers.GraphPool]"}, {"lineNumber": 1537, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1537, "col_offset": 27, "nodeName": "GraphGather", "type": "Type[deepchem.nn.layers.GraphGather]"}, {"lineNumber": 1537, "col_offset": 45, "nodeName": "test_batch_size", "type": "int"}, {"lineNumber": 1538, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1538, "col_offset": 30, "nodeName": "GraphGather", "type": "Type[deepchem.nn.layers.GraphGather]"}, {"lineNumber": 1538, "col_offset": 48, "nodeName": "support_batch_size", "type": "int"}, {"lineNumber": 1541, "col_offset": 4, "nodeName": "support_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialSupportGraph"}, {"lineNumber": 1542, "col_offset": 8, "nodeName": "ResiLSTMEmbedding", "type": "Type[deepchem.nn.layers.ResiLSTMEmbedding]"}, {"lineNumber": 1542, "col_offset": 32, "nodeName": "test_batch_size", "type": "int"}, {"lineNumber": 1542, "col_offset": 49, "nodeName": "support_batch_size", "type": "int"}, {"lineNumber": 1543, "col_offset": 32, "nodeName": "max_depth", "type": "int"}, {"lineNumber": 1545, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 1547, "col_offset": 24, "nodeName": "test_batch_size", "type": "int"}, {"lineNumber": 1548, "col_offset": 27, "nodeName": "support_batch_size", "type": "int"}, {"lineNumber": 1554, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.support_classifier.SupportGraphClassifier"}, {"lineNumber": 1555, "col_offset": 38, "nodeName": "n_train_trials", "type": "int"}, {"lineNumber": 1555, "col_offset": 60, "nodeName": "n_pos", "type": "int"}, {"lineNumber": 1555, "col_offset": 73, "nodeName": "n_neg", "type": "int"}, {"lineNumber": 1556, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tf_new_models.support_classifier.SupportGraphClassifier"}, {"lineNumber": 1563, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tf_new_models.support_classifier.SupportGraphClassifier"}, {"lineNumber": 1567, "col_offset": 14, "nodeName": "n_pos", "type": "int"}, {"lineNumber": 1568, "col_offset": 14, "nodeName": "n_neg", "type": "int"}, {"lineNumber": 1576, "col_offset": 11, "nodeName": "scores", "type": "Dict[int, Any]"}, {"lineNumber": 1581, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 1588, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 1589, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1590, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1591, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1591, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 1591, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1592, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1592, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 1592, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 1594, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 1596, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1596, "col_offset": 31, "nodeName": "metrics", "type": "module"}, {"lineNumber": 1596, "col_offset": 67, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1597, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 1607, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 1610, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.progressive_multitask.ProgressiveMultitaskRegressor"}, {"lineNumber": 1611, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.progressive_multitask.ProgressiveMultitaskRegressor"}, {"lineNumber": 1614, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.progressive_multitask.ProgressiveMultitaskRegressor"}, {"lineNumber": 1614, "col_offset": 38, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1615, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.progressive_multitask.ProgressiveMultitaskRegressor"}, {"lineNumber": 1616, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "TestOverfit", "type": "Type[TestOverfit]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "path", "type": "module"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "dc", "type": "module"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 100, "col_offset": 50, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "dc", "type": "module"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "dc", "type": "module"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 196, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 228, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "trans", "type": "module"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 260, "col_offset": 42, "nodeName": "dc", "type": "module"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "trans", "type": "module"}, {"lineNumber": 293, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 293, "col_offset": 42, "nodeName": "dc", "type": "module"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 309, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 324, "col_offset": 39, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 324, "col_offset": 50, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 327, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 329, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 329, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 39, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 359, "col_offset": 50, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 362, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 364, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 364, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 379, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 398, "col_offset": 39, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 398, "col_offset": 50, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 400, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "w_flat", "type": "Any"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "y_flat", "type": "Any"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 409, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 409, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 443, "col_offset": 39, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 443, "col_offset": 50, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 445, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 445, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 446, "col_offset": 23, "nodeName": "w_flat", "type": "Any"}, {"lineNumber": 449, "col_offset": 11, "nodeName": "y_flat", "type": "Any"}, {"lineNumber": 452, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 454, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 454, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 469, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 474, "col_offset": 41, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 474, "col_offset": 47, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 35, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 482, "col_offset": 46, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 484, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 486, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 487, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 491, "col_offset": 13, "nodeName": "models", "type": "module"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 501, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 516, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 518, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 519, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 534, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 550, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 552, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 553, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 568, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 583, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 585, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 586, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 618, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 620, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 621, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 635, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 647, "col_offset": 35, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 647, "col_offset": 46, "nodeName": "n_features", "type": "int"}, {"lineNumber": 650, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 651, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 653, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 654, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 664, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 669, "col_offset": 41, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 669, "col_offset": 47, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 680, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 682, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 683, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 687, "col_offset": 13, "nodeName": "models", "type": "module"}, {"lineNumber": 689, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 697, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 713, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 715, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 716, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 717, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 731, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 741, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 747, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 749, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 750, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 751, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 765, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 783, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 785, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 786, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 787, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 803, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 817, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 819, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 820, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 824, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 824, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 829, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 830, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 831, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 832, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 834, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 835, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 836, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 838, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 856, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 870, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 872, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 873, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 877, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 878, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 883, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 884, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 885, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 886, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 888, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 889, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 890, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 910, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 917, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 918, "col_offset": 14, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 922, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 923, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 924, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 924, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 928, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 929, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 930, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 931, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 932, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 934, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 952, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 956, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 959, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 960, "col_offset": 14, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 964, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 965, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 966, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 966, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 970, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 985, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 989, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 990, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 992, "col_offset": 14, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 993, "col_offset": 24, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 993, "col_offset": 57, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 997, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 998, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 999, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 1004, "col_offset": 8, "nodeName": "trans", "type": "module"}, {"lineNumber": 1004, "col_offset": 68, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1005, "col_offset": 8, "nodeName": "trans", "type": "module"}, {"lineNumber": 1015, "col_offset": 16, "nodeName": "transformer", "type": "Union[deepchem.trans.transformers.ANITransformer, deepchem.trans.transformers.NormalizationTransformer]"}, {"lineNumber": 1018, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1034, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 1038, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 1039, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 1041, "col_offset": 14, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 1042, "col_offset": 24, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 1042, "col_offset": 57, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1046, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 1047, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 1048, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 1053, "col_offset": 8, "nodeName": "trans", "type": "module"}, {"lineNumber": 1053, "col_offset": 68, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1054, "col_offset": 8, "nodeName": "trans", "type": "module"}, {"lineNumber": 1065, "col_offset": 16, "nodeName": "transformer", "type": "Union[deepchem.trans.transformers.NormalizationTransformer, deepchem.trans.transformers.ANITransformer]"}, {"lineNumber": 1068, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1084, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 1088, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 1093, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 1095, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 1096, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 1100, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 1101, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 1101, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 1105, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 1108, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1109, "col_offset": 14, "nodeName": "nn", "type": "module"}, {"lineNumber": 1109, "col_offset": 66, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1110, "col_offset": 14, "nodeName": "nn", "type": "module"}, {"lineNumber": 1112, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1129, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 1133, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 1138, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 1140, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 1141, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 1145, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 1146, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 1146, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 1150, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 1153, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1167, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 1171, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 1176, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 1178, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 1179, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 1183, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 1183, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 1191, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1196, "col_offset": 14, "nodeName": "nn", "type": "module"}, {"lineNumber": 1197, "col_offset": 14, "nodeName": "nn", "type": "module"}, {"lineNumber": 1198, "col_offset": 14, "nodeName": "nn", "type": "module"}, {"lineNumber": 1199, "col_offset": 14, "nodeName": "nn", "type": "module"}, {"lineNumber": 1201, "col_offset": 8, "nodeName": "nn", "type": "module"}, {"lineNumber": 1202, "col_offset": 32, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1204, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1222, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 1226, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 1231, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 1233, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 1234, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 1238, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 1238, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 1245, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1261, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 1265, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 1270, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 1272, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 1273, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 1277, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 1278, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 1278, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 1286, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1291, "col_offset": 14, "nodeName": "nn", "type": "module"}, {"lineNumber": 1292, "col_offset": 14, "nodeName": "nn", "type": "module"}, {"lineNumber": 1293, "col_offset": 14, "nodeName": "nn", "type": "module"}, {"lineNumber": 1294, "col_offset": 14, "nodeName": "nn", "type": "module"}, {"lineNumber": 1296, "col_offset": 8, "nodeName": "nn", "type": "module"}, {"lineNumber": 1297, "col_offset": 32, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 1299, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1317, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 1321, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 1326, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 1328, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 1329, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 1333, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 1334, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 1334, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 1341, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1357, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 1361, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 1373, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 1375, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 1376, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 1380, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 1380, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 1382, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 1386, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 1390, "col_offset": 27, "nodeName": "nn", "type": "module"}, {"lineNumber": 1392, "col_offset": 30, "nodeName": "nn", "type": "module"}, {"lineNumber": 1393, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 1394, "col_offset": 27, "nodeName": "nn", "type": "module"}, {"lineNumber": 1395, "col_offset": 30, "nodeName": "nn", "type": "module"}, {"lineNumber": 1397, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1431, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 1443, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 1445, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 1446, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 1449, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 1449, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 1451, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 1455, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 1459, "col_offset": 27, "nodeName": "nn", "type": "module"}, {"lineNumber": 1461, "col_offset": 30, "nodeName": "nn", "type": "module"}, {"lineNumber": 1462, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 1463, "col_offset": 27, "nodeName": "nn", "type": "module"}, {"lineNumber": 1464, "col_offset": 30, "nodeName": "nn", "type": "module"}, {"lineNumber": 1468, "col_offset": 8, "nodeName": "nn", "type": "module"}, {"lineNumber": 1471, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1516, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 1518, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 1519, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 1523, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 1523, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 1525, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 1529, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 1533, "col_offset": 27, "nodeName": "nn", "type": "module"}, {"lineNumber": 1535, "col_offset": 30, "nodeName": "nn", "type": "module"}, {"lineNumber": 1536, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 1537, "col_offset": 27, "nodeName": "nn", "type": "module"}, {"lineNumber": 1538, "col_offset": 30, "nodeName": "nn", "type": "module"}, {"lineNumber": 1542, "col_offset": 8, "nodeName": "nn", "type": "module"}, {"lineNumber": 1545, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1581, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 1588, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 1590, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1594, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 1596, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 1596, "col_offset": 31, "nodeName": "dc", "type": "module"}, {"lineNumber": 1596, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 1597, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 1616, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "os", "type": "module"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 309, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 379, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 452, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 469, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 484, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 491, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 501, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 534, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 568, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 635, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 664, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 680, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 687, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 697, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 731, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 765, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 803, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 830, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 831, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 832, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 834, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 835, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 836, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 856, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 884, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 885, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 886, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 888, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 889, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 890, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 910, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 922, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 929, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 930, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 931, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 932, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 952, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 964, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 985, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 993, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 993, "col_offset": 39, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 997, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 1004, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 1005, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 1017, "col_offset": 13, "nodeName": "transformers", "type": "List[Union[deepchem.trans.transformers.NormalizationTransformer, deepchem.trans.transformers.ANITransformer]]"}, {"lineNumber": 1034, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1042, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 1042, "col_offset": 39, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1046, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 1053, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 1054, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 1067, "col_offset": 13, "nodeName": "transformers", "type": "List[Union[deepchem.trans.transformers.NormalizationTransformer, deepchem.trans.transformers.ANITransformer]]"}, {"lineNumber": 1084, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1109, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 1110, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 1129, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1167, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1196, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 1197, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 1198, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 1199, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 1201, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 1222, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1261, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1291, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 1292, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 1293, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 1294, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 1296, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 1317, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1357, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 1386, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 1390, "col_offset": 27, "nodeName": "dc", "type": "module"}, {"lineNumber": 1392, "col_offset": 30, "nodeName": "dc", "type": "module"}, {"lineNumber": 1393, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 1394, "col_offset": 27, "nodeName": "dc", "type": "module"}, {"lineNumber": 1395, "col_offset": 30, "nodeName": "dc", "type": "module"}, {"lineNumber": 1455, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 1459, "col_offset": 27, "nodeName": "dc", "type": "module"}, {"lineNumber": 1461, "col_offset": 30, "nodeName": "dc", "type": "module"}, {"lineNumber": 1462, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 1463, "col_offset": 27, "nodeName": "dc", "type": "module"}, {"lineNumber": 1464, "col_offset": 30, "nodeName": "dc", "type": "module"}, {"lineNumber": 1468, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 1529, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 1533, "col_offset": 27, "nodeName": "dc", "type": "module"}, {"lineNumber": 1535, "col_offset": 30, "nodeName": "dc", "type": "module"}, {"lineNumber": 1536, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 1537, "col_offset": 27, "nodeName": "dc", "type": "module"}, {"lineNumber": 1538, "col_offset": 30, "nodeName": "dc", "type": "module"}, {"lineNumber": 1542, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 1616, "col_offset": 18, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 265, "col_offset": 42, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 297, "col_offset": 42, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 297, "col_offset": 42, "nodeName": "np", "type": "module"}]