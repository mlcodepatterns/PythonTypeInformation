[{"lineNumber": 13, "col_offset": 0, "nodeName": "random_string", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 314, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 454, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "seed", "type": "Any"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 314, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 454, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "random", "type": "Any"}, {"lineNumber": 15, "col_offset": 5, "nodeName": "chars", "type": "None"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "chars", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "join", "type": "Callable"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "add_hydrogens", "type": "bool"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "vectors", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "norms", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "vectors_rot", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "norms_rot", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "coords", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "coords_rot", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "n1", "type": "int"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "n2", "type": "int"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "coords1", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "coords2", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "distance", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "coords1", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "coords2", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "distance", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "power", "type": "int"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "power", "type": "int"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "coords_range", "type": "int"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "xyz", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "coords_range", "type": "int"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "xyz1", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "xyz2", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "fname", "type": "str"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "cycle4", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "normal", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "ring1_center", "type": "numpy.ndarray"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "ring2_center_true", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "ring2_center_false", "type": "numpy.ndarray"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "ring1_normal_true", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "ring1_normal_false", "type": "numpy.ndarray"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "ring2_normal", "type": "numpy.ndarray"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "ring1_center", "type": "numpy.ndarray"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "ring2_center_true", "type": "numpy.ndarray"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "ring2_center_false", "type": "numpy.ndarray"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "ring1_normal_true", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "ring1_normal_false", "type": "numpy.ndarray"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "ring2_normal", "type": "numpy.ndarray"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "dicts1", "type": "Tuple[Counter[nothing], Counter[nothing], Counter[nothing], Counter[nothing]]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "dicts2", "type": "Tuple[Counter[nothing], Counter[nothing], Counter[nothing], Counter[nothing]]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "cation_position", "type": "numpy.ndarray"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "ring_center_true", "type": "numpy.ndarray"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "ring_center_false", "type": "numpy.ndarray"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "ring_normal_true", "type": "numpy.ndarray"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "ring_normal_false", "type": "numpy.ndarray"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "dicts1", "type": "Tuple[Counter[nothing], Counter[nothing]]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "dicts2", "type": "Tuple[Counter[nothing], Counter[nothing]]"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "num_atoms", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "degree", "type": "int"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "prot_num_atoms", "type": "Any"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "lig_num_atoms", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "bins", "type": "Tuple[int, int]"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "bins", "type": "List[Tuple[int, int]]"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "package_dir", "type": "str"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "flatten", "type": "bool"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "ecfp_power", "type": "int"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "splif_power", "type": "int"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "total_len", "type": "Union[float, int]"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "rgf_featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "centroid", "type": "Any"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "box_w", "type": "int"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "f_power", "type": "int"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "all_features", "type": "Any"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "all_features", "type": "Any"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "np", "type": "module"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "choice", "type": "Any"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "chars", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 41, "nodeName": "length", "type": "int"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "calc_charges", "type": "bool"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 46, "col_offset": 6, "nodeName": "u", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 54, "col_offset": 6, "nodeName": "m", "type": "Any"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "norm", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "norm", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "rotate_molecules", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "coords", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "n1", "type": "int"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "n2", "type": "int"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "compute_pairwise_distances", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "coords1", "type": "Any"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "coords2", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "compute_pairwise_distances", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "coords1", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "coords2", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 90, "col_offset": 6, "nodeName": "vector", "type": "Any"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "norm_vector", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 96, "col_offset": 6, "nodeName": "v1", "type": "Any"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "v2", "type": "Any"}, {"lineNumber": 98, "col_offset": 6, "nodeName": "angle", "type": "Any"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 115, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "coords_range", "type": "int"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "choice", "type": "Any"}, {"lineNumber": 128, "col_offset": 10, "nodeName": "box_width", "type": "int"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "voxel", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 43, "nodeName": "coords_range", "type": "int"}, {"lineNumber": 159, "col_offset": 43, "nodeName": "coords_range", "type": "int"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "idx1", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "idx2", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "choice", "type": "Any"}, {"lineNumber": 162, "col_offset": 10, "nodeName": "box_width", "type": "int"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "protein_file", "type": "str"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "charge_dict", "type": "Dict[int, Any]"}, {"lineNumber": 179, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "MolFromSmiles", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "Compute2DCoords", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "load_molecule", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "load_molecule", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "compute_ring_normal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "cycle4", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 262, "col_offset": 13, "nodeName": "compute_pi_stack", "type": "Callable[..., Tuple[Counter[Any], Counter[Any], Counter[Any], Counter[Any]]]"}, {"lineNumber": 262, "col_offset": 34, "nodeName": "prot", "type": "Any"}, {"lineNumber": 262, "col_offset": 45, "nodeName": "lig", "type": "Any"}, {"lineNumber": 263, "col_offset": 13, "nodeName": "compute_pi_stack", "type": "Callable[..., Tuple[Counter[Any], Counter[Any], Counter[Any], Counter[Any]]]"}, {"lineNumber": 263, "col_offset": 34, "nodeName": "lig", "type": "Any"}, {"lineNumber": 263, "col_offset": 44, "nodeName": "prot", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "j", "type": "int"}, {"lineNumber": 269, "col_offset": 13, "nodeName": "compute_pi_stack", "type": "Callable[..., Tuple[Counter[Any], Counter[Any], Counter[Any], Counter[Any]]]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "lig", "type": "Any"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "prot", "type": "Any"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 276, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "compute_cation_pi", "type": "Callable[..., Tuple[Counter[Any], Counter[Any]]]"}, {"lineNumber": 292, "col_offset": 35, "nodeName": "prot", "type": "Any"}, {"lineNumber": 292, "col_offset": 46, "nodeName": "lig", "type": "Any"}, {"lineNumber": 293, "col_offset": 13, "nodeName": "compute_cation_pi", "type": "Callable[..., Tuple[Counter[Any], Counter[Any]]]"}, {"lineNumber": 293, "col_offset": 35, "nodeName": "lig", "type": "Any"}, {"lineNumber": 293, "col_offset": 45, "nodeName": "prot", "type": "Any"}, {"lineNumber": 297, "col_offset": 26, "nodeName": "compute_binding_pocket_cation_pi", "type": "Callable[..., Tuple[Counter[Any], Counter[Any]]]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "prot", "type": "Any"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "lig", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "exp_prot_dict", "type": "Counter[nothing]"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "exp_lig_dict", "type": "Counter[nothing]"}, {"lineNumber": 300, "col_offset": 34, "nodeName": "compute_cation_pi", "type": "Callable[..., Tuple[Counter[Any], Counter[Any]]]"}, {"lineNumber": 300, "col_offset": 56, "nodeName": "prot", "type": "Any"}, {"lineNumber": 300, "col_offset": 67, "nodeName": "lig", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "add_lig", "type": "Counter[nothing]"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "add_prot", "type": "Counter[nothing]"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "compute_cation_pi", "type": "Callable[..., Tuple[Counter[Any], Counter[Any]]]"}, {"lineNumber": 301, "col_offset": 46, "nodeName": "lig", "type": "Any"}, {"lineNumber": 301, "col_offset": 56, "nodeName": "prot", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 21, "nodeName": "prot_dict", "type": "Counter[nothing]"}, {"lineNumber": 310, "col_offset": 32, "nodeName": "exp_prot_dict", "type": "Counter[nothing]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 21, "nodeName": "lig_dict", "type": "Counter[nothing]"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "exp_lig_dict", "type": "Counter[nothing]"}, {"lineNumber": 320, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 321, "col_offset": 37, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 323, "col_offset": 36, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 326, "col_offset": 7, "nodeName": "mol", "type": "Any"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "load_molecule", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 326, "col_offset": 31, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "GetNumAtoms", "type": "Any"}, {"lineNumber": 328, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 331, "col_offset": 6, "nodeName": "ecfp_all", "type": "Dict[int, str]"}, {"lineNumber": 336, "col_offset": 6, "nodeName": "num_ind", "type": "Any"}, {"lineNumber": 337, "col_offset": 6, "nodeName": "indices", "type": "List[Any]"}, {"lineNumber": 339, "col_offset": 6, "nodeName": "ecfp_selected", "type": "Dict[int, str]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 345, "col_offset": 14, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "load_molecule", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 345, "col_offset": 43, "nodeName": "protein_file", "type": "str"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 346, "col_offset": 13, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 346, "col_offset": 23, "nodeName": "load_molecule", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 346, "col_offset": 41, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "compute_pairwise_distances", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 351, "col_offset": 26, "nodeName": "featurize_binding_pocket_ecfp", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 357, "col_offset": 36, "nodeName": "featurize_binding_pocket_ecfp", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 358, "col_offset": 18, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 358, "col_offset": 28, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 358, "col_offset": 37, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 360, "col_offset": 26, "nodeName": "prot_dict", "type": "Any"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 361, "col_offset": 26, "nodeName": "lig_dict", "type": "Any"}, {"lineNumber": 361, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "prot_dict", "type": "Any"}, {"lineNumber": 363, "col_offset": 32, "nodeName": "prot_dict_dist", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "lig_dict", "type": "Any"}, {"lineNumber": 364, "col_offset": 31, "nodeName": "lig_dict_dist", "type": "Any"}, {"lineNumber": 367, "col_offset": 32, "nodeName": "featurize_binding_pocket_ecfp", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 374, "col_offset": 32, "nodeName": "featurize_binding_pocket_ecfp", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 388, "col_offset": 32, "nodeName": "featurize_binding_pocket_ecfp", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 395, "col_offset": 24, "nodeName": "prot_dict_e3", "type": "Any"}, {"lineNumber": 395, "col_offset": 38, "nodeName": "prot_dict", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 396, "col_offset": 24, "nodeName": "lig_dict_e3", "type": "Any"}, {"lineNumber": 396, "col_offset": 37, "nodeName": "lig_dict", "type": "Any"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 399, "col_offset": 14, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 399, "col_offset": 25, "nodeName": "load_molecule", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 399, "col_offset": 43, "nodeName": "protein_file", "type": "str"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 400, "col_offset": 23, "nodeName": "load_molecule", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 400, "col_offset": 41, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "GetNumAtoms", "type": "Any"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "GetNumAtoms", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "compute_pairwise_distances", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 431, "col_offset": 14, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "load_molecule", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 431, "col_offset": 43, "nodeName": "protein_file", "type": "str"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 432, "col_offset": 13, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 432, "col_offset": 23, "nodeName": "load_molecule", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 432, "col_offset": 41, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "compute_pairwise_distances", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "featurize_splif", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], List[Any]]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 450, "col_offset": 26, "nodeName": "dicts", "type": "List[Any]"}, {"lineNumber": 450, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 451, "col_offset": 21, "nodeName": "dicts", "type": "List[Any]"}, {"lineNumber": 451, "col_offset": 28, "nodeName": "expected_dicts", "type": "List[Any]"}, {"lineNumber": 460, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 461, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 462, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 462, "col_offset": 37, "nodeName": "package_dir", "type": "str"}, {"lineNumber": 464, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 464, "col_offset": 36, "nodeName": "package_dir", "type": "str"}, {"lineNumber": 469, "col_offset": 17, "nodeName": "RdkitGridFeaturizer", "type": "Type[deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer]"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 470, "col_offset": 26, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 470, "col_offset": 38, "nodeName": "RdkitGridFeaturizer", "type": "Type[deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer]"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "featurize_complexes", "type": "Any"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 473, "col_offset": 26, "nodeName": "feature_tensor", "type": "Any"}, {"lineNumber": 473, "col_offset": 42, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 477, "col_offset": 17, "nodeName": "RdkitGridFeaturizer", "type": "Type[deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer]"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "featurize_complexes", "type": "Any"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 485, "col_offset": 26, "nodeName": "feature_tensor", "type": "Any"}, {"lineNumber": 485, "col_offset": 42, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "RdkitGridFeaturizer", "type": "Type[deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer]"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 492, "col_offset": 24, "nodeName": "featurize_complexes", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 494, "col_offset": 26, "nodeName": "feature_tensor", "type": "Any"}, {"lineNumber": 494, "col_offset": 42, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 495, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 501, "col_offset": 17, "nodeName": "RdkitGridFeaturizer", "type": "Type[deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer]"}, {"lineNumber": 509, "col_offset": 24, "nodeName": "featurize_complexes", "type": "Any"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 511, "col_offset": 26, "nodeName": "feature_tensor", "type": "Any"}, {"lineNumber": 511, "col_offset": 42, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 516, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "RdkitGridFeaturizer", "type": "Type[deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer]"}, {"lineNumber": 525, "col_offset": 24, "nodeName": "featurize_complexes", "type": "Any"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 527, "col_offset": 26, "nodeName": "feature_tensor", "type": "Any"}, {"lineNumber": 527, "col_offset": 42, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 532, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 535, "col_offset": 17, "nodeName": "RdkitGridFeaturizer", "type": "Type[deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer]"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 545, "col_offset": 24, "nodeName": "featurize_complexes", "type": "Any"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 547, "col_offset": 26, "nodeName": "feature_tensor", "type": "Any"}, {"lineNumber": 547, "col_offset": 42, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 549, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 564, "col_offset": 21, "nodeName": "RdkitGridFeaturizer", "type": "Type[deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer]"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 565, "col_offset": 21, "nodeName": "cutoffs", "type": "Dict[str, Any]"}, {"lineNumber": 565, "col_offset": 45, "nodeName": "custom_cutoffs", "type": "Dict[str, Union[float, List[Union[Tuple[int, float], Tuple[float, float]]], List[int], List[Union[Tuple[int, int], Tuple[float, float]]]]]"}, {"lineNumber": 568, "col_offset": 17, "nodeName": "RdkitGridFeaturizer", "type": "Type[deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer]"}, {"lineNumber": 573, "col_offset": 25, "nodeName": "featurize_complexes", "type": "Any"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 575, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 578, "col_offset": 14, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 578, "col_offset": 25, "nodeName": "load_molecule", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 578, "col_offset": 43, "nodeName": "protein_file", "type": "str"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 579, "col_offset": 13, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 579, "col_offset": 23, "nodeName": "load_molecule", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 579, "col_offset": 41, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "compute_centroid", "type": "Callable[[Any], Any]"}, {"lineNumber": 581, "col_offset": 36, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 582, "col_offset": 15, "nodeName": "subtract_centroid", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 582, "col_offset": 37, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 582, "col_offset": 47, "nodeName": "centroid", "type": "Any"}, {"lineNumber": 583, "col_offset": 14, "nodeName": "subtract_centroid", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 583, "col_offset": 36, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 583, "col_offset": 45, "nodeName": "centroid", "type": "Any"}, {"lineNumber": 585, "col_offset": 36, "nodeName": "featurize_binding_pocket_ecfp", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 586, "col_offset": 18, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 586, "col_offset": 28, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 586, "col_offset": 37, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 591, "col_offset": 21, "nodeName": "RdkitGridFeaturizer", "type": "Type[deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer]"}, {"lineNumber": 598, "col_offset": 18, "nodeName": "_voxelize", "type": "Callable[..., Any]"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "convert_atom_to_voxel", "type": "Callable[..., List[Any]]"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "hash_ecfp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 604, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 605, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 607, "col_offset": 23, "nodeName": "all_features", "type": "Any"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 608, "col_offset": 20, "nodeName": "all_features", "type": "Any"}, {"lineNumber": 610, "col_offset": 17, "nodeName": "_voxelize", "type": "Callable[..., Any]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "convert_atom_to_voxel", "type": "Callable[..., List[Any]]"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "hash_ecfp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 616, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 617, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 619, "col_offset": 21, "nodeName": "all_features", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "realpath", "type": "Callable"}, {"lineNumber": 27, "col_offset": 51, "nodeName": "__file__", "type": "str"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "num_atoms", "type": "Any"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "generate_random__unit_vector", "type": "Callable[[], numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 49, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "generate_random_rotation_matrix", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "rotate_molecules", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "vectors", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "norms", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "norms_rot", "type": "Any"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "n", "type": "int"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "n", "type": "int"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "rgf", "type": "module"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "coords", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "coords_rot", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "rgf", "type": "module"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "distance", "type": "Any"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "n1", "type": "int"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "n2", "type": "int"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "all", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "all", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "rgf", "type": "module"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "all", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "unit_vector", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "vector", "type": "Any"}, {"lineNumber": 92, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "angle_between", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "v1", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "v2", "type": "Any"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "angle", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "pi", "type": "Any"}, {"lineNumber": 100, "col_offset": 6, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "angle", "type": "Any"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 102, "col_offset": 57, "nodeName": "pi", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "string", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "string_hash", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "string1", "type": "str"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "string2", "type": "str"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "pair_hash", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "voxel_width", "type": "Union[float, int]"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "convert_atom_to_voxel", "type": "Callable[..., List[Any]]"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "voxel_width", "type": "Union[float, int]"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 175, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "mol", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "load_molecule", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "fname", "type": "str"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "ComputeGasteigerCharges", "type": "Any"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "mol", "type": "Any"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "compute_charge_dictionary", "type": "Callable[[Any], Dict[int, Any]]"}, {"lineNumber": 177, "col_offset": 50, "nodeName": "mol", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "realpath", "type": "Callable"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "__file__", "type": "str"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "cycle4", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "rgf", "type": "module"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "join", "type": "Callable"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "rgf", "type": "module"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "join", "type": "Callable"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "rgf", "type": "module"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 214, "col_offset": 50, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 225, "col_offset": 48, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 227, "col_offset": 6, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 6, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 6, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 246, "col_offset": 48, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 6, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 13, "nodeName": "rgf", "type": "module"}, {"lineNumber": 262, "col_offset": 34, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 262, "col_offset": 45, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 263, "col_offset": 13, "nodeName": "rgf", "type": "module"}, {"lineNumber": 263, "col_offset": 34, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 263, "col_offset": 44, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 13, "nodeName": "rgf", "type": "module"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 271, "col_offset": 6, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "is_cation_pi", "type": "Callable[..., bool]"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "cation_position", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 42, "nodeName": "ring_center_true", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 60, "nodeName": "ring_normal_true", "type": "numpy.ndarray"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "is_cation_pi", "type": "Callable[..., bool]"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "cation_position", "type": "numpy.ndarray"}, {"lineNumber": 285, "col_offset": 42, "nodeName": "ring_center_true", "type": "numpy.ndarray"}, {"lineNumber": 285, "col_offset": 60, "nodeName": "ring_normal_false", "type": "numpy.ndarray"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "is_cation_pi", "type": "Callable[..., bool]"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "cation_position", "type": "numpy.ndarray"}, {"lineNumber": 288, "col_offset": 42, "nodeName": "ring_center_false", "type": "numpy.ndarray"}, {"lineNumber": 288, "col_offset": 61, "nodeName": "ring_normal_true", "type": "numpy.ndarray"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "rgf", "type": "module"}, {"lineNumber": 292, "col_offset": 35, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 292, "col_offset": 46, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 293, "col_offset": 13, "nodeName": "rgf", "type": "module"}, {"lineNumber": 293, "col_offset": 35, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 293, "col_offset": 45, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 297, "col_offset": 26, "nodeName": "rgf", "type": "module"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 300, "col_offset": 34, "nodeName": "rgf", "type": "module"}, {"lineNumber": 300, "col_offset": 56, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 300, "col_offset": 67, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "rgf", "type": "module"}, {"lineNumber": 301, "col_offset": 46, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 301, "col_offset": 56, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 302, "col_offset": 30, "nodeName": "exp_prot_dict", "type": "Counter[nothing]"}, {"lineNumber": 302, "col_offset": 45, "nodeName": "add_prot", "type": "Counter[nothing]"}, {"lineNumber": 302, "col_offset": 57, "nodeName": "exp_lig_dict", "type": "Counter[nothing]"}, {"lineNumber": 303, "col_offset": 57, "nodeName": "add_lig", "type": "Counter[nothing]"}, {"lineNumber": 304, "col_offset": 10, "nodeName": "atom_idx", "type": "nothing"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "count", "type": "int"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "items", "type": "Callable"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 320, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 320, "col_offset": 34, "nodeName": "realpath", "type": "Callable"}, {"lineNumber": 320, "col_offset": 51, "nodeName": "__file__", "type": "str"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "rgf", "type": "module"}, {"lineNumber": 326, "col_offset": 31, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "mol", "type": "Any"}, {"lineNumber": 331, "col_offset": 17, "nodeName": "compute_all_ecfp", "type": "Callable[..., Dict[int, str]]"}, {"lineNumber": 331, "col_offset": 38, "nodeName": "mol", "type": "Any"}, {"lineNumber": 332, "col_offset": 6, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 332, "col_offset": 28, "nodeName": "ecfp_all", "type": "Dict[int, str]"}, {"lineNumber": 332, "col_offset": 38, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 333, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 333, "col_offset": 38, "nodeName": "num_atoms", "type": "Any"}, {"lineNumber": 334, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "choice", "type": "Any"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "compute_all_ecfp", "type": "Callable[..., Dict[int, str]]"}, {"lineNumber": 339, "col_offset": 43, "nodeName": "mol", "type": "Any"}, {"lineNumber": 340, "col_offset": 6, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 340, "col_offset": 28, "nodeName": "ecfp_selected", "type": "Dict[int, str]"}, {"lineNumber": 340, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 341, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 341, "col_offset": 43, "nodeName": "num_ind", "type": "Any"}, {"lineNumber": 342, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "rgf", "type": "module"}, {"lineNumber": 345, "col_offset": 43, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 346, "col_offset": 23, "nodeName": "rgf", "type": "module"}, {"lineNumber": 346, "col_offset": 41, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "rgf", "type": "module"}, {"lineNumber": 348, "col_offset": 20, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 348, "col_offset": 41, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 351, "col_offset": 26, "nodeName": "rgf", "type": "module"}, {"lineNumber": 357, "col_offset": 36, "nodeName": "rgf", "type": "module"}, {"lineNumber": 358, "col_offset": 65, "nodeName": "distance", "type": "Any"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 367, "col_offset": 32, "nodeName": "rgf", "type": "module"}, {"lineNumber": 374, "col_offset": 32, "nodeName": "rgf", "type": "module"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 381, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 381, "col_offset": 24, "nodeName": "prot_dict_d2", "type": "Any"}, {"lineNumber": 381, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 381, "col_offset": 43, "nodeName": "prot_dict", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "lig_dict_d2", "type": "Any"}, {"lineNumber": 383, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 383, "col_offset": 47, "nodeName": "lig_dict", "type": "Any"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 384, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 384, "col_offset": 27, "nodeName": "prot_dict_d6", "type": "Any"}, {"lineNumber": 384, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 384, "col_offset": 46, "nodeName": "prot_dict", "type": "Any"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 385, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 385, "col_offset": 32, "nodeName": "lig_dict_d6", "type": "Any"}, {"lineNumber": 385, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 385, "col_offset": 50, "nodeName": "lig_dict", "type": "Any"}, {"lineNumber": 388, "col_offset": 32, "nodeName": "rgf", "type": "module"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 399, "col_offset": 25, "nodeName": "rgf", "type": "module"}, {"lineNumber": 399, "col_offset": 43, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 400, "col_offset": 23, "nodeName": "rgf", "type": "module"}, {"lineNumber": 400, "col_offset": 41, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "rgf", "type": "module"}, {"lineNumber": 404, "col_offset": 20, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 404, "col_offset": 41, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 407, "col_offset": 19, "nodeName": "compute_splif_features_in_range", "type": "Callable[..., Any]"}, {"lineNumber": 408, "col_offset": 10, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 409, "col_offset": 10, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 410, "col_offset": 10, "nodeName": "distance", "type": "Any"}, {"lineNumber": 411, "col_offset": 10, "nodeName": "bins", "type": "Tuple[int, int]"}, {"lineNumber": 414, "col_offset": 6, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 414, "col_offset": 28, "nodeName": "splif_dict", "type": "Any"}, {"lineNumber": 414, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 415, "col_offset": 31, "nodeName": "ecfp_pair", "type": "Any"}, {"lineNumber": 415, "col_offset": 44, "nodeName": "items", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "idx", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "ecfp", "type": "Any"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "ecfp_pair", "type": "Any"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "rgf", "type": "module"}, {"lineNumber": 431, "col_offset": 43, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 432, "col_offset": 23, "nodeName": "rgf", "type": "module"}, {"lineNumber": 432, "col_offset": 41, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "rgf", "type": "module"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "prot_xyz", "type": "Any"}, {"lineNumber": 434, "col_offset": 41, "nodeName": "lig_xyz", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "rgf", "type": "module"}, {"lineNumber": 443, "col_offset": 21, "nodeName": "bins", "type": "List[Tuple[int, int]]"}, {"lineNumber": 444, "col_offset": 27, "nodeName": "distance", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 448, "col_offset": 22, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 448, "col_offset": 31, "nodeName": "distance", "type": "Any"}, {"lineNumber": 448, "col_offset": 41, "nodeName": "c_bin", "type": "Tuple[int, int]"}, {"lineNumber": 448, "col_offset": 67, "nodeName": "c_bin", "type": "Tuple[int, int]"}, {"lineNumber": 448, "col_offset": 76, "nodeName": "bins", "type": "List[Tuple[int, int]]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 460, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 460, "col_offset": 34, "nodeName": "realpath", "type": "Callable"}, {"lineNumber": 460, "col_offset": 51, "nodeName": "__file__", "type": "str"}, {"lineNumber": 461, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 461, "col_offset": 34, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 461, "col_offset": 50, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 462, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 464, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 469, "col_offset": 17, "nodeName": "rgf", "type": "module"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 470, "col_offset": 38, "nodeName": "rgf", "type": "module"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 471, "col_offset": 56, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 472, "col_offset": 56, "nodeName": "protein_file", "type": "str"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 473, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 477, "col_offset": 17, "nodeName": "rgf", "type": "module"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 483, "col_offset": 56, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 484, "col_offset": 56, "nodeName": "protein_file", "type": "str"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 485, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "rgf", "type": "module"}, {"lineNumber": 492, "col_offset": 24, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 492, "col_offset": 56, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 493, "col_offset": 56, "nodeName": "protein_file", "type": "str"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 494, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 495, "col_offset": 21, "nodeName": "feature_tensor", "type": "Any"}, {"lineNumber": 501, "col_offset": 17, "nodeName": "rgf", "type": "module"}, {"lineNumber": 505, "col_offset": 19, "nodeName": "ecfp_power", "type": "int"}, {"lineNumber": 506, "col_offset": 20, "nodeName": "splif_power", "type": "int"}, {"lineNumber": 509, "col_offset": 24, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 509, "col_offset": 56, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 510, "col_offset": 56, "nodeName": "protein_file", "type": "str"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 511, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 516, "col_offset": 21, "nodeName": "feature_tensor", "type": "Any"}, {"lineNumber": 516, "col_offset": 59, "nodeName": "voxel_total_len", "type": "Union[int, float]"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "rgf", "type": "module"}, {"lineNumber": 522, "col_offset": 19, "nodeName": "ecfp_power", "type": "int"}, {"lineNumber": 523, "col_offset": 20, "nodeName": "splif_power", "type": "int"}, {"lineNumber": 525, "col_offset": 24, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 525, "col_offset": 56, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 526, "col_offset": 56, "nodeName": "protein_file", "type": "str"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 527, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 530, "col_offset": 73, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 532, "col_offset": 21, "nodeName": "feature_tensor", "type": "Any"}, {"lineNumber": 532, "col_offset": 47, "nodeName": "flat_total_len", "type": "Union[float, int]"}, {"lineNumber": 535, "col_offset": 17, "nodeName": "rgf", "type": "module"}, {"lineNumber": 538, "col_offset": 19, "nodeName": "ecfp_power", "type": "int"}, {"lineNumber": 539, "col_offset": 20, "nodeName": "splif_power", "type": "int"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 543, "col_offset": 38, "nodeName": "feature_types", "type": "List[Any]"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 544, "col_offset": 39, "nodeName": "feature_types", "type": "List[Any]"}, {"lineNumber": 545, "col_offset": 24, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 545, "col_offset": 56, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 546, "col_offset": 56, "nodeName": "protein_file", "type": "str"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 547, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 548, "col_offset": 58, "nodeName": "ecfp_power", "type": "int"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 549, "col_offset": 21, "nodeName": "feature_tensor", "type": "Any"}, {"lineNumber": 549, "col_offset": 47, "nodeName": "total_len", "type": "Union[int, float]"}, {"lineNumber": 564, "col_offset": 21, "nodeName": "rgf", "type": "module"}, {"lineNumber": 564, "col_offset": 47, "nodeName": "custom_cutoffs", "type": "Dict[str, Union[float, List[Union[Tuple[int, float], Tuple[float, float]]], List[int], List[Union[Tuple[int, int], Tuple[float, float]]]]]"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 565, "col_offset": 21, "nodeName": "rgf_featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 568, "col_offset": 17, "nodeName": "rgf", "type": "module"}, {"lineNumber": 573, "col_offset": 25, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 573, "col_offset": 57, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 574, "col_offset": 57, "nodeName": "protein_file", "type": "str"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 575, "col_offset": 21, "nodeName": "feature_tensors", "type": "Any"}, {"lineNumber": 578, "col_offset": 25, "nodeName": "rgf", "type": "module"}, {"lineNumber": 578, "col_offset": 43, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 579, "col_offset": 23, "nodeName": "rgf", "type": "module"}, {"lineNumber": 579, "col_offset": 41, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "rgf", "type": "module"}, {"lineNumber": 582, "col_offset": 15, "nodeName": "rgf", "type": "module"}, {"lineNumber": 583, "col_offset": 14, "nodeName": "rgf", "type": "module"}, {"lineNumber": 585, "col_offset": 36, "nodeName": "rgf", "type": "module"}, {"lineNumber": 591, "col_offset": 21, "nodeName": "rgf", "type": "module"}, {"lineNumber": 592, "col_offset": 18, "nodeName": "box_w", "type": "int"}, {"lineNumber": 593, "col_offset": 19, "nodeName": "f_power", "type": "int"}, {"lineNumber": 598, "col_offset": 18, "nodeName": "rgf_featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "rgf", "type": "module"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "rgf", "type": "module"}, {"lineNumber": 602, "col_offset": 21, "nodeName": "prot_ecfp_dict", "type": "Any"}, {"lineNumber": 603, "col_offset": 22, "nodeName": "f_power", "type": "int"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 604, "col_offset": 21, "nodeName": "prot_tensor", "type": "Any"}, {"lineNumber": 604, "col_offset": 40, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 605, "col_offset": 19, "nodeName": "prot_tensor", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 608, "col_offset": 34, "nodeName": "GetNumAtoms", "type": "Any"}, {"lineNumber": 610, "col_offset": 17, "nodeName": "rgf_featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "rgf", "type": "module"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "rgf", "type": "module"}, {"lineNumber": 614, "col_offset": 21, "nodeName": "lig_ecfp_dict", "type": "Any"}, {"lineNumber": 615, "col_offset": 22, "nodeName": "f_power", "type": "int"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 616, "col_offset": 21, "nodeName": "lig_tensor", "type": "Any"}, {"lineNumber": 616, "col_offset": 39, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 617, "col_offset": 19, "nodeName": "lig_tensor", "type": "Any"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 619, "col_offset": 35, "nodeName": "GetNumAtoms", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "ascii_letters", "type": "str"}, {"lineNumber": 16, "col_offset": 40, "nodeName": "ascii_letters", "type": "str"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "load_molecule", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 37, "col_offset": 45, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 37, "col_offset": 63, "nodeName": "add_hydrogens", "type": "bool"}, {"lineNumber": 38, "col_offset": 45, "nodeName": "calc_charges", "type": "bool"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "GetNumAtoms", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "mol_xyz", "type": "Any"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "mol_rdk", "type": "Any"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "Mol", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "rgf", "type": "module"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "u", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "norm", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "u", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "rgf", "type": "module"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "m", "type": "Any"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "vectors", "type": "Any"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "vectors", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "rgf", "type": "module"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "vectors_rot", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "vectors_rot", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "rgf", "type": "module"}, {"lineNumber": 92, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "norm", "type": "Any"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "norm_vector", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "rgf", "type": "module"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "angle_between", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "v1", "type": "Any"}, {"lineNumber": 101, "col_offset": 51, "nodeName": "v1", "type": "Any"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "angle_between", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "v1", "type": "Any"}, {"lineNumber": 102, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "random_string", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "hash_ecfp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "string", "type": "str"}, {"lineNumber": 108, "col_offset": 44, "nodeName": "power", "type": "int"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "string_hash", "type": "Any"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "integer_types", "type": "Tuple[Type[int]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "string_hash", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "string_hash", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "random_string", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "random_string", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "hash_ecfp_pair", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 59, "nodeName": "power", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "pair_hash", "type": "Any"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "integer_types", "type": "Tuple[Type[int]]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "pair_hash", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "pair_hash", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 10, "nodeName": "voxel", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 147, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "rgf", "type": "module"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "args", "type": "Tuple[numpy.ndarray, int, int, float]"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 153, "col_offset": 10, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 10, "nodeName": "v1", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 10, "nodeName": "v2", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "rgf", "type": "module"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "rgf", "type": "module"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "charge_dict", "type": "Dict[int, Any]"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "GetNumAtoms", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "GetNumAtoms", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "charge_dict", "type": "Dict[int, Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "path", "type": "module"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "path", "type": "module"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "compute_ring_center", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 210, "col_offset": 44, "nodeName": "cycle4", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "abs", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 6, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 228, "col_offset": 10, "nodeName": "is_pi_parallel", "type": "Callable[..., bool]"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "ring1_center", "type": "numpy.ndarray"}, {"lineNumber": 228, "col_offset": 43, "nodeName": "ring1_normal_true", "type": "numpy.ndarray"}, {"lineNumber": 228, "col_offset": 62, "nodeName": "ring2_center_true", "type": "numpy.ndarray"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "ring2_normal", "type": "numpy.ndarray"}, {"lineNumber": 231, "col_offset": 6, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 232, "col_offset": 10, "nodeName": "is_pi_parallel", "type": "Callable[..., bool]"}, {"lineNumber": 232, "col_offset": 29, "nodeName": "ring1_center", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 43, "nodeName": "ring1_normal_false", "type": "numpy.ndarray"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "ring2_center_true", "type": "numpy.ndarray"}, {"lineNumber": 233, "col_offset": 48, "nodeName": "ring2_normal", "type": "numpy.ndarray"}, {"lineNumber": 235, "col_offset": 6, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 236, "col_offset": 10, "nodeName": "is_pi_parallel", "type": "Callable[..., bool]"}, {"lineNumber": 236, "col_offset": 29, "nodeName": "ring1_center", "type": "numpy.ndarray"}, {"lineNumber": 236, "col_offset": 43, "nodeName": "ring1_normal_true", "type": "numpy.ndarray"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "ring2_center_false", "type": "numpy.ndarray"}, {"lineNumber": 237, "col_offset": 49, "nodeName": "ring2_normal", "type": "numpy.ndarray"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 249, "col_offset": 10, "nodeName": "is_pi_t", "type": "Callable[..., bool]"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "ring1_center", "type": "numpy.ndarray"}, {"lineNumber": 249, "col_offset": 36, "nodeName": "ring1_normal_true", "type": "numpy.ndarray"}, {"lineNumber": 249, "col_offset": 55, "nodeName": "ring2_center_true", "type": "numpy.ndarray"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "ring2_normal", "type": "numpy.ndarray"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 253, "col_offset": 10, "nodeName": "is_pi_t", "type": "Callable[..., bool]"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "ring1_center", "type": "numpy.ndarray"}, {"lineNumber": 253, "col_offset": 36, "nodeName": "ring1_normal_false", "type": "numpy.ndarray"}, {"lineNumber": 253, "col_offset": 56, "nodeName": "ring2_center_true", "type": "numpy.ndarray"}, {"lineNumber": 254, "col_offset": 22, "nodeName": "ring2_normal", "type": "numpy.ndarray"}, {"lineNumber": 256, "col_offset": 6, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 257, "col_offset": 10, "nodeName": "is_pi_t", "type": "Callable[..., bool]"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "ring1_center", "type": "numpy.ndarray"}, {"lineNumber": 257, "col_offset": 36, "nodeName": "ring1_normal_true", "type": "numpy.ndarray"}, {"lineNumber": 257, "col_offset": 55, "nodeName": "ring2_center_false", "type": "numpy.ndarray"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "ring2_normal", "type": "numpy.ndarray"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "dicts1", "type": "Tuple[Counter[nothing], Counter[nothing], Counter[nothing], Counter[nothing]]"}, {"lineNumber": 265, "col_offset": 34, "nodeName": "dicts2", "type": "Tuple[Counter[nothing], Counter[nothing], Counter[nothing], Counter[nothing]]"}, {"lineNumber": 266, "col_offset": 6, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "dicts1", "type": "Tuple[Counter[nothing], Counter[nothing], Counter[nothing], Counter[nothing]]"}, {"lineNumber": 266, "col_offset": 34, "nodeName": "dicts2", "type": "Tuple[Counter[nothing], Counter[nothing], Counter[nothing], Counter[nothing]]"}, {"lineNumber": 271, "col_offset": 6, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "d", "type": "Counter[nothing]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "rgf", "type": "module"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "rgf", "type": "module"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "rgf", "type": "module"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "to_add", "type": "Counter[nothing]"}, {"lineNumber": 305, "col_offset": 11, "nodeName": "atom_idx", "type": "nothing"}, {"lineNumber": 305, "col_offset": 27, "nodeName": "exp_dict", "type": "Counter[nothing]"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "count", "type": "int"}, {"lineNumber": 308, "col_offset": 32, "nodeName": "count", "type": "int"}, {"lineNumber": 320, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 320, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 331, "col_offset": 17, "nodeName": "rgf", "type": "module"}, {"lineNumber": 331, "col_offset": 50, "nodeName": "degree", "type": "int"}, {"lineNumber": 332, "col_offset": 6, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 333, "col_offset": 6, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 333, "col_offset": 27, "nodeName": "ecfp_all", "type": "Dict[int, str]"}, {"lineNumber": 334, "col_offset": 6, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 334, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 334, "col_offset": 46, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 336, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 336, "col_offset": 42, "nodeName": "num_atoms", "type": "Any"}, {"lineNumber": 337, "col_offset": 21, "nodeName": "choice", "type": "Any"}, {"lineNumber": 337, "col_offset": 38, "nodeName": "num_atoms", "type": "Any"}, {"lineNumber": 337, "col_offset": 49, "nodeName": "num_ind", "type": "Any"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "rgf", "type": "module"}, {"lineNumber": 339, "col_offset": 56, "nodeName": "indices", "type": "List[Any]"}, {"lineNumber": 339, "col_offset": 72, "nodeName": "degree", "type": "int"}, {"lineNumber": 340, "col_offset": 6, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 341, "col_offset": 6, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 341, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 341, "col_offset": 27, "nodeName": "ecfp_selected", "type": "Dict[int, str]"}, {"lineNumber": 342, "col_offset": 6, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 342, "col_offset": 23, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 342, "col_offset": 53, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 342, "col_offset": 60, "nodeName": "indices", "type": "List[Any]"}, {"lineNumber": 407, "col_offset": 19, "nodeName": "rgf", "type": "module"}, {"lineNumber": 414, "col_offset": 6, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 415, "col_offset": 11, "nodeName": "prot_idx", "type": "Any"}, {"lineNumber": 415, "col_offset": 21, "nodeName": "lig_idx", "type": "Any"}, {"lineNumber": 415, "col_offset": 44, "nodeName": "splif_dict", "type": "Any"}, {"lineNumber": 417, "col_offset": 20, "nodeName": "prot_idx", "type": "Any"}, {"lineNumber": 417, "col_offset": 30, "nodeName": "lig_idx", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 32, "nodeName": "prot_idx", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 420, "col_offset": 24, "nodeName": "prot_idx", "type": "Any"}, {"lineNumber": 420, "col_offset": 34, "nodeName": "prot_num_atoms", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 421, "col_offset": 32, "nodeName": "lig_idx", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 422, "col_offset": 24, "nodeName": "lig_idx", "type": "Any"}, {"lineNumber": 422, "col_offset": 33, "nodeName": "lig_num_atoms", "type": "Any"}, {"lineNumber": 426, "col_offset": 10, "nodeName": "ecfp_idx", "type": "int"}, {"lineNumber": 460, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 460, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 461, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 461, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 462, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 464, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 471, "col_offset": 56, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 472, "col_offset": 56, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 483, "col_offset": 56, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 484, "col_offset": 56, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 492, "col_offset": 56, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 493, "col_offset": 56, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 509, "col_offset": 56, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 510, "col_offset": 56, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 525, "col_offset": 56, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 526, "col_offset": 56, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "cutoffs", "type": "Dict[str, Any]"}, {"lineNumber": 543, "col_offset": 38, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 544, "col_offset": 39, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 545, "col_offset": 56, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 546, "col_offset": 56, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "voxel_total_len", "type": "Union[int, float]"}, {"lineNumber": 548, "col_offset": 34, "nodeName": "flat_total_len", "type": "Union[float, int]"}, {"lineNumber": 573, "col_offset": 57, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 574, "col_offset": 57, "nodeName": "self", "type": "TestRdkitGridFeaturizer"}, {"lineNumber": 608, "col_offset": 34, "nodeName": "prot_rdk", "type": "Any"}, {"lineNumber": 619, "col_offset": 35, "nodeName": "lig_rdk", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "string", "type": "module"}, {"lineNumber": 16, "col_offset": 40, "nodeName": "string", "type": "module"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "rgf", "type": "module"}, {"lineNumber": 37, "col_offset": 45, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "mol_rdk", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "mol_xyz", "type": "Any"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "num_atoms", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "distance", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "distance", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "distance", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "rgf", "type": "module"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "rgf", "type": "module"}, {"lineNumber": 102, "col_offset": 52, "nodeName": "v1", "type": "Any"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "rgf", "type": "module"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "power", "type": "int"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "rgf", "type": "module"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "string1", "type": "str"}, {"lineNumber": 118, "col_offset": 49, "nodeName": "string2", "type": "str"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "power", "type": "int"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "convert_atom_to_voxel", "type": "Callable[..., List[Any]]"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "xyz", "type": "Any"}, {"lineNumber": 130, "col_offset": 49, "nodeName": "idx", "type": "Any"}, {"lineNumber": 130, "col_offset": 54, "nodeName": "box_width", "type": "int"}, {"lineNumber": 130, "col_offset": 65, "nodeName": "voxel_width", "type": "Union[float, int]"}, {"lineNumber": 131, "col_offset": 10, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "voxel", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 132, "col_offset": 10, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 10, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 134, "col_offset": 10, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 10, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 10, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "voxel", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "floor", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "convert_atom_to_voxel", "type": "Callable[..., List[Any]]"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "xyz1", "type": "Any"}, {"lineNumber": 164, "col_offset": 47, "nodeName": "idx1", "type": "Any"}, {"lineNumber": 164, "col_offset": 53, "nodeName": "box_width", "type": "int"}, {"lineNumber": 164, "col_offset": 64, "nodeName": "voxel_width", "type": "Union[float, int]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "convert_atom_to_voxel", "type": "Callable[..., List[Any]]"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "xyz2", "type": "Any"}, {"lineNumber": 165, "col_offset": 47, "nodeName": "idx2", "type": "Any"}, {"lineNumber": 165, "col_offset": 53, "nodeName": "box_width", "type": "int"}, {"lineNumber": 165, "col_offset": 64, "nodeName": "voxel_width", "type": "Union[float, int]"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "convert_atom_pair_to_voxel", "type": "Callable[[Any, Any, Any, Any], List[Any]]"}, {"lineNumber": 167, "col_offset": 50, "nodeName": "box_width", "type": "int"}, {"lineNumber": 167, "col_offset": 61, "nodeName": "voxel_width", "type": "Union[float, int]"}, {"lineNumber": 168, "col_offset": 10, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 10, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 10, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "mol", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "mol", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "charge_dict", "type": "Dict[int, Any]"}, {"lineNumber": 181, "col_offset": 47, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 181, "col_offset": 54, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "rgf", "type": "module"}, {"lineNumber": 210, "col_offset": 44, "nodeName": "self", "type": "TestPiInteractions"}, {"lineNumber": 210, "col_offset": 57, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "normal", "type": "Any"}, {"lineNumber": 228, "col_offset": 10, "nodeName": "rgf", "type": "module"}, {"lineNumber": 232, "col_offset": 10, "nodeName": "rgf", "type": "module"}, {"lineNumber": 236, "col_offset": 10, "nodeName": "rgf", "type": "module"}, {"lineNumber": 249, "col_offset": 10, "nodeName": "rgf", "type": "module"}, {"lineNumber": 253, "col_offset": 10, "nodeName": "rgf", "type": "module"}, {"lineNumber": 257, "col_offset": 10, "nodeName": "rgf", "type": "module"}, {"lineNumber": 265, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "j", "type": "int"}, {"lineNumber": 266, "col_offset": 30, "nodeName": "j", "type": "int"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 306, "col_offset": 10, "nodeName": "exp_dict", "type": "Counter[nothing]"}, {"lineNumber": 308, "col_offset": 10, "nodeName": "exp_dict", "type": "Counter[nothing]"}, {"lineNumber": 320, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 334, "col_offset": 28, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 334, "col_offset": 51, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 334, "col_offset": 57, "nodeName": "num_atoms", "type": "Any"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 418, "col_offset": 10, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 418, "col_offset": 32, "nodeName": "idx", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 425, "col_offset": 10, "nodeName": "ecfp_idx", "type": "Any"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "ecfp_frag", "type": "Any"}, {"lineNumber": 425, "col_offset": 32, "nodeName": "split", "type": "Any"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 426, "col_offset": 25, "nodeName": "ecfp_idx", "type": "Any"}, {"lineNumber": 427, "col_offset": 10, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 427, "col_offset": 34, "nodeName": "ecfp_idx", "type": "int"}, {"lineNumber": 460, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 461, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 495, "col_offset": 54, "nodeName": "ecfp_power", "type": "Any"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "cutoffs", "type": "Dict[str, Any]"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 530, "col_offset": 59, "nodeName": "splif_power", "type": "int"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "rgf", "type": "module"}, {"lineNumber": 131, "col_offset": 10, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 132, "col_offset": 10, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "voxel", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 10, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "voxel", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 10, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "all", "type": "Any"}, {"lineNumber": 139, "col_offset": 10, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 141, "col_offset": 10, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "rgf", "type": "module"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "rgf", "type": "module"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "rgf", "type": "module"}, {"lineNumber": 166, "col_offset": 51, "nodeName": "xyz1", "type": "Any"}, {"lineNumber": 166, "col_offset": 57, "nodeName": "xyz2", "type": "Any"}, {"lineNumber": 166, "col_offset": 65, "nodeName": "idx1", "type": "Any"}, {"lineNumber": 166, "col_offset": 71, "nodeName": "idx2", "type": "Any"}, {"lineNumber": 168, "col_offset": 10, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "v_pair", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 10, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "all", "type": "Any"}, {"lineNumber": 170, "col_offset": 10, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "all", "type": "Any"}, {"lineNumber": 181, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 216, "col_offset": 36, "nodeName": "norm", "type": "Any"}, {"lineNumber": 216, "col_offset": 51, "nodeName": "normal", "type": "Any"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "atom_idx", "type": "nothing"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "atom_idx", "type": "nothing"}, {"lineNumber": 334, "col_offset": 28, "nodeName": "ecfp_all", "type": "Dict[int, str]"}, {"lineNumber": 337, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "ecfp_selected", "type": "Dict[int, str]"}, {"lineNumber": 418, "col_offset": 10, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 418, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 418, "col_offset": 43, "nodeName": "int64", "type": "Any"}, {"lineNumber": 425, "col_offset": 32, "nodeName": "ecfp", "type": "Any"}, {"lineNumber": 427, "col_offset": 10, "nodeName": "self", "type": "TestFeaturizationFunctions"}, {"lineNumber": 495, "col_offset": 54, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "cutoffs", "type": "Dict[str, Any]"}, {"lineNumber": 604, "col_offset": 47, "nodeName": "box_w", "type": "int"}, {"lineNumber": 604, "col_offset": 64, "nodeName": "f_power", "type": "int"}, {"lineNumber": 616, "col_offset": 46, "nodeName": "box_w", "type": "int"}, {"lineNumber": 616, "col_offset": 63, "nodeName": "f_power", "type": "int"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "voxel", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "voxel", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "voxel", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "floor", "type": "Any"}, {"lineNumber": 153, "col_offset": 69, "nodeName": "args", "type": "Tuple[numpy.ndarray, int, int, float]"}, {"lineNumber": 216, "col_offset": 36, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 418, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "featurizer", "type": "deepchem.feat.rdkit_grid_featurizer.RdkitGridFeaturizer"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 66, "nodeName": "voxel_width", "type": "Union[float, int]"}, {"lineNumber": 153, "col_offset": 42, "nodeName": "args", "type": "Tuple[numpy.ndarray, int, int, float]"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "v1", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "v2", "type": "List[Any]"}, {"lineNumber": 216, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "voxel", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "voxel", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 61, "nodeName": "voxel_width", "type": "Union[float, int]"}, {"lineNumber": 153, "col_offset": 52, "nodeName": "args", "type": "Tuple[numpy.ndarray, int, int, float]"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "v_pair", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "v_pair", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "xyz", "type": "Any"}, {"lineNumber": 143, "col_offset": 47, "nodeName": "box_width", "type": "int"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "box_width", "type": "int"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "coords_range", "type": "int"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "idx", "type": "Any"}]