[{"lineNumber": 8, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 8, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.fcnet.MultitaskRegressor"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "multitask_scores", "type": "Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 14, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 14, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "MultitaskRegressor", "type": "Type[deepchem.models.fcnet.MultitaskRegressor]"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "model", "type": "deepchem.models.fcnet.MultitaskRegressor"}, {"lineNumber": 17, "col_offset": 33, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 17, "col_offset": 42, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "mae_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "compute_model_performance", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]]"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 20, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "metrics", "type": "module"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 19, "col_offset": 60, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "dc", "type": "module"}]