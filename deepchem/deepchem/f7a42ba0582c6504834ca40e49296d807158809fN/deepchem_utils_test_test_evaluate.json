[{"lineNumber": 9, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 9, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.fcnet.MultitaskRegressor"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "y_sums", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "multitask_scores", "type": "Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "metric1", "type": "deepchem.metrics.Metric"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "metric2", "type": "deepchem.metrics.Metric"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.GeneratorEvaluator"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "multitask_scores", "type": "Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.GeneratorEvaluator"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "multitask_scores", "type": "Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "multitask_scores", "type": "Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.fcnet.MultitaskClassifier"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 15, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 15, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "MultitaskRegressor", "type": "Type[deepchem.models.fcnet.MultitaskRegressor]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "sum", "type": "Any"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "y", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "y_sums", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "model", "type": "deepchem.models.fcnet.MultitaskRegressor"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "mae_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "compute_model_performance", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]]"}, {"lineNumber": 29, "col_offset": 59, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "multitask_scores", "type": "Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 30, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "model", "type": "deepchem.models.fcnet.MultitaskRegressor"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "mae_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "r2_score", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "compute_model_performance", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "model", "type": "deepchem.models.fcnet.MultitaskRegressor"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "compute_model_performance", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]]"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "model", "type": "deepchem.models.fcnet.MultitaskRegressor"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "compute_model_performance", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "default_generator", "type": "Callable[..., Iterable[Tuple[List[Any], List[Any], List[Any]]]]"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "GeneratorEvaluator", "type": "Type[deepchem.utils.evaluate.GeneratorEvaluator]"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "model", "type": "deepchem.models.fcnet.MultitaskRegressor"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "generator", "type": "Iterable[Tuple[List[Any], List[Any], List[Any]]]"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "mae_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "compute_model_performance", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]]"}, {"lineNumber": 77, "col_offset": 59, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "default_generator", "type": "Callable[..., Iterable[Tuple[List[Any], List[Any], List[Any]]]]"}, {"lineNumber": 85, "col_offset": 6, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "GeneratorEvaluator", "type": "Type[deepchem.utils.evaluate.GeneratorEvaluator]"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "model", "type": "deepchem.models.fcnet.MultitaskRegressor"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "generator", "type": "Iterable[Tuple[List[Any], List[Any], List[Any]]]"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "mae_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "compute_model_performance", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]]"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "model", "type": "deepchem.models.fcnet.MultitaskRegressor"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "mae_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "compute_model_performance", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]]"}, {"lineNumber": 99, "col_offset": 59, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "MultitaskClassifier", "type": "Type[deepchem.models.fcnet.MultitaskClassifier]"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "model", "type": "deepchem.models.fcnet.MultitaskClassifier"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "compute_model_performance", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]]"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "data", "type": "module"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "models", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "metrics", "type": "module"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "multitask_scores", "type": "Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "multitask_scores", "type": "Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "metrics", "type": "module"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "metrics", "type": "module"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "metrics", "type": "module"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "metrics", "type": "module"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 40, "col_offset": 7, "nodeName": "metric1", "type": "deepchem.metrics.Metric"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "metric2", "type": "deepchem.metrics.Metric"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.fcnet.MultitaskRegressor"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "metrics", "type": "module"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.GeneratorEvaluator"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.fcnet.MultitaskRegressor"}, {"lineNumber": 85, "col_offset": 6, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "metrics", "type": "module"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.GeneratorEvaluator"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "metrics", "type": "module"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "multitask_scores", "type": "Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "multitask_scores", "type": "Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "dc", "type": "module"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "dc", "type": "module"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "dc", "type": "module"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "dc", "type": "module"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "dc", "type": "module"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "self", "type": "TestEvaluator"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "dc", "type": "module"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "dc", "type": "module"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "multitask_scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}]