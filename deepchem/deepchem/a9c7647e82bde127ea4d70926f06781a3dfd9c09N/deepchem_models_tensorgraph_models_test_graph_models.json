[{"lineNumber": 10, "col_offset": 0, "nodeName": "get_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "test_graph_conv_model", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "test_graph_conv_regression_model", "type": "Callable[[], Any]"}, {"lineNumber": 11, "col_offset": 2, "nodeName": "data_points", "type": "int"}, {"lineNumber": 13, "col_offset": 23, "nodeName": "all_dataset", "type": "Optional[Tuple[Any, Any, Any]]"}, {"lineNumber": 24, "col_offset": 2, "nodeName": "ds", "type": "Any"}, {"lineNumber": 33, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 38, "col_offset": 2, "nodeName": "scores", "type": "Any"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "model", "type": "Any"}, {"lineNumber": 42, "col_offset": 2, "nodeName": "scores", "type": "Any"}, {"lineNumber": 48, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "scores", "type": "Any"}, {"lineNumber": 56, "col_offset": 2, "nodeName": "model", "type": "Any"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "scores", "type": "Any"}, {"lineNumber": 12, "col_offset": 2, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "all_dataset", "type": "Optional[Tuple[Any, Any, Any]]"}, {"lineNumber": 12, "col_offset": 22, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 12, "col_offset": 37, "nodeName": "load_delaney", "type": "Callable[..., Tuple[List[unicode], Optional[Tuple[Any, Any, Any]], Any]]"}, {"lineNumber": 12, "col_offset": 50, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 13, "col_offset": 2, "nodeName": "train", "type": "Any"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "valid", "type": "Any"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "test", "type": "Any"}, {"lineNumber": 15, "col_offset": 5, "nodeName": "mode", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 19, "col_offset": 5, "nodeName": "mode", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 24, "col_offset": 7, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "ds", "type": "Any"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "get_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "GraphConvTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.graph_models.GraphConvTensorGraph]"}, {"lineNumber": 37, "col_offset": 2, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "evaluate", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 38, "col_offset": 45, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 41, "col_offset": 10, "nodeName": "load_from_dir", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 42, "col_offset": 45, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 46, "col_offset": 2, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "get_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 10, "nodeName": "GraphConvTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.graph_models.GraphConvTensorGraph]"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "evaluate", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "load_from_dir", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 57, "col_offset": 45, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 18, "col_offset": 40, "nodeName": "mean", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "w", "type": "Any"}, {"lineNumber": 24, "col_offset": 51, "nodeName": "ids", "type": "Any"}, {"lineNumber": 35, "col_offset": 6, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 37, "col_offset": 2, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.GraphConvTensorGraph"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.GraphConvTensorGraph"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.GraphConvTensorGraph"}, {"lineNumber": 41, "col_offset": 10, "nodeName": "TensorGraph", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TensorGraph]"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.GraphConvTensorGraph"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.GraphConvTensorGraph"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.GraphConvTensorGraph"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.GraphConvTensorGraph"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "TensorGraph", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TensorGraph]"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.GraphConvTensorGraph"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 18, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "train", "type": "Any"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "train", "type": "Any"}, {"lineNumber": 24, "col_offset": 51, "nodeName": "train", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 16, "col_offset": 38, "nodeName": "data_points", "type": "int"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 31, "nodeName": "data_points", "type": "int"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 16, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 16, "col_offset": 55, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 20, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 20, "col_offset": 48, "nodeName": "tasks", "type": "List[unicode]"}]