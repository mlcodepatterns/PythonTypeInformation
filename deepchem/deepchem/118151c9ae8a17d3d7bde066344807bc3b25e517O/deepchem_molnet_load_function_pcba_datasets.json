[{"lineNumber": 9, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "DEFAULT_DIR", "type": "str"}, {"lineNumber": 9, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 9, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "get_data_dir", "type": "Callable[[], str]"}, {"lineNumber": 97, "col_offset": 5, "nodeName": "reload", "type": "bool"}, {"lineNumber": 106, "col_offset": 2, "nodeName": "dataset_file", "type": "str"}, {"lineNumber": 137, "col_offset": 5, "nodeName": "reload", "type": "bool"}, {"lineNumber": 146, "col_offset": 2, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 163, "col_offset": 2, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 165, "col_offset": 2, "nodeName": "frac_train", "type": "Union[Any, float, str]"}, {"lineNumber": 166, "col_offset": 2, "nodeName": "frac_valid", "type": "Union[Any, float, str]"}, {"lineNumber": 167, "col_offset": 2, "nodeName": "frac_test", "type": "Union[Any, float, str]"}, {"lineNumber": 175, "col_offset": 2, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 5, "nodeName": "reload", "type": "bool"}, {"lineNumber": 9, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "utils", "type": "module"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "load_pcba_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "load_pcba_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "load_pcba_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 5, "nodeName": "data_dir", "type": "None"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "data_dir", "type": "str"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "DEFAULT_DIR", "type": "str"}, {"lineNumber": 94, "col_offset": 5, "nodeName": "save_dir", "type": "None"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "save_dir", "type": "str"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "DEFAULT_DIR", "type": "str"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "data_dir", "type": "str"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "assay_file_name", "type": "str"}, {"lineNumber": 115, "col_offset": 2, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 5, "nodeName": "featurizer", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.fingerprints.CircularFingerprint"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "fin", "type": "gzip.GzipFile"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "header", "type": "str"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "PCBA_tasks", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "loaded", "type": "bool"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "dataset_file", "type": "str"}, {"lineNumber": 148, "col_offset": 5, "nodeName": "split", "type": "str"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "splitters", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 2, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "get", "type": "Callable"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "train_valid_test_split", "type": "Any"}, {"lineNumber": 170, "col_offset": 6, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 177, "col_offset": 2, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "valid", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 187, "col_offset": 9, "nodeName": "PCBA_tasks", "type": "List[str]"}, {"lineNumber": 187, "col_offset": 43, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "split", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "reload", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "split", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "reload", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "split", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "reload", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "save_dir", "type": "str"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "featurizer", "type": "str"}, {"lineNumber": 101, "col_offset": 7, "nodeName": "featurizer", "type": "str"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "img_spec", "type": "Union[Any, str]"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "save_folder", "type": "Union[Any, str]"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 108, "col_offset": 9, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "dataset_file", "type": "str"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "download_url", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "CircularFingerprint", "type": "Type[deepchem.feat.fingerprints.CircularFingerprint]"}, {"lineNumber": 118, "col_offset": 7, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 130, "col_offset": 7, "nodeName": "GzipFile", "type": "Type[gzip.GzipFile]"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "dataset_file", "type": "str"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "remove", "type": "Callable"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "remove", "type": "Callable"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "load_dataset_from_disk", "type": "Callable[[Any], Tuple[bool, Optional[Tuple[Any, Any, Any]], Any]]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "data", "type": "module"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "PCBA_tasks", "type": "List[str]"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "featurizer", "type": "deepchem.feat.fingerprints.CircularFingerprint"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "PCBA_tasks", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "IndexSplitter", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "RandomSplitter", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "ScaffoldSplitter", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "SingletaskStratifiedSplitter", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "split", "type": "str"}, {"lineNumber": 164, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 164, "col_offset": 65, "nodeName": "split", "type": "str"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "frac_train", "type": "Union[Any, float, str]"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "frac_valid", "type": "Union[Any, float, str]"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "frac_test", "type": "Union[float, Any, str]"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "BalancingTransformer", "type": "Any"}, {"lineNumber": 177, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "train", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "valid", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "transform", "type": "Any"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "test", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "save_dataset_to_disk", "type": "Callable[[Any, Any, Any, Any, Any], None]"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 184, "col_offset": 58, "nodeName": "train", "type": "Any"}, {"lineNumber": 184, "col_offset": 65, "nodeName": "valid", "type": "Any"}, {"lineNumber": 184, "col_offset": 72, "nodeName": "test", "type": "Any"}, {"lineNumber": 185, "col_offset": 45, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "train", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "test", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "get", "type": "Callable"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "save_folder", "type": "Union[Any, str]"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "img_spec", "type": "Union[Any, str]"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "split", "type": "str"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 108, "col_offset": 9, "nodeName": "path", "type": "module"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "data_dir", "type": "str"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "ConvMolFeaturizer", "type": "Type[deepchem.feat.graph_features.ConvMolFeaturizer]"}, {"lineNumber": 120, "col_offset": 7, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 130, "col_offset": 7, "nodeName": "gzip", "type": "module"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "header", "type": "str"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "save", "type": "module"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "PCBA_tasks", "type": "List[str]"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "all_dataset", "type": "Optional[Tuple[Any, Any, Any]]"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "BalancingTransformer", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "transform", "type": "Any"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "splits", "type": "module"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "splits", "type": "module"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "splits", "type": "module"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "splits", "type": "module"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "trans", "type": "module"}, {"lineNumber": 175, "col_offset": 62, "nodeName": "train", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "save", "type": "module"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 108, "col_offset": 9, "nodeName": "os", "type": "module"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "assay_file_name", "type": "str"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "WeaveFeaturizer", "type": "Type[deepchem.feat.graph_features.WeaveFeaturizer]"}, {"lineNumber": 122, "col_offset": 7, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.raw_featurizer.RawFeaturizer"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "rstrip", "type": "Callable[..., bytes]"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "utils", "type": "module"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "trans", "type": "module"}, {"lineNumber": 149, "col_offset": 64, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "RawFeaturizer", "type": "Type[deepchem.feat.raw_featurizer.RawFeaturizer]"}, {"lineNumber": 124, "col_offset": 7, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "img_spec", "type": "Union[Any, str]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "img_size", "type": "Union[Any, int]"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "assay_file_name", "type": "str"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "SmilesToImage", "type": "Type[deepchem.feat.smiles_featurizers.SmilesToImage]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "readline", "type": "Callable[..., bytes]"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "img_size", "type": "Union[Any, int]"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "img_spec", "type": "Union[Any, str]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "fin", "type": "gzip.GzipFile"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "deepchem", "type": "module"}]