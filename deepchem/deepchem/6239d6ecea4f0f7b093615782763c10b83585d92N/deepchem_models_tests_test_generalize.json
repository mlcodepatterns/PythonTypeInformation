[{"lineNumber": 9, "col_offset": 0, "nodeName": "__author__", "type": "unicode"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "__copyright__", "type": "unicode"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "__license__", "type": "unicode"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "TestAPI", "type": "Type[deepchem.models.tests.TestAPI]"}, {"lineNumber": 34, "col_offset": 2, "nodeName": "test_sklearn_regression", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 2, "nodeName": "test_sklearn_transformed_regression", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 2, "nodeName": "test_sklearn_multitask_regression", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 2, "nodeName": "test_sklearn_classification", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 2, "nodeName": "test_sklearn_multitask_classification", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "test_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "task_types", "type": "Dict[Any, unicode]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "regression_metric", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "train_evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "test_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "transformers", "type": "Union[List[deepchem.transformers.NormalizationTransformer], List[Union[deepchem.transformers.ClippingTransformer, deepchem.transformers.NormalizationTransformer]]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "transformer", "type": "Union[deepchem.transformers.ClippingTransformer, deepchem.transformers.NormalizationTransformer]"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "transformers", "type": "Union[List[Union[deepchem.transformers.ClippingTransformer, deepchem.transformers.NormalizationTransformer]], List[deepchem.transformers.NormalizationTransformer]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "transformer", "type": "Union[deepchem.transformers.ClippingTransformer, deepchem.transformers.NormalizationTransformer]"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "transformers", "type": "Union[List[Union[deepchem.transformers.ClippingTransformer, deepchem.transformers.NormalizationTransformer]], List[deepchem.transformers.NormalizationTransformer]]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "task_types", "type": "Dict[Any, unicode]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "regression_metric", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "train_evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "test_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "task_types", "type": "Dict[Any, unicode]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "regression_metric", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "train_evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "test_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "task_types", "type": "Dict[Any, unicode]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "classification_metric", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "train_evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "test_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "task_types", "type": "Dict[Any, unicode]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "classification_metric", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "train_evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "load_diabetes", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "from_numpy", "type": "Callable[..., deepchem.datasets.Dataset]"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 46, "col_offset": 55, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 46, "col_offset": 64, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "from_numpy", "type": "Callable[..., deepchem.datasets.Dataset]"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 47, "col_offset": 53, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 47, "col_offset": 61, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "get_task_names", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "task", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "Metric", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "task_types", "type": "Dict[Any, unicode]"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "model_params", "type": "Dict[unicode, Any]"}, {"lineNumber": 59, "col_offset": 58, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "fit", "type": "Callable[[Any], None]"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 69, "col_offset": 54, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "compute_model_performance", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 10, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "test_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 76, "col_offset": 47, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "compute_model_performance", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "load_diabetes", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 87, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "from_numpy", "type": "Callable[..., deepchem.datasets.Dataset]"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 95, "col_offset": 55, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 95, "col_offset": 64, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "from_numpy", "type": "Callable[..., deepchem.datasets.Dataset]"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 96, "col_offset": 53, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 96, "col_offset": 61, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "input_transformers", "type": "List[Union[deepchem.transformers.NormalizationTransformer, deepchem.transformers.ClippingTransformer]]"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "output_transformers", "type": "List[deepchem.transformers.NormalizationTransformer]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "get_task_names", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "task", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "Metric", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "task_types", "type": "Dict[Any, unicode]"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "model_params", "type": "Dict[unicode, Any]"}, {"lineNumber": 120, "col_offset": 58, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "fit", "type": "Callable[[Any], None]"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 128, "col_offset": 54, "nodeName": "transformers", "type": "Union[List[Union[deepchem.transformers.ClippingTransformer, deepchem.transformers.NormalizationTransformer]], List[deepchem.transformers.NormalizationTransformer]]"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "compute_model_performance", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 10, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "test_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 137, "col_offset": 47, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "compute_model_performance", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 10, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "load_diabetes", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 149, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "from_numpy", "type": "Callable[..., deepchem.datasets.Dataset]"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 159, "col_offset": 55, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 159, "col_offset": 64, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "from_numpy", "type": "Callable[..., deepchem.datasets.Dataset]"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 160, "col_offset": 61, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "get_task_names", "type": "Callable[[], Any]"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "task", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "Metric", "type": "Any"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "SingletaskToMultitask", "type": "Type[deepchem.models.multitask.SingletaskToMultitask]"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 177, "col_offset": 41, "nodeName": "task_types", "type": "Dict[Any, unicode]"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "model_params", "type": "Dict[unicode, Any]"}, {"lineNumber": 177, "col_offset": 67, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "fit", "type": "Callable[[Any], None]"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 186, "col_offset": 54, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "compute_model_performance", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 10, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 193, "col_offset": 26, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "test_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "compute_model_performance", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 10, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "load_digits", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 205, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 214, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 214, "col_offset": 54, "nodeName": "shape", "type": "Any"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "from_numpy", "type": "Callable[..., deepchem.datasets.Dataset]"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 216, "col_offset": 55, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 216, "col_offset": 64, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "from_numpy", "type": "Callable[..., deepchem.datasets.Dataset]"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 217, "col_offset": 53, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 217, "col_offset": 61, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "get_task_names", "type": "Callable[[], Any]"}, {"lineNumber": 220, "col_offset": 18, "nodeName": "task", "type": "Any"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "Metric", "type": "Any"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "task_types", "type": "Dict[Any, unicode]"}, {"lineNumber": 229, "col_offset": 44, "nodeName": "model_params", "type": "Dict[unicode, Any]"}, {"lineNumber": 229, "col_offset": 58, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "fit", "type": "Callable[[Any], None]"}, {"lineNumber": 234, "col_offset": 14, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 239, "col_offset": 39, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 239, "col_offset": 54, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "compute_model_performance", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 10, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 246, "col_offset": 33, "nodeName": "test_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 246, "col_offset": 47, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "compute_model_performance", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 10, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "load_digits", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 258, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 265, "col_offset": 13, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "from_numpy", "type": "Callable[..., deepchem.datasets.Dataset]"}, {"lineNumber": 268, "col_offset": 39, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 268, "col_offset": 55, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 268, "col_offset": 64, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "from_numpy", "type": "Callable[..., deepchem.datasets.Dataset]"}, {"lineNumber": 269, "col_offset": 38, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 269, "col_offset": 53, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 269, "col_offset": 61, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "get_task_names", "type": "Callable[[], Any]"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "task", "type": "Any"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "Metric", "type": "Any"}, {"lineNumber": 280, "col_offset": 35, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "SingletaskToMultitask", "type": "Type[deepchem.models.multitask.SingletaskToMultitask]"}, {"lineNumber": 286, "col_offset": 34, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 286, "col_offset": 41, "nodeName": "task_types", "type": "Dict[Any, unicode]"}, {"lineNumber": 286, "col_offset": 53, "nodeName": "model_params", "type": "Dict[unicode, Any]"}, {"lineNumber": 286, "col_offset": 67, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "fit", "type": "Callable[[Any], None]"}, {"lineNumber": 290, "col_offset": 14, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 295, "col_offset": 54, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "compute_model_performance", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 10, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 302, "col_offset": 33, "nodeName": "test_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 302, "col_offset": 47, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "compute_model_performance", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 10, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 307, "col_offset": 17, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "y", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "y", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "task", "type": "Any"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "get_data_shape", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "metrics", "type": "module"}, {"lineNumber": 58, "col_offset": 59, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 59, "col_offset": 58, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 69, "col_offset": 78, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "train_evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 70, "col_offset": 62, "nodeName": "regression_metric", "type": "Any"}, {"lineNumber": 76, "col_offset": 71, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "regression_metric", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "y", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "y", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "NormalizationTransformer", "type": "Type[deepchem.transformers.NormalizationTransformer]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "ClippingTransformer", "type": "Type[deepchem.transformers.ClippingTransformer]"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "NormalizationTransformer", "type": "Type[deepchem.transformers.NormalizationTransformer]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "transform", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "transform", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "test_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "task", "type": "Any"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "get_data_shape", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "metrics", "type": "module"}, {"lineNumber": 119, "col_offset": 59, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 120, "col_offset": 58, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 128, "col_offset": 78, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "train_evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 129, "col_offset": 62, "nodeName": "regression_metric", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 71, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 138, "col_offset": 50, "nodeName": "regression_metric", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 156, "col_offset": 49, "nodeName": "y", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "y", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "task", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "get_data_shape", "type": "Callable[[], Any]"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "metrics", "type": "module"}, {"lineNumber": 171, "col_offset": 59, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 173, "col_offset": 33, "nodeName": "task_types", "type": "Any"}, {"lineNumber": 173, "col_offset": 45, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 173, "col_offset": 59, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 177, "col_offset": 67, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 178, "col_offset": 59, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 186, "col_offset": 78, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "train_evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 187, "col_offset": 62, "nodeName": "regression_metric", "type": "Any"}, {"lineNumber": 193, "col_offset": 71, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 194, "col_offset": 50, "nodeName": "regression_metric", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "score", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 210, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 210, "col_offset": 49, "nodeName": "y", "type": "Any"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 211, "col_offset": 47, "nodeName": "y", "type": "Any"}, {"lineNumber": 214, "col_offset": 10, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 214, "col_offset": 40, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 214, "col_offset": 54, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 220, "col_offset": 45, "nodeName": "task", "type": "Any"}, {"lineNumber": 220, "col_offset": 53, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "get_data_shape", "type": "Callable[[], Any]"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "metrics", "type": "module"}, {"lineNumber": 228, "col_offset": 68, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 229, "col_offset": 58, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 239, "col_offset": 78, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "train_evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 240, "col_offset": 62, "nodeName": "classification_metric", "type": "Any"}, {"lineNumber": 246, "col_offset": 71, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 247, "col_offset": 50, "nodeName": "classification_metric", "type": "Any"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 265, "col_offset": 49, "nodeName": "y", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 266, "col_offset": 47, "nodeName": "y", "type": "Any"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 268, "col_offset": 39, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 269, "col_offset": 38, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 272, "col_offset": 45, "nodeName": "task", "type": "Any"}, {"lineNumber": 272, "col_offset": 53, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "get_data_shape", "type": "Callable[[], Any]"}, {"lineNumber": 280, "col_offset": 35, "nodeName": "metrics", "type": "module"}, {"lineNumber": 280, "col_offset": 68, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 282, "col_offset": 26, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 282, "col_offset": 33, "nodeName": "task_types", "type": "Any"}, {"lineNumber": 282, "col_offset": 45, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 282, "col_offset": 59, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 286, "col_offset": 67, "nodeName": "self", "type": "TestGeneralization"}, {"lineNumber": 287, "col_offset": 59, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 295, "col_offset": 78, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "train_evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 296, "col_offset": 62, "nodeName": "classification_metric", "type": "Any"}, {"lineNumber": 302, "col_offset": 71, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 303, "col_offset": 50, "nodeName": "classification_metric", "type": "Any"}, {"lineNumber": 307, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "score", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 61, "col_offset": 40, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 100, "col_offset": 59, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 101, "col_offset": 54, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 103, "col_offset": 57, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "transformer", "type": "Union[deepchem.transformers.NormalizationTransformer, deepchem.transformers.ClippingTransformer]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "transformer", "type": "Union[deepchem.transformers.NormalizationTransformer, deepchem.transformers.ClippingTransformer]"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 176, "col_offset": 36, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "regression_metric", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 231, "col_offset": 40, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 285, "col_offset": 36, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 307, "col_offset": 24, "nodeName": "classification_metric", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 43, "col_offset": 52, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 43, "col_offset": 63, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 44, "col_offset": 60, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "regression_metric", "type": "Any"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 92, "col_offset": 63, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 93, "col_offset": 49, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 93, "col_offset": 60, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "regression_metric", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "regression_metric", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 156, "col_offset": 37, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 156, "col_offset": 52, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 156, "col_offset": 63, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 157, "col_offset": 49, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 157, "col_offset": 60, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 210, "col_offset": 37, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 210, "col_offset": 52, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 210, "col_offset": 63, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 211, "col_offset": 49, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 211, "col_offset": 60, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "classification_metric", "type": "Any"}, {"lineNumber": 265, "col_offset": 26, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 265, "col_offset": 37, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 265, "col_offset": 52, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 265, "col_offset": 63, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 266, "col_offset": 34, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 266, "col_offset": 49, "nodeName": "frac_train", "type": "float"}, {"lineNumber": 266, "col_offset": 60, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 284, "col_offset": 41, "nodeName": "LogisticRegression", "type": "Any"}]