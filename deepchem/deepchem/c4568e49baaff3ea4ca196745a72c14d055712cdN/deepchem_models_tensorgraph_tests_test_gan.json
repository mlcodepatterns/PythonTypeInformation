[{"lineNumber": 9, "col_offset": 0, "nodeName": "generate_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "GAN", "type": "Type[deepchem.models.tensorgraph.models.gan.GAN]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 2, "nodeName": "means", "type": "Any"}, {"lineNumber": 12, "col_offset": 2, "nodeName": "values", "type": "Any"}, {"lineNumber": 17, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "models", "type": "module"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "unittest", "type": "module"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "normal", "type": "Any"}, {"lineNumber": 12, "col_offset": 28, "nodeName": "means", "type": "Any"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "means", "type": "Any"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "values", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "batches", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "gen_in", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "discrim_in", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "means", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "means", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "WGAN", "type": "Type[deepchem.models.tensorgraph.models.gan.WGAN]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "gan", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "means", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "means", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "values", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "generate_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 19, "col_offset": 33, "nodeName": "values", "type": "Any"}, {"lineNumber": 19, "col_offset": 68, "nodeName": "means", "type": "Any"}, {"lineNumber": 20, "col_offset": 10, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "Concat", "type": "Type[deepchem.models.tensorgraph.layers.Concat]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "Concat", "type": "Type[deepchem.models.tensorgraph.layers.Concat]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "ExampleGAN", "type": "Type[ExampleGAN]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "fit_gan", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "values", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "means", "type": "Any"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "ExampleGAN", "type": "Type[ExampleGAN]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "fit_gan", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 80, "col_offset": 6, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "models", "type": "module"}, {"lineNumber": 112, "col_offset": 10, "nodeName": "ExampleWGAN", "type": "Type[Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "fit_gan", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "values", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "means", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 11, "col_offset": 33, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "data_inputs", "type": "Any"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "conditional_inputs", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "layers", "type": "module"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "conditional_inputs", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "layers", "type": "module"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "data_inputs", "type": "Any"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "conditional_inputs", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "layers", "type": "module"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "discrim_in", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 40, "col_offset": 65, "nodeName": "relu", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "layers", "type": "module"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "std", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "predict_gan_generator", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "values", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "means", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "gen_in", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "discrim_in", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "gan", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "gan", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "gan", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "std", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "gan", "type": "Any"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "gan", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "layers", "type": "module"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "gen_in", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 40, "col_offset": 65, "nodeName": "nn", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 59, "col_offset": 59, "nodeName": "means", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "gan", "type": "ExampleGAN"}, {"lineNumber": 79, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "std", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "Concat", "type": "Type[deepchem.models.tensorgraph.layers.Concat]"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "Concat", "type": "Type[deepchem.models.tensorgraph.layers.Concat]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 121, "col_offset": 59, "nodeName": "means", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 65, "nodeName": "tf", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "means", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "layers", "type": "module"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "conditional_inputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "layers", "type": "module"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "data_inputs", "type": "Any"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "conditional_inputs", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "discrim_in", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 105, "col_offset": 69, "nodeName": "relu", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "noise_input", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "gen_in", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 105, "col_offset": 69, "nodeName": "nn", "type": "Any"}, {"lineNumber": 105, "col_offset": 69, "nodeName": "tf", "type": "Any"}]