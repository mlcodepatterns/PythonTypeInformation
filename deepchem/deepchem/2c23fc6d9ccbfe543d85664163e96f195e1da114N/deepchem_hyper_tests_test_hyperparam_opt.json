[{"lineNumber": 16, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "initialized", "type": "bool"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.fingerprints.CircularFingerprint"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "input_file", "type": "str"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "splitter", "type": "deepchem.splits.splitters.ScaffoldSplitter"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "params_dict", "type": "Dict[str, List[int]]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "optimizer", "type": "deepchem.hyper.grid_search.GridHyperparamOpt"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "input_file", "type": "str"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "n_train", "type": "int"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "w_train", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "ids_train", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "n_valid", "type": "int"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "X_valid", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "y_valid", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "w_valid", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "ids_valid", "type": "List[str]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "params_dict", "type": "Dict[str, List[int]]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "optimizer", "type": "deepchem.hyper.grid_search.GridHyperparamOpt"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "task_type", "type": "str"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.fingerprints.CircularFingerprint"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "splitter", "type": "deepchem.splits.splitters.ScaffoldSplitter"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "params_dict", "type": "Dict[str, List[Tuple[int]]]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "optimizer", "type": "deepchem.hyper.grid_search.GridHyperparamOpt"}, {"lineNumber": 26, "col_offset": 6, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 30, "col_offset": 6, "nodeName": "opt", "type": "deepchem.hyper.base_classes.HyperparamOpt"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "initialized", "type": "bool"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "CircularFingerprint", "type": "Type[deepchem.feat.fingerprints.CircularFingerprint]"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "input_file", "type": "str"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "ScaffoldSplitter", "type": "Type[deepchem.splits.splitters.ScaffoldSplitter]"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "train_valid_test_split", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "test_dataset", "type": "Any"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "transformer", "type": "deepchem.trans.transformers.NormalizationTransformer"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "transformers", "type": "List[deepchem.trans.transformers.NormalizationTransformer]"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 67, "col_offset": 6, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "GridHyperparamOpt", "type": "Type[deepchem.hyper.grid_search.GridHyperparamOpt]"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "rf_model_builder", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "hyperparam_search", "type": "Callable[..., Tuple[Any, Optional[Tuple[Any, ...]], Dict[str, Any]]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "params_dict", "type": "Dict[str, List[int]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "transformers", "type": "List[deepchem.trans.transformers.NormalizationTransformer]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "n_train", "type": "int"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "n_features", "type": "int"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "randint", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "n_train", "type": "int"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 97, "col_offset": 60, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 97, "col_offset": 69, "nodeName": "w_train", "type": "Any"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "ids_train", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 62, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "n_valid", "type": "int"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "n_features", "type": "int"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "randint", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "y_valid", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "n_valid", "type": "int"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 51, "nodeName": "X_valid", "type": "Any"}, {"lineNumber": 106, "col_offset": 60, "nodeName": "y_valid", "type": "Any"}, {"lineNumber": 106, "col_offset": 69, "nodeName": "w_valid", "type": "Any"}, {"lineNumber": 107, "col_offset": 51, "nodeName": "ids_valid", "type": "List[str]"}, {"lineNumber": 107, "col_offset": 62, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "matthews_corrcoef", "type": "Any"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "mean", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "GridHyperparamOpt", "type": "Type[deepchem.hyper.grid_search.GridHyperparamOpt]"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "multitask_model_builder", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 48, "nodeName": "hyperparam_search", "type": "Callable[..., Tuple[Any, Optional[Tuple[Any, ...]], Dict[str, Any]]]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "params_dict", "type": "Dict[str, List[int]]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "CircularFingerprint", "type": "Type[deepchem.feat.fingerprints.CircularFingerprint]"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "input_file", "type": "str"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "ScaffoldSplitter", "type": "Type[deepchem.splits.splitters.ScaffoldSplitter]"}, {"lineNumber": 152, "col_offset": 49, "nodeName": "train_valid_test_split", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "roc_auc_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "mean", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "GridHyperparamOpt", "type": "Type[deepchem.hyper.grid_search.GridHyperparamOpt]"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "model_builder", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 48, "nodeName": "hyperparam_search", "type": "Callable[..., Tuple[Any, Optional[Tuple[Any, ...]], Dict[str, Any]]]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "params_dict", "type": "Dict[str, List[Tuple[int]]]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "SklearnModel", "type": "Any"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 27, "col_offset": 50, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "HyperparamOpt", "type": "Type[deepchem.hyper.base_classes.HyperparamOpt]"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "rf_model_builder", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "initialized", "type": "bool"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 45, "col_offset": 50, "nodeName": "__file__", "type": "str"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 48, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.fingerprints.CircularFingerprint"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "splits", "type": "module"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "splitter", "type": "deepchem.splits.splitters.ScaffoldSplitter"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "NormalizationTransformer", "type": "Type[deepchem.trans.transformers.NormalizationTransformer]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "metrics", "type": "module"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 68, "col_offset": 51, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "hyper", "type": "module"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "optimizer", "type": "deepchem.hyper.grid_search.GridHyperparamOpt"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "SingletaskToMultitask", "type": "Type[deepchem.models.multitask.SingletaskToMultitask]"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "model_builder", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 67, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "hyper", "type": "module"}, {"lineNumber": 123, "col_offset": 48, "nodeName": "optimizer", "type": "deepchem.hyper.grid_search.GridHyperparamOpt"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 135, "col_offset": 50, "nodeName": "__file__", "type": "str"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 145, "col_offset": 50, "nodeName": "n_features", "type": "int"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.fingerprints.CircularFingerprint"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "splits", "type": "module"}, {"lineNumber": 152, "col_offset": 49, "nodeName": "splitter", "type": "deepchem.splits.splitters.ScaffoldSplitter"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "MultitaskClassifier", "type": "Type[deepchem.models.fcnet.MultitaskClassifier]"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "n_features", "type": "int"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "hyper", "type": "module"}, {"lineNumber": 165, "col_offset": 48, "nodeName": "optimizer", "type": "deepchem.hyper.grid_search.GridHyperparamOpt"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "ensemble", "type": "Any"}, {"lineNumber": 26, "col_offset": 63, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "hyper", "type": "module"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "dc", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "trans", "type": "module"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 40, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "dc", "type": "module"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "models", "type": "module"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "dc", "type": "module"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "n_train", "type": "int"}, {"lineNumber": 93, "col_offset": 50, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "n_valid", "type": "int"}, {"lineNumber": 103, "col_offset": 50, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 118, "col_offset": 38, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 118, "col_offset": 53, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "models", "type": "module"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "dc", "type": "module"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "dc", "type": "module"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "models", "type": "module"}, {"lineNumber": 162, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 162, "col_offset": 44, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 162, "col_offset": 57, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "dc", "type": "module"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "transformer", "type": "deepchem.trans.transformers.NormalizationTransformer"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 117, "col_offset": 49, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "models", "type": "module"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "dc", "type": "module"}]