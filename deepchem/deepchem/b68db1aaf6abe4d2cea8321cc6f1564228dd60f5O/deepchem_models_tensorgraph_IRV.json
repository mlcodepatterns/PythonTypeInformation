[{"lineNumber": 15, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "Layer", "type": "Type[deepchem.models.tensorgraph.layers.Layer]"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "Layer", "type": "Type[deepchem.models.tensorgraph.layers.Layer]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "Layer", "type": "Type[deepchem.models.tensorgraph.layers.Layer]"}, {"lineNumber": 147, "col_offset": 39, "nodeName": "TensorGraph", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TensorGraph]"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "K", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "K", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "V", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "W", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "b2", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "trainable_weights", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "in_layers", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "K", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "K", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "count", "type": "int"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "set_tensors", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 80, "col_offset": 105, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "IRVLayer", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "IRVLayer", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "set_tensors", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "slice_num", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "slice_num", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "axis", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "axis", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "in_layers", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "slice_num", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "slice_num", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "axis", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "axis", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 142, "col_offset": 7, "nodeName": "set_tensors", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "K", "type": "Any"}, {"lineNumber": 168, "col_offset": 13, "nodeName": "K", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "mol_features", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "_labels", "type": "deepchem.models.tensorgraph.layers.Label"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "_weights", "type": "deepchem.models.tensorgraph.layers.Weights"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "predictions", "type": "IRVLayer"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "costs", "type": "List[deepchem.models.tensorgraph.layers.SigmoidCrossEntropy]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "outputs", "type": "List[deepchem.models.tensorgraph.layers.Sigmoid]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "task", "type": "int"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "all_cost", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "outputs", "type": "deepchem.models.tensorgraph.layers.Stack"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "outputs", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "V", "type": "None"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "W", "type": "None"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "b", "type": "None"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "b2", "type": "None"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "V", "type": "Any"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "W", "type": "Any"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "b", "type": "Any"}, {"lineNumber": 42, "col_offset": 54, "nodeName": "b2", "type": "Any"}, {"lineNumber": 45, "col_offset": 7, "nodeName": "in_layers", "type": "Any"}, {"lineNumber": 46, "col_offset": 6, "nodeName": "in_layers", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "in_layers", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "convert_to_layers", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "in_layers", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "build", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "similarity", "type": "Any"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "ys", "type": "Any"}, {"lineNumber": 61, "col_offset": 6, "nodeName": "R", "type": "Any"}, {"lineNumber": 62, "col_offset": 6, "nodeName": "z", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "concat", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 6, "nodeName": "trainable_variables", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "trainable_weights", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 6, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "V", "type": "Any"}, {"lineNumber": 72, "col_offset": 7, "nodeName": "W", "type": "Any"}, {"lineNumber": 72, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "b2", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "V", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "W", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "b2", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "V", "type": "None"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "W", "type": "None"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "b", "type": "None"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "b2", "type": "None"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "trainable_weights", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 75, "col_offset": 64, "nodeName": "trainable_weights", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 88, "nodeName": "trainable_variables", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "out_tensor", "type": "None"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "trainable_weights", "type": "List[nothing]"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "trainable_variables", "type": "List[nothing]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "V", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "b", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "b2", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "trainable_weights", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 55, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "V", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "b2", "type": "Any"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 80, "col_offset": 54, "nodeName": "trainable_weights", "type": "Any"}, {"lineNumber": 80, "col_offset": 78, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "self", "type": "IRVRegularize"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "self", "type": "IRVRegularize"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "self", "type": "Slice"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "self", "type": "Slice"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 7, "nodeName": "in_layers", "type": "Any"}, {"lineNumber": 134, "col_offset": 6, "nodeName": "in_layers", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "in_layers", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "convert_to_layers", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "in_layers", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "self", "type": "Slice"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "self", "type": "Slice"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "slice", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "out_tensor", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "build_graph", "type": "Callable[[], Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "Feature", "type": "Type[deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "Label", "type": "Type[deepchem.models.tensorgraph.layers.Label]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "Weights", "type": "Type[deepchem.models.tensorgraph.layers.Weights]"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "IRVLayer", "type": "Type[IRVLayer]"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "K", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 187, "col_offset": 6, "nodeName": "task_output", "type": "Slice"}, {"lineNumber": 188, "col_offset": 6, "nodeName": "sigmoid", "type": "deepchem.models.tensorgraph.layers.Sigmoid"}, {"lineNumber": 191, "col_offset": 6, "nodeName": "label", "type": "Slice"}, {"lineNumber": 192, "col_offset": 6, "nodeName": "cost", "type": "deepchem.models.tensorgraph.layers.SigmoidCrossEntropy"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "Concat", "type": "Type[deepchem.models.tensorgraph.layers.Concat]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "set_loss", "type": "Callable[[Any], None]"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "loss", "type": "deepchem.models.tensorgraph.layers.Add"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "Stack", "type": "Type[deepchem.models.tensorgraph.layers.Stack]"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "Concat", "type": "Type[deepchem.models.tensorgraph.layers.Concat]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "add_output", "type": "Callable[[Any], None]"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "outputs", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "constant", "type": "Any"}, {"lineNumber": 38, "col_offset": 69, "nodeName": "float32", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "constant", "type": "Any"}, {"lineNumber": 39, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "constant", "type": "Any"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "constant", "type": "Any"}, {"lineNumber": 41, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 42, "col_offset": 54, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "in_layers", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "cast", "type": "Any"}, {"lineNumber": 57, "col_offset": 71, "nodeName": "int32", "type": "Any"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "R", "type": "Any"}, {"lineNumber": 62, "col_offset": 61, "nodeName": "b2", "type": "Any"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 67, "col_offset": 6, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 68, "col_offset": 6, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 75, "col_offset": 64, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 75, "col_offset": 88, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 80, "col_offset": 54, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 80, "col_offset": 78, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "IRVLayer", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "l2_loss", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "b2", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "self", "type": "IRVRegularize"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "self", "type": "IRVRegularize"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "self", "type": "Slice"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "in_layers", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "self", "type": "Slice"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "K", "type": "Any"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 172, "col_offset": 61, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "Slice", "type": "Type[Slice]"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "task", "type": "int"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "Sigmoid", "type": "Type[deepchem.models.tensorgraph.layers.Sigmoid]"}, {"lineNumber": 189, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "sigmoid", "type": "deepchem.models.tensorgraph.layers.Sigmoid"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "Slice", "type": "Type[Slice]"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "task", "type": "int"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "SigmoidCrossEntropy", "type": "Type[deepchem.models.tensorgraph.layers.SigmoidCrossEntropy]"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "cost", "type": "deepchem.models.tensorgraph.layers.SigmoidCrossEntropy"}, {"lineNumber": 194, "col_offset": 32, "nodeName": "costs", "type": "List[deepchem.models.tensorgraph.layers.SigmoidCrossEntropy]"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "WeightedError", "type": "Type[deepchem.models.tensorgraph.layers.WeightedError]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "IRVRegularize", "type": "Type[IRVRegularize]"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "predictions", "type": "IRVLayer"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "outputs", "type": "List[deepchem.models.tensorgraph.layers.Sigmoid]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "IRVLayer", "type": "Type[IRVLayer]"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 69, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 64, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 41, "col_offset": 64, "nodeName": "tf", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 57, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 62, "col_offset": 61, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "z", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "IRVRegularize", "type": "Type[IRVRegularize]"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "self", "type": "IRVRegularize"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "self", "type": "IRVRegularize"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "l2_loss", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "b", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "IRVLayer", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 130, "col_offset": 10, "nodeName": "Slice", "type": "Type[Slice]"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "self", "type": "Slice"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "axis", "type": "Any"}, {"lineNumber": 140, "col_offset": 48, "nodeName": "slice_num", "type": "Any"}, {"lineNumber": 140, "col_offset": 67, "nodeName": "axis", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 170, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 170, "col_offset": 59, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 172, "col_offset": 10, "nodeName": "TensorflowMultitaskIRVClassifier", "type": "Type[TensorflowMultitaskIRVClassifier]"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 180, "col_offset": 45, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 181, "col_offset": 38, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 182, "col_offset": 41, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 183, "col_offset": 60, "nodeName": "mol_features", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 189, "col_offset": 6, "nodeName": "outputs", "type": "List[deepchem.models.tensorgraph.layers.Sigmoid]"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "costs", "type": "List[deepchem.models.tensorgraph.layers.SigmoidCrossEntropy]"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 199, "col_offset": 53, "nodeName": "outputs", "type": "deepchem.models.tensorgraph.layers.Stack"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "similarity", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "W", "type": "Any"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "constant", "type": "Any"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "R", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "l2_loss", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "V", "type": "Any"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "nn", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "IRVLayer", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "self", "type": "IRVRegularize"}, {"lineNumber": 170, "col_offset": 59, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 180, "col_offset": 45, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 181, "col_offset": 38, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 182, "col_offset": 41, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 183, "col_offset": 60, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 187, "col_offset": 46, "nodeName": "predictions", "type": "IRVLayer"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "task_output", "type": "Slice"}, {"lineNumber": 191, "col_offset": 45, "nodeName": "_labels", "type": "deepchem.models.tensorgraph.layers.Label"}, {"lineNumber": 192, "col_offset": 44, "nodeName": "label", "type": "Slice"}, {"lineNumber": 192, "col_offset": 51, "nodeName": "task_output", "type": "Slice"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "all_cost", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 195, "col_offset": 46, "nodeName": "_weights", "type": "deepchem.models.tensorgraph.layers.Weights"}, {"lineNumber": 196, "col_offset": 60, "nodeName": "predictions", "type": "IRVLayer"}, {"lineNumber": 199, "col_offset": 44, "nodeName": "outputs", "type": "deepchem.models.tensorgraph.layers.Stack"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "count", "type": "int"}, {"lineNumber": 55, "col_offset": 60, "nodeName": "K", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "W", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "tf", "type": "Any"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "gather", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "V", "type": "Any"}, {"lineNumber": 62, "col_offset": 46, "nodeName": "ys", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "IRVLayer", "type": "Any"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "self", "type": "IRVRegularize"}, {"lineNumber": 191, "col_offset": 45, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 195, "col_offset": 46, "nodeName": "self", "type": "TensorflowMultitaskIRVClassifier"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "K", "type": "Any"}, {"lineNumber": 55, "col_offset": 52, "nodeName": "count", "type": "int"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "K", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "K", "type": "Any"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "self", "type": "IRVLayer"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "self", "type": "IRVRegularize"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "K", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "count", "type": "int"}, {"lineNumber": 57, "col_offset": 53, "nodeName": "K", "type": "Any"}, {"lineNumber": 57, "col_offset": 58, "nodeName": "count", "type": "int"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "K", "type": "Any"}]