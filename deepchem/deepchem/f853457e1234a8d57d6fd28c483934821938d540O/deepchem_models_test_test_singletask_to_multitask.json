[{"lineNumber": 8, "col_offset": 0, "nodeName": "__author__", "type": "unicode"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "__copyright__", "type": "unicode"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "__license__", "type": "unicode"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "TestAPI", "type": "Type[deepchem.models.test.TestAPI]"}, {"lineNumber": 27, "col_offset": 2, "nodeName": "test_singletask_to_multitask_classification", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "splittype", "type": "unicode"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "compound_featurizers", "type": "List[deepchem.featurizers.fingerprints.CircularFingerprint]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "complex_featurizers", "type": "List[nothing]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "output_transformers", "type": "List[nothing]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "input_file", "type": "unicode"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "n_train", "type": "int"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "w_train", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "ids_train", "type": "List[unicode]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "n_test", "type": "int"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "w_test", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "ids_test", "type": "List[unicode]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "classification_metrics", "type": "List[deepchem.metrics.Metric]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "_", "type": "Dict[Any, Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "_", "type": "Dict[Any, Any]"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "task", "type": "unicode"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "n_train", "type": "int"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "n_features", "type": "int"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "randint", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "n_train", "type": "int"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "from_numpy", "type": "Callable[[Any, Any, Any, Any, Any, Any], deepchem.datasets.Dataset]"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 46, "col_offset": 55, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "w_train", "type": "Any"}, {"lineNumber": 47, "col_offset": 66, "nodeName": "ids_train", "type": "List[unicode]"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "n_test", "type": "int"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "n_features", "type": "int"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "randint", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "n_test", "type": "int"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "from_numpy", "type": "Callable[[Any, Any, Any, Any, Any, Any], deepchem.datasets.Dataset]"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 56, "col_offset": 47, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 56, "col_offset": 55, "nodeName": "w_test", "type": "Any"}, {"lineNumber": 56, "col_offset": 63, "nodeName": "ids_test", "type": "List[unicode]"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "SingletaskToMultitask", "type": "Type[deepchem.models.multitask.SingletaskToMultitask]"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 66, "col_offset": 63, "nodeName": "params_dict", "type": "Dict[unicode, Any]"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 67, "col_offset": 60, "nodeName": "model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "fit", "type": "Callable[[Any], None]"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "multitask_model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 74, "col_offset": 58, "nodeName": "output_transformers", "type": "List[nothing]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "compute_model_performance", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "classification_metrics", "type": "List[deepchem.metrics.Metric]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "multitask_model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "test_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 79, "col_offset": 57, "nodeName": "output_transformers", "type": "List[nothing]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "compute_model_performance", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "classification_metrics", "type": "List[deepchem.metrics.Metric]"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "CircularFingerprint", "type": "Type[deepchem.featurizers.fingerprints.CircularFingerprint]"}, {"lineNumber": 35, "col_offset": 45, "nodeName": "task", "type": "unicode"}, {"lineNumber": 35, "col_offset": 53, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "self", "type": "TestSingletasktoMultitaskAPI"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "self", "type": "TestSingletasktoMultitaskAPI"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "get_data_shape", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "task_types", "type": "Any"}, {"lineNumber": 64, "col_offset": 45, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 64, "col_offset": 59, "nodeName": "model_builder", "type": "Any"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "self", "type": "TestSingletasktoMultitaskAPI"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "multitask_model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "multitask_model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "n_train", "type": "int"}, {"lineNumber": 43, "col_offset": 50, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "n_test", "type": "int"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "metrics", "type": "module"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "LogisticRegression", "type": "Any"}]