[{"lineNumber": 13, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.sequential.Sequential"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "transformers", "type": "List[deepchem.trans.transformers.IRVTransformer]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "transformer", "type": "deepchem.trans.transformers.IRVTransformer"}, {"lineNumber": 256, "col_offset": 23, "nodeName": "transformers", "type": "List[deepchem.trans.transformers.IRVTransformer]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "X", "type": "List[str]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "X", "type": "List[str]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "x_col1", "type": "Any"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "x_col2", "type": "Any"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.tensor_graph.TensorGraph"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "features", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "labels", "type": "deepchem.models.tensorgraph.layers.Label"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "loss", "type": "deepchem.models.tensorgraph.layers.ReduceMean"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "num_samples_to_use", "type": "int"}, {"lineNumber": 544, "col_offset": 18, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "layer_structures", "type": "List[int]"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "n_feat", "type": "Any"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "layer_structures", "type": "List[int]"}, {"lineNumber": 629, "col_offset": 4, "nodeName": "atom_number_cases", "type": "List[int]"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 643, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "Sequential", "type": "Type[deepchem.models.tensorgraph.sequential.Sequential]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 253, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 253, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 257, "col_offset": 6, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "TensorflowMultitaskIRVClassifier", "type": "Type[deepchem.models.tensorgraph.IRV.TensorflowMultitaskIRVClassifier]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "build", "type": "Callable[[], None]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "accuracy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 288, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "TextCNNModel", "type": "Type[deepchem.models.tensorgraph.models.text_cnn.TextCNNModel]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 310, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 310, "col_offset": 27, "nodeName": "X", "type": "List[str]"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 310, "col_offset": 33, "nodeName": "w", "type": "Any"}, {"lineNumber": 310, "col_offset": 36, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 318, "col_offset": 6, "nodeName": "smiles_seq", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 325, "col_offset": 27, "nodeName": "accuracy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 333, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "TextCNNModel", "type": "Type[deepchem.models.tensorgraph.models.text_cnn.TextCNNModel]"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 357, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "X", "type": "List[str]"}, {"lineNumber": 357, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 357, "col_offset": 33, "nodeName": "w", "type": "Any"}, {"lineNumber": 357, "col_offset": 36, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 362, "col_offset": 6, "nodeName": "smiles_seq", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 368, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 375, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 388, "col_offset": 37, "nodeName": "n_features", "type": "int"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 390, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 390, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 390, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 395, "col_offset": 6, "nodeName": "x1", "type": "Any"}, {"lineNumber": 396, "col_offset": 6, "nodeName": "x2", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "ScScoreModel", "type": "Type[deepchem.models.tensorgraph.models.scscore.ScScoreModel]"}, {"lineNumber": 401, "col_offset": 35, "nodeName": "n_features", "type": "int"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "difference", "type": "deepchem.models.tensorgraph.layers.Add"}, {"lineNumber": 406, "col_offset": 6, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 411, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 413, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 415, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 426, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 439, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 439, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 441, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 441, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 441, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "TensorGraph", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TensorGraph]"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "Feature", "type": "Type[deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "set_summary", "type": "Callable[..., None]"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "add_output", "type": "Callable[[Any], None]"}, {"lineNumber": 454, "col_offset": 21, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 455, "col_offset": 13, "nodeName": "Label", "type": "Type[deepchem.models.tensorgraph.layers.Label]"}, {"lineNumber": 456, "col_offset": 11, "nodeName": "ReduceMean", "type": "Type[deepchem.models.tensorgraph.layers.ReduceMean]"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "set_loss", "type": "Callable[[Any], None]"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "loss", "type": "deepchem.models.tensorgraph.layers.ReduceMean"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 540, "col_offset": 35, "nodeName": "load_qm7_from_mat", "type": "Callable[..., Tuple[List[str], Any, Any]]"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 544, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 544, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 548, "col_offset": 10, "nodeName": "ids", "type": "Any"}, {"lineNumber": 550, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 550, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 550, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 550, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 550, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 556, "col_offset": 21, "nodeName": "ANITransformer", "type": "Type[deepchem.trans.transformers.ANITransformer]"}, {"lineNumber": 558, "col_offset": 14, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 558, "col_offset": 39, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 561, "col_offset": 12, "nodeName": "BPSymmetryFunctionRegression", "type": "Type[deepchem.models.tensorgraph.models.symmetry_function_regression.BPSymmetryFunctionRegression]"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "n_feat", "type": "Any"}, {"lineNumber": 571, "col_offset": 24, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 585, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 586, "col_offset": 31, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 587, "col_offset": 31, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 588, "col_offset": 28, "nodeName": "w", "type": "Any"}, {"lineNumber": 591, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 593, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 595, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 598, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 603, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 633, "col_offset": 21, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 634, "col_offset": 28, "nodeName": "layer_structures", "type": "List[int]"}, {"lineNumber": 635, "col_offset": 29, "nodeName": "atom_number_cases", "type": "List[int]"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "ANIRegression", "type": "Type[deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression]"}, {"lineNumber": 643, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 643, "col_offset": 35, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 643, "col_offset": 38, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 645, "col_offset": 24, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 660, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 661, "col_offset": 31, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 662, "col_offset": 33, "nodeName": "atom_numbers", "type": "Any"}, {"lineNumber": 663, "col_offset": 31, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 664, "col_offset": 28, "nodeName": "w", "type": "Any"}, {"lineNumber": 667, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 669, "col_offset": 19, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 671, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 673, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 676, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 680, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 682, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.sequential.Sequential"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.sequential.Sequential"}, {"lineNumber": 229, "col_offset": 70, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 252, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "IRVTransformer", "type": "Type[deepchem.trans.transformers.IRVTransformer]"}, {"lineNumber": 254, "col_offset": 48, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 254, "col_offset": 57, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 262, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.IRV.TensorflowMultitaskIRVClassifier"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 276, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.IRV.TensorflowMultitaskIRVClassifier"}, {"lineNumber": 280, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 280, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 288, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 300, "col_offset": 18, "nodeName": "default_dict", "type": "Dict[str, int]"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 308, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 308, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 313, "col_offset": 13, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 313, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 313, "col_offset": 64, "nodeName": "weights", "type": "Any"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "py_func", "type": "Any"}, {"lineNumber": 318, "col_offset": 30, "nodeName": "smiles_to_seq_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 52, "nodeName": "y", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 323, "col_offset": 40, "nodeName": "int32", "type": "Any"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNModel"}, {"lineNumber": 327, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 327, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 333, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 334, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 335, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 346, "col_offset": 18, "nodeName": "default_dict", "type": "Dict[str, int]"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 355, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 355, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 355, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 356, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 356, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 362, "col_offset": 19, "nodeName": "py_func", "type": "Any"}, {"lineNumber": 362, "col_offset": 30, "nodeName": "smiles_to_seq_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 363, "col_offset": 52, "nodeName": "y", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 367, "col_offset": 40, "nodeName": "int32", "type": "Any"}, {"lineNumber": 368, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNModel"}, {"lineNumber": 371, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 371, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 375, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 377, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 389, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 389, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 390, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 396, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 397, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 406, "col_offset": 20, "nodeName": "relu", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 407, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 407, "col_offset": 41, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 407, "col_offset": 54, "nodeName": "weights", "type": "Any"}, {"lineNumber": 411, "col_offset": 13, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 413, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 415, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 418, "col_offset": 22, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 426, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 427, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 428, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 440, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 440, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 441, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 446, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "layers", "type": "module"}, {"lineNumber": 452, "col_offset": 38, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 452, "col_offset": 57, "nodeName": "features", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.tensor_graph.TensorGraph"}, {"lineNumber": 455, "col_offset": 13, "nodeName": "layers", "type": "module"}, {"lineNumber": 456, "col_offset": 11, "nodeName": "layers", "type": "module"}, {"lineNumber": 456, "col_offset": 29, "nodeName": "L2Loss", "type": "Type[deepchem.models.tensorgraph.layers.L2Loss]"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.tensor_graph.TensorGraph"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.tensor_graph.TensorGraph"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 540, "col_offset": 35, "nodeName": "molnet", "type": "module"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 545, "col_offset": 17, "nodeName": "num_samples_to_use", "type": "int"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 546, "col_offset": 17, "nodeName": "num_samples_to_use", "type": "int"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 547, "col_offset": 17, "nodeName": "num_samples_to_use", "type": "int"}, {"lineNumber": 548, "col_offset": 10, "nodeName": "train", "type": "Any"}, {"lineNumber": 548, "col_offset": 21, "nodeName": "num_samples_to_use", "type": "int"}, {"lineNumber": 550, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 556, "col_offset": 21, "nodeName": "trans", "type": "module"}, {"lineNumber": 557, "col_offset": 18, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 558, "col_offset": 14, "nodeName": "ANItransformer", "type": "deepchem.trans.transformers.ANITransformer"}, {"lineNumber": 559, "col_offset": 13, "nodeName": "get_num_feats", "type": "Callable[[], Any]"}, {"lineNumber": 561, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 565, "col_offset": 25, "nodeName": "layer_structures", "type": "List[int]"}, {"lineNumber": 566, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 571, "col_offset": 24, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 576, "col_offset": 31, "nodeName": "py_func", "type": "Any"}, {"lineNumber": 577, "col_offset": 10, "nodeName": "compute_features_on_batch", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 578, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 579, "col_offset": 10, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 581, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 582, "col_offset": 10, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 585, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 586, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 587, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 588, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 589, "col_offset": 13, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 589, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 591, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 592, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 593, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 594, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 595, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 596, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 598, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.BPSymmetryFunctionRegression"}, {"lineNumber": 600, "col_offset": 22, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 601, "col_offset": 16, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 603, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 605, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 624, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 626, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 642, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Union[str, bool, float, int, List[int]]]"}, {"lineNumber": 643, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 645, "col_offset": 24, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 648, "col_offset": 6, "nodeName": "X", "type": "Any"}, {"lineNumber": 648, "col_offset": 9, "nodeName": "y", "type": "Any"}, {"lineNumber": 648, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 648, "col_offset": 16, "nodeName": "get_next", "type": "Any"}, {"lineNumber": 649, "col_offset": 45, "nodeName": "py_func", "type": "Any"}, {"lineNumber": 650, "col_offset": 10, "nodeName": "compute_features_on_batch", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 652, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 653, "col_offset": 10, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 654, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 655, "col_offset": 10, "nodeName": "atom_numbers", "type": "Any"}, {"lineNumber": 656, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 657, "col_offset": 10, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 660, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 661, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 662, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 663, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 664, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 665, "col_offset": 13, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 665, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 667, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 668, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 669, "col_offset": 19, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 670, "col_offset": 50, "nodeName": "int32", "type": "Any"}, {"lineNumber": 671, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 672, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 673, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 674, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 676, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 678, "col_offset": 22, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 679, "col_offset": 16, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 680, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 682, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 683, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "x", "type": "int"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "layers", "type": "module"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 227, "col_offset": 57, "nodeName": "n_features", "type": "int"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 229, "col_offset": 54, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "trans", "type": "module"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "transformer", "type": "deepchem.trans.transformers.IRVTransformer"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 262, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 272, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 275, "col_offset": 41, "nodeName": "round", "type": "Any"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 313, "col_offset": 13, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 313, "col_offset": 41, "nodeName": "round", "type": "Any"}, {"lineNumber": 313, "col_offset": 50, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 318, "col_offset": 30, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNModel"}, {"lineNumber": 318, "col_offset": 71, "nodeName": "int32", "type": "Any"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "smiles_seq", "type": "Any"}, {"lineNumber": 319, "col_offset": 42, "nodeName": "weights", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 323, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 324, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 327, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 355, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 362, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 362, "col_offset": 30, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNModel"}, {"lineNumber": 362, "col_offset": 71, "nodeName": "int32", "type": "Any"}, {"lineNumber": 363, "col_offset": 19, "nodeName": "smiles_seq", "type": "Any"}, {"lineNumber": 363, "col_offset": 42, "nodeName": "weights", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 367, "col_offset": 20, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 367, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 368, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 368, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 390, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 397, "col_offset": 20, "nodeName": "x1", "type": "Any"}, {"lineNumber": 397, "col_offset": 30, "nodeName": "x2", "type": "Any"}, {"lineNumber": 397, "col_offset": 45, "nodeName": "weights", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 406, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 406, "col_offset": 31, "nodeName": "sign", "type": "Any"}, {"lineNumber": 406, "col_offset": 39, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 411, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 411, "col_offset": 59, "nodeName": "n_features", "type": "int"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 412, "col_offset": 59, "nodeName": "n_features", "type": "int"}, {"lineNumber": 413, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 416, "col_offset": 25, "nodeName": "x_col1", "type": "Any"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "x_col2", "type": "Any"}, {"lineNumber": 417, "col_offset": 29, "nodeName": "accuracy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 446, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 446, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 451, "col_offset": 43, "nodeName": "n_features", "type": "int"}, {"lineNumber": 455, "col_offset": 39, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 456, "col_offset": 29, "nodeName": "layers", "type": "module"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 461, "col_offset": 57, "nodeName": "n_features", "type": "int"}, {"lineNumber": 462, "col_offset": 54, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 540, "col_offset": 35, "nodeName": "dc", "type": "module"}, {"lineNumber": 550, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 556, "col_offset": 21, "nodeName": "dc", "type": "module"}, {"lineNumber": 559, "col_offset": 13, "nodeName": "ANItransformer", "type": "deepchem.trans.transformers.ANITransformer"}, {"lineNumber": 561, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 571, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 576, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 577, "col_offset": 10, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.BPSymmetryFunctionRegression"}, {"lineNumber": 577, "col_offset": 44, "nodeName": "X", "type": "Any"}, {"lineNumber": 578, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 581, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 591, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 592, "col_offset": 57, "nodeName": "tf", "type": "Any"}, {"lineNumber": 593, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 594, "col_offset": 29, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 594, "col_offset": 41, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 594, "col_offset": 59, "nodeName": "tf", "type": "Any"}, {"lineNumber": 595, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 596, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 599, "col_offset": 25, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 599, "col_offset": 37, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 624, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 626, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 643, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 645, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 649, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 650, "col_offset": 10, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 650, "col_offset": 44, "nodeName": "X", "type": "Any"}, {"lineNumber": 652, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 654, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 656, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 667, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 668, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 669, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 670, "col_offset": 31, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 670, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 671, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 672, "col_offset": 29, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 672, "col_offset": 41, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 672, "col_offset": 59, "nodeName": "tf", "type": "Any"}, {"lineNumber": 673, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 674, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 677, "col_offset": 25, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 677, "col_offset": 37, "nodeName": "atom_numbers", "type": "Any"}, {"lineNumber": 677, "col_offset": 51, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 212, "col_offset": 39, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 233, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 237, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 260, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 271, "col_offset": 66, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 275, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 275, "col_offset": 50, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 313, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 313, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 318, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 318, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 360, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 362, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 362, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 375, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 393, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 406, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 406, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 422, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 426, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 444, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 456, "col_offset": 54, "nodeName": "labels", "type": "deepchem.models.tensorgraph.layers.Label"}, {"lineNumber": 456, "col_offset": 62, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 466, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 574, "col_offset": 16, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 577, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 577, "col_offset": 66, "nodeName": "float32", "type": "Any"}, {"lineNumber": 592, "col_offset": 29, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 592, "col_offset": 41, "nodeName": "n_feat", "type": "Any"}, {"lineNumber": 596, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 596, "col_offset": 30, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 602, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 603, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 648, "col_offset": 16, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 651, "col_offset": 16, "nodeName": "float32", "type": "Any"}, {"lineNumber": 651, "col_offset": 28, "nodeName": "int32", "type": "Any"}, {"lineNumber": 651, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 655, "col_offset": 58, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 668, "col_offset": 29, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 674, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Union[str, bool, float, int, List[int]]]"}, {"lineNumber": 680, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 682, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 217, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 260, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 317, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 317, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 360, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 361, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 393, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 394, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 394, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 444, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 445, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 445, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 574, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 575, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 575, "col_offset": 40, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 577, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 577, "col_offset": 66, "nodeName": "tf", "type": "Any"}, {"lineNumber": 580, "col_offset": 42, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 580, "col_offset": 60, "nodeName": "n_feat", "type": "Any"}, {"lineNumber": 583, "col_offset": 42, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 583, "col_offset": 60, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 648, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 648, "col_offset": 59, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 651, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 651, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 651, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 653, "col_offset": 54, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 655, "col_offset": 58, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 658, "col_offset": 42, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 658, "col_offset": 60, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 580, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 580, "col_offset": 26, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 580, "col_offset": 42, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.BPSymmetryFunctionRegression"}, {"lineNumber": 580, "col_offset": 60, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.BPSymmetryFunctionRegression"}, {"lineNumber": 583, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 583, "col_offset": 26, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 583, "col_offset": 42, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.BPSymmetryFunctionRegression"}, {"lineNumber": 583, "col_offset": 60, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.BPSymmetryFunctionRegression"}, {"lineNumber": 653, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 653, "col_offset": 38, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 653, "col_offset": 54, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 655, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 655, "col_offset": 40, "nodeName": "atom_numbers", "type": "Any"}, {"lineNumber": 658, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 658, "col_offset": 26, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 658, "col_offset": 42, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 658, "col_offset": 60, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 580, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 583, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 653, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 655, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 658, "col_offset": 17, "nodeName": "tf", "type": "Any"}]