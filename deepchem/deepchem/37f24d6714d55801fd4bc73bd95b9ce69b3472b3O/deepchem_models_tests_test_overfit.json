[{"lineNumber": 10, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "__copyright__", "type": "str"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "__license__", "type": "str"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "TensorFlowTestCase", "type": "Any"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "test_util", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "p", "type": "float"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "fit_transformers", "type": "List[deepchem.trans.transformers.CoulombFitTransformer]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "p", "type": "float"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "p", "type": "float"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "y_nonzero", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "num_nonzero", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "weight_nonzero", "type": "Any"}, {"lineNumber": 274, "col_offset": 26, "nodeName": "weight_nonzero", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "IRV_transformer", "type": "deepchem.trans.transformers.IRVTransformer"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "dataset_trans", "type": "Any"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "scores", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 509, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "input_file", "type": "str"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "input_file", "type": "str"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "transformer", "type": "deepchem.trans.transformers.NormalizationTransformer"}, {"lineNumber": 585, "col_offset": 23, "nodeName": "transformers", "type": "List[deepchem.trans.transformers.NormalizationTransformer]"}, {"lineNumber": 601, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "input_file", "type": "str"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "transformer", "type": "deepchem.trans.transformers.NormalizationTransformer"}, {"lineNumber": 626, "col_offset": 23, "nodeName": "transformers", "type": "List[deepchem.trans.transformers.NormalizationTransformer]"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "input_file", "type": "str"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "transformer", "type": "deepchem.trans.transformers.DAGTransformer"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 680, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 688, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 691, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "input_file", "type": "str"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "n_atom_feat", "type": "int"}, {"lineNumber": 701, "col_offset": 4, "nodeName": "n_pair_feat", "type": "int"}, {"lineNumber": 702, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 719, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 731, "col_offset": 4, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 732, "col_offset": 4, "nodeName": "input_file", "type": "str"}, {"lineNumber": 735, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 740, "col_offset": 4, "nodeName": "n_atom_feat", "type": "int"}, {"lineNumber": 741, "col_offset": 4, "nodeName": "n_pair_feat", "type": "int"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 743, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 759, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 768, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 771, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 772, "col_offset": 4, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "input_file", "type": "str"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "n_atom_feat", "type": "int"}, {"lineNumber": 782, "col_offset": 4, "nodeName": "n_pair_feat", "type": "int"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 799, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.raw_featurizer.RawFeaturizer"}, {"lineNumber": 810, "col_offset": 4, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "input_file", "type": "str"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 816, "col_offset": 4, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 846, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.raw_featurizer.RawFeaturizer"}, {"lineNumber": 847, "col_offset": 4, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 848, "col_offset": 4, "nodeName": "input_file", "type": "str"}, {"lineNumber": 851, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 872, "col_offset": 4, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 51, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 73, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "p", "type": "float"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 127, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "MultiTaskRegressor", "type": "Type[deepchem.models.tensorflow_models.fcnet.MultiTaskRegressor]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "set_optimizer", "type": "Callable[[Any], None]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 160, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 164, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 166, "col_offset": 46, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "MultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "set_optimizer", "type": "Callable[[Any], None]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 191, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 192, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 192, "col_offset": 46, "nodeName": "n_features", "type": "int"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 195, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "MultiTaskFitTransformRegressor", "type": "Type[deepchem.models.tensorflow_models.fcnet.MultiTaskFitTransformRegressor]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "set_optimizer", "type": "Callable[[Any], None]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 227, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 228, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 228, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "p", "type": "float"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 232, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 232, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 232, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 232, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "MultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "set_optimizer", "type": "Callable[[Any], None]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 266, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 267, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "p", "type": "float"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "y_flat", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "w_flat", "type": "Any"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "y_flat", "type": "Any"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "count_nonzero", "type": "Any"}, {"lineNumber": 272, "col_offset": 35, "nodeName": "y_nonzero", "type": "Any"}, {"lineNumber": 273, "col_offset": 38, "nodeName": "num_nonzero", "type": "Any"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "w_flat", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "w_flat", "type": "Any"}, {"lineNumber": 277, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 277, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 277, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 277, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 277, "col_offset": 54, "nodeName": "ids", "type": "Any"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 279, "col_offset": 46, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "MultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "set_optimizer", "type": "Callable[[Any], None]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 293, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 305, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 306, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 306, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 309, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 309, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 309, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 309, "col_offset": 54, "nodeName": "ids", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 315, "col_offset": 6, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "SingletaskToMultitask", "type": "Type[deepchem.models.multitask.SingletaskToMultitask]"}, {"lineNumber": 318, "col_offset": 44, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 318, "col_offset": 51, "nodeName": "model_builder", "type": "Callable[[Any], Any]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 338, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 339, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 339, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 342, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 342, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 342, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 342, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 342, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 344, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "MultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "set_optimizer", "type": "Callable[[Any], None]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 355, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 371, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 372, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 372, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 375, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 375, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 375, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 375, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 375, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "RobustMultitaskClassifier", "type": "Type[deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 390, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 394, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 406, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 406, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 410, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 410, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 410, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 410, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 410, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "IRVTransformer", "type": "Type[deepchem.trans.transformers.IRVTransformer]"}, {"lineNumber": 411, "col_offset": 49, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 411, "col_offset": 58, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 412, "col_offset": 20, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 412, "col_offset": 46, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 413, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "TensorflowMultiTaskIRVClassifier", "type": "Type[deepchem.models.tensorflow_models.IRV.TensorflowMultiTaskIRVClassifier]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 14, "nodeName": "dataset_trans", "type": "Any"}, {"lineNumber": 422, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 422, "col_offset": 28, "nodeName": "dataset_trans", "type": "Any"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 434, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 435, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 435, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 436, "col_offset": 34, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 439, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 439, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 439, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 439, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 439, "col_offset": 54, "nodeName": "ids", "type": "Any"}, {"lineNumber": 441, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 445, "col_offset": 6, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "SingletaskToMultitask", "type": "Type[deepchem.models.multitask.SingletaskToMultitask]"}, {"lineNumber": 448, "col_offset": 44, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 448, "col_offset": 51, "nodeName": "model_builder", "type": "Callable[[Any], Any]"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 451, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 455, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 455, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 467, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 467, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 468, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 472, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 472, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 472, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 472, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 472, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "MultiTaskRegressor", "type": "Type[deepchem.models.tensorflow_models.fcnet.MultiTaskRegressor]"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "set_optimizer", "type": "Callable[[Any], None]"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "save", "type": "Callable[[], None]"}, {"lineNumber": 489, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 504, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 504, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 505, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 505, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 509, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 509, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 509, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 509, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 509, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 511, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "mean_squared_error", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "RobustMultitaskRegressor", "type": "Type[deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskRegressor]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 524, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 527, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 527, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 536, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 536, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 537, "col_offset": 14, "nodeName": "loadmat", "type": "Any"}, {"lineNumber": 537, "col_offset": 31, "nodeName": "input_file", "type": "str"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 540, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 541, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 541, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 541, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 541, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 542, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 544, "col_offset": 14, "nodeName": "shape", "type": "Any"}, {"lineNumber": 547, "col_offset": 12, "nodeName": "DTNNTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.graph_models.DTNNTensorGraph]"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 557, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 560, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 560, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 567, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 567, "col_offset": 30, "nodeName": "current_dir", "type": "Any"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 570, "col_offset": 14, "nodeName": "loadmat", "type": "Any"}, {"lineNumber": 570, "col_offset": 31, "nodeName": "input_file", "type": "str"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 574, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 575, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 575, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 575, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 575, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 576, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 578, "col_offset": 14, "nodeName": "shape", "type": "Any"}, {"lineNumber": 586, "col_offset": 6, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "ANIRegression", "type": "Type[deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression]"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 598, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 601, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 601, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 608, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 608, "col_offset": 30, "nodeName": "current_dir", "type": "Any"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 611, "col_offset": 14, "nodeName": "loadmat", "type": "Any"}, {"lineNumber": 611, "col_offset": 31, "nodeName": "input_file", "type": "str"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 615, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 616, "col_offset": 14, "nodeName": "from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 616, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 616, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 616, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 617, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 619, "col_offset": 14, "nodeName": "shape", "type": "Any"}, {"lineNumber": 627, "col_offset": 6, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 629, "col_offset": 12, "nodeName": "ANIRegression", "type": "Type[deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression]"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 639, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 639, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 642, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 642, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 653, "col_offset": 17, "nodeName": "ConvMolFeaturizer", "type": "Type[deepchem.feat.graph_features.ConvMolFeaturizer]"}, {"lineNumber": 655, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 655, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 656, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 658, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 658, "col_offset": 31, "nodeName": "input_file", "type": "str"}, {"lineNumber": 660, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 665, "col_offset": 18, "nodeName": "DAGTransformer", "type": "Type[deepchem.trans.transformers.DAGTransformer]"}, {"lineNumber": 666, "col_offset": 14, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 666, "col_offset": 36, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 668, "col_offset": 12, "nodeName": "DAGTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.graph_models.DAGTensorGraph]"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 678, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 678, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 680, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 680, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 686, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 687, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 691, "col_offset": 17, "nodeName": "WeaveFeaturizer", "type": "Type[deepchem.feat.graph_features.WeaveFeaturizer]"}, {"lineNumber": 693, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 693, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 694, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 696, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 696, "col_offset": 31, "nodeName": "input_file", "type": "str"}, {"lineNumber": 698, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 698, "col_offset": 46, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "WeaveTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.graph_models.WeaveTensorGraph]"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 716, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 716, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 719, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 719, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 730, "col_offset": 17, "nodeName": "WeaveFeaturizer", "type": "Type[deepchem.feat.graph_features.WeaveFeaturizer]"}, {"lineNumber": 732, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 732, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 733, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 735, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 735, "col_offset": 31, "nodeName": "input_file", "type": "str"}, {"lineNumber": 737, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 745, "col_offset": 12, "nodeName": "WeaveTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.graph_models.WeaveTensorGraph]"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 756, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 756, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 759, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 759, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 767, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 771, "col_offset": 17, "nodeName": "WeaveFeaturizer", "type": "Type[deepchem.feat.graph_features.WeaveFeaturizer]"}, {"lineNumber": 773, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 773, "col_offset": 30, "nodeName": "current_dir", "type": "Any"}, {"lineNumber": 774, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 776, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 776, "col_offset": 31, "nodeName": "input_file", "type": "str"}, {"lineNumber": 778, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 784, "col_offset": 12, "nodeName": "MPNNTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.graph_models.MPNNTensorGraph]"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 796, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 799, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 799, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 805, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 809, "col_offset": 17, "nodeName": "RawFeaturizer", "type": "Type[deepchem.feat.raw_featurizer.RawFeaturizer]"}, {"lineNumber": 811, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 811, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 812, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 814, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 814, "col_offset": 31, "nodeName": "input_file", "type": "str"}, {"lineNumber": 816, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 816, "col_offset": 46, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "char_dict", "type": "Any"}, {"lineNumber": 818, "col_offset": 15, "nodeName": "length", "type": "int"}, {"lineNumber": 818, "col_offset": 24, "nodeName": "build_char_dict", "type": "Callable[..., Tuple[Any, int]]"}, {"lineNumber": 818, "col_offset": 69, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 821, "col_offset": 12, "nodeName": "TextCNNTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.text_cnn.TextCNNTensorGraph]"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "char_dict", "type": "Any"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 831, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 834, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 834, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 842, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 846, "col_offset": 17, "nodeName": "RawFeaturizer", "type": "Type[deepchem.feat.raw_featurizer.RawFeaturizer]"}, {"lineNumber": 848, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 848, "col_offset": 30, "nodeName": "current_dir", "type": "Any"}, {"lineNumber": 849, "col_offset": 13, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 851, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 851, "col_offset": 31, "nodeName": "input_file", "type": "str"}, {"lineNumber": 853, "col_offset": 24, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 856, "col_offset": 4, "nodeName": "char_dict", "type": "Any"}, {"lineNumber": 856, "col_offset": 15, "nodeName": "length", "type": "int"}, {"lineNumber": 856, "col_offset": 24, "nodeName": "build_char_dict", "type": "Callable[..., Tuple[Any, int]]"}, {"lineNumber": 856, "col_offset": 69, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 859, "col_offset": 12, "nodeName": "TextCNNTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.text_cnn.TextCNNTensorGraph]"}, {"lineNumber": 860, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "char_dict", "type": "Any"}, {"lineNumber": 869, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 869, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 872, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 872, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 37, "col_offset": 55, "nodeName": "__file__", "type": "str"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "metrics", "type": "module"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 73, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.sklearn_models.SklearnModel"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 127, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "metrics", "type": "module"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskRegressor"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskRegressor"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskRegressor"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskRegressor"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 160, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 166, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 180, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 191, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "CoulombFitTransformer", "type": "Type[deepchem.trans.transformers.CoulombFitTransformer]"}, {"lineNumber": 197, "col_offset": 55, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "metrics", "type": "module"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "n_features", "type": "int"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "n_features", "type": "int"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "fit_transformers", "type": "List[deepchem.trans.transformers.CoulombFitTransformer]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskFitTransformRegressor"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskFitTransformRegressor"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskFitTransformRegressor"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskFitTransformRegressor"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 227, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 230, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 248, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 266, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 270, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 270, "col_offset": 36, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 270, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "y_nonzero", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 275, "col_offset": 39, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 277, "col_offset": 14, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 279, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 293, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 293, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 294, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 299, "col_offset": 24, "nodeName": "task", "type": "int"}, {"lineNumber": 299, "col_offset": 33, "nodeName": "task", "type": "int"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 305, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 308, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 312, "col_offset": 48, "nodeName": "mean", "type": "Any"}, {"lineNumber": 315, "col_offset": 22, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 316, "col_offset": 36, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 316, "col_offset": 51, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 325, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 338, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 340, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 342, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 344, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 345, "col_offset": 49, "nodeName": "mean", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 352, "col_offset": 24, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskClassifier"}, {"lineNumber": 359, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 371, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 373, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 374, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 374, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 375, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 378, "col_offset": 49, "nodeName": "mean", "type": "Any"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 387, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier"}, {"lineNumber": 394, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 406, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 408, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 409, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 410, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "trans", "type": "module"}, {"lineNumber": 412, "col_offset": 20, "nodeName": "IRV_transformer", "type": "deepchem.trans.transformers.IRVTransformer"}, {"lineNumber": 413, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 414, "col_offset": 49, "nodeName": "mean", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 416, "col_offset": 53, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.IRV.TensorflowMultiTaskIRVClassifier"}, {"lineNumber": 422, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.IRV.TensorflowMultiTaskIRVClassifier"}, {"lineNumber": 422, "col_offset": 44, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 423, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 428, "col_offset": 24, "nodeName": "task", "type": "int"}, {"lineNumber": 428, "col_offset": 33, "nodeName": "task", "type": "int"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 434, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 437, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 437, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 439, "col_offset": 14, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 441, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 442, "col_offset": 43, "nodeName": "mean", "type": "Any"}, {"lineNumber": 445, "col_offset": 22, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 446, "col_offset": 36, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 446, "col_offset": 51, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 455, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 455, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 456, "col_offset": 11, "nodeName": "scores", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 467, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 469, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 469, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 470, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 470, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 472, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 475, "col_offset": 53, "nodeName": "mean", "type": "Any"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 481, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskRegressor"}, {"lineNumber": 482, "col_offset": 24, "nodeName": "Adam", "type": "Type[deepchem.models.tensorgraph.optimizers.Adam]"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskRegressor"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskRegressor"}, {"lineNumber": 489, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.fcnet.MultiTaskRegressor"}, {"lineNumber": 489, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 490, "col_offset": 11, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 504, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 506, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 506, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 507, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 507, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 509, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 511, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 512, "col_offset": 53, "nodeName": "mean", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 521, "col_offset": 19, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskRegressor"}, {"lineNumber": 527, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskRegressor"}, {"lineNumber": 527, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 528, "col_offset": 11, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 536, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 536, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 537, "col_offset": 14, "nodeName": "io", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 541, "col_offset": 14, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 542, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 543, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 544, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 547, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 551, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.DTNNTensorGraph"}, {"lineNumber": 560, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.DTNNTensorGraph"}, {"lineNumber": 560, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 562, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 567, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 567, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 570, "col_offset": 14, "nodeName": "io", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 575, "col_offset": 14, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 576, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 578, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "NormalizationTransformer", "type": "Type[deepchem.trans.transformers.NormalizationTransformer]"}, {"lineNumber": 586, "col_offset": 16, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 586, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 592, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 601, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 601, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 601, "col_offset": 58, "nodeName": "transformers", "type": "List[deepchem.trans.transformers.NormalizationTransformer]"}, {"lineNumber": 603, "col_offset": 11, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 608, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 608, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 611, "col_offset": 14, "nodeName": "io", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 616, "col_offset": 14, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 617, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 619, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "NormalizationTransformer", "type": "Type[deepchem.trans.transformers.NormalizationTransformer]"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 627, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 629, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 633, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 639, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 642, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 642, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 642, "col_offset": 58, "nodeName": "transformers", "type": "List[deepchem.trans.transformers.NormalizationTransformer]"}, {"lineNumber": 644, "col_offset": 11, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 653, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 655, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 655, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 656, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 657, "col_offset": 14, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 657, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.ConvMolFeaturizer"}, {"lineNumber": 658, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 660, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 661, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 665, "col_offset": 18, "nodeName": "trans", "type": "module"}, {"lineNumber": 666, "col_offset": 14, "nodeName": "transformer", "type": "deepchem.trans.transformers.DAGTransformer"}, {"lineNumber": 668, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 671, "col_offset": 20, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 672, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 678, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.DAGTensorGraph"}, {"lineNumber": 680, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.DAGTensorGraph"}, {"lineNumber": 680, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 682, "col_offset": 11, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 686, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 687, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 691, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 693, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 693, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 694, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 695, "col_offset": 14, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 695, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 696, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 698, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 698, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 707, "col_offset": 20, "nodeName": "n_atom_feat", "type": "int"}, {"lineNumber": 708, "col_offset": 20, "nodeName": "n_pair_feat", "type": "int"}, {"lineNumber": 709, "col_offset": 21, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 710, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 716, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.WeaveTensorGraph"}, {"lineNumber": 719, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.WeaveTensorGraph"}, {"lineNumber": 719, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 721, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 730, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 732, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 732, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 733, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 734, "col_offset": 14, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 734, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 735, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 737, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 738, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 745, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 747, "col_offset": 20, "nodeName": "n_atom_feat", "type": "int"}, {"lineNumber": 748, "col_offset": 20, "nodeName": "n_pair_feat", "type": "int"}, {"lineNumber": 749, "col_offset": 21, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 750, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 756, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.WeaveTensorGraph"}, {"lineNumber": 759, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.WeaveTensorGraph"}, {"lineNumber": 759, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 761, "col_offset": 11, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 767, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 771, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 773, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 773, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 774, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 775, "col_offset": 14, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 775, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.graph_features.WeaveFeaturizer"}, {"lineNumber": 776, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 778, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 779, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 784, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 786, "col_offset": 20, "nodeName": "n_atom_feat", "type": "int"}, {"lineNumber": 787, "col_offset": 20, "nodeName": "n_pair_feat", "type": "int"}, {"lineNumber": 790, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.MPNNTensorGraph"}, {"lineNumber": 799, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.MPNNTensorGraph"}, {"lineNumber": 799, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 801, "col_offset": 11, "nodeName": "scores", "type": "Union[Tuple[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 805, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 809, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 811, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 811, "col_offset": 30, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 812, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 813, "col_offset": 14, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 813, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.raw_featurizer.RawFeaturizer"}, {"lineNumber": 814, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 816, "col_offset": 28, "nodeName": "metrics", "type": "module"}, {"lineNumber": 816, "col_offset": 46, "nodeName": "metrics", "type": "module"}, {"lineNumber": 818, "col_offset": 24, "nodeName": "TextCNNTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.text_cnn.TextCNNTensorGraph]"}, {"lineNumber": 821, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 824, "col_offset": 19, "nodeName": "length", "type": "int"}, {"lineNumber": 825, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNTensorGraph"}, {"lineNumber": 834, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNTensorGraph"}, {"lineNumber": 834, "col_offset": 38, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 836, "col_offset": 11, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 842, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 846, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 848, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 848, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 849, "col_offset": 13, "nodeName": "data", "type": "module"}, {"lineNumber": 850, "col_offset": 14, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 850, "col_offset": 55, "nodeName": "featurizer", "type": "deepchem.feat.raw_featurizer.RawFeaturizer"}, {"lineNumber": 851, "col_offset": 14, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 853, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 854, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 856, "col_offset": 24, "nodeName": "TextCNNTensorGraph", "type": "Type[deepchem.models.tensorgraph.models.text_cnn.TextCNNTensorGraph]"}, {"lineNumber": 859, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 862, "col_offset": 19, "nodeName": "length", "type": "int"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 869, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNTensorGraph"}, {"lineNumber": 872, "col_offset": 13, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNTensorGraph"}, {"lineNumber": 872, "col_offset": 38, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 874, "col_offset": 11, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "TestOverfit", "type": "Type[TestOverfit]"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "self", "type": "TestOverfit"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "path", "type": "module"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "dc", "type": "module"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 102, "col_offset": 50, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "dc", "type": "module"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 166, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "trans", "type": "module"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "dc", "type": "module"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 39, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 229, "col_offset": 50, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 39, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 268, "col_offset": 50, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "w_flat", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "y_flat", "type": "Any"}, {"lineNumber": 277, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 279, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 294, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 299, "col_offset": 41, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 299, "col_offset": 47, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 35, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 307, "col_offset": 46, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 312, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "models", "type": "module"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 326, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 342, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 344, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 345, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 360, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 375, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 378, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 395, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 35, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 407, "col_offset": 46, "nodeName": "n_features", "type": "int"}, {"lineNumber": 410, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 413, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 414, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 423, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 428, "col_offset": 41, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 428, "col_offset": 47, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 439, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 441, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 442, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "models", "type": "module"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 456, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 472, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 475, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 490, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 509, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 511, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 512, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 528, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 536, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 537, "col_offset": 14, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 541, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 542, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 543, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 547, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 562, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 567, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 570, "col_offset": 14, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 571, "col_offset": 24, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 571, "col_offset": 57, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 575, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 576, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "trans", "type": "module"}, {"lineNumber": 582, "col_offset": 68, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 586, "col_offset": 16, "nodeName": "transformer", "type": "deepchem.trans.transformers.NormalizationTransformer"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 608, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 611, "col_offset": 14, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 612, "col_offset": 24, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 612, "col_offset": 57, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 616, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 617, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "trans", "type": "module"}, {"lineNumber": 623, "col_offset": 68, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "transformer", "type": "deepchem.trans.transformers.NormalizationTransformer"}, {"lineNumber": 629, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 644, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 653, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 655, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 656, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 660, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 661, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 665, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 668, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 682, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 686, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 691, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 693, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 694, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 698, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 698, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 721, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 730, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 732, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 733, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 737, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 738, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 745, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 761, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 771, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 773, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 774, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 778, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 779, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 784, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 801, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 805, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 809, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 811, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 812, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 816, "col_offset": 28, "nodeName": "dc", "type": "module"}, {"lineNumber": 816, "col_offset": 46, "nodeName": "dc", "type": "module"}, {"lineNumber": 818, "col_offset": 24, "nodeName": "models", "type": "module"}, {"lineNumber": 821, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 836, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 846, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 848, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 849, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 853, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 854, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 856, "col_offset": 24, "nodeName": "models", "type": "module"}, {"lineNumber": 859, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 874, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "os", "type": "module"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 277, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 294, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 326, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 360, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 395, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 423, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 439, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 456, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 490, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 528, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 541, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 562, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 571, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 571, "col_offset": 39, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 575, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 612, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 612, "col_offset": 39, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 616, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 644, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 682, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 721, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 761, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 801, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 818, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 836, "col_offset": 18, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 856, "col_offset": 24, "nodeName": "dc", "type": "module"}, {"lineNumber": 874, "col_offset": 18, "nodeName": "regression_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 202, "col_offset": 42, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 42, "nodeName": "np", "type": "module"}]