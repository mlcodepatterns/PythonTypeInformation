[{"lineNumber": 9, "col_offset": 0, "nodeName": "hash_ecfp", "type": "Callable[..., int]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "hash_sybyl", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "hash_ecfp_pair", "type": "Callable[..., int]"}, {"lineNumber": 9, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 40, "col_offset": 68, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 73, "col_offset": 54, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 28, "col_offset": 2, "nodeName": "bytes_ecfp", "type": "bytes"}, {"lineNumber": 29, "col_offset": 2, "nodeName": "md5", "type": "hashlib._Hash"}, {"lineNumber": 31, "col_offset": 2, "nodeName": "digest", "type": "str"}, {"lineNumber": 32, "col_offset": 2, "nodeName": "ecfp_hash", "type": "int"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "ecfp_hash", "type": "int"}, {"lineNumber": 61, "col_offset": 2, "nodeName": "ecfp", "type": "str"}, {"lineNumber": 62, "col_offset": 2, "nodeName": "bytes_ecfp", "type": "bytes"}, {"lineNumber": 63, "col_offset": 2, "nodeName": "md5", "type": "hashlib._Hash"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "digest", "type": "str"}, {"lineNumber": 66, "col_offset": 2, "nodeName": "ecfp_hash", "type": "int"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "ecfp_hash", "type": "int"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "feature_vector", "type": "Any"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "feature_vector", "type": "Any"}, {"lineNumber": 73, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 9, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 9, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "md5", "type": "Callable[..., hashlib._Hash]"}, {"lineNumber": 30, "col_offset": 2, "nodeName": "update", "type": "Callable[[Union[bytes, bytearray, memoryview]], None]"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "bytes_ecfp", "type": "bytes"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "hexdigest", "type": "Callable[[], str]"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "size", "type": "int"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "index", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "sybyl", "type": "Any"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "md5", "type": "Callable[..., hashlib._Hash]"}, {"lineNumber": 64, "col_offset": 2, "nodeName": "update", "type": "Callable[[Union[bytes, bytearray, memoryview]], None]"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "bytes_ecfp", "type": "bytes"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "hexdigest", "type": "Callable[[], str]"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "size", "type": "int"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 104, "col_offset": 5, "nodeName": "feature_dict", "type": "Optional[Dict[int, str]]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "ecfp", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "hashlib", "type": "module"}, {"lineNumber": 30, "col_offset": 2, "nodeName": "md5", "type": "hashlib._Hash"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "md5", "type": "hashlib._Hash"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "digest", "type": "str"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "sybyl_types", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "ecfp", "type": "str"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "hashlib", "type": "module"}, {"lineNumber": 64, "col_offset": 2, "nodeName": "md5", "type": "hashlib._Hash"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "md5", "type": "hashlib._Hash"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "digest", "type": "str"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "feature_vector", "type": "Any"}, {"lineNumber": 109, "col_offset": 7, "nodeName": "feature_list", "type": "Optional[List[Any]]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "ecfp_pair", "type": "Tuple[str, str]"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "ecfp_pair", "type": "Tuple[str, str]"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "List", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "hash_function", "type": "Callable[[Any, int], int]"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "feature", "type": "str"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "size", "type": "int"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "on_channels", "type": "List[int]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "feature_vector", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "feature_list", "type": "Optional[List[Any]]"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "key", "type": "int"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "feature", "type": "str"}, {"lineNumber": 106, "col_offset": 57, "nodeName": "items", "type": "Callable"}, {"lineNumber": 106, "col_offset": 57, "nodeName": "feature_dict", "type": "Optional[Dict[int, str]]"}]