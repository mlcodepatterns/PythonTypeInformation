[{"lineNumber": 15, "col_offset": 0, "nodeName": "K", "type": "int"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "n_pos", "type": "int"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "n_neg", "type": "int"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "n_trials", "type": "int"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "task_splitter", "type": "deepchem.splits.task_splitter.TaskSplitter"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "fold_datasets", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "train_folds", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "test_dataset", "type": "Any"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "task_scores", "type": "Dict[int, List[Any]]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "mean_task_scores", "type": "Dict[int, Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "std_task_scores", "type": "Dict[int, Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "task", "type": "int"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "muv_tasks", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "load_muv_convmol", "type": "Any"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "TaskSplitter", "type": "Type[deepchem.splits.task_splitter.TaskSplitter]"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "k_fold_split", "type": "Callable[[Any, Any], List[Any]]"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 28, "col_offset": 52, "nodeName": "K", "type": "int"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "fold_datasets", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "merge_fold_datasets", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 46, "nodeName": "train_folds", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "fold_datasets", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "SupportGenerator", "type": "Type[deepchem.data.supports.SupportGenerator]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "test_dataset", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "n_pos", "type": "int"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "n_neg", "type": "int"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "n_trials", "type": "int"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "task", "type": "int"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "trial_num", "type": "int"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "support_generator", "type": "deepchem.data.supports.SupportGenerator"}, {"lineNumber": 45, "col_offset": 2, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 47, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 48, "col_offset": 2, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 75, "col_offset": 2, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "mean_task_scores", "type": "Dict[int, Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "std_task_scores", "type": "Dict[int, Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "metrics", "type": "module"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "metrics", "type": "module"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "splits", "type": "module"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "task_splitter", "type": "deepchem.splits.task_splitter.TaskSplitter"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "splits", "type": "module"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "task", "type": "int"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "task", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "support", "type": "Any"}, {"lineNumber": 42, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "SequentialGraph", "type": "Type[deepchem.models.tf_new_models.graph_models.SequentialGraph]"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 49, "col_offset": 2, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 50, "col_offset": 2, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 54, "col_offset": 2, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 56, "col_offset": 2, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "MultitaskGraphClassifier", "type": "Type[deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "support", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "get_task_dataset_minus_support", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "test_dataset", "type": "Any"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "support", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "task", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "predict_proba", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "task_dataset", "type": "Any"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "compute_metric", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 6, "nodeName": "y", "type": "Any"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "w", "type": "Any"}, {"lineNumber": 78, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 2, "nodeName": "append", "type": "Callable"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "score", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 2, "nodeName": "mean_task_scores", "type": "Dict[int, Any]"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "mean", "type": "Any"}, {"lineNumber": 86, "col_offset": 2, "nodeName": "std_task_scores", "type": "Dict[int, Any]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "std", "type": "Any"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "median", "type": "Any"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "dc", "type": "module"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "dc", "type": "module"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "dc", "type": "module"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "dc", "type": "module"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "trial_num", "type": "int"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "nn", "type": "module"}, {"lineNumber": 49, "col_offset": 2, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "GraphConv", "type": "Type[deepchem.nn.layers.GraphConv]"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "n_feat", "type": "int"}, {"lineNumber": 50, "col_offset": 2, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "GraphPool", "type": "Type[deepchem.nn.layers.GraphPool]"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "GraphConv", "type": "Type[deepchem.nn.layers.GraphConv]"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "GraphPool", "type": "Type[deepchem.nn.layers.GraphPool]"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "GraphConv", "type": "Type[deepchem.nn.layers.GraphConv]"}, {"lineNumber": 54, "col_offset": 2, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "GraphPool", "type": "Type[deepchem.nn.layers.GraphPool]"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "Dense", "type": "Type[deepchem.nn.copy.Dense]"}, {"lineNumber": 56, "col_offset": 2, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "GraphGather", "type": "Type[deepchem.nn.layers.GraphGather]"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "models", "type": "module"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "data", "type": "module"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "model", "type": "deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 77, "col_offset": 6, "nodeName": "task_dataset", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "task_dataset", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "get_task_names", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "task", "type": "int"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "task", "type": "int"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "dc", "type": "module"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "nn", "type": "module"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "nn", "type": "module"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "nn", "type": "module"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "nn", "type": "module"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "nn", "type": "module"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "nn", "type": "module"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "nn", "type": "module"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "nn", "type": "module"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "dc", "type": "module"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 79, "col_offset": 2, "nodeName": "task_scores", "type": "Dict[int, List[Any]]"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "test_dataset", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "task_scores", "type": "Dict[int, List[Any]]"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "task_scores", "type": "Dict[int, List[Any]]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "values", "type": "Callable"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "get_task_names", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "task", "type": "Any"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "score", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "task", "type": "Any"}, {"lineNumber": 85, "col_offset": 56, "nodeName": "task", "type": "int"}, {"lineNumber": 86, "col_offset": 54, "nodeName": "task", "type": "int"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "mean_task_scores", "type": "Dict[int, Any]"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "test_dataset", "type": "Any"}]