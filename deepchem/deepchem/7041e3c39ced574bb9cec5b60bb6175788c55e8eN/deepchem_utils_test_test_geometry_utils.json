[{"lineNumber": 11, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "v1", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "v2", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "angle_cutoff", "type": "int"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "n1", "type": "int"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "n2", "type": "int"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "coords1", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "coords2", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "distance", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "coords1", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "coords2", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "distance", "type": "Any"}, {"lineNumber": 14, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 15, "col_offset": 6, "nodeName": "u", "type": "numpy.ndarray"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 23, "col_offset": 6, "nodeName": "m", "type": "Any"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 28, "col_offset": 6, "nodeName": "vector", "type": "Any"}, {"lineNumber": 29, "col_offset": 6, "nodeName": "norm_vector", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "v1", "type": "Any"}, {"lineNumber": 35, "col_offset": 6, "nodeName": "v2", "type": "Any"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "angle", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "is_angle_within_cutoff", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "v1", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "v2", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "angle_cutoff", "type": "int"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "n1", "type": "int"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "n2", "type": "int"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "compute_pairwise_distances", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "coords1", "type": "Any"}, {"lineNumber": 54, "col_offset": 51, "nodeName": "coords2", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "compute_pairwise_distances", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "coords1", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 51, "nodeName": "coords2", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 15, "col_offset": 10, "nodeName": "generate_random_unit_vector", "type": "Callable[[], numpy.ndarray]"}, {"lineNumber": 17, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 18, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 23, "col_offset": 10, "nodeName": "generate_random_rotation_matrix", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "unit_vector", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "vector", "type": "Any"}, {"lineNumber": 30, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "angle_between", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "v1", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "v2", "type": "Any"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "angle", "type": "Any"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "pi", "type": "Any"}, {"lineNumber": 38, "col_offset": 6, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "angle", "type": "Any"}, {"lineNumber": 39, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 40, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "pi", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "self", "type": "TestGeometryUtils"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "distance", "type": "Any"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "n1", "type": "int"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "n2", "type": "int"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "self", "type": "TestGeometryUtils"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "all", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "self", "type": "TestGeometryUtils"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "all", "type": "Any"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "self", "type": "TestGeometryUtils"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "all", "type": "Any"}, {"lineNumber": 17, "col_offset": 6, "nodeName": "self", "type": "TestGeometryUtils"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "u", "type": "numpy.ndarray"}, {"lineNumber": 18, "col_offset": 6, "nodeName": "self", "type": "TestGeometryUtils"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "norm", "type": "Any"}, {"lineNumber": 18, "col_offset": 44, "nodeName": "u", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 6, "nodeName": "self", "type": "TestGeometryUtils"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "m", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 30, "col_offset": 6, "nodeName": "self", "type": "TestGeometryUtils"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "norm", "type": "Any"}, {"lineNumber": 30, "col_offset": 44, "nodeName": "norm_vector", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "self", "type": "TestGeometryUtils"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 6, "nodeName": "self", "type": "TestGeometryUtils"}, {"lineNumber": 39, "col_offset": 6, "nodeName": "self", "type": "TestGeometryUtils"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "angle_between", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 43, "nodeName": "v1", "type": "Any"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "v1", "type": "Any"}, {"lineNumber": 40, "col_offset": 6, "nodeName": "self", "type": "TestGeometryUtils"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "angle_between", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "v1", "type": "Any"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "v1", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "distance", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "distance", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "distance", "type": "Any"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "np", "type": "module"}]