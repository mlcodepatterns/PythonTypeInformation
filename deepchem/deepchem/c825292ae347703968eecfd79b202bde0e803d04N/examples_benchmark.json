[{"lineNumber": 100, "col_offset": 6, "nodeName": "dname", "type": "unicode"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "dataset_name", "type": "List[unicode]"}, {"lineNumber": 184, "col_offset": 2, "nodeName": "train_scores", "type": "Dict[unicode, Dict[Any, Any]]"}, {"lineNumber": 185, "col_offset": 2, "nodeName": "valid_scores", "type": "Dict[unicode, Dict[Any, Any]]"}, {"lineNumber": 367, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 370, "col_offset": 2, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 373, "col_offset": 2, "nodeName": "base_dir_o", "type": "unicode"}, {"lineNumber": 379, "col_offset": 2, "nodeName": "dataset_name", "type": "unicode"}, {"lineNumber": 380, "col_offset": 2, "nodeName": "model", "type": "unicode"}, {"lineNumber": 385, "col_offset": 2, "nodeName": "hps", "type": "Dict[nothing, nothing]"}, {"lineNumber": 386, "col_offset": 2, "nodeName": "hps", "type": "Dict[unicode, Union[List[Dict[unicode, Union[List[int], List[float], int, unicode, float]]], List[Dict[unicode, Union[int, unicode, float]]], List[Dict[unicode, Optional[Union[int, float]]]], List[Dict[unicode, int]]]]"}, {"lineNumber": 81, "col_offset": 5, "nodeName": "model", "type": "unicode"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "featurizer", "type": "unicode"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 90, "col_offset": 5, "nodeName": "dataset_name", "type": "unicode"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "dataset_name", "type": "List[unicode]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "dataset_name", "type": "List[unicode]"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "load_tox21", "type": "Any"}, {"lineNumber": 96, "col_offset": 51, "nodeName": "load_muv", "type": "Any"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "load_pcba", "type": "Any"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "load_nci", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "load_sider", "type": "Any"}, {"lineNumber": 98, "col_offset": 55, "nodeName": "load_toxcast", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "base_dir", "type": "Union[str, unicode]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "time_start", "type": "float"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "time_finish_loading", "type": "float"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 188, "col_offset": 44, "nodeName": "roc_auc_score", "type": "Any"}, {"lineNumber": 188, "col_offset": 70, "nodeName": "mean", "type": "Any"}, {"lineNumber": 192, "col_offset": 9, "nodeName": "model", "type": "unicode"}, {"lineNumber": 194, "col_offset": 5, "nodeName": "model", "type": "unicode"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "layer_sizes", "type": "List[int]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "weight_init_stddevs", "type": "List[float]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "bias_init_consts", "type": "List[float]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "dropouts", "type": "List[float]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "penalty", "type": "int"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "penalty_type", "type": "unicode"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "nb_epoch", "type": "int"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "learning_rate", "type": "float"}, {"lineNumber": 225, "col_offset": 5, "nodeName": "model", "type": "unicode"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "layer_sizes", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "bypass_layer_sizes", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "bypass_weight_init_stddevs", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "bypass_bias_init_consts", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "bypass_dropouts", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 266, "col_offset": 5, "nodeName": "model", "type": "unicode"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 291, "col_offset": 5, "nodeName": "model", "type": "unicode"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "model_dir_graphconv", "type": "Union[str, unicode]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "n_filters", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "n_fully_connected_nodes", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "g", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "sess", "type": "Any"}, {"lineNumber": 339, "col_offset": 5, "nodeName": "model", "type": "unicode"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "model_dir_rf", "type": "Union[str, unicode]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "n_estimators", "type": "Any"}, {"lineNumber": 365, "col_offset": 9, "nodeName": "train_scores", "type": "Dict[unicode, Dict[Any, Any]]"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "valid_scores", "type": "Dict[unicode, Dict[Any, Any]]"}, {"lineNumber": 369, "col_offset": 2, "nodeName": "seed", "type": "Any"}, {"lineNumber": 374, "col_offset": 5, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "base_dir_o", "type": "unicode"}, {"lineNumber": 376, "col_offset": 2, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 376, "col_offset": 14, "nodeName": "base_dir_o", "type": "unicode"}, {"lineNumber": 408, "col_offset": 2, "nodeName": "hps", "type": "Dict[unicode, Union[List[Dict[unicode, Union[List[int], List[float], int, unicode, float]]], List[Dict[unicode, Union[int, unicode, float]]], List[Dict[unicode, Optional[Union[int, float]]]], List[Dict[unicode, int]]]]"}, {"lineNumber": 410, "col_offset": 2, "nodeName": "benchmark_loading_datasets", "type": "Callable[..., Any]"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "base_dir_o", "type": "unicode"}, {"lineNumber": 410, "col_offset": 41, "nodeName": "hps", "type": "Dict[unicode, Union[List[Dict[unicode, Union[List[int], List[float], int, unicode, float]]], List[Dict[unicode, Union[int, unicode, float]]], List[Dict[unicode, Optional[Union[int, float]]]], List[Dict[unicode, int]]]]"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "dataset_name", "type": "unicode"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 84, "col_offset": 7, "nodeName": "model", "type": "unicode"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "featurizer", "type": "unicode"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "dataset_name", "type": "unicode"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "base_dir_o", "type": "unicode"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "dname", "type": "unicode"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "test_dataset", "type": "Any"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "count", "type": "int"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "hp", "type": "Dict[unicode, Union[List[int], List[float], int, unicode, float]]"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "time_start_fitting", "type": "float"}, {"lineNumber": 121, "col_offset": 6, "nodeName": "time_finish_fitting", "type": "float"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "metrics", "type": "module"}, {"lineNumber": 188, "col_offset": 44, "nodeName": "metrics", "type": "module"}, {"lineNumber": 188, "col_offset": 70, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 54, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "hyper_parameters", "type": "Dict[unicode, Union[List[int], List[float], int, unicode, float]]"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "hyper_parameters", "type": "Dict[unicode, Union[List[int], List[float], int, unicode, float]]"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "hyper_parameters", "type": "Dict[unicode, Union[List[int], List[float], int, unicode, float]]"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Dict[unicode, Union[List[int], List[float], int, unicode, float]]"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "hyper_parameters", "type": "Dict[unicode, Union[List[int], List[float], int, unicode, float]]"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "hyper_parameters", "type": "Dict[unicode, Union[List[int], List[float], int, unicode, float]]"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "hyper_parameters", "type": "Dict[unicode, Union[List[int], List[float], int, unicode, float]]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Dict[unicode, Union[List[int], List[float], int, unicode, float]]"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "hyper_parameters", "type": "Dict[unicode, Union[List[int], List[float], int, unicode, float]]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "TensorflowMultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "evaluate", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 220, "col_offset": 48, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 222, "col_offset": 33, "nodeName": "evaluate", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 223, "col_offset": 48, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 233, "col_offset": 33, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 241, "col_offset": 20, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "RobustMultitaskClassifier", "type": "Type[deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "evaluate", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 261, "col_offset": 48, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "evaluate", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 264, "col_offset": 48, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 272, "col_offset": 20, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "TensorflowLogisticRegression", "type": "Type[deepchem.models.tensorflow_models.lr.TensorflowLogisticRegression]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "evaluate", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 286, "col_offset": 48, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "evaluate", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 289, "col_offset": 48, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 293, "col_offset": 39, "nodeName": "base_dir", "type": "Union[str, unicode, Any]"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 300, "col_offset": 30, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 301, "col_offset": 11, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "Session", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "set_session", "type": "Any"}, {"lineNumber": 305, "col_offset": 18, "nodeName": "sess", "type": "Any"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "graph_model", "type": "deepchem.models.tf_keras_models.graph_models.SequentialGraph"}, {"lineNumber": 341, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 341, "col_offset": 32, "nodeName": "base_dir", "type": "Union[str, unicode, Any]"}, {"lineNumber": 344, "col_offset": 19, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "SingletaskToMultitask", "type": "Type[deepchem.models.multitask.SingletaskToMultitask]"}, {"lineNumber": 352, "col_offset": 2, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 352, "col_offset": 9, "nodeName": "model_builder", "type": "Callable[[Any], Any]"}, {"lineNumber": 352, "col_offset": 24, "nodeName": "model_dir_rf", "type": "Union[unicode, str]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 356, "col_offset": 17, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 359, "col_offset": 36, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 360, "col_offset": 48, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 362, "col_offset": 36, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 363, "col_offset": 48, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 369, "col_offset": 2, "nodeName": "random", "type": "Any"}, {"lineNumber": 373, "col_offset": 36, "nodeName": "strftime", "type": "Callable[..., str]"}, {"lineNumber": 374, "col_offset": 5, "nodeName": "path", "type": "module"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 375, "col_offset": 18, "nodeName": "base_dir_o", "type": "unicode"}, {"lineNumber": 376, "col_offset": 2, "nodeName": "os", "type": "module"}, {"lineNumber": 410, "col_offset": 59, "nodeName": "dataset_name", "type": "unicode"}, {"lineNumber": 411, "col_offset": 35, "nodeName": "model", "type": "unicode"}, {"lineNumber": 411, "col_offset": 49, "nodeName": "reload", "type": "Callable[[module], module]"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "dname", "type": "unicode"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "time", "type": "module"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "loading_functions", "type": "Dict[unicode, Any]"}, {"lineNumber": 108, "col_offset": 70, "nodeName": "featurizer", "type": "unicode"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "time", "type": "module"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "hyper_parameters", "type": "Dict[unicode, Union[List[Dict[unicode, Union[List[int], List[float], int, unicode, float]]], List[Dict[unicode, Union[int, unicode, float]]], List[Dict[unicode, Optional[Union[int, float]]]], List[Dict[unicode, int]]]]"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "benchmark_train_and_valid", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 58, "nodeName": "base_dir", "type": "Union[unicode, str]"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 118, "col_offset": 51, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 118, "col_offset": 66, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "hp", "type": "Dict[unicode, Union[List[int], List[float], int, unicode, float]]"}, {"lineNumber": 119, "col_offset": 54, "nodeName": "n_features", "type": "int"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 123, "col_offset": 61, "nodeName": "f", "type": "file"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "i", "type": "unicode"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "train_score", "type": "Dict[unicode, Dict[Any, Any]]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "i", "type": "unicode"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "valid_score", "type": "Dict[unicode, Dict[Any, Any]]"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "dc", "type": "module"}, {"lineNumber": 188, "col_offset": 44, "nodeName": "dc", "type": "module"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "models", "type": "module"}, {"lineNumber": 207, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 207, "col_offset": 59, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 208, "col_offset": 32, "nodeName": "layer_sizes", "type": "List[int]"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "weight_init_stddevs", "type": "List[float]"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "bias_init_consts", "type": "List[float]"}, {"lineNumber": 210, "col_offset": 52, "nodeName": "dropouts", "type": "List[float]"}, {"lineNumber": 210, "col_offset": 70, "nodeName": "penalty", "type": "int"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "penalty_type", "type": "unicode"}, {"lineNumber": 211, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "learning_rate", "type": "float"}, {"lineNumber": 212, "col_offset": 47, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "model_tf", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 216, "col_offset": 41, "nodeName": "nb_epoch", "type": "int"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "model_tf", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 222, "col_offset": 33, "nodeName": "model_tf", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "models", "type": "module"}, {"lineNumber": 244, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 244, "col_offset": 59, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "layer_sizes", "type": "Any"}, {"lineNumber": 246, "col_offset": 28, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 247, "col_offset": 52, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 248, "col_offset": 27, "nodeName": "bypass_layer_sizes", "type": "Any"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "bypass_weight_init_stddevs", "type": "Any"}, {"lineNumber": 250, "col_offset": 32, "nodeName": "bypass_bias_init_consts", "type": "Any"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "bypass_dropouts", "type": "Any"}, {"lineNumber": 251, "col_offset": 49, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 252, "col_offset": 46, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 253, "col_offset": 47, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "model_robust", "type": "deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier"}, {"lineNumber": 257, "col_offset": 45, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "model_robust", "type": "deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "model_robust", "type": "deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "models", "type": "module"}, {"lineNumber": 275, "col_offset": 58, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 275, "col_offset": 62, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 276, "col_offset": 28, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 276, "col_offset": 50, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 277, "col_offset": 19, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 277, "col_offset": 45, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 278, "col_offset": 18, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "model_logreg", "type": "deepchem.models.tensorflow_models.lr.TensorflowLogisticRegression"}, {"lineNumber": 282, "col_offset": 45, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "model_logreg", "type": "deepchem.models.tensorflow_models.lr.TensorflowLogisticRegression"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "model_logreg", "type": "deepchem.models.tensorflow_models.lr.TensorflowLogisticRegression"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 304, "col_offset": 28, "nodeName": "g", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "K", "type": "Any"}, {"lineNumber": 307, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 308, "col_offset": 9, "nodeName": "seed", "type": "Any"}, {"lineNumber": 310, "col_offset": 20, "nodeName": "SequentialGraph", "type": "Type[deepchem.models.tf_keras_models.graph_models.SequentialGraph]"}, {"lineNumber": 310, "col_offset": 42, "nodeName": "n_features", "type": "int"}, {"lineNumber": 311, "col_offset": 6, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 313, "col_offset": 6, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 314, "col_offset": 6, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 315, "col_offset": 6, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 316, "col_offset": 6, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 318, "col_offset": 6, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 320, "col_offset": 6, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 321, "col_offset": 6, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 341, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 348, "col_offset": 22, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 350, "col_offset": 51, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 350, "col_offset": 66, "nodeName": "model_dir_rf", "type": "Any"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "multitask", "type": "module"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "model_rf", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 359, "col_offset": 36, "nodeName": "model_rf", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 362, "col_offset": 36, "nodeName": "model_rf", "type": "deepchem.models.multitask.SingletaskToMultitask"}, {"lineNumber": 363, "col_offset": 24, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 369, "col_offset": 2, "nodeName": "np", "type": "module"}, {"lineNumber": 373, "col_offset": 36, "nodeName": "time", "type": "module"}, {"lineNumber": 373, "col_offset": 62, "nodeName": "localtime", "type": "Callable[..., time.struct_time]"}, {"lineNumber": 374, "col_offset": 5, "nodeName": "os", "type": "module"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "shutil", "type": "module"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "dname", "type": "unicode"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "model", "type": "unicode"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "time", "type": "module"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "model", "type": "unicode"}, {"lineNumber": 120, "col_offset": 59, "nodeName": "verbosity", "type": "unicode"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "time", "type": "module"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "dc", "type": "module"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "dc", "type": "module"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "dc", "type": "module"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 307, "col_offset": 9, "nodeName": "g", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 309, "col_offset": 27, "nodeName": "seed", "type": "Any"}, {"lineNumber": 310, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 311, "col_offset": 6, "nodeName": "graph_model", "type": "deepchem.models.tf_keras_models.graph_models.SequentialGraph"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "GraphConv", "type": "Type[deepchem.models.tf_keras_models.keras_layers.GraphConv]"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "graph_model", "type": "deepchem.models.tf_keras_models.graph_models.SequentialGraph"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 313, "col_offset": 6, "nodeName": "graph_model", "type": "deepchem.models.tf_keras_models.graph_models.SequentialGraph"}, {"lineNumber": 313, "col_offset": 22, "nodeName": "GraphPool", "type": "Type[deepchem.models.tf_keras_models.keras_layers.GraphPool]"}, {"lineNumber": 314, "col_offset": 6, "nodeName": "graph_model", "type": "deepchem.models.tf_keras_models.graph_models.SequentialGraph"}, {"lineNumber": 314, "col_offset": 22, "nodeName": "GraphConv", "type": "Type[deepchem.models.tf_keras_models.keras_layers.GraphConv]"}, {"lineNumber": 315, "col_offset": 6, "nodeName": "graph_model", "type": "deepchem.models.tf_keras_models.graph_models.SequentialGraph"}, {"lineNumber": 315, "col_offset": 22, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 316, "col_offset": 6, "nodeName": "graph_model", "type": "deepchem.models.tf_keras_models.graph_models.SequentialGraph"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "GraphPool", "type": "Type[deepchem.models.tf_keras_models.keras_layers.GraphPool]"}, {"lineNumber": 318, "col_offset": 6, "nodeName": "graph_model", "type": "deepchem.models.tf_keras_models.graph_models.SequentialGraph"}, {"lineNumber": 318, "col_offset": 22, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 320, "col_offset": 6, "nodeName": "graph_model", "type": "deepchem.models.tf_keras_models.graph_models.SequentialGraph"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 321, "col_offset": 6, "nodeName": "graph_model", "type": "deepchem.models.tf_keras_models.graph_models.SequentialGraph"}, {"lineNumber": 321, "col_offset": 22, "nodeName": "GraphGather", "type": "Type[deepchem.models.tf_keras_models.keras_layers.GraphGather]"}, {"lineNumber": 321, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "Session", "type": "Any"}, {"lineNumber": 323, "col_offset": 26, "nodeName": "MultitaskGraphClassifier", "type": "Type[deepchem.models.tf_keras_models.multitask_classifier.MultitaskGraphClassifier]"}, {"lineNumber": 324, "col_offset": 10, "nodeName": "sess", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "graph_model", "type": "deepchem.models.tf_keras_models.graph_models.SequentialGraph"}, {"lineNumber": 324, "col_offset": 41, "nodeName": "model_dir_graphconv", "type": "Union[str, unicode]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 331, "col_offset": 28, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 333, "col_offset": 36, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 334, "col_offset": 52, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 336, "col_offset": 36, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 337, "col_offset": 52, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 341, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 349, "col_offset": 46, "nodeName": "n_estimators", "type": "Any"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "sklearn_models", "type": "module"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "models", "type": "module"}, {"lineNumber": 373, "col_offset": 62, "nodeName": "time", "type": "module"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "out_path", "type": "unicode"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "f", "type": "file"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "f", "type": "file"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "dname", "type": "unicode"}, {"lineNumber": 127, "col_offset": 10, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "f", "type": "file"}, {"lineNumber": 130, "col_offset": 10, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "f", "type": "file"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 310, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 311, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 311, "col_offset": 42, "nodeName": "n_filters", "type": "Any"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 313, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 314, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 314, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 314, "col_offset": 42, "nodeName": "n_filters", "type": "Any"}, {"lineNumber": 315, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 318, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 318, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 318, "col_offset": 38, "nodeName": "n_fully_connected_nodes", "type": "Any"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 321, "col_offset": 22, "nodeName": "nn", "type": "module"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 323, "col_offset": 26, "nodeName": "models", "type": "module"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 324, "col_offset": 33, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 325, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 325, "col_offset": 47, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "model_graphconv", "type": "deepchem.models.tf_keras_models.multitask_classifier.MultitaskGraphClassifier"}, {"lineNumber": 331, "col_offset": 52, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 333, "col_offset": 36, "nodeName": "model_graphconv", "type": "deepchem.models.tf_keras_models.multitask_classifier.MultitaskGraphClassifier"}, {"lineNumber": 334, "col_offset": 28, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 336, "col_offset": 36, "nodeName": "model_graphconv", "type": "deepchem.models.tf_keras_models.multitask_classifier.MultitaskGraphClassifier"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "models", "type": "module"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "dc", "type": "module"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 127, "col_offset": 10, "nodeName": "f", "type": "file"}, {"lineNumber": 130, "col_offset": 10, "nodeName": "f", "type": "file"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 313, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 314, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 315, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 318, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 321, "col_offset": 22, "nodeName": "dc", "type": "module"}, {"lineNumber": 323, "col_offset": 26, "nodeName": "dc", "type": "module"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "count", "type": "int"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "i", "type": "unicode"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "i", "type": "unicode"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "time_finish_fitting", "type": "float"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "time_start_fitting", "type": "float"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "train_score", "type": "Dict[unicode, Dict[Any, Any]]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "valid_score", "type": "Dict[unicode, Dict[Any, Any]]"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "i", "type": "unicode"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "i", "type": "unicode"}]