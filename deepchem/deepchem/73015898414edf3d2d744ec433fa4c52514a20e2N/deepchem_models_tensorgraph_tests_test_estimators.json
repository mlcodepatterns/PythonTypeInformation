[{"lineNumber": 13, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.fcnet.MultitaskClassifier"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.fcnet.MultitaskRegressor"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.sequential.Sequential"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "transformers", "type": "List[deepchem.trans.transformers.IRVTransformer]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "transformer", "type": "deepchem.trans.transformers.IRVTransformer"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "transformers", "type": "List[deepchem.trans.transformers.IRVTransformer]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "X", "type": "List[str]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "X", "type": "List[str]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "x_col1", "type": "Any"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "x_col2", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.tensor_graph.TensorGraph"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "features", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "labels", "type": "deepchem.models.tensorgraph.layers.Label"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "loss", "type": "deepchem.models.tensorgraph.layers.ReduceMean"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "input_file", "type": "str"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "num_vals_to_use", "type": "int"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "dtypes", "type": "List[Any]"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 525, "col_offset": 4, "nodeName": "feature_cols", "type": "List[Any]"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "num_samples_to_use", "type": "int"}, {"lineNumber": 539, "col_offset": 18, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "layer_structures", "type": "List[int]"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "n_feat", "type": "Any"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 623, "col_offset": 4, "nodeName": "layer_structures", "type": "List[int]"}, {"lineNumber": 624, "col_offset": 4, "nodeName": "atom_number_cases", "type": "List[int]"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "results", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "MultitaskClassifier", "type": "Type[deepchem.models.tensorgraph.fcnet.MultitaskClassifier]"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 38, "col_offset": 51, "nodeName": "n_features", "type": "int"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "accuracy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "MultitaskRegressor", "type": "Type[deepchem.models.tensorgraph.fcnet.MultitaskRegressor]"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "n_features", "type": "int"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "RobustMultitaskClassifier", "type": "Type[deepchem.models.tensorgraph.robust_multitask.RobustMultitaskClassifier]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "accuracy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "RobustMultitaskRegressor", "type": "Type[deepchem.models.tensorgraph.robust_multitask.RobustMultitaskRegressor]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 207, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 209, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 209, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 209, "col_offset": 38, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "Sequential", "type": "Type[deepchem.models.tensorgraph.sequential.Sequential]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 233, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 246, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 248, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 248, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 248, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "TensorflowMultitaskIRVClassifier", "type": "Type[deepchem.models.tensorgraph.IRV.TensorflowMultitaskIRVClassifier]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "build", "type": "Callable[[], None]"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 273, "col_offset": 27, "nodeName": "accuracy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 283, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "TextCNNModel", "type": "Type[deepchem.models.tensorgraph.models.text_cnn.TextCNNModel]"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 305, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 305, "col_offset": 27, "nodeName": "X", "type": "List[str]"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 305, "col_offset": 33, "nodeName": "w", "type": "Any"}, {"lineNumber": 305, "col_offset": 36, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 313, "col_offset": 6, "nodeName": "smiles_seq", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 320, "col_offset": 27, "nodeName": "accuracy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "TextCNNModel", "type": "Type[deepchem.models.tensorgraph.models.text_cnn.TextCNNModel]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 352, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "X", "type": "List[str]"}, {"lineNumber": 352, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 352, "col_offset": 33, "nodeName": "w", "type": "Any"}, {"lineNumber": 352, "col_offset": 36, "nodeName": "smile_ids", "type": "List[str]"}, {"lineNumber": 357, "col_offset": 6, "nodeName": "smiles_seq", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 370, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 383, "col_offset": 37, "nodeName": "n_features", "type": "int"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 385, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 385, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 385, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 390, "col_offset": 6, "nodeName": "x1", "type": "Any"}, {"lineNumber": 391, "col_offset": 6, "nodeName": "x2", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "ScScoreModel", "type": "Type[deepchem.models.tensorgraph.models.scscore.ScScoreModel]"}, {"lineNumber": 396, "col_offset": 35, "nodeName": "n_features", "type": "int"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 398, "col_offset": 25, "nodeName": "difference", "type": "deepchem.models.tensorgraph.layers.Add"}, {"lineNumber": 401, "col_offset": 6, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 421, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 434, "col_offset": 23, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 434, "col_offset": 34, "nodeName": "n_features", "type": "int"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 436, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 436, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 436, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "TensorGraph", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TensorGraph]"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "Feature", "type": "Type[deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "set_summary", "type": "Callable[..., None]"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "add_output", "type": "Callable[[Any], None]"}, {"lineNumber": 449, "col_offset": 21, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "Label", "type": "Type[deepchem.models.tensorgraph.layers.Label]"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "ReduceMean", "type": "Type[deepchem.models.tensorgraph.layers.ReduceMean]"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "set_loss", "type": "Callable[[Any], None]"}, {"lineNumber": 452, "col_offset": 19, "nodeName": "loss", "type": "deepchem.models.tensorgraph.layers.ReduceMean"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 466, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 467, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 467, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 468, "col_offset": 14, "nodeName": "loadmat", "type": "Any"}, {"lineNumber": 468, "col_offset": 22, "nodeName": "input_file", "type": "str"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 474, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 475, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 476, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 476, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 476, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 476, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 477, "col_offset": 14, "nodeName": "shape", "type": "Any"}, {"lineNumber": 478, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 480, "col_offset": 14, "nodeName": "int32", "type": "Any"}, {"lineNumber": 480, "col_offset": 24, "nodeName": "float32", "type": "Any"}, {"lineNumber": 480, "col_offset": 36, "nodeName": "int32", "type": "Any"}, {"lineNumber": 480, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 480, "col_offset": 56, "nodeName": "int32", "type": "Any"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "DTNNModel", "type": "Type[deepchem.models.tensorgraph.models.graph_models.DTNNModel]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 490, "col_offset": 6, "nodeName": "error", "type": "Any"}, {"lineNumber": 501, "col_offset": 6, "nodeName": "feature_dict", "type": "Dict[str, Any]"}, {"lineNumber": 507, "col_offset": 32, "nodeName": "weights", "type": "Any"}, {"lineNumber": 511, "col_offset": 18, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 513, "col_offset": 15, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 515, "col_offset": 15, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 517, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 523, "col_offset": 24, "nodeName": "mean_relative_error", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 525, "col_offset": 20, "nodeName": "atom_number", "type": "Any"}, {"lineNumber": 525, "col_offset": 33, "nodeName": "distance", "type": "Any"}, {"lineNumber": 525, "col_offset": 43, "nodeName": "dist_mem_i", "type": "Any"}, {"lineNumber": 525, "col_offset": 55, "nodeName": "dist_mem_j", "type": "Any"}, {"lineNumber": 525, "col_offset": 67, "nodeName": "atom_mem", "type": "Any"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 530, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 535, "col_offset": 35, "nodeName": "load_qm7_from_mat", "type": "Callable[..., Tuple[List[str], Any, Any]]"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 539, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 539, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 543, "col_offset": 10, "nodeName": "ids", "type": "Any"}, {"lineNumber": 545, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 545, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 545, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 545, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 545, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 551, "col_offset": 21, "nodeName": "ANITransformer", "type": "Type[deepchem.trans.transformers.ANITransformer]"}, {"lineNumber": 553, "col_offset": 14, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 553, "col_offset": 39, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "BPSymmetryFunctionRegression", "type": "Type[deepchem.models.tensorgraph.models.symmetry_function_regression.BPSymmetryFunctionRegression]"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "n_feat", "type": "Any"}, {"lineNumber": 566, "col_offset": 24, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 580, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 581, "col_offset": 31, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 582, "col_offset": 31, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 583, "col_offset": 28, "nodeName": "w", "type": "Any"}, {"lineNumber": 586, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 588, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 590, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 593, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 597, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 598, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 628, "col_offset": 21, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 629, "col_offset": 28, "nodeName": "layer_structures", "type": "List[int]"}, {"lineNumber": 630, "col_offset": 29, "nodeName": "atom_number_cases", "type": "List[int]"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "ANIRegression", "type": "Type[deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression]"}, {"lineNumber": 638, "col_offset": 14, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 638, "col_offset": 35, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 638, "col_offset": 38, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 640, "col_offset": 24, "nodeName": "mean_absolute_error", "type": "Any"}, {"lineNumber": 655, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 656, "col_offset": 31, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 657, "col_offset": 33, "nodeName": "atom_numbers", "type": "Any"}, {"lineNumber": 658, "col_offset": 31, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 659, "col_offset": 28, "nodeName": "w", "type": "Any"}, {"lineNumber": 662, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 664, "col_offset": 19, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 666, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 668, "col_offset": 17, "nodeName": "numeric_column", "type": "Any"}, {"lineNumber": 671, "col_offset": 16, "nodeName": "make_estimator", "type": "Callable[..., Any]"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 677, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 34, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 46, "col_offset": 64, "nodeName": "weights", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.fcnet.MultitaskClassifier"}, {"lineNumber": 50, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 50, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 78, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.fcnet.MultitaskRegressor"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 90, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 137, "col_offset": 64, "nodeName": "weights", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.robust_multitask.RobustMultitaskClassifier"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 141, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 169, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.robust_multitask.RobustMultitaskRegressor"}, {"lineNumber": 188, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 188, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.sequential.Sequential"}, {"lineNumber": 219, "col_offset": 14, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.sequential.Sequential"}, {"lineNumber": 225, "col_offset": 70, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 233, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 247, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 248, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "IRVTransformer", "type": "Type[deepchem.trans.transformers.IRVTransformer]"}, {"lineNumber": 249, "col_offset": 48, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 249, "col_offset": 57, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 257, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.IRV.TensorflowMultitaskIRVClassifier"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 270, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 271, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.IRV.TensorflowMultitaskIRVClassifier"}, {"lineNumber": 275, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 275, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 283, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "default_dict", "type": "Dict[str, int]"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 303, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 303, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 304, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 308, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 308, "col_offset": 64, "nodeName": "weights", "type": "Any"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "py_func", "type": "Any"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "smiles_to_seq_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 314, "col_offset": 52, "nodeName": "y", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 318, "col_offset": 40, "nodeName": "int32", "type": "Any"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNModel"}, {"lineNumber": 322, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 322, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 330, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 341, "col_offset": 18, "nodeName": "default_dict", "type": "Dict[str, int]"}, {"lineNumber": 342, "col_offset": 19, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 350, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 350, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 350, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 351, "col_offset": 17, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "py_func", "type": "Any"}, {"lineNumber": 357, "col_offset": 30, "nodeName": "smiles_to_seq_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 358, "col_offset": 52, "nodeName": "y", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 362, "col_offset": 40, "nodeName": "int32", "type": "Any"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNModel"}, {"lineNumber": 366, "col_offset": 47, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 366, "col_offset": 67, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 370, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 371, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 372, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 384, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 384, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 385, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 390, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 391, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 392, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 398, "col_offset": 25, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "relu", "type": "Any"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 402, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 402, "col_offset": 41, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 402, "col_offset": 54, "nodeName": "weights", "type": "Any"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 413, "col_offset": 22, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 421, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 423, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 435, "col_offset": 18, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 435, "col_offset": 29, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 436, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 441, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "layers", "type": "module"}, {"lineNumber": 447, "col_offset": 38, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 447, "col_offset": 57, "nodeName": "features", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.tensor_graph.TensorGraph"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "layers", "type": "module"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "layers", "type": "module"}, {"lineNumber": 451, "col_offset": 29, "nodeName": "L2Loss", "type": "Type[deepchem.models.tensorgraph.layers.L2Loss]"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.tensor_graph.TensorGraph"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.tensor_graph.TensorGraph"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 466, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 466, "col_offset": 34, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 466, "col_offset": 50, "nodeName": "__file__", "type": "str"}, {"lineNumber": 467, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 473, "col_offset": 22, "nodeName": "num_vals_to_use", "type": "int"}, {"lineNumber": 474, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 476, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 477, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 478, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 480, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 480, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 480, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 480, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 480, "col_offset": 56, "nodeName": "tf", "type": "Any"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 490, "col_offset": 14, "nodeName": "abs", "type": "Any"}, {"lineNumber": 491, "col_offset": 6, "nodeName": "error_val", "type": "Any"}, {"lineNumber": 491, "col_offset": 17, "nodeName": "update_op", "type": "Any"}, {"lineNumber": 491, "col_offset": 29, "nodeName": "mean", "type": "Any"}, {"lineNumber": 491, "col_offset": 45, "nodeName": "error", "type": "Any"}, {"lineNumber": 492, "col_offset": 13, "nodeName": "error_val", "type": "Any"}, {"lineNumber": 492, "col_offset": 24, "nodeName": "update_op", "type": "Any"}, {"lineNumber": 497, "col_offset": 17, "nodeName": "py_func", "type": "Any"}, {"lineNumber": 498, "col_offset": 10, "nodeName": "compute_features_on_batch", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 501, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 502, "col_offset": 6, "nodeName": "feature_dict", "type": "Dict[str, Any]"}, {"lineNumber": 502, "col_offset": 33, "nodeName": "features", "type": "Any"}, {"lineNumber": 503, "col_offset": 6, "nodeName": "feature_dict", "type": "Dict[str, Any]"}, {"lineNumber": 503, "col_offset": 33, "nodeName": "features", "type": "Any"}, {"lineNumber": 504, "col_offset": 6, "nodeName": "feature_dict", "type": "Dict[str, Any]"}, {"lineNumber": 504, "col_offset": 35, "nodeName": "features", "type": "Any"}, {"lineNumber": 505, "col_offset": 6, "nodeName": "feature_dict", "type": "Dict[str, Any]"}, {"lineNumber": 505, "col_offset": 35, "nodeName": "features", "type": "Any"}, {"lineNumber": 506, "col_offset": 6, "nodeName": "feature_dict", "type": "Dict[str, Any]"}, {"lineNumber": 506, "col_offset": 33, "nodeName": "features", "type": "Any"}, {"lineNumber": 507, "col_offset": 6, "nodeName": "feature_dict", "type": "Dict[str, Any]"}, {"lineNumber": 509, "col_offset": 13, "nodeName": "feature_dict", "type": "Dict[str, Any]"}, {"lineNumber": 509, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 511, "col_offset": 18, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 513, "col_offset": 15, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 515, "col_offset": 15, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 517, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.DTNNModel"}, {"lineNumber": 527, "col_offset": 24, "nodeName": "feature_cols", "type": "List[Any]"}, {"lineNumber": 527, "col_offset": 52, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 527, "col_offset": 72, "nodeName": "metrics", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 530, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 531, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 535, "col_offset": 35, "nodeName": "molnet", "type": "module"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 540, "col_offset": 17, "nodeName": "num_samples_to_use", "type": "int"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 541, "col_offset": 17, "nodeName": "num_samples_to_use", "type": "int"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 542, "col_offset": 17, "nodeName": "num_samples_to_use", "type": "int"}, {"lineNumber": 543, "col_offset": 10, "nodeName": "train", "type": "Any"}, {"lineNumber": 543, "col_offset": 21, "nodeName": "num_samples_to_use", "type": "int"}, {"lineNumber": 545, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 551, "col_offset": 21, "nodeName": "trans", "type": "module"}, {"lineNumber": 552, "col_offset": 18, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 553, "col_offset": 14, "nodeName": "ANItransformer", "type": "deepchem.trans.transformers.ANITransformer"}, {"lineNumber": 554, "col_offset": 13, "nodeName": "get_num_feats", "type": "Callable[[], Any]"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 560, "col_offset": 25, "nodeName": "layer_structures", "type": "List[int]"}, {"lineNumber": 561, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 566, "col_offset": 24, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 571, "col_offset": 31, "nodeName": "py_func", "type": "Any"}, {"lineNumber": 572, "col_offset": 10, "nodeName": "compute_features_on_batch", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 573, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 574, "col_offset": 10, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 576, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 577, "col_offset": 10, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 580, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 581, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 582, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 583, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 584, "col_offset": 13, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 584, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 586, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 587, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 588, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 589, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 590, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 591, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 593, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.BPSymmetryFunctionRegression"}, {"lineNumber": 595, "col_offset": 22, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 596, "col_offset": 16, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 597, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 598, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 600, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 619, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 621, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 637, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Union[str, bool, float, int, List[int]]]"}, {"lineNumber": 638, "col_offset": 14, "nodeName": "data", "type": "module"}, {"lineNumber": 640, "col_offset": 24, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 643, "col_offset": 6, "nodeName": "X", "type": "Any"}, {"lineNumber": 643, "col_offset": 9, "nodeName": "y", "type": "Any"}, {"lineNumber": 643, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "get_next", "type": "Any"}, {"lineNumber": 644, "col_offset": 45, "nodeName": "py_func", "type": "Any"}, {"lineNumber": 645, "col_offset": 10, "nodeName": "compute_features_on_batch", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 647, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 648, "col_offset": 10, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 649, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 650, "col_offset": 10, "nodeName": "atom_numbers", "type": "Any"}, {"lineNumber": 651, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 652, "col_offset": 10, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 655, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 656, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 657, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 658, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 659, "col_offset": 6, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 660, "col_offset": 13, "nodeName": "features", "type": "Dict[str, Any]"}, {"lineNumber": 660, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 662, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 663, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 664, "col_offset": 19, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 665, "col_offset": 50, "nodeName": "int32", "type": "Any"}, {"lineNumber": 666, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 667, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 668, "col_offset": 17, "nodeName": "feature_column", "type": "Any"}, {"lineNumber": 669, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 671, "col_offset": 16, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 673, "col_offset": 22, "nodeName": "weight_col", "type": "Any"}, {"lineNumber": 674, "col_offset": 16, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 677, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 678, "col_offset": 11, "nodeName": "results", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 42, "col_offset": 57, "nodeName": "n_features", "type": "int"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "round", "type": "Any"}, {"lineNumber": 46, "col_offset": 50, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 86, "col_offset": 57, "nodeName": "n_features", "type": "int"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 57, "nodeName": "n_features", "type": "int"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "round", "type": "Any"}, {"lineNumber": 137, "col_offset": 50, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 184, "col_offset": 57, "nodeName": "n_features", "type": "int"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 185, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "x", "type": "int"}, {"lineNumber": 209, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 219, "col_offset": 14, "nodeName": "layers", "type": "module"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 223, "col_offset": 57, "nodeName": "n_features", "type": "int"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 225, "col_offset": 54, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "trans", "type": "module"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "transformer", "type": "deepchem.trans.transformers.IRVTransformer"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 267, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 270, "col_offset": 41, "nodeName": "round", "type": "Any"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 308, "col_offset": 41, "nodeName": "round", "type": "Any"}, {"lineNumber": 308, "col_offset": 50, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNModel"}, {"lineNumber": 313, "col_offset": 71, "nodeName": "int32", "type": "Any"}, {"lineNumber": 314, "col_offset": 19, "nodeName": "smiles_seq", "type": "Any"}, {"lineNumber": 314, "col_offset": 42, "nodeName": "weights", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 318, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 319, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 350, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 357, "col_offset": 30, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.text_cnn.TextCNNModel"}, {"lineNumber": 357, "col_offset": 71, "nodeName": "int32", "type": "Any"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "smiles_seq", "type": "Any"}, {"lineNumber": 358, "col_offset": 42, "nodeName": "weights", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 362, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 363, "col_offset": 68, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 385, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "x1", "type": "Any"}, {"lineNumber": 392, "col_offset": 30, "nodeName": "x2", "type": "Any"}, {"lineNumber": 392, "col_offset": 45, "nodeName": "weights", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.scscore.ScScoreModel"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 401, "col_offset": 31, "nodeName": "sign", "type": "Any"}, {"lineNumber": 401, "col_offset": 39, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 406, "col_offset": 59, "nodeName": "n_features", "type": "int"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 407, "col_offset": 59, "nodeName": "n_features", "type": "int"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 411, "col_offset": 25, "nodeName": "x_col1", "type": "Any"}, {"lineNumber": 411, "col_offset": 33, "nodeName": "x_col2", "type": "Any"}, {"lineNumber": 412, "col_offset": 29, "nodeName": "accuracy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 436, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 441, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 441, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 446, "col_offset": 43, "nodeName": "n_features", "type": "int"}, {"lineNumber": 450, "col_offset": 39, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 451, "col_offset": 29, "nodeName": "layers", "type": "module"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 456, "col_offset": 57, "nodeName": "n_features", "type": "int"}, {"lineNumber": 457, "col_offset": 54, "nodeName": "x_col", "type": "Any"}, {"lineNumber": 466, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 466, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 467, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 476, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 490, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 491, "col_offset": 29, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 497, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 498, "col_offset": 10, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.DTNNModel"}, {"lineNumber": 498, "col_offset": 57, "nodeName": "dtypes", "type": "List[Any]"}, {"lineNumber": 500, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 500, "col_offset": 17, "nodeName": "features", "type": "Any"}, {"lineNumber": 511, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 512, "col_offset": 36, "nodeName": "dtypes", "type": "List[Any]"}, {"lineNumber": 513, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 514, "col_offset": 27, "nodeName": "n_distance", "type": "Any"}, {"lineNumber": 514, "col_offset": 53, "nodeName": "dtypes", "type": "List[Any]"}, {"lineNumber": 515, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 516, "col_offset": 36, "nodeName": "dtypes", "type": "List[Any]"}, {"lineNumber": 517, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 518, "col_offset": 38, "nodeName": "dtypes", "type": "List[Any]"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 520, "col_offset": 38, "nodeName": "dtypes", "type": "List[Any]"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 522, "col_offset": 68, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 535, "col_offset": 35, "nodeName": "dc", "type": "module"}, {"lineNumber": 545, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 551, "col_offset": 21, "nodeName": "dc", "type": "module"}, {"lineNumber": 554, "col_offset": 13, "nodeName": "ANItransformer", "type": "deepchem.trans.transformers.ANITransformer"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 566, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 571, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 572, "col_offset": 10, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.BPSymmetryFunctionRegression"}, {"lineNumber": 572, "col_offset": 44, "nodeName": "X", "type": "Any"}, {"lineNumber": 573, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 576, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 586, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 587, "col_offset": 57, "nodeName": "tf", "type": "Any"}, {"lineNumber": 588, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 589, "col_offset": 29, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 589, "col_offset": 41, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 589, "col_offset": 59, "nodeName": "tf", "type": "Any"}, {"lineNumber": 590, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 591, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 594, "col_offset": 25, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 594, "col_offset": 37, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 619, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 621, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 638, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 640, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 644, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 645, "col_offset": 10, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 645, "col_offset": 44, "nodeName": "X", "type": "Any"}, {"lineNumber": 647, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 649, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 651, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 662, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 663, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 664, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 665, "col_offset": 31, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 665, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 666, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 667, "col_offset": 29, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 667, "col_offset": 41, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 667, "col_offset": 59, "nodeName": "tf", "type": "Any"}, {"lineNumber": 668, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 669, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 672, "col_offset": 25, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 672, "col_offset": 37, "nodeName": "atom_numbers", "type": "Any"}, {"lineNumber": 672, "col_offset": 51, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 192, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 208, "col_offset": 39, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 229, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 266, "col_offset": 66, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 270, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 270, "col_offset": 50, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 279, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 308, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 313, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 313, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 325, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 355, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 357, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 357, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 369, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 388, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 401, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 417, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 421, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 439, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 451, "col_offset": 54, "nodeName": "labels", "type": "deepchem.models.tensorgraph.layers.Label"}, {"lineNumber": 451, "col_offset": 62, "nodeName": "dense", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 461, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 466, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 474, "col_offset": 22, "nodeName": "num_vals_to_use", "type": "int"}, {"lineNumber": 490, "col_offset": 25, "nodeName": "divide", "type": "Any"}, {"lineNumber": 490, "col_offset": 40, "nodeName": "labels", "type": "Any"}, {"lineNumber": 490, "col_offset": 48, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 491, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 495, "col_offset": 22, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 498, "col_offset": 48, "nodeName": "X", "type": "Any"}, {"lineNumber": 514, "col_offset": 27, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.graph_models.DTNNModel"}, {"lineNumber": 528, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 530, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 530, "col_offset": 59, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 569, "col_offset": 16, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 572, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 572, "col_offset": 66, "nodeName": "float32", "type": "Any"}, {"lineNumber": 587, "col_offset": 29, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 587, "col_offset": 41, "nodeName": "n_feat", "type": "Any"}, {"lineNumber": 591, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 591, "col_offset": 30, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 597, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 598, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "make_iterator", "type": "Any"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "float32", "type": "Any"}, {"lineNumber": 646, "col_offset": 28, "nodeName": "int32", "type": "Any"}, {"lineNumber": 646, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 650, "col_offset": 58, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 663, "col_offset": 29, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 669, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Union[str, bool, float, int, List[int]]]"}, {"lineNumber": 675, "col_offset": 37, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 677, "col_offset": 50, "nodeName": "input_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 213, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 256, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 312, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 312, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 355, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 356, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 356, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 388, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 389, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 389, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 439, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 440, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 490, "col_offset": 25, "nodeName": "math", "type": "Any"}, {"lineNumber": 495, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 496, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 496, "col_offset": 40, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 569, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 570, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 570, "col_offset": 40, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 572, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 572, "col_offset": 66, "nodeName": "tf", "type": "Any"}, {"lineNumber": 575, "col_offset": 42, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 575, "col_offset": 60, "nodeName": "n_feat", "type": "Any"}, {"lineNumber": 578, "col_offset": 42, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 578, "col_offset": 60, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 643, "col_offset": 59, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 646, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 646, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 648, "col_offset": 54, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 650, "col_offset": 58, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 653, "col_offset": 42, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 653, "col_offset": 60, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 490, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 575, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 575, "col_offset": 26, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 575, "col_offset": 42, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.BPSymmetryFunctionRegression"}, {"lineNumber": 575, "col_offset": 60, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.BPSymmetryFunctionRegression"}, {"lineNumber": 578, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 578, "col_offset": 26, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 578, "col_offset": 42, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.BPSymmetryFunctionRegression"}, {"lineNumber": 578, "col_offset": 60, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.BPSymmetryFunctionRegression"}, {"lineNumber": 648, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 648, "col_offset": 38, "nodeName": "atom_feats", "type": "Any"}, {"lineNumber": 648, "col_offset": 54, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 650, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 650, "col_offset": 40, "nodeName": "atom_numbers", "type": "Any"}, {"lineNumber": 653, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 653, "col_offset": 26, "nodeName": "atom_flags", "type": "Any"}, {"lineNumber": 653, "col_offset": 42, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 653, "col_offset": 60, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 575, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 578, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 648, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 650, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 653, "col_offset": 17, "nodeName": "tf", "type": "Any"}]