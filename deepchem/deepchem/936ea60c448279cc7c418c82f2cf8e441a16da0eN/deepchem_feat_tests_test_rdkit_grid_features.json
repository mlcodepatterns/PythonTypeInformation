[{"lineNumber": 15, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "seed", "type": "Any"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "random", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "package_dir", "type": "str"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "supported_extensions", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "unsupported_extensions", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "extension", "type": "str"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "supported_extensions", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "extension", "type": "str"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "unsupported_extensions", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "add_hydrogens", "type": "bool"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "vectors", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "norms", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "vectors_rot", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "norms_rot", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "coords", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "coords_rot", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "n1", "type": "int"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "n2", "type": "int"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "coords1", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "coords2", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "distance", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "power", "type": "int"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "power", "type": "int"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "mol", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "num_atoms", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "degree", "type": "int"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "package_dir", "type": "str"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "package_dir", "type": "str"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "fname", "type": "str"}, {"lineNumber": 40, "col_offset": 6, "nodeName": "fname", "type": "str"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "calc_charges", "type": "bool"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 56, "col_offset": 6, "nodeName": "u", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 64, "col_offset": 6, "nodeName": "m", "type": "Any"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "norm", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "norm", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "rotate_molecules", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "coords", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "n1", "type": "int"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "n2", "type": "int"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "compute_pairwise_distances", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "coords1", "type": "Any"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "coords2", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "vector", "type": "Any"}, {"lineNumber": 94, "col_offset": 6, "nodeName": "norm_vector", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "v1", "type": "Any"}, {"lineNumber": 100, "col_offset": 6, "nodeName": "v2", "type": "Any"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "angle", "type": "Any"}, {"lineNumber": 107, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 117, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 127, "col_offset": 10, "nodeName": "MolFromMolFile", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "GetNumAtoms", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "ecfp_all", "type": "Dict[int, str]"}, {"lineNumber": 137, "col_offset": 6, "nodeName": "num_ind", "type": "Any"}, {"lineNumber": 138, "col_offset": 6, "nodeName": "indices", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 6, "nodeName": "ecfp_selected", "type": "Dict[int, str]"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "realpath", "type": "Callable"}, {"lineNumber": 22, "col_offset": 51, "nodeName": "__file__", "type": "str"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 23, "col_offset": 50, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "extension", "type": "str"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 55, "nodeName": "extension", "type": "str"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "extension", "type": "str"}, {"lineNumber": 41, "col_offset": 6, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "get_ligand_filetype", "type": "Callable[[Any], str]"}, {"lineNumber": 41, "col_offset": 61, "nodeName": "fname", "type": "str"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "num_atoms", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "generate_random__unit_vector", "type": "Callable[[], numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 59, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "generate_random_rotation_matrix", "type": "Callable[[], Any]"}, {"lineNumber": 65, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "rotate_molecules", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "vectors", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "norms", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "norms_rot", "type": "Any"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "n", "type": "int"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "n", "type": "int"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "rgf", "type": "module"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "coords", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "coords_rot", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "rgf", "type": "module"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "all", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "all", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "rand", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "unit_vector", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "vector", "type": "Any"}, {"lineNumber": 95, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "angle_between", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "v1", "type": "Any"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "v2", "type": "Any"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "angle", "type": "Any"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "pi", "type": "Any"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "angle", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "string", "type": "str"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "string_hash", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "string1", "type": "str"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "string2", "type": "str"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "pair_hash", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "mol", "type": "Any"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "compute_all_ecfp", "type": "Callable[..., Dict[int, str]]"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "mol", "type": "Any"}, {"lineNumber": 133, "col_offset": 6, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "ecfp_all", "type": "Dict[int, str]"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 134, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "num_atoms", "type": "Any"}, {"lineNumber": 135, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "choice", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "compute_all_ecfp", "type": "Callable[..., Dict[int, str]]"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "mol", "type": "Any"}, {"lineNumber": 141, "col_offset": 6, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "ecfp_selected", "type": "Dict[int, str]"}, {"lineNumber": 141, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 142, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "num_ind", "type": "Any"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "get_ligand_filetype", "type": "Callable[[Any], str]"}, {"lineNumber": 37, "col_offset": 47, "nodeName": "fname", "type": "str"}, {"lineNumber": 41, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "rgf", "type": "module"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "load_molecule", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "ligand_file", "type": "str"}, {"lineNumber": 47, "col_offset": 63, "nodeName": "add_hydrogens", "type": "bool"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "calc_charges", "type": "bool"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "GetNumAtoms", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "mol_xyz", "type": "Any"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "mol_rdk", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "Mol", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "rgf", "type": "module"}, {"lineNumber": 58, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "u", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "norm", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "u", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "rgf", "type": "module"}, {"lineNumber": 65, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "m", "type": "Any"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "vectors", "type": "Any"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "vectors", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "rgf", "type": "module"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "vectors_rot", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 51, "nodeName": "vectors_rot", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "rgf", "type": "module"}, {"lineNumber": 95, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "norm", "type": "Any"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "norm_vector", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "rgf", "type": "module"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "hash_ecfp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "string", "type": "str"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "power", "type": "int"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "string_hash", "type": "Any"}, {"lineNumber": 111, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "string_hash", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "string_hash", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "hash_ecfp_pair", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 59, "nodeName": "power", "type": "int"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "pair_hash", "type": "Any"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "pair_hash", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "pair_hash", "type": "Any"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "rgf", "type": "module"}, {"lineNumber": 132, "col_offset": 50, "nodeName": "degree", "type": "int"}, {"lineNumber": 133, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 134, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "ecfp_all", "type": "Dict[int, str]"}, {"lineNumber": 135, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "num_atoms", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "choice", "type": "Any"}, {"lineNumber": 138, "col_offset": 56, "nodeName": "num_ind", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "rgf", "type": "module"}, {"lineNumber": 140, "col_offset": 56, "nodeName": "indices", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 72, "nodeName": "degree", "type": "int"}, {"lineNumber": 141, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 142, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "ecfp_selected", "type": "Dict[int, str]"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 143, "col_offset": 53, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 143, "col_offset": 60, "nodeName": "indices", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "rgf", "type": "module"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "rgf", "type": "module"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "mol_rdk", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "rdchem", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "mol_xyz", "type": "Any"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "num_atoms", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "distance", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "distance", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "rgf", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "power", "type": "int"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "rgf", "type": "module"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "string1", "type": "str"}, {"lineNumber": 121, "col_offset": 49, "nodeName": "string2", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 123, "col_offset": 38, "nodeName": "power", "type": "int"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestHelperFunctions"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 135, "col_offset": 51, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 135, "col_offset": 57, "nodeName": "num_atoms", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "num_atoms", "type": "Any"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "urandom", "type": "Callable[[int], bytes]"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "urandom", "type": "Callable[[int], bytes]"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "urandom", "type": "Callable[[int], bytes]"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "ecfp_all", "type": "Dict[int, str]"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "ecfp_selected", "type": "Dict[int, str]"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "os", "type": "module"}]