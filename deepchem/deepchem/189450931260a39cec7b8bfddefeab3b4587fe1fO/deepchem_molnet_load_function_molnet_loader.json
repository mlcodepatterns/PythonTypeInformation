[{"lineNumber": 10, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "featurizers", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "splitters", "type": "Dict[str, Any]"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 10, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 10, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "Dataset", "type": "Type[deepchem.data.datasets.Dataset]"}, {"lineNumber": 10, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "CircularFingerprint", "type": "Any"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "ConvMolFeaturizer", "type": "Type[deepchem.feat.graph_features.ConvMolFeaturizer]"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "WeaveFeaturizer", "type": "Type[deepchem.feat.graph_features.WeaveFeaturizer]"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "RawFeaturizer", "type": "Any"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "SmilesToImage", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "IndexSplitter", "type": "Any"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "RandomSplitter", "type": "Any"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "ScaffoldSplitter", "type": "Any"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "ButinaSplitter", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "TaskSplitter", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "RandomStratifiedSplitter", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "data_dir", "type": "Optional[str]"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "data_dir", "type": "Optional[str]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "save_dir", "type": "Optional[str]"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "save_dir", "type": "Optional[str]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 7, "nodeName": "reload", "type": "bool"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "dataset", "type": "deepchem.data.datasets.Dataset"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 7, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 137, "col_offset": 50, "nodeName": "List", "type": "Any"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "feat", "type": "module"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "feat", "type": "module"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "feat", "type": "module"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "feat", "type": "module"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "feat", "type": "module"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "splits", "type": "module"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "splits", "type": "module"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "splits", "type": "module"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "splits", "type": "module"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "splits", "type": "module"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "splits", "type": "module"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 6, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 58, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "featurizer", "type": "Union[deepchem.feat.base_classes.Featurizer, str]"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 6, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 6, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "data_dir", "type": "Optional[str]"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "data_dir", "type": "str"}, {"lineNumber": 64, "col_offset": 7, "nodeName": "save_dir", "type": "Optional[str]"}, {"lineNumber": 65, "col_offset": 6, "nodeName": "save_dir", "type": "str"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "_MolnetLoader"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "self", "type": "_MolnetLoader"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "self", "type": "_MolnetLoader"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "self", "type": "_MolnetLoader"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "self", "type": "_MolnetLoader"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "create_dataset", "type": "Callable[[], deepchem.data.datasets.Dataset]"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "transformer_dataset", "type": "deepchem.data.datasets.Dataset"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "dataset", "type": "deepchem.data.datasets.Dataset"}, {"lineNumber": 112, "col_offset": 6, "nodeName": "transformer_dataset", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "train", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "get_transformers", "type": "Callable[[deepchem.data.datasets.Dataset], List[Any]]"}, {"lineNumber": 113, "col_offset": 41, "nodeName": "transformer_dataset", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 7, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 116, "col_offset": 10, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 6, "nodeName": "train", "type": "Any"}, {"lineNumber": 125, "col_offset": 6, "nodeName": "valid", "type": "Any"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "test", "type": "Any"}, {"lineNumber": 127, "col_offset": 7, "nodeName": "reload", "type": "bool"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "Dataset", "type": "Type[deepchem.data.datasets.Dataset]"}, {"lineNumber": 139, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "Transformer", "type": "Any"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "dc", "type": "module"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "dc", "type": "module"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "dc", "type": "module"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "Union", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "Union", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "featurizers", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "splitters", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "get_data_dir", "type": "Callable[[], str]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "get_data_dir", "type": "Callable[[], str]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "List", "type": "Any"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "self", "type": "_MolnetLoader"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "self", "type": "_MolnetLoader"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "train", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "valid", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "train_valid_test_split", "type": "Any"}, {"lineNumber": 111, "col_offset": 64, "nodeName": "dataset", "type": "deepchem.data.datasets.Dataset"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "self", "type": "_MolnetLoader"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 115, "col_offset": 7, "nodeName": "self", "type": "_MolnetLoader"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "reload", "type": "bool"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "transform", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "train", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "transform", "type": "Any"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "valid", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "transform", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "train", "type": "Any"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 127, "col_offset": 53, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "test", "type": "Any"}, {"lineNumber": 128, "col_offset": 49, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 129, "col_offset": 6, "nodeName": "save_dataset_to_disk", "type": "Callable[[str, Any, Any, Any, List[Any]], None]"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 129, "col_offset": 60, "nodeName": "train", "type": "Any"}, {"lineNumber": 129, "col_offset": 67, "nodeName": "valid", "type": "Any"}, {"lineNumber": 129, "col_offset": 74, "nodeName": "test", "type": "Any"}, {"lineNumber": 130, "col_offset": 47, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "train", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "valid", "type": "Any"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "test", "type": "Any"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "trans", "type": "module"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 37, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "self", "type": "_MolnetLoader"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "loaded", "type": "bool"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "all_dataset", "type": "Optional[Tuple[Any, Any, Any]]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "load_dataset_from_disk", "type": "Callable[[str], Tuple[bool, Optional[Tuple[Any, Any, Any]], List[Any]]]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "all_dataset", "type": "Optional[Tuple[Any, Any, Any]]"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "transform", "type": "Any"}, {"lineNumber": 117, "col_offset": 40, "nodeName": "dataset", "type": "deepchem.data.datasets.Dataset"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "move", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "save_transformers", "type": "Callable[[str, List[Any]], None]"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 120, "col_offset": 59, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 129, "col_offset": 6, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "List", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "dc", "type": "module"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "Featurizer", "type": "Type[deepchem.feat.base_classes.Featurizer]"}, {"lineNumber": 35, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "Splitter", "type": "Any"}, {"lineNumber": 36, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "lower", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "utils", "type": "module"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "utils", "type": "module"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "load_transformers", "type": "Callable[[str], List[Any]]"}, {"lineNumber": 92, "col_offset": 63, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 93, "col_offset": 53, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "all_dataset", "type": "Optional[Tuple[Any, Any, Any]]"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "self", "type": "_MolnetLoader"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 129, "col_offset": 6, "nodeName": "utils", "type": "module"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "Transformer", "type": "Any"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "feat", "type": "module"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "splits", "type": "module"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "featurizer", "type": "Union[deepchem.feat.base_classes.Featurizer, str]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "dc", "type": "module"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "utils", "type": "module"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 129, "col_offset": 6, "nodeName": "dc", "type": "module"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "Dataset", "type": "Type[deepchem.data.datasets.Dataset]"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "trans", "type": "module"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "dc", "type": "module"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "dc", "type": "module"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "DiskDataset", "type": "Type[deepchem.data.datasets.DiskDataset]"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "dc", "type": "module"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "self", "type": "_MolnetLoader"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "dc", "type": "module"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "dc", "type": "module"}]