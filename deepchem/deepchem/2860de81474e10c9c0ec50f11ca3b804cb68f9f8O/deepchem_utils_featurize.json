[{"lineNumber": 20, "col_offset": 0, "nodeName": "_process_field", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 58, "col_offset": 2, "nodeName": "featurize", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 2, "nodeName": "_get_fields", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 2, "nodeName": "_get_input_type", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 2, "nodeName": "_get_raw_samples", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 2, "nodeName": "_process_raw_sample", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 2, "nodeName": "_standardize_df", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 2, "nodeName": "_featurize_df", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 218, "col_offset": 2, "nodeName": "get_sorted_task_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 265, "col_offset": 2, "nodeName": "_check_validity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 269, "col_offset": 2, "nodeName": "_get_compounds_filename", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 2, "nodeName": "_get_dataset_paths_filename", "type": "Callable[[Any], Any]"}, {"lineNumber": 281, "col_offset": 2, "nodeName": "_get_compounds", "type": "Callable[[Any], Any]"}, {"lineNumber": 296, "col_offset": 2, "nodeName": "_set_compound_df", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 322, "col_offset": 2, "nodeName": "_train_test_random_split", "type": "Callable[..., Any]"}, {"lineNumber": 331, "col_offset": 2, "nodeName": "_train_test_scaffold_split", "type": "Callable[..., Any]"}, {"lineNumber": 354, "col_offset": 2, "nodeName": "_train_test_specified_split", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 2, "nodeName": "colnames", "type": "List[unicode]"}, {"lineNumber": 216, "col_offset": 2, "nodeName": "feature_types", "type": "List[unicode]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "val", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "split_field", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "split_field", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "user_specified_features", "type": "Any"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "user_specified_features", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "log_every_n", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "log_every_n", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "fields", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "rows", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "feature_types", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "data", "type": "Dict[Any, Union[Any, List[Any], float]]"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "data", "type": "Dict[Any, Union[Any, List[Any], float]]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "task", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "dataset_files", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "dataset_files", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "feature_dir", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "feature_dir", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "compound_rows", "type": "List[List[Any]]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "dataset_file", "type": "Any"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "dataset_files", "type": "Any"}, {"lineNumber": 294, "col_offset": 11, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "compounsd_df", "type": "Any"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "df", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "train_dataset", "type": "FeaturizedSamples"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "test_dataset", "type": "FeaturizedSamples"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "train_cutoff", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "shuffled", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "scaffolds", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "train_cutoff", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "scaffold_set", "type": "List[Any]"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "scaffold_sets", "type": "List[List[Any]]"}, {"lineNumber": 22, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "val", "type": "Any"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 22, "col_offset": 42, "nodeName": "val", "type": "Any"}, {"lineNumber": 22, "col_offset": 47, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 24, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 49, "col_offset": 7, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 52, "col_offset": 6, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "_get_fields", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "_get_input_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "ind", "type": "int"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "row", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 68, "col_offset": 9, "nodeName": "_standardize_df", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "save_to_disk", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "df", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "_get_input_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "filename", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 93, "col_offset": 7, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 95, "col_offset": 7, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "_get_input_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 38, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "data", "type": "Dict[Any, Union[Any, List[Any], float]]"}, {"lineNumber": 156, "col_offset": 7, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 157, "col_offset": 10, "nodeName": "task", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "ori_df", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "ori_df", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 170, "col_offset": 7, "nodeName": "split_field", "type": "Any"}, {"lineNumber": 177, "col_offset": 7, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 245, "col_offset": 7, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 246, "col_offset": 6, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "_check_validity", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 255, "col_offset": 7, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 261, "col_offset": 6, "nodeName": "dataset_files", "type": "Any"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "feature_dir", "type": "Any"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "feature_dir", "type": "Any"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 287, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 288, "col_offset": 6, "nodeName": "compound_ids", "type": "List[Any]"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "smiles", "type": "List[Any]"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "splits", "type": "List[Any]"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "compound_rows", "type": "List[List[Any]]"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 292, "col_offset": 32, "nodeName": "compound_rows", "type": "List[List[Any]]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "_check_validity", "type": "Callable[[Any], Any]"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "df", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "save_to_disk", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 299, "col_offset": 17, "nodeName": "df", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 307, "col_offset": 7, "nodeName": "splittype", "type": "Any"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "FeaturizedSamples", "type": "Type[FeaturizedSamples]"}, {"lineNumber": 315, "col_offset": 38, "nodeName": "train_dir", "type": "Any"}, {"lineNumber": 315, "col_offset": 49, "nodeName": "dataset_files", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "_set_compound_df", "type": "Callable[[Any], Any]"}, {"lineNumber": 317, "col_offset": 19, "nodeName": "FeaturizedSamples", "type": "Type[FeaturizedSamples]"}, {"lineNumber": 317, "col_offset": 37, "nodeName": "test_dir", "type": "Any"}, {"lineNumber": 317, "col_offset": 47, "nodeName": "dataset_files", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "_set_compound_df", "type": "Callable[[Any], Any]"}, {"lineNumber": 320, "col_offset": 11, "nodeName": "train_dataset", "type": "FeaturizedSamples"}, {"lineNumber": 320, "col_offset": 26, "nodeName": "test_dataset", "type": "FeaturizedSamples"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "seed", "type": "Any"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 328, "col_offset": 15, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "ind", "type": "Any"}, {"lineNumber": 336, "col_offset": 13, "nodeName": "row", "type": "Any"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "iterrows", "type": "Any"}, {"lineNumber": 337, "col_offset": 6, "nodeName": "scaffold", "type": "Any"}, {"lineNumber": 345, "col_offset": 19, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "test_inds", "type": "List[Any]"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 352, "col_offset": 23, "nodeName": "test_inds", "type": "List[Any]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "test_inds", "type": "List[Any]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "ind", "type": "Any"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "row", "type": "Any"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "iterrows", "type": "Any"}, {"lineNumber": 366, "col_offset": 11, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 366, "col_offset": 23, "nodeName": "test_inds", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 52, "col_offset": 6, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "_get_raw_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 67, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 68, "col_offset": 9, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "rows", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 70, "col_offset": 6, "nodeName": "_featurize_df", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "df", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "inp_file_obj", "type": "file"}, {"lineNumber": 80, "col_offset": 9, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 81, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 94, "col_offset": 6, "nodeName": "filename", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 94, "col_offset": 50, "nodeName": "filename", "type": "Any"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "inp_file_obj", "type": "file"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 117, "col_offset": 10, "nodeName": "row", "type": "Any"}, {"lineNumber": 138, "col_offset": 10, "nodeName": "ind", "type": "int"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "field", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "fields", "type": "Any"}, {"lineNumber": 141, "col_offset": 9, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "row", "type": "Any"}, {"lineNumber": 144, "col_offset": 10, "nodeName": "field", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "fields", "type": "Any"}, {"lineNumber": 156, "col_offset": 7, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "raw", "type": "Any"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 169, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "ori_df", "type": "Any"}, {"lineNumber": 170, "col_offset": 7, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 171, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "ori_df", "type": "Any"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "user_specified_features", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "features_data", "type": "List[Dict[unicode, numpy.ndarray]]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 190, "col_offset": 9, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 199, "col_offset": 6, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 6, "nodeName": "sample_smiles", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "df", "type": "Any"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "feature_types", "type": "List[unicode]"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "task_names", "type": "Set[Any]"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "feature_dir", "type": "Any"}, {"lineNumber": 242, "col_offset": 6, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "feature_dir", "type": "Any"}, {"lineNumber": 245, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "_get_compounds_filename", "type": "Callable[[], Any]"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "load_from_disk", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "_get_compounds", "type": "Callable[[], Any]"}, {"lineNumber": 251, "col_offset": 6, "nodeName": "save_to_disk", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 251, "col_offset": 19, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 255, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "_get_dataset_paths_filename", "type": "Callable[[], Any]"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "dataset_files", "type": "Any"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "overwrite", "type": "Any"}, {"lineNumber": 261, "col_offset": 6, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "load_from_disk", "type": "Callable[[Any], Any]"}, {"lineNumber": 263, "col_offset": 6, "nodeName": "save_to_disk", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "dataset_files", "type": "Any"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "load_from_disk", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "dataset_file", "type": "Any"}, {"lineNumber": 288, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "pd", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "_get_compounds_filename", "type": "Callable[[], Any]"}, {"lineNumber": 308, "col_offset": 6, "nodeName": "train_inds", "type": "Any"}, {"lineNumber": 308, "col_offset": 18, "nodeName": "test_inds", "type": "Any"}, {"lineNumber": 308, "col_offset": 30, "nodeName": "_train_test_random_split", "type": "Callable[..., Any]"}, {"lineNumber": 309, "col_offset": 9, "nodeName": "splittype", "type": "Any"}, {"lineNumber": 315, "col_offset": 49, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "train_dataset", "type": "FeaturizedSamples"}, {"lineNumber": 316, "col_offset": 35, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 317, "col_offset": 47, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "test_dataset", "type": "FeaturizedSamples"}, {"lineNumber": 318, "col_offset": 34, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 327, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 327, "col_offset": 36, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 328, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 328, "col_offset": 37, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "shuffled", "type": "Any"}, {"lineNumber": 329, "col_offset": 36, "nodeName": "shuffled", "type": "Any"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 337, "col_offset": 17, "nodeName": "generate_scaffold", "type": "Any"}, {"lineNumber": 338, "col_offset": 9, "nodeName": "scaffold", "type": "Any"}, {"lineNumber": 338, "col_offset": 25, "nodeName": "scaffolds", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 345, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 345, "col_offset": 36, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 348, "col_offset": 47, "nodeName": "train_cutoff", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "test_inds", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 21, "nodeName": "scaffold_set", "type": "List[Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 351, "col_offset": 22, "nodeName": "scaffold_set", "type": "List[Any]"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "process_field", "type": "Any"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "elt", "type": "Any"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "elt", "type": "Any"}, {"lineNumber": 25, "col_offset": 42, "nodeName": "val", "type": "Any"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "ind", "type": "int"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "log_every_n", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 6, "nodeName": "rows", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "_process_raw_sample", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 43, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 67, "col_offset": 55, "nodeName": "row", "type": "Any"}, {"lineNumber": 67, "col_offset": 60, "nodeName": "fields", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "pd", "type": "Any"}, {"lineNumber": 70, "col_offset": 6, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "next", "type": "Callable[[], List[str]]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "load_from_disk", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "keys", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 84, "col_offset": 6, "nodeName": "sample_mol", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "path", "type": "module"}, {"lineNumber": 99, "col_offset": 9, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "ind", "type": "int"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "load_from_disk", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "iterrows", "type": "Any"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "input_type", "type": "unicode"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Union[Any, List[Any], float]]"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "_process_field", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 146, "col_offset": 9, "nodeName": "input_type", "type": "Any"}, {"lineNumber": 147, "col_offset": 6, "nodeName": "mol", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 148, "col_offset": 10, "nodeName": "field", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "fields", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "_process_field", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Union[Any, List[Any], float]]"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "task", "type": "Any"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "iterrows", "type": "Any"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "feature", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "user_specified_features", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "features_data", "type": "List[Dict[unicode, numpy.ndarray]]"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 201, "col_offset": 10, "nodeName": "ind", "type": "int"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "smiles", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "sample_smiles", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "mol", "type": "Any"}, {"lineNumber": 206, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "colnames", "type": "List[unicode]"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "FeaturizedSamples", "type": "Type[FeaturizedSamples]"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 242, "col_offset": 6, "nodeName": "os", "type": "module"}, {"lineNumber": 245, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 246, "col_offset": 36, "nodeName": "_get_compounds_filename", "type": "Callable[[], Any]"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "_get_compounds_filename", "type": "Callable[[], Any]"}, {"lineNumber": 255, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 261, "col_offset": 42, "nodeName": "_get_dataset_paths_filename", "type": "Callable[[], Any]"}, {"lineNumber": 263, "col_offset": 34, "nodeName": "_get_dataset_paths_filename", "type": "Callable[[], Any]"}, {"lineNumber": 266, "col_offset": 52, "nodeName": "keys", "type": "Any"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 288, "col_offset": 26, "nodeName": "df", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 291, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "elt", "type": "Tuple[Any, ...]"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "elt", "type": "Tuple[Any, ...]"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 308, "col_offset": 30, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 308, "col_offset": 65, "nodeName": "seed", "type": "Any"}, {"lineNumber": 308, "col_offset": 82, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "train_inds", "type": "Any"}, {"lineNumber": 310, "col_offset": 18, "nodeName": "test_inds", "type": "Any"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "train_test_scaffold_split", "type": "Any"}, {"lineNumber": 311, "col_offset": 9, "nodeName": "splittype", "type": "Any"}, {"lineNumber": 316, "col_offset": 35, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 316, "col_offset": 58, "nodeName": "train_inds", "type": "Any"}, {"lineNumber": 318, "col_offset": 34, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 318, "col_offset": 57, "nodeName": "test_inds", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 327, "col_offset": 36, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 328, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 328, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 328, "col_offset": 47, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 329, "col_offset": 21, "nodeName": "train_cutoff", "type": "Any"}, {"lineNumber": 329, "col_offset": 45, "nodeName": "train_cutoff", "type": "Any"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "row", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "scaffolds", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 339, "col_offset": 31, "nodeName": "ind", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 341, "col_offset": 35, "nodeName": "ind", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 345, "col_offset": 36, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 360, "col_offset": 9, "nodeName": "lower", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 361, "col_offset": 26, "nodeName": "ind", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "ind", "type": "int"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "next", "type": "Generator[Any, Any, None]"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "os", "type": "module"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "reader", "type": "Callable[..., _csv._reader]"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "inp_file_obj", "type": "file"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "ind", "type": "int"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "row", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "field", "type": "Any"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "row", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Union[Any, List[Any], float]]"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "_process_field", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "data", "type": "Dict[Any, Union[Any, List[Any], float]]"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "MolToSmiles", "type": "Any"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "mol", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "data", "type": "Dict[Any, Union[Any, List[Any], float]]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "raw", "type": "Any"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "field", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "raw", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "task", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "split_field", "type": "Any"}, {"lineNumber": 180, "col_offset": 10, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "df", "type": "Any"}, {"lineNumber": 184, "col_offset": 10, "nodeName": "row", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "feature_list", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 10, "nodeName": "append", "type": "Callable"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "pd", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 194, "col_offset": 21, "nodeName": "CircularFingerprint", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "MolFromSmiles", "type": "Any"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "smiles", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 206, "col_offset": 9, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "FeaturizedSamples", "type": "Type[FeaturizedSamples]"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 246, "col_offset": 36, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 258, "col_offset": 10, "nodeName": "save_to_disk", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "dataset_files", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 261, "col_offset": 42, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 263, "col_offset": 34, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "colnames", "type": "List[unicode]"}, {"lineNumber": 266, "col_offset": 52, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 291, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 291, "col_offset": 49, "nodeName": "compound_ids", "type": "List[Any]"}, {"lineNumber": 291, "col_offset": 63, "nodeName": "smiles", "type": "List[Any]"}, {"lineNumber": 291, "col_offset": 71, "nodeName": "splits", "type": "List[Any]"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 310, "col_offset": 72, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "train_inds", "type": "Any"}, {"lineNumber": 312, "col_offset": 18, "nodeName": "test_inds", "type": "Any"}, {"lineNumber": 312, "col_offset": 30, "nodeName": "train_test_specified_split", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 316, "col_offset": 35, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 318, "col_offset": 34, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 328, "col_offset": 47, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 339, "col_offset": 18, "nodeName": "scaffold", "type": "Any"}, {"lineNumber": 344, "col_offset": 28, "nodeName": "items", "type": "Callable"}, {"lineNumber": 348, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 348, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 348, "col_offset": 31, "nodeName": "scaffold_set", "type": "List[Any]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 362, "col_offset": 11, "nodeName": "lower", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 363, "col_offset": 25, "nodeName": "ind", "type": "Any"}, {"lineNumber": 365, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 32, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 32, "col_offset": 60, "nodeName": "val", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "reader", "type": "Callable[..., _csv._reader]"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "inp_file_obj", "type": "file"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "GetPropNames", "type": "Any"}, {"lineNumber": 87, "col_offset": 57, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 102, "col_offset": 53, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "csv", "type": "module"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "inp_file_obj", "type": "gzip.GzipFile"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "supp", "type": "Any"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "mol", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "supp", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "inp_file_obj", "type": "file"}, {"lineNumber": 128, "col_offset": 10, "nodeName": "supp", "type": "Any"}, {"lineNumber": 129, "col_offset": 10, "nodeName": "mols", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "mol", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "supp", "type": "Any"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "ind", "type": "int"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "field", "type": "Any"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "row", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "task", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 184, "col_offset": 30, "nodeName": "row", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 187, "col_offset": 10, "nodeName": "features_data", "type": "List[Dict[unicode, numpy.ndarray]]"}, {"lineNumber": 193, "col_offset": 10, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "SimpleDescriptors", "type": "Any"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "ind", "type": "int"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "log_every_n", "type": "Any"}, {"lineNumber": 203, "col_offset": 10, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "featurize", "type": "Any"}, {"lineNumber": 258, "col_offset": 38, "nodeName": "_get_dataset_paths_filename", "type": "Callable[[], Any]"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "FeaturizedSamples", "type": "Type[FeaturizedSamples]"}, {"lineNumber": 312, "col_offset": 30, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "scaffolds", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 344, "col_offset": 28, "nodeName": "scaffolds", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 360, "col_offset": 9, "nodeName": "row", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "test_inds", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "csv", "type": "module"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "_get_raw_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "sample_mol", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "open", "type": "Callable[..., gzip.GzipFile]"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "ForwardSDMolSupplier", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "inp_file_obj", "type": "gzip.GzipFile"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "ForwardSDMolSupplier", "type": "Any"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "inp_file_obj", "type": "file"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "mol", "type": "Any"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "field", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "HasProp", "type": "Any"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "field", "type": "Any"}, {"lineNumber": 150, "col_offset": 10, "nodeName": "data", "type": "Dict[Any, Union[Any, List[Any], float]]"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "data", "type": "Dict[Any, Union[Any, List[Any], float]]"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "_process_field", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "feature_list", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "row", "type": "Any"}, {"lineNumber": 187, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 48, "nodeName": "feature_list", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 10, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 203, "col_offset": 42, "nodeName": "ind", "type": "int"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 205, "col_offset": 46, "nodeName": "mol", "type": "Any"}, {"lineNumber": 258, "col_offset": 38, "nodeName": "self", "type": "FeaturizedSamples"}, {"lineNumber": 341, "col_offset": 18, "nodeName": "scaffold", "type": "Any"}, {"lineNumber": 362, "col_offset": 11, "nodeName": "row", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "self", "type": "DataFeaturizer"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "gzip", "type": "module"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "mol", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "mol", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "supp", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "mol", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "mol", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "field", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "field", "type": "Any"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "GetProp", "type": "Any"}, {"lineNumber": 152, "col_offset": 51, "nodeName": "field", "type": "Any"}, {"lineNumber": 186, "col_offset": 36, "nodeName": "feature", "type": "Any"}, {"lineNumber": 187, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 344, "col_offset": 62, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "mol", "type": "Any"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "mol", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "mol", "type": "Any"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "mol", "type": "Any"}, {"lineNumber": 344, "col_offset": 66, "nodeName": "x", "type": "Any"}]