[{"lineNumber": 17, "col_offset": 32, "nodeName": "TensorGraph", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TensorGraph]"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "TensorGraph", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TensorGraph]"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "relu", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "n_bypass_layers", "type": "int"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "bypass_activation_fns", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "mol_features", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "prev_layer", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "mol_features", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "top_multitask_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Feature, deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "prev_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Feature, deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "task_outputs", "type": "List[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "output", "type": "deepchem.models.tensorgraph.layers.Stack"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "labels", "type": "deepchem.models.tensorgraph.layers.Label"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "weights", "type": "deepchem.models.tensorgraph.layers.Weights"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "loss", "type": "deepchem.models.tensorgraph.layers.SoftMaxCrossEntropy"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "weighted_loss", "type": "deepchem.models.tensorgraph.layers.WeightedError"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "epoch", "type": "int"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "relu", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 272, "col_offset": 22, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "n_bypass_layers", "type": "int"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "bypass_activation_fns", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "mol_features", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "prev_layer", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 295, "col_offset": 17, "nodeName": "mol_features", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "top_multitask_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "prev_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "task_outputs", "type": "List[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "output", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "labels", "type": "deepchem.models.tensorgraph.layers.Label"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "weights", "type": "deepchem.models.tensorgraph.layers.Weights"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "weighted_loss", "type": "deepchem.models.tensorgraph.layers.ReduceSum"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "epoch", "type": "int"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "layer_sizes", "type": "Any"}, {"lineNumber": 90, "col_offset": 6, "nodeName": "weight_init_stddevs", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 6, "nodeName": "bias_init_consts", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 6, "nodeName": "dropouts", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 6, "nodeName": "activation_fns", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "bypass_layer_sizes", "type": "Any"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "bypass_bias_init_consts", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "bypass_dropouts", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 50, "nodeName": "n_bypass_layers", "type": "int"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "Feature", "type": "Type[deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 113, "col_offset": 67, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "layer_sizes", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "weight_init_stddevs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 114, "col_offset": 42, "nodeName": "bias_init_consts", "type": "Union[Any, List[Any]]"}, {"lineNumber": 114, "col_offset": 60, "nodeName": "dropouts", "type": "Union[Any, List[Any]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "activation_fns", "type": "Union[Any, List[Any]]"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "prev_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "prev_layer", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "mol_features", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 147, "col_offset": 6, "nodeName": "top_bypass_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Feature, deepchem.models.tensorgraph.layers.Dropout]"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "prev_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Feature, deepchem.models.tensorgraph.layers.Dropout]"}, {"lineNumber": 155, "col_offset": 6, "nodeName": "task_out", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "Stack", "type": "Type[deepchem.models.tensorgraph.layers.Stack]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "add_output", "type": "Callable[[Any], None]"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "output", "type": "deepchem.models.tensorgraph.layers.Stack"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "Label", "type": "Type[deepchem.models.tensorgraph.layers.Label]"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "Weights", "type": "Type[deepchem.models.tensorgraph.layers.Weights]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "SoftMaxCrossEntropy", "type": "Type[deepchem.models.tensorgraph.layers.SoftMaxCrossEntropy]"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "WeightedError", "type": "Type[deepchem.models.tensorgraph.layers.WeightedError]"}, {"lineNumber": 165, "col_offset": 7, "nodeName": "weight_decay_penalty", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "set_loss", "type": "Callable[[Any], None]"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "weighted_loss", "type": "Union[deepchem.models.tensorgraph.layers.WeightDecay, deepchem.models.tensorgraph.layers.WeightedError]"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 198, "col_offset": 31, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "retval", "type": "Any"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "self", "type": "RobustMultitaskRegressor"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "self", "type": "RobustMultitaskRegressor"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "layer_sizes", "type": "Any"}, {"lineNumber": 275, "col_offset": 6, "nodeName": "weight_init_stddevs", "type": "List[Any]"}, {"lineNumber": 277, "col_offset": 6, "nodeName": "bias_init_consts", "type": "List[Any]"}, {"lineNumber": 279, "col_offset": 6, "nodeName": "dropouts", "type": "List[Any]"}, {"lineNumber": 281, "col_offset": 6, "nodeName": "activation_fns", "type": "List[Any]"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 283, "col_offset": 26, "nodeName": "bypass_layer_sizes", "type": "Any"}, {"lineNumber": 288, "col_offset": 6, "nodeName": "bypass_bias_init_consts", "type": "List[Any]"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "bypass_dropouts", "type": "List[Any]"}, {"lineNumber": 291, "col_offset": 50, "nodeName": "n_bypass_layers", "type": "int"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "Feature", "type": "Type[deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 298, "col_offset": 67, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "layer_sizes", "type": "Any"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "weight_init_stddevs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 299, "col_offset": 42, "nodeName": "bias_init_consts", "type": "Union[List[Any], Any]"}, {"lineNumber": 299, "col_offset": 60, "nodeName": "dropouts", "type": "Union[Any, List[Any]]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "activation_fns", "type": "Union[List[Any], Any]"}, {"lineNumber": 311, "col_offset": 6, "nodeName": "prev_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 311, "col_offset": 19, "nodeName": "layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 315, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 315, "col_offset": 19, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 316, "col_offset": 6, "nodeName": "prev_layer", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 316, "col_offset": 19, "nodeName": "mol_features", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 332, "col_offset": 6, "nodeName": "top_bypass_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "prev_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 340, "col_offset": 6, "nodeName": "task_out", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 343, "col_offset": 13, "nodeName": "Concat", "type": "Type[deepchem.models.tensorgraph.layers.Concat]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "add_output", "type": "Callable[[Any], None]"}, {"lineNumber": 345, "col_offset": 20, "nodeName": "output", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 346, "col_offset": 13, "nodeName": "Label", "type": "Type[deepchem.models.tensorgraph.layers.Label]"}, {"lineNumber": 347, "col_offset": 14, "nodeName": "Weights", "type": "Type[deepchem.models.tensorgraph.layers.Weights]"}, {"lineNumber": 348, "col_offset": 20, "nodeName": "ReduceSum", "type": "Type[deepchem.models.tensorgraph.layers.ReduceSum]"}, {"lineNumber": 349, "col_offset": 7, "nodeName": "weight_decay_penalty", "type": "Any"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "set_loss", "type": "Callable[[Any], None]"}, {"lineNumber": 354, "col_offset": 18, "nodeName": "weighted_loss", "type": "Union[deepchem.models.tensorgraph.layers.ReduceSum, deepchem.models.tensorgraph.layers.WeightDecay]"}, {"lineNumber": 362, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 362, "col_offset": 23, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 92, "col_offset": 46, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "activation_fns", "type": "Any"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "bypass_weight_init_stddevs", "type": "Any"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "n_bypass_layers", "type": "int"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "bypass_bias_init_consts", "type": "Any"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 103, "col_offset": 60, "nodeName": "n_bypass_layers", "type": "int"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "bypass_dropouts", "type": "Any"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "n_bypass_layers", "type": "int"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 124, "col_offset": 9, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "layer", "type": "deepchem.models.tensorgraph.layers.Dropout"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 133, "col_offset": 69, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 134, "col_offset": 10, "nodeName": "bypass_layer_sizes", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "bypass_weight_init_stddevs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "bypass_bias_init_consts", "type": "Union[List[Any], Any]"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "bypass_dropouts", "type": "Union[List[Any], Any]"}, {"lineNumber": 135, "col_offset": 52, "nodeName": "bypass_activation_fns", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "prev_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 149, "col_offset": 9, "nodeName": "n_bypass_layers", "type": "int"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "task_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "top_multitask_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 156, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "task_out", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "task_outputs", "type": "List[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "WeightDecay", "type": "Type[deepchem.models.tensorgraph.layers.WeightDecay]"}, {"lineNumber": 167, "col_offset": 10, "nodeName": "weight_decay_penalty", "type": "Any"}, {"lineNumber": 168, "col_offset": 10, "nodeName": "weight_decay_penalty_type", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 179, "col_offset": 36, "nodeName": "iterbatches", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 270, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 274, "col_offset": 43, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 275, "col_offset": 52, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 276, "col_offset": 40, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 277, "col_offset": 46, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 278, "col_offset": 32, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "activation_fns", "type": "Any"}, {"lineNumber": 280, "col_offset": 38, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 281, "col_offset": 42, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 284, "col_offset": 22, "nodeName": "bypass_weight_init_stddevs", "type": "Any"}, {"lineNumber": 284, "col_offset": 50, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 286, "col_offset": 39, "nodeName": "n_bypass_layers", "type": "int"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "bypass_bias_init_consts", "type": "Any"}, {"lineNumber": 287, "col_offset": 47, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 288, "col_offset": 60, "nodeName": "n_bypass_layers", "type": "int"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 289, "col_offset": 22, "nodeName": "bypass_dropouts", "type": "Any"}, {"lineNumber": 289, "col_offset": 39, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 290, "col_offset": 44, "nodeName": "n_bypass_layers", "type": "int"}, {"lineNumber": 301, "col_offset": 14, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 309, "col_offset": 9, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "layer", "type": "deepchem.models.tensorgraph.layers.Dropout"}, {"lineNumber": 315, "col_offset": 19, "nodeName": "self", "type": "RobustMultitaskRegressor"}, {"lineNumber": 318, "col_offset": 69, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 319, "col_offset": 10, "nodeName": "bypass_layer_sizes", "type": "Any"}, {"lineNumber": 319, "col_offset": 30, "nodeName": "bypass_weight_init_stddevs", "type": "Union[List[Any], Any]"}, {"lineNumber": 320, "col_offset": 10, "nodeName": "bypass_bias_init_consts", "type": "Union[Any, List[Any]]"}, {"lineNumber": 320, "col_offset": 35, "nodeName": "bypass_dropouts", "type": "Union[List[Any], Any]"}, {"lineNumber": 320, "col_offset": 52, "nodeName": "bypass_activation_fns", "type": "List[Any]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "prev_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Dropout]"}, {"lineNumber": 331, "col_offset": 21, "nodeName": "layer", "type": "Union[deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Dropout]"}, {"lineNumber": 334, "col_offset": 9, "nodeName": "n_bypass_layers", "type": "int"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "task_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 338, "col_offset": 21, "nodeName": "top_multitask_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 340, "col_offset": 17, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 341, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 341, "col_offset": 26, "nodeName": "task_out", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 343, "col_offset": 38, "nodeName": "task_outputs", "type": "List[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "self", "type": "RobustMultitaskRegressor"}, {"lineNumber": 348, "col_offset": 30, "nodeName": "L2Loss", "type": "Type[deepchem.models.tensorgraph.layers.L2Loss]"}, {"lineNumber": 350, "col_offset": 22, "nodeName": "WeightDecay", "type": "Type[deepchem.models.tensorgraph.layers.WeightDecay]"}, {"lineNumber": 351, "col_offset": 10, "nodeName": "weight_decay_penalty", "type": "Any"}, {"lineNumber": 352, "col_offset": 10, "nodeName": "weight_decay_penalty_type", "type": "Any"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "self", "type": "RobustMultitaskRegressor"}, {"lineNumber": 363, "col_offset": 36, "nodeName": "iterbatches", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 84, "col_offset": 10, "nodeName": "RobustMultitaskClassifier", "type": "Type[RobustMultitaskClassifier]"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "collections", "type": "module"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "collections", "type": "module"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "collections", "type": "module"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "collections", "type": "module"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "activation_fns", "type": "Any"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "collections", "type": "module"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "bypass_weight_init_stddevs", "type": "Any"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "collections", "type": "module"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "bypass_bias_init_consts", "type": "Any"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "collections", "type": "module"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "bypass_dropouts", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "activation_fns", "type": "Union[Any, List[Any]]"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "Dropout", "type": "Type[deepchem.models.tensorgraph.layers.Dropout]"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 145, "col_offset": 10, "nodeName": "layer", "type": "deepchem.models.tensorgraph.layers.Dropout"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "Concat", "type": "Type[deepchem.models.tensorgraph.layers.Concat]"}, {"lineNumber": 155, "col_offset": 60, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 156, "col_offset": 6, "nodeName": "task_outputs", "type": "List[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 161, "col_offset": 41, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "labels", "type": "deepchem.models.tensorgraph.layers.Label"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "output", "type": "deepchem.models.tensorgraph.layers.Stack"}, {"lineNumber": 164, "col_offset": 45, "nodeName": "loss", "type": "deepchem.models.tensorgraph.layers.SoftMaxCrossEntropy"}, {"lineNumber": 164, "col_offset": 51, "nodeName": "weights", "type": "deepchem.models.tensorgraph.layers.Weights"}, {"lineNumber": 179, "col_offset": 36, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "deterministic", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "pad_batches", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "X_b", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "X_b", "type": "Any"}, {"lineNumber": 192, "col_offset": 44, "nodeName": "w_b", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "RobustMultitaskClassifier", "type": "Type[RobustMultitaskClassifier]"}, {"lineNumber": 197, "col_offset": 44, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "RobustMultitaskClassifier", "type": "Type[RobustMultitaskClassifier]"}, {"lineNumber": 201, "col_offset": 46, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 270, "col_offset": 10, "nodeName": "RobustMultitaskRegressor", "type": "Type[RobustMultitaskRegressor]"}, {"lineNumber": 270, "col_offset": 36, "nodeName": "self", "type": "RobustMultitaskRegressor"}, {"lineNumber": 274, "col_offset": 43, "nodeName": "collections", "type": "module"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 276, "col_offset": 40, "nodeName": "collections", "type": "module"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 278, "col_offset": 32, "nodeName": "collections", "type": "module"}, {"lineNumber": 279, "col_offset": 18, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 280, "col_offset": 38, "nodeName": "collections", "type": "module"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "activation_fns", "type": "Any"}, {"lineNumber": 284, "col_offset": 50, "nodeName": "collections", "type": "module"}, {"lineNumber": 285, "col_offset": 36, "nodeName": "bypass_weight_init_stddevs", "type": "Any"}, {"lineNumber": 287, "col_offset": 47, "nodeName": "collections", "type": "module"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "bypass_bias_init_consts", "type": "Any"}, {"lineNumber": 289, "col_offset": 39, "nodeName": "collections", "type": "module"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "bypass_dropouts", "type": "Any"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "activation_fns", "type": "Union[List[Any], Any]"}, {"lineNumber": 294, "col_offset": 40, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "Dropout", "type": "Type[deepchem.models.tensorgraph.layers.Dropout]"}, {"lineNumber": 310, "col_offset": 24, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 330, "col_offset": 10, "nodeName": "layer", "type": "deepchem.models.tensorgraph.layers.Dropout"}, {"lineNumber": 335, "col_offset": 21, "nodeName": "Concat", "type": "Type[deepchem.models.tensorgraph.layers.Concat]"}, {"lineNumber": 341, "col_offset": 6, "nodeName": "task_outputs", "type": "List[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 346, "col_offset": 32, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 347, "col_offset": 35, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 363, "col_offset": 36, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 365, "col_offset": 24, "nodeName": "deterministic", "type": "Any"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "pad_batches", "type": "Any"}, {"lineNumber": 367, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 369, "col_offset": 38, "nodeName": "y_b", "type": "Any"}, {"lineNumber": 370, "col_offset": 11, "nodeName": "X_b", "type": "Any"}, {"lineNumber": 371, "col_offset": 40, "nodeName": "X_b", "type": "Any"}, {"lineNumber": 373, "col_offset": 44, "nodeName": "w_b", "type": "Any"}, {"lineNumber": 374, "col_offset": 14, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "prev_layer", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "TFWrapper", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TFWrapper]"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "TFWrapper", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TFWrapper]"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "Dropout", "type": "Type[deepchem.models.tensorgraph.layers.Dropout]"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "task_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Feature, deepchem.models.tensorgraph.layers.Concat, deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "weighted_loss", "type": "deepchem.models.tensorgraph.layers.WeightedError"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "y_b", "type": "Any"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "predict", "type": "Any"}, {"lineNumber": 187, "col_offset": 57, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 188, "col_offset": 53, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 190, "col_offset": 10, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "w_b", "type": "Any"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "predict", "type": "Any"}, {"lineNumber": 192, "col_offset": 10, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "prev_layer", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "TFWrapper", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TFWrapper]"}, {"lineNumber": 306, "col_offset": 14, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "TFWrapper", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TFWrapper]"}, {"lineNumber": 308, "col_offset": 14, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 324, "col_offset": 26, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "Dropout", "type": "Type[deepchem.models.tensorgraph.layers.Dropout]"}, {"lineNumber": 330, "col_offset": 26, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 340, "col_offset": 34, "nodeName": "task_layer", "type": "Union[deepchem.models.tensorgraph.layers.Concat, deepchem.models.tensorgraph.layers.Feature, deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Dropout]"}, {"lineNumber": 348, "col_offset": 48, "nodeName": "labels", "type": "deepchem.models.tensorgraph.layers.Label"}, {"lineNumber": 348, "col_offset": 56, "nodeName": "output", "type": "deepchem.models.tensorgraph.layers.Concat"}, {"lineNumber": 348, "col_offset": 64, "nodeName": "weights", "type": "deepchem.models.tensorgraph.layers.Weights"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "weighted_loss", "type": "deepchem.models.tensorgraph.layers.ReduceSum"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "self", "type": "RobustMultitaskRegressor"}, {"lineNumber": 368, "col_offset": 11, "nodeName": "y_b", "type": "Any"}, {"lineNumber": 368, "col_offset": 35, "nodeName": "predict", "type": "Any"}, {"lineNumber": 369, "col_offset": 10, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 371, "col_offset": 10, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 372, "col_offset": 11, "nodeName": "w_b", "type": "Any"}, {"lineNumber": 372, "col_offset": 35, "nodeName": "predict", "type": "Any"}, {"lineNumber": 373, "col_offset": 10, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 121, "col_offset": 54, "nodeName": "weight_stddev", "type": "Any"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "bias_const", "type": "Any"}, {"lineNumber": 125, "col_offset": 44, "nodeName": "layer", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "prev_layer", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "TFWrapper", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TFWrapper]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "TFWrapper", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TFWrapper]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "top_multitask_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 151, "col_offset": 52, "nodeName": "top_bypass_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 187, "col_offset": 57, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 188, "col_offset": 53, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 306, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 306, "col_offset": 54, "nodeName": "weight_stddev", "type": "Any"}, {"lineNumber": 308, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 308, "col_offset": 45, "nodeName": "bias_const", "type": "Any"}, {"lineNumber": 310, "col_offset": 44, "nodeName": "layer", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "prev_layer", "type": "deepchem.models.tensorgraph.layers.Feature"}, {"lineNumber": 325, "col_offset": 32, "nodeName": "TFWrapper", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TFWrapper]"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 327, "col_offset": 31, "nodeName": "TFWrapper", "type": "Type[deepchem.models.tensorgraph.tensor_graph.TFWrapper]"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 336, "col_offset": 31, "nodeName": "top_multitask_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 336, "col_offset": 52, "nodeName": "top_bypass_layer", "type": "Union[deepchem.models.tensorgraph.layers.Dense, deepchem.models.tensorgraph.layers.Dropout, deepchem.models.tensorgraph.layers.Feature]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 141, "col_offset": 56, "nodeName": "weight_stddev", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 143, "col_offset": 47, "nodeName": "bias_const", "type": "Any"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "layer", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "to_one_hot", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 49, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "task_weights", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 326, "col_offset": 56, "nodeName": "weight_stddev", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 328, "col_offset": 47, "nodeName": "bias_const", "type": "Any"}, {"lineNumber": 330, "col_offset": 46, "nodeName": "layer", "type": "deepchem.models.tensorgraph.layers.Dense"}, {"lineNumber": 369, "col_offset": 20, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "task_weights", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 49, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 186, "col_offset": 49, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "self", "type": "RobustMultitaskClassifier"}, {"lineNumber": 369, "col_offset": 20, "nodeName": "self", "type": "RobustMultitaskRegressor"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "self", "type": "RobustMultitaskRegressor"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "self", "type": "RobustMultitaskRegressor"}, {"lineNumber": 185, "col_offset": 49, "nodeName": "y_b", "type": "Any"}]