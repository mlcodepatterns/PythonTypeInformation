[{"lineNumber": 25, "col_offset": 0, "nodeName": "add_featurize_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "add_transforms_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "add_model_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "add_model_command", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 0, "nodeName": "extract_model_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "ensure_exists", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "create_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 0, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 0, "nodeName": "featurize_inputs", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 259, "col_offset": 0, "nodeName": "featurize_input", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 273, "col_offset": 0, "nodeName": "train_test_split", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 304, "col_offset": 0, "nodeName": "fit_model", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 326, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 2, "nodeName": "featurize_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 60, "col_offset": 2, "nodeName": "transform_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 92, "col_offset": 2, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 169, "col_offset": 2, "nodeName": "model_params", "type": "Dict[unicode, Any]"}, {"lineNumber": 170, "col_offset": 9, "nodeName": "model_params", "type": "Dict[unicode, Any]"}, {"lineNumber": 173, "col_offset": 6, "nodeName": "directory", "type": "Union[Any, str, unicode]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "dirs", "type": "List[Union[Any, str, unicode]]"}, {"lineNumber": 179, "col_offset": 2, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 180, "col_offset": 2, "nodeName": "feature_dir", "type": "Union[str, unicode]"}, {"lineNumber": 181, "col_offset": 2, "nodeName": "data_dir", "type": "Union[str, unicode]"}, {"lineNumber": 182, "col_offset": 2, "nodeName": "model_dir", "type": "Union[str, unicode]"}, {"lineNumber": 185, "col_offset": 2, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 198, "col_offset": 2, "nodeName": "paths", "type": "List[Union[str, unicode]]"}, {"lineNumber": 233, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 234, "col_offset": 2, "nodeName": "subparsers", "type": "argparse._SubParsersAction"}, {"lineNumber": 251, "col_offset": 5, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 277, "col_offset": 2, "nodeName": "dataset_files", "type": "List[Union[str, unicode]]"}, {"lineNumber": 278, "col_offset": 6, "nodeName": "path", "type": "Union[str, unicode]"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "paths", "type": "List[Union[str, unicode]]"}, {"lineNumber": 281, "col_offset": 2, "nodeName": "samples_dir", "type": "Union[str, unicode]"}, {"lineNumber": 282, "col_offset": 2, "nodeName": "samples", "type": "deepchem.utils.featurize.FeaturizedSamples"}, {"lineNumber": 285, "col_offset": 2, "nodeName": "train_samples_dir", "type": "Union[str, unicode]"}, {"lineNumber": 286, "col_offset": 2, "nodeName": "test_samples_dir", "type": "Union[str, unicode]"}, {"lineNumber": 290, "col_offset": 2, "nodeName": "train_data_dir", "type": "Union[str, unicode]"}, {"lineNumber": 291, "col_offset": 2, "nodeName": "test_data_dir", "type": "Union[str, unicode]"}, {"lineNumber": 294, "col_offset": 2, "nodeName": "train_dataset", "type": "deepchem.utils.dataset.Dataset"}, {"lineNumber": 296, "col_offset": 2, "nodeName": "test_dataset", "type": "deepchem.utils.dataset.Dataset"}, {"lineNumber": 306, "col_offset": 2, "nodeName": "task_type", "type": "unicode"}, {"lineNumber": 307, "col_offset": 2, "nodeName": "train_dir", "type": "Union[str, unicode]"}, {"lineNumber": 308, "col_offset": 2, "nodeName": "train", "type": "deepchem.utils.dataset.Dataset"}, {"lineNumber": 310, "col_offset": 2, "nodeName": "task_types", "type": "Dict[Any, unicode]"}, {"lineNumber": 313, "col_offset": 2, "nodeName": "model", "type": "Any"}, {"lineNumber": 320, "col_offset": 2, "nodeName": "model", "type": "Any"}, {"lineNumber": 321, "col_offset": 2, "nodeName": "data", "type": "deepchem.utils.dataset.Dataset"}, {"lineNumber": 323, "col_offset": 2, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 328, "col_offset": 2, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 331, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 28, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 31, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 34, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 37, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 47, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 50, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 54, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 61, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 74, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 81, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 86, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 93, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 104, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 107, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 110, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 113, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 116, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 119, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 122, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 125, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 128, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 131, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "add_parser", "type": "Callable[..., argparse.ArgumentParser]"}, {"lineNumber": 140, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 143, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 146, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 149, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 152, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 155, "col_offset": 2, "nodeName": "add_featurize_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "model_cmd", "type": "argparse.ArgumentParser"}, {"lineNumber": 157, "col_offset": 2, "nodeName": "add_transforms_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "model_cmd", "type": "argparse.ArgumentParser"}, {"lineNumber": 158, "col_offset": 2, "nodeName": "add_model_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "model_cmd", "type": "argparse.ArgumentParser"}, {"lineNumber": 159, "col_offset": 2, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "param", "type": "unicode"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "args", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 183, "col_offset": 2, "nodeName": "ensure_exists", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 187, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 9, "nodeName": "skip_featurization", "type": "Any"}, {"lineNumber": 196, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "feature_dir", "type": "Union[str, unicode]"}, {"lineNumber": 199, "col_offset": 9, "nodeName": "skip_train_test_split", "type": "Any"}, {"lineNumber": 204, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 9, "nodeName": "skip_fit", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "model_params", "type": "Dict[unicode, Any]"}, {"lineNumber": 211, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "skip_eval", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "csv_out_train", "type": "Union[str, unicode]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "stats_out_train", "type": "Union[str, unicode]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "csv_out_test", "type": "Union[str, unicode]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "stats_out_test", "type": "Union[str, unicode]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "train_dir", "type": "Union[str, unicode]"}, {"lineNumber": 223, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 9, "nodeName": "skip_eval", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "test_dir", "type": "Union[str, unicode]"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "add_subparsers", "type": "Callable[..., argparse._SubParsersAction]"}, {"lineNumber": 235, "col_offset": 2, "nodeName": "add_model_command", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "subparsers", "type": "argparse._SubParsersAction"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 236, "col_offset": 27, "nodeName": "input_args", "type": "None"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 242, "col_offset": 36, "nodeName": "featurize_input", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "pool", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "input_files", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "DataFeaturizer", "type": "Type[deepchem.utils.featurize.DataFeaturizer]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "join", "type": "Callable"}, {"lineNumber": 270, "col_offset": 6, "nodeName": "feature_dir", "type": "Any"}, {"lineNumber": 271, "col_offset": 2, "nodeName": "featurize", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 271, "col_offset": 35, "nodeName": "feature_types", "type": "List[unicode]"}, {"lineNumber": 271, "col_offset": 68, "nodeName": "out", "type": "Union[str, unicode]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "dataset_files", "type": "Union[List[str], List[unicode]]"}, {"lineNumber": 280, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "FeaturizedSamples", "type": "Type[deepchem.utils.featurize.FeaturizedSamples]"}, {"lineNumber": 282, "col_offset": 30, "nodeName": "samples_dir", "type": "Union[str, unicode]"}, {"lineNumber": 282, "col_offset": 43, "nodeName": "dataset_files", "type": "Union[List[str], List[Union[str, unicode]], List[unicode]]"}, {"lineNumber": 284, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 285, "col_offset": 35, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 286, "col_offset": 34, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 287, "col_offset": 32, "nodeName": "train_test_split", "type": "Callable[..., Tuple[deepchem.utils.featurize.FeaturizedSamples, deepchem.utils.featurize.FeaturizedSamples]]"}, {"lineNumber": 287, "col_offset": 57, "nodeName": "splittype", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "train_samples_dir", "type": "Union[str, unicode]"}, {"lineNumber": 288, "col_offset": 23, "nodeName": "test_samples_dir", "type": "Union[unicode, str]"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 290, "col_offset": 32, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 291, "col_offset": 31, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 293, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 294, "col_offset": 18, "nodeName": "Dataset", "type": "Type[deepchem.utils.dataset.Dataset]"}, {"lineNumber": 294, "col_offset": 26, "nodeName": "train_data_dir", "type": "Union[str, unicode]"}, {"lineNumber": 294, "col_offset": 42, "nodeName": "train_samples", "type": "deepchem.utils.featurize.FeaturizedSamples"}, {"lineNumber": 294, "col_offset": 57, "nodeName": "feature_types", "type": "Any"}, {"lineNumber": 295, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "Dataset", "type": "Type[deepchem.utils.dataset.Dataset]"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "test_data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 296, "col_offset": 40, "nodeName": "test_samples", "type": "deepchem.utils.featurize.FeaturizedSamples"}, {"lineNumber": 296, "col_offset": 54, "nodeName": "feature_types", "type": "Any"}, {"lineNumber": 298, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 299, "col_offset": 2, "nodeName": "transform", "type": "Callable[..., None]"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "input_transforms", "type": "Any"}, {"lineNumber": 299, "col_offset": 44, "nodeName": "output_transforms", "type": "Any"}, {"lineNumber": 301, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 302, "col_offset": 2, "nodeName": "transform", "type": "Callable[..., None]"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "input_transforms", "type": "Any"}, {"lineNumber": 302, "col_offset": 43, "nodeName": "output_transforms", "type": "Any"}, {"lineNumber": 306, "col_offset": 14, "nodeName": "get_task_type", "type": "Callable[[Any], unicode]"}, {"lineNumber": 306, "col_offset": 34, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 307, "col_offset": 27, "nodeName": "data_dir", "type": "Union[str, unicode]"}, {"lineNumber": 308, "col_offset": 10, "nodeName": "Dataset", "type": "Type[deepchem.utils.dataset.Dataset]"}, {"lineNumber": 308, "col_offset": 18, "nodeName": "train_dir", "type": "Union[unicode, str]"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "task", "type": "Any"}, {"lineNumber": 310, "col_offset": 22, "nodeName": "task_type", "type": "unicode"}, {"lineNumber": 311, "col_offset": 2, "nodeName": "model_params", "type": "Dict[unicode, Any]"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "get_data_shape", "type": "Callable[[], Any]"}, {"lineNumber": 313, "col_offset": 10, "nodeName": "model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 313, "col_offset": 42, "nodeName": "task_types", "type": "Dict[Any, unicode]"}, {"lineNumber": 313, "col_offset": 54, "nodeName": "model_params", "type": "Dict[unicode, Any]"}, {"lineNumber": 314, "col_offset": 2, "nodeName": "fit", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "train", "type": "deepchem.utils.dataset.Dataset"}, {"lineNumber": 315, "col_offset": 2, "nodeName": "save", "type": "Any"}, {"lineNumber": 315, "col_offset": 13, "nodeName": "model_dir", "type": "Union[unicode, str]"}, {"lineNumber": 320, "col_offset": 10, "nodeName": "load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 320, "col_offset": 33, "nodeName": "model_dir", "type": "Union[str, unicode]"}, {"lineNumber": 321, "col_offset": 9, "nodeName": "Dataset", "type": "Type[deepchem.utils.dataset.Dataset]"}, {"lineNumber": 321, "col_offset": 17, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 323, "col_offset": 14, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 323, "col_offset": 31, "nodeName": "data", "type": "deepchem.utils.dataset.Dataset"}, {"lineNumber": 324, "col_offset": 2, "nodeName": "compute_model_performance", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 324, "col_offset": 38, "nodeName": "csv_out", "type": "Union[str, unicode]"}, {"lineNumber": 324, "col_offset": 47, "nodeName": "stats_out", "type": "Union[unicode, str]"}, {"lineNumber": 328, "col_offset": 9, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 329, "col_offset": 2, "nodeName": "func", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 332, "col_offset": 2, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "featurize_cmd", "type": "argparse.ArgumentParser"}, {"lineNumber": 28, "col_offset": 2, "nodeName": "featurize_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 31, "col_offset": 2, "nodeName": "featurize_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 2, "nodeName": "featurize_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 37, "col_offset": 2, "nodeName": "featurize_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "featurize_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "featurize_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 47, "col_offset": 2, "nodeName": "featurize_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 50, "col_offset": 2, "nodeName": "featurize_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 2, "nodeName": "featurize_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "cmd", "type": "argparse.ArgumentParser"}, {"lineNumber": 61, "col_offset": 2, "nodeName": "transform_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "transform_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "transform_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 74, "col_offset": 2, "nodeName": "transform_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 81, "col_offset": 2, "nodeName": "transform_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 2, "nodeName": "transform_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "fit_cmd", "type": "argparse.ArgumentParser"}, {"lineNumber": 93, "col_offset": 2, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "fit_cmd", "type": "argparse.ArgumentParser"}, {"lineNumber": 104, "col_offset": 2, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 107, "col_offset": 2, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 110, "col_offset": 2, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 113, "col_offset": 2, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 116, "col_offset": 2, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 119, "col_offset": 2, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 122, "col_offset": 2, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 125, "col_offset": 2, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 128, "col_offset": 2, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 131, "col_offset": 2, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "subparsers", "type": "argparse._SubParsersAction"}, {"lineNumber": 140, "col_offset": 2, "nodeName": "model_cmd", "type": "argparse.ArgumentParser"}, {"lineNumber": 143, "col_offset": 2, "nodeName": "model_cmd", "type": "argparse.ArgumentParser"}, {"lineNumber": 146, "col_offset": 2, "nodeName": "model_cmd", "type": "argparse.ArgumentParser"}, {"lineNumber": 149, "col_offset": 2, "nodeName": "model_cmd", "type": "argparse.ArgumentParser"}, {"lineNumber": 152, "col_offset": 2, "nodeName": "model_cmd", "type": "argparse.ArgumentParser"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 159, "col_offset": 2, "nodeName": "model_cmd", "type": "argparse.ArgumentParser"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "create_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 169, "col_offset": 40, "nodeName": "param", "type": "unicode"}, {"lineNumber": 169, "col_offset": 51, "nodeName": "param", "type": "unicode"}, {"lineNumber": 169, "col_offset": 60, "nodeName": "params", "type": "List[unicode]"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "base_dir", "type": "Any"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "feature_dir", "type": "Union[str, unicode]"}, {"lineNumber": 183, "col_offset": 40, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 183, "col_offset": 50, "nodeName": "model_dir", "type": "Union[str, unicode]"}, {"lineNumber": 189, "col_offset": 9, "nodeName": "args", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "featurize_inputs", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "feature_dir", "type": "Union[str, unicode]"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "input_files", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "user_specified_features", "type": "Any"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "split_field", "type": "Any"}, {"lineNumber": 193, "col_offset": 45, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 193, "col_offset": 60, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 199, "col_offset": 9, "nodeName": "args", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "train_test_split", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "paths", "type": "List[Union[str, unicode]]"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "input_transforms", "type": "Any"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "output_transforms", "type": "Any"}, {"lineNumber": 201, "col_offset": 62, "nodeName": "feature_types", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "splittype", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "mode", "type": "Any"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 206, "col_offset": 9, "nodeName": "args", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "extract_model_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 40, "nodeName": "args", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "fit_model", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "model_params", "type": "Dict[unicode, Any]"}, {"lineNumber": 209, "col_offset": 34, "nodeName": "model_dir", "type": "Union[str, unicode]"}, {"lineNumber": 209, "col_offset": 45, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "args", "type": "Any"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 218, "col_offset": 34, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "eval_trained_model", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "model_dir", "type": "Union[str, unicode]"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "train_dir", "type": "Union[unicode, str]"}, {"lineNumber": 221, "col_offset": 42, "nodeName": "csv_out_train", "type": "Union[unicode, str]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "stats_out_train", "type": "Union[str, unicode]"}, {"lineNumber": 225, "col_offset": 9, "nodeName": "args", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "data_dir", "type": "Union[unicode, str]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "eval_trained_model", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "model_dir", "type": "Union[str, unicode]"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "test_dir", "type": "Union[str, unicode]"}, {"lineNumber": 228, "col_offset": 41, "nodeName": "csv_out_test", "type": "Union[str, unicode]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "stats_out_test", "type": "Union[unicode, str]"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "argparse", "type": "module"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 243, "col_offset": 48, "nodeName": "feature_dir", "type": "Union[str, unicode]"}, {"lineNumber": 244, "col_offset": 60, "nodeName": "user_specified_features", "type": "Any"}, {"lineNumber": 245, "col_offset": 42, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 246, "col_offset": 49, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "split_field", "type": "Any"}, {"lineNumber": 248, "col_offset": 45, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 249, "col_offset": 46, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "Pool", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "map", "type": "Any"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "featurize_input_partial", "type": "functools.partial[nothing]"}, {"lineNumber": 253, "col_offset": 38, "nodeName": "input_files", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 262, "col_offset": 36, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 263, "col_offset": 43, "nodeName": "smiles_field", "type": "Any"}, {"lineNumber": 264, "col_offset": 42, "nodeName": "split_field", "type": "Any"}, {"lineNumber": 265, "col_offset": 39, "nodeName": "id_field", "type": "Any"}, {"lineNumber": 266, "col_offset": 40, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 267, "col_offset": 54, "nodeName": "user_specified_features", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "path", "type": "module"}, {"lineNumber": 271, "col_offset": 2, "nodeName": "featurizer", "type": "deepchem.utils.featurize.DataFeaturizer"}, {"lineNumber": 271, "col_offset": 35, "nodeName": "FeaturizedSamples", "type": "Type[deepchem.utils.featurize.FeaturizedSamples]"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 285, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 287, "col_offset": 32, "nodeName": "samples", "type": "deepchem.utils.featurize.FeaturizedSamples"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 299, "col_offset": 2, "nodeName": "train_dataset", "type": "deepchem.utils.dataset.Dataset"}, {"lineNumber": 302, "col_offset": 2, "nodeName": "test_dataset", "type": "deepchem.utils.dataset.Dataset"}, {"lineNumber": 306, "col_offset": 14, "nodeName": "Model", "type": "Type[deepchem.models.Model]"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 310, "col_offset": 36, "nodeName": "task", "type": "Any"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "train", "type": "deepchem.utils.dataset.Dataset"}, {"lineNumber": 313, "col_offset": 10, "nodeName": "Model", "type": "Type[deepchem.models.Model]"}, {"lineNumber": 314, "col_offset": 2, "nodeName": "model", "type": "Any"}, {"lineNumber": 315, "col_offset": 2, "nodeName": "model", "type": "Any"}, {"lineNumber": 320, "col_offset": 10, "nodeName": "Model", "type": "Type[deepchem.models.Model]"}, {"lineNumber": 324, "col_offset": 2, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 329, "col_offset": 2, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "directory", "type": "Union[str, Any, unicode]"}, {"lineNumber": 175, "col_offset": 6, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "directory", "type": "Union[str, Any, unicode]"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "args", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 193, "col_offset": 45, "nodeName": "args", "type": "Any"}, {"lineNumber": 193, "col_offset": 60, "nodeName": "args", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 201, "col_offset": 62, "nodeName": "args", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "args", "type": "Any"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "mp", "type": "Any"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "pool", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "pool", "type": "Any"}, {"lineNumber": 257, "col_offset": 6, "nodeName": "featurize_input_partial", "type": "functools.partial[nothing]"}, {"lineNumber": 257, "col_offset": 30, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "glob", "type": "module"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 279, "col_offset": 44, "nodeName": "path", "type": "Union[str, unicode]"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 285, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 310, "col_offset": 44, "nodeName": "get_task_names", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 175, "col_offset": 6, "nodeName": "os", "type": "module"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 270, "col_offset": 33, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 310, "col_offset": 44, "nodeName": "train", "type": "deepchem.utils.dataset.Dataset"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "cpu_count", "type": "Any"}, {"lineNumber": 270, "col_offset": 33, "nodeName": "path", "type": "module"}, {"lineNumber": 270, "col_offset": 50, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 270, "col_offset": 67, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "mp", "type": "Any"}, {"lineNumber": 270, "col_offset": 33, "nodeName": "os", "type": "module"}, {"lineNumber": 270, "col_offset": 50, "nodeName": "path", "type": "module"}, {"lineNumber": 270, "col_offset": 50, "nodeName": "os", "type": "module"}]