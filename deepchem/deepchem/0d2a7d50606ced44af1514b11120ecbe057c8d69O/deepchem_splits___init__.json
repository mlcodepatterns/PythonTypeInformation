[{"lineNumber": 19, "col_offset": 0, "nodeName": "generate_scaffold", "type": "Callable[..., Any]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "__author__", "type": "unicode"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "__copyright__", "type": "unicode"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "__license__", "type": "unicode"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 31, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "Splitter", "type": "Type[Splitter]"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "Splitter", "type": "Type[Splitter]"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "Splitter", "type": "Type[Splitter]"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "Splitter", "type": "Type[Splitter]"}, {"lineNumber": 21, "col_offset": 2, "nodeName": "mol", "type": "Any"}, {"lineNumber": 22, "col_offset": 2, "nodeName": "engine", "type": "deepchem.utils.ScaffoldGenerator"}, {"lineNumber": 23, "col_offset": 2, "nodeName": "scaffold", "type": "Any"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "scaffold", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "MolFromSmiles", "type": "Any"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "smiles", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "ScaffoldGenerator", "type": "Type[deepchem.utils.ScaffoldGenerator]"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "get_scaffold", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 33, "nodeName": "mol", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "dataset_files", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "dataset_files", "type": "Any"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "mws", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "mws", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "sortidx", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "train_cutoff", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "valid_cutoff", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "train_cutoff", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "valid_cutoff", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "shuffled", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "scaffolds", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "train_cutoff", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "valid_cutoff", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "scaffold_set", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "scaffold_sets", "type": "List[List[Any]]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 22, "col_offset": 47, "nodeName": "include_chirality", "type": "bool"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "engine", "type": "deepchem.utils.ScaffoldGenerator"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "self", "type": "MolecularWeightSplitter"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "reload", "type": "bool"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "train_samples", "type": "None"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "valid_samples", "type": "None"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "test_samples", "type": "None"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 51, "col_offset": 7, "nodeName": "train_dir", "type": "Any"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "test_dir", "type": "Any"}, {"lineNumber": 67, "col_offset": 7, "nodeName": "valid_dir", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "train_samples", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "valid_samples", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "test_samples", "type": "Any"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "train_valid_test_split", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "train_dir", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "seed", "type": "Any"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "samples", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "row", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "iterrows", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "mol", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "mw", "type": "Any"}, {"lineNumber": 120, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "mws", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "mws", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "seed", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "log", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "ind", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "row", "type": "Any"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "iterrows", "type": "Any"}, {"lineNumber": 162, "col_offset": 6, "nodeName": "scaffold", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "valid_inds", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "test_inds", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "log", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "valid_inds", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "test_inds", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "valid_inds", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "test_inds", "type": "List[Any]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "ind", "type": "Any"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "row", "type": "Any"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "iterrows", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 203, "col_offset": 23, "nodeName": "valid_inds", "type": "List[Any]"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "test_inds", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "split", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "samples", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "FeaturizedSamples", "type": "Type[deepchem.featurizers.featurize.FeaturizedSamples]"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "reload", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "FeaturizedSamples", "type": "Type[deepchem.featurizers.featurize.FeaturizedSamples]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "reload", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "FeaturizedSamples", "type": "Type[deepchem.featurizers.featurize.FeaturizedSamples]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "reload", "type": "Any"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "self", "type": "Splitter"}, {"lineNumber": 86, "col_offset": 53, "nodeName": "test_dir", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 109, "col_offset": 61, "nodeName": "frac_test", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "smiles_df", "type": "Any"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "MolFromSmiles", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "CalcExactMolWt", "type": "Any"}, {"lineNumber": 116, "col_offset": 50, "nodeName": "mol", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "mw", "type": "Any"}, {"lineNumber": 120, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "sortidx", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "frac_valid", "type": "Any"}, {"lineNumber": 124, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "sortidx", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "sortidx", "type": "Any"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "sortidx", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "sortidx", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 138, "col_offset": 61, "nodeName": "frac_test", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "frac_valid", "type": "Any"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 141, "col_offset": 49, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "shuffled", "type": "Any"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "shuffled", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "shuffled", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 155, "col_offset": 61, "nodeName": "frac_test", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "self", "type": "ScaffoldSplitter"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "generate_scaffold", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 9, "nodeName": "scaffold", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "scaffolds", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 36, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "frac_valid", "type": "Any"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 171, "col_offset": 49, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "self", "type": "ScaffoldSplitter"}, {"lineNumber": 175, "col_offset": 47, "nodeName": "train_cutoff", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "scaffold_set", "type": "List[Any]"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "self", "type": "Splitter"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "frac_test", "type": "Any"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "frac_valid", "type": "float"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "log_every_n", "type": "int"}, {"lineNumber": 52, "col_offset": 52, "nodeName": "train_dir", "type": "Any"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "dataset_files", "type": "Any"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "featurizers", "type": "Any"}, {"lineNumber": 55, "col_offset": 50, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 56, "col_offset": 47, "nodeName": "reload", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "_set_compound_df", "type": "Callable[[Any], None]"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "test_dir", "type": "Any"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "dataset_files", "type": "Any"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "featurizers", "type": "Any"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "reload", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "_set_compound_df", "type": "Callable[[Any], None]"}, {"lineNumber": 68, "col_offset": 52, "nodeName": "valid_dir", "type": "Any"}, {"lineNumber": 69, "col_offset": 54, "nodeName": "dataset_files", "type": "Any"}, {"lineNumber": 70, "col_offset": 52, "nodeName": "featurizers", "type": "Any"}, {"lineNumber": 71, "col_offset": 50, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "reload", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_set_compound_df", "type": "Callable[[Any], None]"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "frac_valid", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "row", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "rdMolDescriptors", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "mws", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "train_cutoff", "type": "Any"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "train_cutoff", "type": "Any"}, {"lineNumber": 126, "col_offset": 57, "nodeName": "valid_cutoff", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "valid_cutoff", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "frac_valid", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "samples", "type": "Any"}, {"lineNumber": 141, "col_offset": 49, "nodeName": "samples", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 142, "col_offset": 47, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "train_cutoff", "type": "Any"}, {"lineNumber": 143, "col_offset": 46, "nodeName": "train_cutoff", "type": "Any"}, {"lineNumber": 143, "col_offset": 59, "nodeName": "valid_cutoff", "type": "Any"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "valid_cutoff", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "frac_train", "type": "Any"}, {"lineNumber": 155, "col_offset": 48, "nodeName": "frac_valid", "type": "Any"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "log", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "verbosity", "type": "Any"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "row", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "scaffolds", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "ind", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "ind", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 170, "col_offset": 36, "nodeName": "samples", "type": "Any"}, {"lineNumber": 171, "col_offset": 49, "nodeName": "samples", "type": "Any"}, {"lineNumber": 176, "col_offset": 67, "nodeName": "valid_cutoff", "type": "Any"}, {"lineNumber": 177, "col_offset": 10, "nodeName": "test_inds", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "scaffold_set", "type": "List[Any]"}, {"lineNumber": 179, "col_offset": 10, "nodeName": "valid_inds", "type": "List[Any]"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "scaffold_set", "type": "List[Any]"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 195, "col_offset": 9, "nodeName": "lower", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "ind", "type": "Any"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "samples", "type": "Any"}, {"lineNumber": 55, "col_offset": 50, "nodeName": "self", "type": "Splitter"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "train_samples", "type": "deepchem.featurizers.featurize.FeaturizedSamples"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "samples", "type": "Any"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "self", "type": "Splitter"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "test_samples", "type": "deepchem.featurizers.featurize.FeaturizedSamples"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 70, "col_offset": 52, "nodeName": "samples", "type": "Any"}, {"lineNumber": 71, "col_offset": 50, "nodeName": "self", "type": "Splitter"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "valid_samples", "type": "deepchem.featurizers.featurize.FeaturizedSamples"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "Chem", "type": "Any"}, {"lineNumber": 142, "col_offset": 47, "nodeName": "samples", "type": "Any"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "self", "type": "ScaffoldSplitter"}, {"lineNumber": 159, "col_offset": 40, "nodeName": "ind", "type": "Any"}, {"lineNumber": 159, "col_offset": 46, "nodeName": "log_every_n", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "self", "type": "ScaffoldSplitter"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "scaffold", "type": "Any"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "items", "type": "Callable"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "scaffold_set", "type": "List[Any]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "lower", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "ind", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 58, "col_offset": 65, "nodeName": "train_inds", "type": "Any"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 66, "col_offset": 64, "nodeName": "test_inds", "type": "Any"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 74, "col_offset": 65, "nodeName": "valid_inds", "type": "Any"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "ind", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "scaffolds", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "scaffolds", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 176, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "scaffold_set", "type": "List[Any]"}, {"lineNumber": 195, "col_offset": 9, "nodeName": "row", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "valid_inds", "type": "List[Any]"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "lower", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "ind", "type": "Any"}, {"lineNumber": 202, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "samples", "type": "Any"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "samples", "type": "Any"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "samples", "type": "Any"}, {"lineNumber": 160, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 160, "col_offset": 52, "nodeName": "compounds_df", "type": "Any"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "scaffold", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "train_inds", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "valid_inds", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "row", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "test_inds", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 52, "nodeName": "samples", "type": "Any"}, {"lineNumber": 169, "col_offset": 62, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "row", "type": "Any"}, {"lineNumber": 169, "col_offset": 66, "nodeName": "x", "type": "Any"}]