[{"lineNumber": 19, "col_offset": 0, "nodeName": "CHEMBL_URL", "type": "str"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "DEFAULT_DIR", "type": "str"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "get_data_dir", "type": "Callable[[], str]"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 77, "col_offset": 2, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 82, "col_offset": 5, "nodeName": "reload", "type": "Any"}, {"lineNumber": 93, "col_offset": 2, "nodeName": "dataset_file", "type": "str"}, {"lineNumber": 140, "col_offset": 2, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 147, "col_offset": 6, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 5, "nodeName": "reload", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "utils", "type": "module"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 72, "col_offset": 5, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "data_dir", "type": "str"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "DEFAULT_DIR", "type": "str"}, {"lineNumber": 74, "col_offset": 5, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "save_dir", "type": "str"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "DEFAULT_DIR", "type": "str"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "save_dir", "type": "Union[Any, str]"}, {"lineNumber": 78, "col_offset": 5, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "img_spec", "type": "Union[Any, str]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "data_dir", "type": "Union[Any, str]"}, {"lineNumber": 100, "col_offset": 5, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "max_len", "type": "Union[Any, int]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "pad_len", "type": "Union[Any, int]"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "CSVLoader", "type": "Type[deepchem.data.data_loader.CSVLoader]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "featurize", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 5, "nodeName": "split", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 139, "col_offset": 2, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "splitters", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 2, "nodeName": "train", "type": "Any"}, {"lineNumber": 142, "col_offset": 9, "nodeName": "valid", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "test", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "train_valid_test_split", "type": "Any"}, {"lineNumber": 142, "col_offset": 55, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "valid", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 156, "col_offset": 9, "nodeName": "chembl25_tasks", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "dc", "type": "module"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 77, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 67, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "img_spec", "type": "Union[str, Any]"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "loaded", "type": "bool"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "dataset_file", "type": "str"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "download_url", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "get", "type": "Callable"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "get", "type": "Callable"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "create_char_to_idx", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "dataset_file", "type": "str"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "SmilesToSeq", "type": "Type[deepchem.feat.smiles_featurizers.SmilesToSeq]"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "img_size", "type": "Union[Any, int]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "img_spec", "type": "Union[Any, str]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "res", "type": "Union[Any, float]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.feat.smiles_featurizers.SmilesToImage"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "data", "type": "module"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "chembl25_tasks", "type": "List[Any]"}, {"lineNumber": 119, "col_offset": 62, "nodeName": "featurizer", "type": "Union[deepchem.feat.smiles_featurizers.SmilesToImage, deepchem.feat.smiles_featurizers.SmilesToSeq]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "loader", "type": "deepchem.data.data_loader.CSVLoader"}, {"lineNumber": 121, "col_offset": 61, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "chembl25_tasks", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 50, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "IndexSplitter", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "RandomSplitter", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "ScaffoldSplitter", "type": "Any"}, {"lineNumber": 139, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 139, "col_offset": 61, "nodeName": "split", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "split", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "splitter", "type": "Any"}, {"lineNumber": 142, "col_offset": 69, "nodeName": "split_seed", "type": "Any"}, {"lineNumber": 144, "col_offset": 6, "nodeName": "NormalizationTransformer", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "train", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "valid", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "transform", "type": "Any"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "test", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "save_dataset_to_disk", "type": "Callable[[Any, Any, Any, Any, Any], None]"}, {"lineNumber": 153, "col_offset": 39, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 153, "col_offset": 52, "nodeName": "train", "type": "Any"}, {"lineNumber": 153, "col_offset": 59, "nodeName": "valid", "type": "Any"}, {"lineNumber": 153, "col_offset": 66, "nodeName": "test", "type": "Any"}, {"lineNumber": 154, "col_offset": 39, "nodeName": "transformers", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "train", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "valid", "type": "Any"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "test", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 84, "col_offset": 6, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "load_dataset_from_disk", "type": "Callable[[Any], Tuple[bool, Optional[Tuple[Any, Any, Any]], Any]]"}, {"lineNumber": 89, "col_offset": 10, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "path", "type": "module"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "dataset_file", "type": "str"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "CHEMBL_URL", "type": "str"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "data_dir", "type": "Union[Any, str]"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "max_len", "type": "Union[int, Any]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "char_to_idx", "type": "Any"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "max_len", "type": "Union[int, Any]"}, {"lineNumber": 106, "col_offset": 58, "nodeName": "pad_len", "type": "Union[int, Any]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "get", "type": "Callable"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "SmilesToImage", "type": "Type[deepchem.feat.smiles_featurizers.SmilesToImage]"}, {"lineNumber": 115, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "dc", "type": "module"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "dataset_file", "type": "str"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "NormalizationTransformer", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "transform", "type": "Any"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "splits", "type": "module"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "splits", "type": "module"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "splits", "type": "module"}, {"lineNumber": 144, "col_offset": 6, "nodeName": "trans", "type": "module"}, {"lineNumber": 145, "col_offset": 55, "nodeName": "train", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "save", "type": "module"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 84, "col_offset": 6, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 85, "col_offset": 62, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 87, "col_offset": 57, "nodeName": "save_folder", "type": "str"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "save", "type": "module"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "chembl25_tasks", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "dataset", "type": "Optional[Tuple[Any, Any, Any]]"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "os", "type": "module"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "dc", "type": "module"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "img_size", "type": "Union[int, Any]"}, {"lineNumber": 112, "col_offset": 59, "nodeName": "img_spec", "type": "Union[str, Any]"}, {"lineNumber": 112, "col_offset": 73, "nodeName": "res", "type": "Union[float, Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 116, "col_offset": 56, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "trans", "type": "module"}, {"lineNumber": 126, "col_offset": 57, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "dc", "type": "module"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "dc", "type": "module"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "dc", "type": "module"}, {"lineNumber": 144, "col_offset": 6, "nodeName": "dc", "type": "module"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "utils", "type": "module"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "dc", "type": "module"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "dc", "type": "module"}]