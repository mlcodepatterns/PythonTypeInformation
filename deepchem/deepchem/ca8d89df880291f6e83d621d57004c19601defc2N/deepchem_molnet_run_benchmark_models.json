[{"lineNumber": 71, "col_offset": 2, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 72, "col_offset": 2, "nodeName": "valid_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 73, "col_offset": 2, "nodeName": "test_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 78, "col_offset": 2, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 245, "col_offset": 5, "nodeName": "test", "type": "Any"}, {"lineNumber": 301, "col_offset": 2, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 302, "col_offset": 2, "nodeName": "valid_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 303, "col_offset": 2, "nodeName": "test_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 310, "col_offset": 2, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 427, "col_offset": 5, "nodeName": "test", "type": "Any"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "model", "type": "Any"}, {"lineNumber": 76, "col_offset": 5, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "hyper_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 80, "col_offset": 5, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "layer_sizes", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 238, "col_offset": 5, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 243, "col_offset": 2, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 243, "col_offset": 29, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 243, "col_offset": 44, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 243, "col_offset": 59, "nodeName": "metric", "type": "Any"}, {"lineNumber": 243, "col_offset": 67, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 244, "col_offset": 2, "nodeName": "valid_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 244, "col_offset": 44, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 244, "col_offset": 59, "nodeName": "metric", "type": "Any"}, {"lineNumber": 244, "col_offset": 67, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 248, "col_offset": 9, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "valid_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "test_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 305, "col_offset": 9, "nodeName": "model", "type": "Any"}, {"lineNumber": 308, "col_offset": 5, "nodeName": "hyper_parameters", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "hyper_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 312, "col_offset": 5, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "layer_sizes", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 366, "col_offset": 5, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "n_filters", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "n_fully_connected_nodes", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 403, "col_offset": 5, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "n_estimators", "type": "Any"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "nb_epoch", "type": "None"}, {"lineNumber": 418, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 2, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 420, "col_offset": 5, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 425, "col_offset": 2, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 425, "col_offset": 44, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 425, "col_offset": 59, "nodeName": "metric", "type": "Any"}, {"lineNumber": 425, "col_offset": 67, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 426, "col_offset": 2, "nodeName": "valid_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 426, "col_offset": 29, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 426, "col_offset": 44, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 426, "col_offset": 59, "nodeName": "metric", "type": "Any"}, {"lineNumber": 426, "col_offset": 67, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 430, "col_offset": 9, "nodeName": "train_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 430, "col_offset": 23, "nodeName": "valid_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 430, "col_offset": 37, "nodeName": "test_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "hps", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "TensorflowMultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "layer_sizes", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "bypass_layer_sizes", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "bypass_weight_init_stddevs", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "bypass_bias_init_consts", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "bypass_dropouts", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "fit", "type": "Union[Callable[..., None], Any]"}, {"lineNumber": 239, "col_offset": 14, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "fit", "type": "Union[Callable[..., None], Any]"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 243, "col_offset": 29, "nodeName": "model", "type": "Union[deepchem.models.tensorflow_models.lr.TensorflowLogisticRegression, deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier, deepchem.models.tensorflow_models.IRV.TensorflowMultiTaskIRVClassifier, Any, deepchem.models.multitask.SingletaskToMultitask, deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier, deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier]"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "model", "type": "Union[deepchem.models.tensorflow_models.lr.TensorflowLogisticRegression, deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier, deepchem.models.tensorflow_models.IRV.TensorflowMultiTaskIRVClassifier, Any, deepchem.models.multitask.SingletaskToMultitask, deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier, deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "test_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 246, "col_offset": 30, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 246, "col_offset": 45, "nodeName": "test_dataset", "type": "Any"}, {"lineNumber": 246, "col_offset": 59, "nodeName": "metric", "type": "Any"}, {"lineNumber": 246, "col_offset": 67, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "hps", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 318, "col_offset": 14, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 320, "col_offset": 17, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "TensorflowMultiTaskRegressor", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskRegressor]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 338, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "layer_sizes", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "fit_transformers", "type": "List[Any]"}, {"lineNumber": 370, "col_offset": 17, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 372, "col_offset": 20, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 374, "col_offset": 30, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 376, "col_offset": 23, "nodeName": "seed", "type": "Any"}, {"lineNumber": 377, "col_offset": 18, "nodeName": "SequentialGraph", "type": "Type[deepchem.models.tf_new_models.graph_models.SequentialGraph]"}, {"lineNumber": 377, "col_offset": 46, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "MultitaskGraphRegressor", "type": "Type[deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 405, "col_offset": 19, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "SingletaskToMultitask", "type": "Type[deepchem.models.multitask.SingletaskToMultitask]"}, {"lineNumber": 415, "col_offset": 60, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 416, "col_offset": 60, "nodeName": "model_builder", "type": "Callable[[Any], Any]"}, {"lineNumber": 419, "col_offset": 30, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "fit", "type": "Union[Callable[..., None], Any]"}, {"lineNumber": 421, "col_offset": 14, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "fit", "type": "Union[Callable[..., None], Any]"}, {"lineNumber": 423, "col_offset": 14, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 425, "col_offset": 15, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "model", "type": "Union[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskRegressor, deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskFitTransformRegressor, deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor, deepchem.models.multitask.SingletaskToMultitask, Any]"}, {"lineNumber": 426, "col_offset": 15, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 426, "col_offset": 29, "nodeName": "model", "type": "Union[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskRegressor, deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskFitTransformRegressor, deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor, deepchem.models.multitask.SingletaskToMultitask, Any]"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "test_scores", "type": "Dict[Any, Any]"}, {"lineNumber": 428, "col_offset": 30, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 428, "col_offset": 45, "nodeName": "test_dataset", "type": "Any"}, {"lineNumber": 428, "col_offset": 59, "nodeName": "metric", "type": "Any"}, {"lineNumber": 428, "col_offset": 67, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "layer_sizes", "type": "Any"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "seed", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "RobustMultitaskClassifier", "type": "Type[deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 142, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "model", "type": "Union[deepchem.models.tensorflow_models.lr.TensorflowLogisticRegression, deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier, deepchem.models.tensorflow_models.IRV.TensorflowMultiTaskIRVClassifier, Any, deepchem.models.multitask.SingletaskToMultitask, deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier, deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "model", "type": "Union[deepchem.models.tensorflow_models.lr.TensorflowLogisticRegression, deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier, deepchem.models.tensorflow_models.IRV.TensorflowMultiTaskIRVClassifier, Any, deepchem.models.multitask.SingletaskToMultitask, deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier, deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier]"}, {"lineNumber": 241, "col_offset": 38, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 246, "col_offset": 30, "nodeName": "model", "type": "Union[deepchem.models.tensorflow_models.lr.TensorflowLogisticRegression, deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier, deepchem.models.tensorflow_models.IRV.TensorflowMultiTaskIRVClassifier, Any, deepchem.models.multitask.SingletaskToMultitask, deepchem.models.tensorflow_models.robust_multitask.RobustMultitaskClassifier, deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier]"}, {"lineNumber": 309, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "layer_sizes", "type": "Any"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 329, "col_offset": 25, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 333, "col_offset": 19, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "seed", "type": "Any"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 341, "col_offset": 26, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 342, "col_offset": 23, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 344, "col_offset": 14, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 345, "col_offset": 19, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 346, "col_offset": 17, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 348, "col_offset": 20, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "TensorflowMultiTaskFitTransformRegressor", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskFitTransformRegressor]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 377, "col_offset": 18, "nodeName": "nn", "type": "module"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "GraphConv", "type": "Type[deepchem.nn.layers.GraphConv]"}, {"lineNumber": 379, "col_offset": 46, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 381, "col_offset": 20, "nodeName": "GraphPool", "type": "Type[deepchem.nn.layers.GraphPool]"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "GraphConv", "type": "Type[deepchem.nn.layers.GraphConv]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 386, "col_offset": 20, "nodeName": "GraphPool", "type": "Type[deepchem.nn.layers.GraphPool]"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "Dense", "type": "Type[deepchem.nn.copy.Dense]"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 391, "col_offset": 20, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "GraphGather", "type": "Type[deepchem.nn.layers.GraphGather]"}, {"lineNumber": 392, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 397, "col_offset": 19, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 398, "col_offset": 22, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 410, "col_offset": 22, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 413, "col_offset": 10, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 413, "col_offset": 25, "nodeName": "model_dir_rf_regression", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "multitask", "type": "module"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "model", "type": "Union[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskRegressor, deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskFitTransformRegressor, deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor, deepchem.models.multitask.SingletaskToMultitask, Any]"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "model", "type": "Union[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskRegressor, deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskFitTransformRegressor, deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor, deepchem.models.multitask.SingletaskToMultitask, Any]"}, {"lineNumber": 423, "col_offset": 38, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 428, "col_offset": 30, "nodeName": "model", "type": "Union[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskRegressor, deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskFitTransformRegressor, deepchem.models.tf_new_models.multitask_regressor.MultitaskGraphRegressor, deepchem.models.multitask.SingletaskToMultitask, Any]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "layer_sizes", "type": "Any"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "bypass_layer_sizes", "type": "Any"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "bypass_weight_init_stddevs", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "bypass_bias_init_consts", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "bypass_dropouts", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "seed", "type": "Any"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "TensorflowLogisticRegression", "type": "Type[deepchem.models.tensorflow_models.lr.TensorflowLogisticRegression]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 160, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "n_K", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 173, "col_offset": 7, "nodeName": "test", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 349, "col_offset": 61, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 353, "col_offset": 19, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 354, "col_offset": 20, "nodeName": "layer_sizes", "type": "Any"}, {"lineNumber": 355, "col_offset": 28, "nodeName": "weight_init_stddevs", "type": "Any"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "bias_init_consts", "type": "Any"}, {"lineNumber": 357, "col_offset": 17, "nodeName": "dropouts", "type": "Any"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 360, "col_offset": 19, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 361, "col_offset": 22, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "fit_transformers", "type": "List[Any]"}, {"lineNumber": 364, "col_offset": 13, "nodeName": "seed", "type": "Any"}, {"lineNumber": 377, "col_offset": 18, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "nn", "type": "module"}, {"lineNumber": 379, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 379, "col_offset": 34, "nodeName": "n_filters", "type": "Any"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 381, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "nn", "type": "module"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "n_filters", "type": "Any"}, {"lineNumber": 384, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 384, "col_offset": 32, "nodeName": "n_filters", "type": "Any"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 386, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "nn", "type": "module"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "n_fully_connected_nodes", "type": "Any"}, {"lineNumber": 390, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 390, "col_offset": 46, "nodeName": "n_filters", "type": "Any"}, {"lineNumber": 391, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "n_estimators", "type": "Any"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "sklearn_models", "type": "module"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "seed", "type": "Any"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 167, "col_offset": 10, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "IRVTransformer", "type": "Any"}, {"lineNumber": 170, "col_offset": 48, "nodeName": "n_K", "type": "Any"}, {"lineNumber": 170, "col_offset": 65, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "transform", "type": "Any"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "transform", "type": "Any"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 174, "col_offset": 6, "nodeName": "test_dataset", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "TensorflowMultiTaskIRVClassifier", "type": "Type[deepchem.models.tensorflow_models.IRV.TensorflowMultiTaskIRVClassifier]"}, {"lineNumber": 186, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "n_filters", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "n_fully_connected_nodes", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 349, "col_offset": 24, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 381, "col_offset": 20, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 386, "col_offset": 20, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 391, "col_offset": 20, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "models", "type": "module"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "trans", "type": "module"}, {"lineNumber": 170, "col_offset": 53, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 57, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "transform", "type": "Any"}, {"lineNumber": 174, "col_offset": 43, "nodeName": "test_dataset", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 179, "col_offset": 10, "nodeName": "n_K", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "penalty_type", "type": "Any"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "seed", "type": "Any"}, {"lineNumber": 190, "col_offset": 17, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "seed", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "SequentialGraph", "type": "Type[deepchem.models.tf_new_models.graph_models.SequentialGraph]"}, {"lineNumber": 197, "col_offset": 46, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "MultitaskGraphClassifier", "type": "Type[deepchem.models.tf_new_models.multitask_classifier.MultitaskGraphClassifier]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "n_estimators", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "nb_epoch", "type": "None"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "nn", "type": "module"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "GraphConv", "type": "Type[deepchem.nn.layers.GraphConv]"}, {"lineNumber": 199, "col_offset": 46, "nodeName": "n_features", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "GraphPool", "type": "Type[deepchem.nn.layers.GraphPool]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "GraphConv", "type": "Type[deepchem.nn.layers.GraphConv]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "GraphPool", "type": "Type[deepchem.nn.layers.GraphPool]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "Dense", "type": "Type[deepchem.nn.copy.Dense]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "BatchNormalization", "type": "Type[deepchem.nn.copy.BatchNormalization]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "graph_model", "type": "deepchem.models.tf_new_models.graph_models.SequentialGraph"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "GraphGather", "type": "Type[deepchem.nn.layers.GraphGather]"}, {"lineNumber": 212, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 218, "col_offset": 22, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "hyper_parameters", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "SingletaskToMultitask", "type": "Type[deepchem.models.multitask.SingletaskToMultitask]"}, {"lineNumber": 235, "col_offset": 60, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 236, "col_offset": 60, "nodeName": "model_builder", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "nn", "type": "module"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 199, "col_offset": 34, "nodeName": "n_filters", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "nn", "type": "module"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "n_filters", "type": "Any"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 204, "col_offset": 32, "nodeName": "n_filters", "type": "Any"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "nn", "type": "module"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "n_fully_connected_nodes", "type": "Any"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 210, "col_offset": 46, "nodeName": "n_filters", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "nn", "type": "module"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 232, "col_offset": 57, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 233, "col_offset": 57, "nodeName": "model_dir_rf", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "multitask", "type": "module"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 231, "col_offset": 48, "nodeName": "n_estimators", "type": "Any"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "sklearn_models", "type": "module"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "models", "type": "module"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "deepchem", "type": "module"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "deepchem", "type": "module"}]