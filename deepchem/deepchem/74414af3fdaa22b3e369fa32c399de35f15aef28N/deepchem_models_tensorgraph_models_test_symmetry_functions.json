[{"lineNumber": 12, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 158, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "layer_structures", "type": "List[int]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "atom_number_cases", "type": "List[int]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "new_atomic_nums", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "delta", "type": "float"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "grad_approx", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "grad_approx", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "grad_exact", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "restored_model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "new_atomic_nums", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "predicted", "type": "Any"}, {"lineNumber": 159, "col_offset": 2, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "max_atoms", "type": "int"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "layer_structures", "type": "List[int]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "atom_number_cases", "type": "List[int]"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "ANIRegression", "type": "Type[deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression]"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 81, "col_offset": 6, "nodeName": "d_new_x_plus", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "delta", "type": "float"}, {"lineNumber": 83, "col_offset": 6, "nodeName": "d_new_x_minus", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "delta", "type": "float"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "grad_approx", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "grad_one", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "new_x", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "new_atomic_nums", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "grad_approx", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "grad_exact", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "grad_one", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "new_x", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "new_atomic_nums", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "minimize_structure", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "new_x", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "new_atomic_nums", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "save_numpy", "type": "Callable[[], None]"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "load_numpy", "type": "Callable"}, {"lineNumber": 128, "col_offset": 46, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "pred_one", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "new_x", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 42, "nodeName": "new_atomic_nums", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "pred_one", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "new_x", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 47, "nodeName": "new_atomic_nums", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "n_tasks", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "max_atoms", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "layer_structures", "type": "Any"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "layer_structures", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "atom_number_cases", "type": "Any"}, {"lineNumber": 150, "col_offset": 43, "nodeName": "atom_number_cases", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "use_queue", "type": "Any"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "use_queue", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "expected", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "predicted", "type": "Any"}, {"lineNumber": 159, "col_offset": 2, "nodeName": "unittest", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Union[str, bool, float, int, List[int]]]"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "new_x", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "d_new_x_plus", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "new_x", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 6, "nodeName": "d_new_x_minus", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "grad_exact_constrained", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "grad_exact_constrained", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "grad_exact_constrained", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "grad_exact_constrained", "type": "Any"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "grad_exact", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "grad_exact_constrained", "type": "Any"}, {"lineNumber": 103, "col_offset": 40, "nodeName": "grad_exact", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "grad_exact_constrained", "type": "Any"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "grad_exact", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "grad_exact_constrained", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "grad_exact_constrained", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "grad_exact_constrained", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "new_x", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "new_x", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "new_x", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "new_x", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "new_x", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "new_x", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "ANIRegression", "type": "Type[deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression]"}, {"lineNumber": 128, "col_offset": 46, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "restored_model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "restored_model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "restored_model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "restored_model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 150, "col_offset": 43, "nodeName": "restored_model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "restored_model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "restored_model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "restored_model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "new_x", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "idx", "type": "int"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "idx", "type": "int"}, {"lineNumber": 86, "col_offset": 74, "nodeName": "delta", "type": "float"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "grad_approx", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "dydx", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "min_coords", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "min_coords", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "min_coords", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "min_coords", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "min_coords", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "min_coords", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "pred_one", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "d_new_x_plus", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "new_atomic_nums", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "pred_one", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "d_new_x_minus", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "new_atomic_nums", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "model", "type": "deepchem.models.tensorgraph.models.symmetry_function_regression.ANIRegression"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "self", "type": "TestANIRegression"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "self", "type": "TestANIRegression"}]