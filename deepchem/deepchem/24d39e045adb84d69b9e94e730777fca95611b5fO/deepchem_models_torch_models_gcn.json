[{"lineNumber": 10, "col_offset": 10, "nodeName": "Module", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "TorchModel", "type": "Type[deepchem.models.torch_models.torch_model.TorchModel]"}, {"lineNumber": 10, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "mode", "type": "str"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "nfeat_name", "type": "str"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "nfeat_name", "type": "str"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "num_gnn_layers", "type": "int"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "node_feats", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "_self_loop", "type": "bool"}, {"lineNumber": 319, "col_offset": 26, "nodeName": "self_loop", "type": "bool"}, {"lineNumber": 346, "col_offset": 34, "nodeName": "batch", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "dgl_graphs", "type": "List[Any]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "mode", "type": "str"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "GCN"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "GCN"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "GCN"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "GCN"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "mode", "type": "str"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "out_size", "type": "int"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "out_size", "type": "int"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "graph_conv_layers", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "graph_conv_layers", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "activation", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "activation", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "DGLGCNPredictor", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "ndata", "type": "Any"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "g", "type": "Any"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "node_feats", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "mode", "type": "str"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "proba", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "out", "type": "Any"}, {"lineNumber": 258, "col_offset": 28, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "GCN", "type": "Type[GCN]"}, {"lineNumber": 310, "col_offset": 11, "nodeName": "mode", "type": "str"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "loss", "type": "deepchem.models.losses.L2Loss"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "output_types", "type": "List[str]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "loss", "type": "deepchem.models.losses.SparseSoftmaxCrossEntropy"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "output_types", "type": "List[str]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "model", "type": "GCN"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "GCNModel"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "labels", "type": "Any"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "weights", "type": "Any"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "to", "type": "Any"}, {"lineNumber": 348, "col_offset": 42, "nodeName": "device", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "_", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 19, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 29, "nodeName": "_prepare_batch", "type": "Callable[[Tuple[Any, Any, Any]], Tuple[List[Any], List[Any], List[Any]]]"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 350, "col_offset": 23, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 144, "col_offset": 40, "nodeName": "num_gnn_layers", "type": "int"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "number_atom_features", "type": "int"}, {"lineNumber": 147, "col_offset": 50, "nodeName": "graph_conv_layers", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 48, "nodeName": "activation", "type": "Union[List[Any], Any]"}, {"lineNumber": 152, "col_offset": 45, "nodeName": "out_size", "type": "int"}, {"lineNumber": 153, "col_offset": 60, "nodeName": "predictor_hidden_feats", "type": "int"}, {"lineNumber": 154, "col_offset": 55, "nodeName": "predictor_dropout", "type": "float"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "g", "type": "Any"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "nfeat_name", "type": "str"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "self", "type": "GCN"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "self", "type": "GCN"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "logits", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "softmax_dim", "type": "int"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "logits", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "softmax_dim", "type": "int"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "logits", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "proba", "type": "Any"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "logits", "type": "Any"}, {"lineNumber": 298, "col_offset": 38, "nodeName": "graph_conv_layers", "type": "List[Any]"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "activation", "type": "Any"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "residual", "type": "bool"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "batchnorm", "type": "bool"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "dropout", "type": "float"}, {"lineNumber": 303, "col_offset": 43, "nodeName": "predictor_hidden_feats", "type": "int"}, {"lineNumber": 304, "col_offset": 38, "nodeName": "predictor_dropout", "type": "float"}, {"lineNumber": 305, "col_offset": 28, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "mode", "type": "str"}, {"lineNumber": 307, "col_offset": 41, "nodeName": "number_atom_features", "type": "Any"}, {"lineNumber": 308, "col_offset": 30, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 309, "col_offset": 31, "nodeName": "nfeat_name", "type": "str"}, {"lineNumber": 311, "col_offset": 19, "nodeName": "L2Loss", "type": "Type[deepchem.models.losses.L2Loss]"}, {"lineNumber": 314, "col_offset": 19, "nodeName": "SparseSoftmaxCrossEntropy", "type": "Type[deepchem.models.losses.SparseSoftmaxCrossEntropy]"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "loss", "type": "Union[deepchem.models.losses.SparseSoftmaxCrossEntropy, deepchem.models.losses.L2Loss]"}, {"lineNumber": 317, "col_offset": 43, "nodeName": "output_types", "type": "List[str]"}, {"lineNumber": 317, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 347, "col_offset": 22, "nodeName": "to_dgl_graph", "type": "Any"}, {"lineNumber": 347, "col_offset": 72, "nodeName": "graph", "type": "Any"}, {"lineNumber": 348, "col_offset": 42, "nodeName": "self", "type": "GCNModel"}, {"lineNumber": 349, "col_offset": 71, "nodeName": "labels", "type": "Any"}, {"lineNumber": 349, "col_offset": 79, "nodeName": "weights", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "GCN", "type": "Type[GCN]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "self", "type": "GCN"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "activation", "type": "Any"}, {"lineNumber": 149, "col_offset": 59, "nodeName": "num_gnn_layers", "type": "int"}, {"lineNumber": 150, "col_offset": 61, "nodeName": "num_gnn_layers", "type": "int"}, {"lineNumber": 151, "col_offset": 57, "nodeName": "num_gnn_layers", "type": "int"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "self", "type": "GCN"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "self", "type": "GCN"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "view", "type": "Any"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "view", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 188, "col_offset": 52, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "softmax_dim", "type": "int"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "GCNModel", "type": "Type[GCNModel]"}, {"lineNumber": 316, "col_offset": 24, "nodeName": "self", "type": "GCNModel"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 347, "col_offset": 22, "nodeName": "graph", "type": "Any"}, {"lineNumber": 347, "col_offset": 51, "nodeName": "_self_loop", "type": "bool"}, {"lineNumber": 347, "col_offset": 81, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "batch", "type": "Any"}, {"lineNumber": 348, "col_offset": 27, "nodeName": "dgl_graphs", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 29, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 349, "col_offset": 35, "nodeName": "GCNModel", "type": "Type[GCNModel]"}, {"lineNumber": 349, "col_offset": 45, "nodeName": "self", "type": "GCNModel"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "residual", "type": "bool"}, {"lineNumber": 150, "col_offset": 48, "nodeName": "batchnorm", "type": "bool"}, {"lineNumber": 151, "col_offset": 46, "nodeName": "dropout", "type": "float"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "self", "type": "GCN"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "self", "type": "GCN"}, {"lineNumber": 188, "col_offset": 52, "nodeName": "self", "type": "GCN"}, {"lineNumber": 347, "col_offset": 51, "nodeName": "self", "type": "GCNModel"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "dgl", "type": "Any"}]