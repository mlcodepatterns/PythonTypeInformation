[{"lineNumber": 16, "col_offset": 0, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 18, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 77, "col_offset": 2, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 78, "col_offset": 2, "nodeName": "paths", "type": "Dict[nothing, nothing]"}, {"lineNumber": 80, "col_offset": 2, "nodeName": "paths", "type": "Any"}, {"lineNumber": 80, "col_offset": 10, "nodeName": "paths", "type": "Any"}, {"lineNumber": 82, "col_offset": 2, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 2, "nodeName": "task_types", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 2, "nodeName": "input_transforms", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "input_transforms", "type": "Any"}, {"lineNumber": 85, "col_offset": 2, "nodeName": "output_transforms", "type": "Dict[Any, Any]"}, {"lineNumber": 87, "col_offset": 2, "nodeName": "datatype", "type": "str"}, {"lineNumber": 123, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 19, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 22, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 25, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 28, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 30, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 32, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 35, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 45, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 49, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 61, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 63, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 67, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 72, "col_offset": 2, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "input_args", "type": "None"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 10, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "get_target_names", "type": "Callable[..., List[Any]]"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "paths", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "target", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "task_type", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "target", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "output_transforms", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "process_datasets", "type": "Callable[..., Union[Dict[Any, Tuple[Tuple[Any, Any, Any, Any], Tuple[Any, Any, Any, Any]]], Tuple[Tuple[Any, Any, Any, Any], Tuple[Any, Any, Any, Any]]]]"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "paths", "type": "Any"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "input_transforms", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "output_transforms", "type": "Dict[Any, Any]"}, {"lineNumber": 94, "col_offset": 5, "nodeName": "mode", "type": "Any"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "processed", "type": "Union[Dict[Any, Tuple[Tuple[Any, Any, Any, Any], Tuple[Any, Any, Any, Any]]], Tuple[Tuple[Any, Any, Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "per_task_data", "type": "Union[Dict[Any, Tuple[Tuple[Any, Any, Any, Any], Tuple[Any, Any, Any, Any]]], Tuple[Tuple[Any, Any, Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "processed", "type": "Union[Dict[Any, Tuple[Tuple[Any, Any, Any, Any], Tuple[Any, Any, Any, Any]]], Tuple[Tuple[Any, Any, Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 100, "col_offset": 5, "nodeName": "model", "type": "Any"}, {"lineNumber": 120, "col_offset": 5, "nodeName": "csv_out", "type": "Any"}, {"lineNumber": 124, "col_offset": 2, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "argparse", "type": "module"}, {"lineNumber": 19, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 22, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 25, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 28, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 30, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 32, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 35, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 45, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 49, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 51, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 55, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 61, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 63, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 67, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 70, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 72, "col_offset": 2, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "target", "type": "Any"}, {"lineNumber": 83, "col_offset": 53, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 85, "col_offset": 58, "nodeName": "target", "type": "Any"}, {"lineNumber": 85, "col_offset": 68, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 89, "col_offset": 57, "nodeName": "feature_types", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "prediction_endpoint", "type": "Any"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "split_endpoint", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "splittype", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "weight_positives", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "datatype", "type": "str"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "mode", "type": "Any"}, {"lineNumber": 94, "col_offset": 5, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 100, "col_offset": 5, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "fit_singletask_mlp", "type": "Callable[..., Dict[Any, Tuple[List[Any], Union[numpy.ndarray, List[int]], Union[List[Any], numpy.ndarray]]]]"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "per_task_data", "type": "Union[Dict[Any, Tuple[Tuple[Any, Any, Any, Any], Tuple[Any, Any, Any, Any]]], Tuple[Tuple[Any, Any, Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 101, "col_offset": 48, "nodeName": "task_types", "type": "Dict[Any, Any]"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "model", "type": "Any"}, {"lineNumber": 120, "col_offset": 5, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "results_to_csv", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "results", "type": "Dict[Any, Tuple[List[Any], Union[numpy.ndarray, List[int]], Union[List[Any], numpy.ndarray]]]"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "csv_out", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 89, "col_offset": 57, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 101, "col_offset": 69, "nodeName": "n_hidden", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 102, "col_offset": 48, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "n_epochs", "type": "Any"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "decay", "type": "Any"}, {"lineNumber": 103, "col_offset": 59, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "validation_split", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "num_to_train", "type": "Any"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "fit_multitask_mlp", "type": "Callable[..., Dict[Any, Tuple[List[Any], Union[numpy.ndarray, List[int]], Union[List[Any], numpy.ndarray]]]]"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 107, "col_offset": 55, "nodeName": "task_types", "type": "Dict[Any, Any]"}, {"lineNumber": 112, "col_offset": 7, "nodeName": "model", "type": "Any"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 121, "col_offset": 52, "nodeName": "task_type", "type": "Any"}, {"lineNumber": 101, "col_offset": 69, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 102, "col_offset": 48, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 103, "col_offset": 59, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "n_hidden", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "n_epochs", "type": "Any"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "decay", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "validation_split", "type": "Any"}, {"lineNumber": 112, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "fit_3D_convolution", "type": "Callable[..., Dict[Any, Tuple[List[Any], Union[numpy.ndarray, List[int]], Union[List[Any], numpy.ndarray]]]]"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 113, "col_offset": 56, "nodeName": "task_types", "type": "Dict[Any, Any]"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "fit_singletask_models", "type": "Callable[..., Dict[Any, Tuple[List[Any], Union[numpy.ndarray, List[int]], Union[List[Any], numpy.ndarray]]]]"}, {"lineNumber": 117, "col_offset": 36, "nodeName": "per_task_data", "type": "Union[Dict[Any, Tuple[Tuple[Any, Any, Any, Any], Tuple[Any, Any, Any, Any]]], Tuple[Tuple[Any, Any, Any, Any], Tuple[Any, Any, Any, Any]]]"}, {"lineNumber": 117, "col_offset": 51, "nodeName": "model", "type": "Any"}, {"lineNumber": 117, "col_offset": 63, "nodeName": "task_types", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 52, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "axis_length", "type": "Any"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "n_epochs", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 117, "col_offset": 51, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 118, "col_offset": 49, "nodeName": "num_to_train", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 118, "col_offset": 49, "nodeName": "args", "type": "argparse.Namespace"}]