[{"lineNumber": 8, "col_offset": 0, "nodeName": "__author__", "type": "unicode"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "__copyright__", "type": "unicode"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "__license__", "type": "unicode"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "BaseEstimator", "type": "Any"}, {"lineNumber": 61, "col_offset": 2, "nodeName": "__del__", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "fit_on_batch", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 2, "nodeName": "predict_on_batch", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 2, "nodeName": "predict_proba_on_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 2, "nodeName": "reload", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "get_model_filename", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 2, "nodeName": "get_params_filename", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 2, "nodeName": "save", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 2, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 2, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 2, "nodeName": "evaluate", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 2, "nodeName": "get_task_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 234, "col_offset": 2, "nodeName": "get_num_tasks", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "model_dir_is_temp", "type": "bool"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "model_dir", "type": "Union[Any, str]"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "model_dir", "type": "Union[Any, str]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "model_instance", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "model_instance", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "model_class", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "epoch", "type": "int"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "y_preds", "type": "List[nothing]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "y_preds", "type": "List[nothing]"}, {"lineNumber": 232, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 238, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "self", "type": "Model"}, {"lineNumber": 49, "col_offset": 7, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 53, "col_offset": 6, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 54, "col_offset": 6, "nodeName": "model_dir_is_temp", "type": "bool"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "self", "type": "Model"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "self", "type": "Model"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "self", "type": "Model"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "model_instance", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "self", "type": "Model"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "model_dir_is_temp", "type": "bool"}, {"lineNumber": 69, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "nb_epoch", "type": "Any"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "losses", "type": "List[nothing]"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "get_num_tasks", "type": "Callable[[], Any]"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "Evaluator", "type": "Type[deepchem.utils.evaluate.Evaluator]"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "self", "type": "Model"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 190, "col_offset": 41, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "per_task_metrics", "type": "Any"}, {"lineNumber": 192, "col_offset": 6, "nodeName": "scores", "type": "Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "scores", "type": "Union[Tuple[Dict[Any, Any], Dict[Any, Any]], Dict[Any, Any]]"}, {"lineNumber": 211, "col_offset": 14, "nodeName": "get_num_tasks", "type": "Callable[[], Any]"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 54, "col_offset": 6, "nodeName": "self", "type": "Model"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "self", "type": "Model"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "model_dir", "type": "Union[Any, str]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "log", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "ids_batch", "type": "Any"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "iterbatches", "type": "Any"}, {"lineNumber": 134, "col_offset": 45, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "log", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "self", "type": "Model"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "compute_model_performance", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]]"}, {"lineNumber": 192, "col_offset": 51, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 195, "col_offset": 32, "nodeName": "compute_model_performance", "type": "Callable[..., Union[Dict[Any, Any], Tuple[Dict[Any, Any], Dict[Any, Any]]]]"}, {"lineNumber": 196, "col_offset": 10, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "scores", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "per_task_scores", "type": "Any"}, {"lineNumber": 211, "col_offset": 14, "nodeName": "self", "type": "Model"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "dir", "type": "Callable[..., List[str]]"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "self", "type": "Model"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "shutil", "type": "module"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "self", "type": "Model"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "self", "type": "Model"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "self", "type": "Model"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 195, "col_offset": 32, "nodeName": "evaluator", "type": "deepchem.utils.evaluate.Evaluator"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "per_task_metrics", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "losses", "type": "List[nothing]"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "fit_on_batch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "X_batch", "type": "Any"}, {"lineNumber": 135, "col_offset": 49, "nodeName": "y_batch", "type": "Any"}, {"lineNumber": 135, "col_offset": 58, "nodeName": "w_batch", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "epoch", "type": "int"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "self", "type": "Model"}, {"lineNumber": 136, "col_offset": 41, "nodeName": "epoch", "type": "int"}, {"lineNumber": 136, "col_offset": 52, "nodeName": "mean", "type": "Any"}, {"lineNumber": 136, "col_offset": 52, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 61, "nodeName": "losses", "type": "List[nothing]"}, {"lineNumber": 136, "col_offset": 52, "nodeName": "np", "type": "module"}]