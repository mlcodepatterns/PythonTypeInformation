[{"lineNumber": 10, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 10, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "optimizer", "type": "deepchem.hyper.gaussian_process.GaussianProcessHyperparamOpt"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "params_dict", "type": "Dict[str, int]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 18, "col_offset": 6, "nodeName": "rf_params", "type": "Dict[str, Any]"}, {"lineNumber": 19, "col_offset": 6, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 20, "col_offset": 6, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "GaussianProcessHyperparamOpt", "type": "Type[deepchem.hyper.gaussian_process.GaussianProcessHyperparamOpt]"}, {"lineNumber": 27, "col_offset": 54, "nodeName": "rf_model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "pearson_r2_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "hyperparam_search", "type": "Callable[..., Tuple[Any, Dict[Any, Union[int, str]], Dict[Any, Any]]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "params_dict", "type": "Dict[str, int]"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 36, "col_offset": 51, "nodeName": "transformers", "type": "List[deepchem.trans.transformers.NormalizationTransformer]"}, {"lineNumber": 36, "col_offset": 65, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "k", "type": "str"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "model_params", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 21, "col_offset": 36, "nodeName": "sklearn_model", "type": "Any"}, {"lineNumber": 21, "col_offset": 51, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "hyper", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "NormalizationTransformer", "type": "Type[deepchem.trans.transformers.NormalizationTransformer]"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "metrics", "type": "module"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "optimizer", "type": "deepchem.hyper.gaussian_process.GaussianProcessHyperparamOpt"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "ensemble", "type": "Any"}, {"lineNumber": 20, "col_offset": 63, "nodeName": "rf_params", "type": "Dict[str, Any]"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "models", "type": "module"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 24, "col_offset": 10, "nodeName": "rand", "type": "Any"}, {"lineNumber": 24, "col_offset": 35, "nodeName": "rand", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "dc", "type": "module"}, {"lineNumber": 26, "col_offset": 10, "nodeName": "rand", "type": "Any"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "rand", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "dc", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "trans", "type": "module"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "dc", "type": "module"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "k", "type": "str"}, {"lineNumber": 18, "col_offset": 32, "nodeName": "v", "type": "Any"}, {"lineNumber": 18, "col_offset": 38, "nodeName": "items", "type": "Callable"}, {"lineNumber": 18, "col_offset": 62, "nodeName": "k", "type": "str"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "dc", "type": "module"}, {"lineNumber": 24, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 24, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 26, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "dc", "type": "module"}, {"lineNumber": 18, "col_offset": 38, "nodeName": "model_params", "type": "Dict[str, Any]"}, {"lineNumber": 24, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "np", "type": "module"}]