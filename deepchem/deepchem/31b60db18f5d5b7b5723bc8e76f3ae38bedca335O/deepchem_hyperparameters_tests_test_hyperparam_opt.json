[{"lineNumber": 37, "col_offset": 0, "nodeName": "rf_model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "__author__", "type": "unicode"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "__copyright__", "type": "unicode"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "__license__", "type": "unicode"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "TestAPI", "type": "Type[deepchem.models.tests.TestAPI]"}, {"lineNumber": 54, "col_offset": 2, "nodeName": "test_singletask_sklearn_rf_ECFP_regression_hyperparam_opt", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 2, "nodeName": "test_singletask_to_multitask_sklearn_hyperparam_opt", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 2, "nodeName": "test_multitask_keras_mlp_ECFP_classification_hyperparam_opt", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 2, "nodeName": "test_multitask_tf_mlp_ECFP_classification_hyperparam_opt", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 2, "nodeName": "n_estimators", "type": "Any"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "params_dict", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "params_dict", "type": "Any"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 45, "col_offset": 6, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "task_types", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "params_dict", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "splittype", "type": "unicode"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.featurizers.fingerprints.CircularFingerprint"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "task_type", "type": "unicode"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "dataset", "type": "Optional[deepchem.datasets.Dataset]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "splitter", "type": "deepchem.splits.ScaffoldSplitter"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "input_transformers", "type": "List[nothing]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "transformers", "type": "List[deepchem.transformers.NormalizationTransformer]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "optimizer", "type": "deepchem.hyperparameters.HyperparamOpt"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "splittype", "type": "unicode"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "output_transformers", "type": "List[nothing]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "input_file", "type": "unicode"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "n_train", "type": "int"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "w_train", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "ids_train", "type": "List[unicode]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "n_valid", "type": "int"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "X_valid", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "y_valid", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "w_valid", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "ids_valid", "type": "List[unicode]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "task_type", "type": "unicode"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.featurizers.fingerprints.CircularFingerprint"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "dataset", "type": "Optional[deepchem.datasets.Dataset]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "splitter", "type": "deepchem.splits.ScaffoldSplitter"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "params_dict", "type": "Dict[unicode, List[int]]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "optimizer", "type": "deepchem.hyperparameters.HyperparamOpt"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "splittype", "type": "unicode"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "task_type", "type": "unicode"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "n_features", "type": "int"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "featurizer", "type": "deepchem.featurizers.fingerprints.CircularFingerprint"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "dataset", "type": "Optional[deepchem.datasets.Dataset]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "splitter", "type": "deepchem.splits.ScaffoldSplitter"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "params_dict", "type": "Dict[unicode, List[Tuple[int]]]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "optimizer", "type": "deepchem.hyperparameters.HyperparamOpt"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "CircularFingerprint", "type": "Type[deepchem.featurizers.fingerprints.CircularFingerprint]"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "task", "type": "unicode"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "task_type", "type": "unicode"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "DataLoader", "type": "Type[deepchem.featurizers.featurize.DataLoader]"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Optional[deepchem.datasets.Dataset]]"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "input_file", "type": "Union[str, unicode]"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "data_dir", "type": "str"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "ScaffoldSplitter", "type": "Type[deepchem.splits.ScaffoldSplitter]"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "train_valid_test_split", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "dataset", "type": "Optional[deepchem.datasets.Dataset]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "valid_dir", "type": "str"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "input_transformers", "type": "List[nothing]"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "output_transformers", "type": "List[deepchem.transformers.NormalizationTransformer]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "test_dataset", "type": "Any"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "transformer", "type": "deepchem.transformers.NormalizationTransformer"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "transformers", "type": "List[deepchem.transformers.NormalizationTransformer]"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "HyperparamOpt", "type": "Type[deepchem.hyperparameters.HyperparamOpt]"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "rf_model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "hyperparam_search", "type": "Callable[..., Tuple[Any, Optional[Tuple[Any, ...]], Dict[str, Any]]]"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "params_dict", "type": "Dict[unicode, Any]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "output_transformers", "type": "List[deepchem.transformers.NormalizationTransformer]"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "task", "type": "unicode"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "n_train", "type": "int"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "n_features", "type": "int"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "randint", "type": "Any"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "n_train", "type": "int"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "from_numpy", "type": "Callable[..., deepchem.datasets.Dataset]"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 110, "col_offset": 57, "nodeName": "w_train", "type": "Any"}, {"lineNumber": 110, "col_offset": 66, "nodeName": "ids_train", "type": "List[unicode]"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "n_valid", "type": "int"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "n_features", "type": "int"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "randint", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "y_valid", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "n_valid", "type": "int"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "from_numpy", "type": "Callable[..., deepchem.datasets.Dataset]"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "valid_dir", "type": "str"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "X_valid", "type": "Any"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "y_valid", "type": "Any"}, {"lineNumber": 120, "col_offset": 57, "nodeName": "w_valid", "type": "Any"}, {"lineNumber": 120, "col_offset": 66, "nodeName": "ids_valid", "type": "List[unicode]"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "matthews_corrcoef", "type": "Any"}, {"lineNumber": 126, "col_offset": 62, "nodeName": "mean", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "HyperparamOpt", "type": "Type[deepchem.hyperparameters.HyperparamOpt]"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "multitask_model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 137, "col_offset": 62, "nodeName": "task_types", "type": "Dict[unicode, unicode]"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "hyperparam_search", "type": "Callable[..., Tuple[Any, Optional[Tuple[Any, ...]], Dict[str, Any]]]"}, {"lineNumber": 140, "col_offset": 6, "nodeName": "params_dict", "type": "Dict[unicode, Union[List[int], List[Any]]]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "valid_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 140, "col_offset": 49, "nodeName": "output_transformers", "type": "List[nothing]"}, {"lineNumber": 141, "col_offset": 6, "nodeName": "classification_metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "CircularFingerprint", "type": "Type[deepchem.featurizers.fingerprints.CircularFingerprint]"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "DataLoader", "type": "Type[deepchem.featurizers.featurize.DataLoader]"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Optional[deepchem.datasets.Dataset]]"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "input_file", "type": "Union[unicode, str]"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "data_dir", "type": "str"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "ScaffoldSplitter", "type": "Type[deepchem.splits.ScaffoldSplitter]"}, {"lineNumber": 160, "col_offset": 49, "nodeName": "train_valid_test_split", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "dataset", "type": "Optional[deepchem.datasets.Dataset]"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "valid_dir", "type": "str"}, {"lineNumber": 161, "col_offset": 49, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "matthews_corrcoef", "type": "Any"}, {"lineNumber": 164, "col_offset": 47, "nodeName": "mean", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "HyperparamOpt", "type": "Type[deepchem.hyperparameters.HyperparamOpt]"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "model_builder", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "hyperparam_search", "type": "Callable[..., Tuple[Any, Optional[Tuple[Any, ...]], Dict[str, Any]]]"}, {"lineNumber": 173, "col_offset": 6, "nodeName": "params_dict", "type": "Dict[unicode, List[int]]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 173, "col_offset": 49, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 174, "col_offset": 6, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "CircularFingerprint", "type": "Type[deepchem.featurizers.fingerprints.CircularFingerprint]"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "DataLoader", "type": "Type[deepchem.featurizers.featurize.DataLoader]"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "featurize", "type": "Callable[..., Optional[deepchem.datasets.Dataset]]"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "input_file", "type": "Union[unicode, str]"}, {"lineNumber": 193, "col_offset": 43, "nodeName": "data_dir", "type": "str"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "ScaffoldSplitter", "type": "Type[deepchem.splits.ScaffoldSplitter]"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "train_valid_test_split", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "dataset", "type": "Optional[deepchem.datasets.Dataset]"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "valid_dir", "type": "str"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "Metric", "type": "Type[deepchem.metrics.Metric]"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "matthews_corrcoef", "type": "Any"}, {"lineNumber": 201, "col_offset": 47, "nodeName": "mean", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "HyperparamOpt", "type": "Type[deepchem.hyperparameters.HyperparamOpt]"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "model_builder", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 209, "col_offset": 48, "nodeName": "hyperparam_search", "type": "Callable[..., Tuple[Any, Optional[Tuple[Any, ...]], Dict[str, Any]]]"}, {"lineNumber": 210, "col_offset": 6, "nodeName": "params_dict", "type": "Dict[unicode, List[Tuple[int]]]"}, {"lineNumber": 210, "col_offset": 19, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "valid_dataset", "type": "Any"}, {"lineNumber": 210, "col_offset": 49, "nodeName": "transformers", "type": "List[nothing]"}, {"lineNumber": 210, "col_offset": 63, "nodeName": "metric", "type": "deepchem.metrics.Metric"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "task", "type": "unicode"}, {"lineNumber": 60, "col_offset": 46, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "smiles_field", "type": "unicode"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "featurizer", "type": "deepchem.featurizers.fingerprints.CircularFingerprint"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "loader", "type": "deepchem.featurizers.featurize.DataLoader"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "splitter", "type": "deepchem.splits.ScaffoldSplitter"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "NormalizationTransformer", "type": "Type[deepchem.transformers.NormalizationTransformer]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "get_data_shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "metrics", "type": "module"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "optimizer", "type": "deepchem.hyperparameters.HyperparamOpt"}, {"lineNumber": 98, "col_offset": 45, "nodeName": "task", "type": "unicode"}, {"lineNumber": 98, "col_offset": 53, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "Dataset", "type": "Type[deepchem.datasets.Dataset]"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "metrics", "type": "module"}, {"lineNumber": 126, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "SklearnModel", "type": "Type[deepchem.models.sklearn_models.SklearnModel]"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "task_types", "type": "Any"}, {"lineNumber": 130, "col_offset": 45, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 130, "col_offset": 59, "nodeName": "task_model_dir", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "SingletaskToMultitask", "type": "Type[deepchem.models.multitask.SingletaskToMultitask]"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "task_types", "type": "Any"}, {"lineNumber": 134, "col_offset": 54, "nodeName": "params_dict", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 135, "col_offset": 51, "nodeName": "model_builder", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "optimizer", "type": "deepchem.hyperparameters.HyperparamOpt"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "n_features", "type": "int"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "smiles_field", "type": "unicode"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "featurizer", "type": "deepchem.featurizers.fingerprints.CircularFingerprint"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "loader", "type": "deepchem.featurizers.featurize.DataLoader"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 160, "col_offset": 49, "nodeName": "splitter", "type": "deepchem.splits.ScaffoldSplitter"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 161, "col_offset": 49, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "metrics", "type": "module"}, {"lineNumber": 164, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "MultiTaskDNN", "type": "Type[deepchem.models.keras_models.fcnet.MultiTaskDNN]"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "n_features", "type": "int"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "task_type", "type": "unicode"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "KerasModel", "type": "Type[deepchem.models.keras_models.KerasModel]"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "keras_model", "type": "deepchem.models.keras_models.fcnet.MultiTaskDNN"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "optimizer", "type": "deepchem.hyperparameters.HyperparamOpt"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "n_features", "type": "int"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "smiles_field", "type": "unicode"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "featurizer", "type": "deepchem.featurizers.fingerprints.CircularFingerprint"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "loader", "type": "deepchem.featurizers.featurize.DataLoader"}, {"lineNumber": 193, "col_offset": 43, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "splitter", "type": "deepchem.splits.ScaffoldSplitter"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "metrics", "type": "module"}, {"lineNumber": 201, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "TensorflowMultiTaskClassifier", "type": "Type[deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier]"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "n_features", "type": "int"}, {"lineNumber": 206, "col_offset": 36, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "TensorflowModel", "type": "Type[deepchem.models.tensorflow_models.TensorflowModel]"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "tensorflow_model", "type": "deepchem.models.tensorflow_models.fcnet.TensorflowMultiTaskClassifier"}, {"lineNumber": 207, "col_offset": 49, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 209, "col_offset": 48, "nodeName": "optimizer", "type": "deepchem.hyperparameters.HyperparamOpt"}, {"lineNumber": 47, "col_offset": 56, "nodeName": "n_estimators", "type": "Any"}, {"lineNumber": 48, "col_offset": 56, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 74, "col_offset": 59, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "transform", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "n_train", "type": "int"}, {"lineNumber": 106, "col_offset": 50, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "n_valid", "type": "int"}, {"lineNumber": 116, "col_offset": 50, "nodeName": "n_tasks", "type": "int"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "get_data_shape", "type": "Callable[[], Any]"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 169, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 169, "col_offset": 59, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "self", "type": "TestHyperparamOptAPI"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "tasks", "type": "List[unicode]"}, {"lineNumber": 206, "col_offset": 49, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "transformer", "type": "deepchem.transformers.NormalizationTransformer"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "train_dataset", "type": "deepchem.datasets.Dataset"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "LogisticRegression", "type": "Any"}]