[{"lineNumber": 89, "col_offset": 22, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 91, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 2, "nodeName": "_assertMatchesExample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 2, "nodeName": "testCreatesAttributes", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 2, "nodeName": "testGetOptionalParam", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 2, "nodeName": "testOnlyValidAttributeNamesAllowed", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 2, "nodeName": "testDuplicateKeysNotAllowed", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 2, "nodeName": "testRequireDefault", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 2, "nodeName": "testSilentOverwrite", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 2, "nodeName": "testHeterogeneousList", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 2, "nodeName": "testWritesFile", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 2, "nodeName": "testReadsFile_NoDuplicates", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 2, "nodeName": "testReadsFile_RequireDefaults", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "googletest", "type": "Any"}, {"lineNumber": 193, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "root", "type": "str"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 194, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "hello", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "pi", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "Forty_Two", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "great", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "scores", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "sizes", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "spells", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "waver", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "ModelConfig", "type": "Type[deepchem.models.tensorflow_models.model_config.ModelConfig]"}, {"lineNumber": 106, "col_offset": 38, "nodeName": "EXAMPLE_DICT", "type": "Dict[str, Union[str, float, int, bool, List[str], List[float], List[int], List[bool]]]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "_assertMatchesExample", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "ModelConfig", "type": "Type[deepchem.models.tensorflow_models.model_config.ModelConfig]"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "EXAMPLE_DICT", "type": "Dict[str, Union[str, float, int, bool, List[str], List[float], List[int], List[bool]]]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "ModelConfig", "type": "Type[deepchem.models.tensorflow_models.model_config.ModelConfig]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "ModelConfig", "type": "Type[deepchem.models.tensorflow_models.model_config.ModelConfig]"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "EXAMPLE_DICT", "type": "Dict[str, Union[str, float, int, bool, List[str], List[float], List[int], List[bool]]]"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "ModelConfig", "type": "Type[deepchem.models.tensorflow_models.model_config.ModelConfig]"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "EXAMPLE_DICT", "type": "Dict[str, Union[str, float, int, bool, List[str], List[float], List[int], List[bool]]]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "AddParam", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "ModelConfig", "type": "Type[deepchem.models.tensorflow_models.model_config.ModelConfig]"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "EXAMPLE_DICT", "type": "Dict[str, Union[str, float, int, bool, List[str], List[float], List[int], List[bool]]]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "AddParam", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "AddParam", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "ModelConfig", "type": "Type[deepchem.models.tensorflow_models.model_config.ModelConfig]"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "ModelConfig", "type": "Type[deepchem.models.tensorflow_models.model_config.ModelConfig]"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "EXAMPLE_DICT", "type": "Dict[str, Union[str, float, int, bool, List[str], List[float], List[int], List[bool]]]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "root", "type": "str"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "WriteToFile", "type": "Callable[[Any], None]"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "filename", "type": "str"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "pbtxt_file", "type": "file"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 174, "col_offset": 28, "nodeName": "root", "type": "str"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "pbtxt_file", "type": "file"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "ModelConfig", "type": "Type[deepchem.models.tensorflow_models.model_config.ModelConfig]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "ReadFromFile", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "filename", "type": "str"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "_assertMatchesExample", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "root", "type": "str"}, {"lineNumber": 184, "col_offset": 32, "nodeName": "pbtxt_file", "type": "file"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "ModelConfig", "type": "Type[deepchem.models.tensorflow_models.model_config.ModelConfig]"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "EXAMPLE_DEFAULTS", "type": "Dict[str, Union[str, float, int, bool, List[str], List[float], List[int], List[bool]]]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "ReadFromFile", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "filename", "type": "str"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "_assertMatchesExample", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 194, "col_offset": 2, "nodeName": "googletest", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "model_config", "type": "module"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "model_config", "type": "module"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "GetOptionalParam", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "GetOptionalParam", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "model_config", "type": "module"}, {"lineNumber": 116, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 117, "col_offset": 6, "nodeName": "AddParam", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 122, "col_offset": 6, "nodeName": "AddParam", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 127, "col_offset": 6, "nodeName": "AddParam", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "AddParam", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "model_config", "type": "module"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 139, "col_offset": 6, "nodeName": "AddParam", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "model_config", "type": "module"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "AddParam", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "model_config", "type": "module"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "model_config", "type": "module"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 161, "col_offset": 6, "nodeName": "AddParam", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "model_config", "type": "module"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 170, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "filename", "type": "str"}, {"lineNumber": 171, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "EXAMPLE_FILE_CONTENTS", "type": "str"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 174, "col_offset": 28, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "filename", "type": "str"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "EXAMPLE_FILE_CONTENTS", "type": "str"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "model_config", "type": "module"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "filename", "type": "str"}, {"lineNumber": 185, "col_offset": 6, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "EXAMPLE_FILE_CONTENTS", "type": "str"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "model_config", "type": "module"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "ModelConfigTest", "type": "Type[ModelConfigTest]"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 116, "col_offset": 9, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 117, "col_offset": 6, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 122, "col_offset": 6, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 127, "col_offset": 6, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 139, "col_offset": 6, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 161, "col_offset": 6, "nodeName": "config", "type": "deepchem.models.tensorflow_models.model_config.ModelConfig"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 171, "col_offset": 6, "nodeName": "self", "type": "ModelConfigTest"}, {"lineNumber": 171, "col_offset": 46, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "pbtxt_file", "type": "file"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 185, "col_offset": 6, "nodeName": "pbtxt_file", "type": "file"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 187, "col_offset": 55, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 171, "col_offset": 46, "nodeName": "pbtxt_file", "type": "file"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "EXAMPLE_DEFAULTS", "type": "Dict[str, Union[str, float, int, bool, List[str], List[float], List[int], List[bool]]]"}, {"lineNumber": 187, "col_offset": 55, "nodeName": "EXAMPLE_DICT", "type": "Dict[str, Union[str, float, int, bool, List[str], List[float], List[int], List[bool]]]"}]