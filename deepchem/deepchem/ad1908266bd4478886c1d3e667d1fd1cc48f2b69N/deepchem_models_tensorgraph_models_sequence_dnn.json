[{"lineNumber": 14, "col_offset": 18, "nodeName": "Sequential", "type": "Type[deepchem.models.tensorgraph.sequential.Sequential]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "num_tasks", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "num_tasks", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "layer", "type": "int"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "loss", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "num_filters", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "self", "type": "SequenceDNN"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "self", "type": "SequenceDNN"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "n_layers", "type": "int"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 62, "col_offset": 6, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 64, "col_offset": 6, "nodeName": "add", "type": "Callable[[Any], None]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "self", "type": "SequenceDNN"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "Flatten", "type": "Type[deepchem.models.tensorgraph.layers.Flatten]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "SequenceDNN"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "Dense", "type": "Type[deepchem.models.tensorgraph.layers.Dense]"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "num_tasks", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "SequenceDNN", "type": "Type[SequenceDNN]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "self", "type": "SequenceDNN"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "num_filters", "type": "Any"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 53, "col_offset": 64, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "num_filters", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 62, "col_offset": 6, "nodeName": "self", "type": "SequenceDNN"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[deepchem.models.tensorgraph.layers.Conv2D]"}, {"lineNumber": 64, "col_offset": 6, "nodeName": "self", "type": "SequenceDNN"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "Dropout", "type": "Type[deepchem.models.tensorgraph.layers.Dropout]"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "layers", "type": "module"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "layers", "type": "module"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "self", "type": "SequenceDNN"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "relu", "type": "Any"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "collections", "type": "module"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "collections", "type": "module"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "layers", "type": "module"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "num_filters", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "nn", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "layer", "type": "int"}, {"lineNumber": 63, "col_offset": 56, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 68, "nodeName": "layer", "type": "int"}]