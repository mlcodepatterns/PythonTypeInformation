[{"lineNumber": 27, "col_offset": 30, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "test", "type": "Any"}, {"lineNumber": 450, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "dict1", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 48, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 49, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "normalize_image", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 64, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 65, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "random_horizontal_flip", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "random_pixel_value_scale", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assert_dictionary_close", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 90, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 91, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "random_image_scale", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_dictionary_close", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 103, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "random_rgb_to_gray", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assert_dictionary_close", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 115, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 116, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "random_adjust_brightness", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assert_dictionary_close", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 128, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 129, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "random_adjust_contrast", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assert_dictionary_close", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 140, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 141, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "random_adjust_hue", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assert_dictionary_close", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 153, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 154, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "random_adjust_saturation", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assert_dictionary_close", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 156, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 165, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 166, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "random_distort_color", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 177, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 178, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "random_jitter_boxes", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assert_dictionary_close", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 195, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 195, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 196, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "random_crop_image", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 212, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 212, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 213, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "random_pad_image", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 234, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 235, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 235, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "random_crop_pad_image", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 256, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 257, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 258, "col_offset": 35, "nodeName": "random_crop_to_aspect_ratio", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assert_dictionary_close", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 259, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 271, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 272, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 273, "col_offset": 35, "nodeName": "random_black_patches", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assert_dictionary_close", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 274, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 286, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 286, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 287, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 288, "col_offset": 35, "nodeName": "random_resize_method", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assert_dictionary_close", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 289, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 296, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 296, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 297, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 297, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 298, "col_offset": 35, "nodeName": "scale_boxes_to_pixel_coordinates", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 309, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 310, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 310, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 311, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 311, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 312, "col_offset": 35, "nodeName": "resize_image", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 324, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 324, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 325, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 325, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 325, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 326, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 326, "col_offset": 35, "nodeName": "subtract_channel_mean", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 327, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 352, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 353, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 353, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 354, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 354, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 354, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 355, "col_offset": 35, "nodeName": "ssd_random_crop", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 368, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 368, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 369, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 369, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 370, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 370, "col_offset": 35, "nodeName": "ssd_random_crop", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 407, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 407, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 408, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 408, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 409, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 409, "col_offset": 35, "nodeName": "ssd_random_crop_pad", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 439, "col_offset": 29, "nodeName": "PreprocessingStep", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 440, "col_offset": 26, "nodeName": "preprocessor_text_proto", "type": "str"}, {"lineNumber": 440, "col_offset": 51, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 441, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 441, "col_offset": 25, "nodeName": "build", "type": "Any"}, {"lineNumber": 441, "col_offset": 52, "nodeName": "preprocessor_proto", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "function", "type": "Any"}, {"lineNumber": 442, "col_offset": 35, "nodeName": "ssd_random_crop_fixed_aspect_ratio", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 443, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 30, "col_offset": 47, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "dict1", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 258, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 273, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 288, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 298, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 309, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 312, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 315, "col_offset": 42, "nodeName": "BICUBIC", "type": "Any"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 325, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 326, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 352, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 354, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 355, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 370, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 409, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 439, "col_offset": 29, "nodeName": "preprocessor_pb2", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 441, "col_offset": 25, "nodeName": "preprocessor_builder", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 442, "col_offset": 35, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "keys", "type": "Any"}, {"lineNumber": 30, "col_offset": 54, "nodeName": "keys", "type": "Any"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "key", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "value", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "value", "type": "Any"}, {"lineNumber": 315, "col_offset": 42, "nodeName": "ResizeMethod", "type": "Any"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "dict1", "type": "Any"}, {"lineNumber": 30, "col_offset": 54, "nodeName": "dict2", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "dict2", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "self", "type": "PreprocessorBuilderTest"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "dict2", "type": "Any"}, {"lineNumber": 315, "col_offset": 42, "nodeName": "image", "type": "Any"}, {"lineNumber": 34, "col_offset": 52, "nodeName": "key", "type": "Any"}, {"lineNumber": 36, "col_offset": 46, "nodeName": "key", "type": "Any"}, {"lineNumber": 315, "col_offset": 42, "nodeName": "tf", "type": "Any"}]