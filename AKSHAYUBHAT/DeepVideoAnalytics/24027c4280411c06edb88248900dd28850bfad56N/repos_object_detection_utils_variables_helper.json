[{"lineNumber": 28, "col_offset": 0, "nodeName": "filter_variables", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "multiply_gradients_matching_regex", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "freeze_gradients_matching_regex", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "get_variables_available_in_checkpoint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "slim", "type": "Any"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "slim", "type": "Any"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "kept_vars", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "variables_to_ignore_patterns", "type": "Iterator[Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "variables", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "kept_vars", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "matching_vars", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "matching_vars", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "grad_multipliers", "type": "Dict[Any, float]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "matching_vars", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "kept_grads_and_vars", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "matching_vars", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "kept_grads_and_vars", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "ckpt_reader", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "ckpt_vars", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "vars_in_ckpt", "type": "Dict[Any, Any]"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "vars_in_ckpt", "type": "Dict[Any, Any]"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "filter_regex_list", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "add", "type": "bool"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "variables_to_ignore_patterns", "type": "Iterator[Any]"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "filter_variables", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "regex_list", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "var", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "multiply_gradients", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "grads_and_vars", "type": "Any"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "grad_multipliers", "type": "Dict[Any, float]"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "filter_variables", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "variables", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "regex_list", "type": "Any"}, {"lineNumber": 116, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "variable_names_map", "type": "Dict[Any, Any]"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "NewCheckpointReader", "type": "Any"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "checkpoint_path", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "keys", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "variable_name", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "variable", "type": "Any"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 131, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "variables", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "add", "type": "bool"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "invert", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "pair", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "pair", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "grads_and_vars", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "multiplier", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "multiplier", "type": "Any"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "var", "type": "Any"}, {"lineNumber": 74, "col_offset": 58, "nodeName": "matching_vars", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "learning", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "pair", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "pair", "type": "Any"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "grads_and_vars", "type": "Any"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "pair", "type": "Any"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "grads_and_vars", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "variable", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "variables", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "variable_names_map", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "variables", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "train", "type": "Any"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "variable_name", "type": "Any"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "ckpt_vars", "type": "Any"}, {"lineNumber": 127, "col_offset": 42, "nodeName": "variable", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "values", "type": "Callable"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "match", "type": "Callable"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "add", "type": "bool"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "var", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "slim", "type": "Any"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "matching_vars", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "op", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "op", "type": "Any"}, {"lineNumber": 117, "col_offset": 61, "nodeName": "variable", "type": "Any"}, {"lineNumber": 117, "col_offset": 73, "nodeName": "variables", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "get_variable_to_shape_map", "type": "Any"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "variable_names_map", "type": "Union[Dict[Any, Any], Any]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "vars_in_ckpt", "type": "Dict[Any, Any]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "variable_name", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "vars_in_ckpt", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "kept_vars", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "pair", "type": "Any"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "var", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "variable", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "ckpt_reader", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "variable_name", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "var", "type": "Any"}]