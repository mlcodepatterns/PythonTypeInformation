[{"lineNumber": 26, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 145, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "label_map_path", "type": "str"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "label_map_dict", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "categories", "type": "List[Dict[str, Union[int, str]]]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "category_index", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "StringIntLabelMap", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "id", "type": "int"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "display_name", "type": "str"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "f", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "get_label_map_dict", "type": "Any"}, {"lineNumber": 51, "col_offset": 59, "nodeName": "label_map_path", "type": "str"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "StringIntLabelMap", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "label_map_string", "type": "str"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "convert_label_map_to_categories", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "categories", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "convert_label_map_to_categories", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "expected_categories_list", "type": "List[Dict[str, Union[int, str]]]"}, {"lineNumber": 99, "col_offset": 55, "nodeName": "categories", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "_generate_label_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "convert_label_map_to_categories", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "expected_categories_list", "type": "List[Dict[str, Union[int, str]]]"}, {"lineNumber": 115, "col_offset": 55, "nodeName": "categories", "type": "Any"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "_generate_label_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "convert_label_map_to_categories", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "expected_categories_list", "type": "List[Dict[str, Union[int, str]]]"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "cat_no_offset", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "create_category_index", "type": "Any"}, {"lineNumber": 132, "col_offset": 62, "nodeName": "categories", "type": "List[Dict[str, Union[int, str]]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "category_index", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "string_int_label_map_pb2", "type": "Any"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "add", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "get_temp_dir", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "Open", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "label_map_path", "type": "str"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "label_map_string", "type": "str"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "label_map_util", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "label_map_dict", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "label_map_dict", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "string_int_label_map_pb2", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "label_map_util", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "label_map_util", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "label_map_util", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "label_map_util", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "label_map_util", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "item", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "gfile", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "tf", "type": "Any"}]