[{"lineNumber": 27, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 116, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "proto_list", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "image_file_name", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "image_data", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "save_path", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "p", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "proto_list", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "expectation", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 41, "col_offset": 54, "nodeName": "image_file_name", "type": "str"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "fromarray", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "image_data", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "save_path", "type": "str"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "image_file_name", "type": "str"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "dict_to_tf_example", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "data", "type": "Dict[str, Union[List[Dict[str, Union[str, int, Dict[str, int]]]], Dict[str, int], str]]"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "label_map_dict", "type": "Dict[str, int]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_assertProtoEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "_assertProtoEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "_assertProtoEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "_assertProtoEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_assertProtoEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "_assertProtoEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_assertProtoEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "_assertProtoEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_assertProtoEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "_assertProtoEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "_assertProtoEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "_assertProtoEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_assertProtoEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_assertProtoEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "p", "type": "Any"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "proto_field", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "get_temp_dir", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "Image", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "create_pascal_tf_record", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "get_temp_dir", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "int64_list", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "int64_list", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "bytes_list", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "image_file_name", "type": "str"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "bytes_list", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "image_file_name", "type": "str"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "bytes_list", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "float_list", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "float_list", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "float_list", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "float_list", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "bytes_list", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "int64_list", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "int64_list", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "int64_list", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "bytes_list", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "PIL", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "self", "type": "DictToTFExampleTest"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "example", "type": "Any"}]