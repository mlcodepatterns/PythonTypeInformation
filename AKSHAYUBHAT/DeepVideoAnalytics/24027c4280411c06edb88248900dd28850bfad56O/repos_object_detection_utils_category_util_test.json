[{"lineNumber": 24, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 53, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "csv_path", "type": "str"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "categories", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "csv_path", "type": "str"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "saved_categories", "type": "Any"}, {"lineNumber": 54, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 31, "col_offset": -1, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "f", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "load_categories_from_csv_file", "type": "Any"}, {"lineNumber": 36, "col_offset": 61, "nodeName": "csv_path", "type": "str"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "save_categories_to_csv_file", "type": "Any"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "categories", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 48, "col_offset": 58, "nodeName": "csv_path", "type": "str"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "load_categories_from_csv_file", "type": "Any"}, {"lineNumber": 49, "col_offset": 67, "nodeName": "csv_path", "type": "str"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "saved_categories", "type": "Any"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "categories", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 54, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "get_temp_dir", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "Open", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "csv_path", "type": "str"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "write", "type": "Any"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "csv_data", "type": "str"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "category_util", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "self", "type": "EvalUtilTest"}, {"lineNumber": 37, "col_offset": 48, "nodeName": "categories", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "self", "type": "EvalUtilTest"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "categories", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "self", "type": "EvalUtilTest"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "categories", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "get_temp_dir", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "category_util", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "category_util", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "self", "type": "EvalUtilTest"}, {"lineNumber": 54, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "self", "type": "EvalUtilTest"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "gfile", "type": "Any"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "f", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "self", "type": "EvalUtilTest"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "tf", "type": "Any"}]