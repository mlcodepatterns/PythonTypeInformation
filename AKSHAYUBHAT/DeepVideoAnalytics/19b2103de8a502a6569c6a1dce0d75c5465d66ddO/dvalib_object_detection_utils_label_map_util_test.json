[{"lineNumber": 26, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 146, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "label_map_path", "type": "str"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "label_map_dict", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "categories", "type": "List[Dict[str, Union[int, str]]]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "category_index", "type": "Any"}, {"lineNumber": 147, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "StringIntLabelMap", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 31, "col_offset": 6, "nodeName": "item", "type": "Any"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "id", "type": "int"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 33, "col_offset": 6, "nodeName": "name", "type": "str"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "display_name", "type": "str"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "f", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "get_label_map_dict", "type": "Any"}, {"lineNumber": 52, "col_offset": 55, "nodeName": "label_map_path", "type": "str"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "StringIntLabelMap", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "label_map_string", "type": "str"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "convert_label_map_to_categories", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "categories", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "convert_label_map_to_categories", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "expected_categories_list", "type": "List[Dict[str, Union[int, str]]]"}, {"lineNumber": 100, "col_offset": 51, "nodeName": "categories", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "_generate_label_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "convert_label_map_to_categories", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "expected_categories_list", "type": "List[Dict[str, Union[int, str]]]"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "categories", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "_generate_label_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "convert_label_map_to_categories", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "expected_categories_list", "type": "List[Dict[str, Union[int, str]]]"}, {"lineNumber": 129, "col_offset": 51, "nodeName": "cat_no_offset", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "create_category_index", "type": "Any"}, {"lineNumber": 133, "col_offset": 58, "nodeName": "categories", "type": "List[Dict[str, Union[int, str]]]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 143, "col_offset": 7, "nodeName": "category_index", "type": "Any"}, {"lineNumber": 147, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "string_int_label_map_pb2", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "add", "type": "Any"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "item", "type": "Any"}, {"lineNumber": 33, "col_offset": 6, "nodeName": "item", "type": "Any"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "item", "type": "Any"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "get_temp_dir", "type": "Any"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "Open", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "label_map_path", "type": "str"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "write", "type": "Any"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "label_map_string", "type": "str"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "label_map_util", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "label_map_dict", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "label_map_dict", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "string_int_label_map_pb2", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "label_map_util", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "label_map_util", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "label_map_util", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "label_map_util", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "label_map_util", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 147, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "item", "type": "Any"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "self", "type": "LabelMapUtilTest"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "gfile", "type": "Any"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "f", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "label_map_proto", "type": "Any"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "tf", "type": "Any"}]