[{"lineNumber": 31, "col_offset": 29, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 143, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "writer", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "image_tensor", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "flat_mask", "type": "List[float]"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "path", "type": "str"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "tf_record_path", "type": "str"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "input_reader_proto", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "sv", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "tf_record_path", "type": "str"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "input_reader_proto", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "sv", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "input_reader_proto", "type": "Any"}, {"lineNumber": 144, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "TFRecordWriter", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "path", "type": "str"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 37, "col_offset": 65, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 40, "col_offset": 6, "nodeName": "encoded_jpeg", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "Example", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "write", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "create_tf_record", "type": "Callable[[], Any]"}, {"lineNumber": 77, "col_offset": -1, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "tf_record_path", "type": "str"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "InputReader", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "input_reader_text_proto", "type": "str"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "input_reader_proto", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "build", "type": "Any"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "input_reader_proto", "type": "Any"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "Supervisor", "type": "Any"}, {"lineNumber": 83, "col_offset": 45, "nodeName": "sess", "type": "Any"}, {"lineNumber": 85, "col_offset": 6, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "create_tf_record", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": -1, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "tf_record_path", "type": "str"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "InputReader", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "input_reader_text_proto", "type": "str"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "input_reader_proto", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "build", "type": "Any"}, {"lineNumber": 112, "col_offset": 45, "nodeName": "input_reader_proto", "type": "Any"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "Supervisor", "type": "Any"}, {"lineNumber": 115, "col_offset": 45, "nodeName": "sess", "type": "Any"}, {"lineNumber": 117, "col_offset": 6, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "InputReader", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "input_reader_text_proto", "type": "str"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "input_reader_proto", "type": "Any"}, {"lineNumber": 144, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "get_temp_dir", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "python_io", "type": "Any"}, {"lineNumber": 37, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "example_pb2", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "writer", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "SerializeToString", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "writer", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "input_reader_pb2", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "input_reader_builder", "type": "Any"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "train", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "prepare_or_wait_for_session", "type": "Any"}, {"lineNumber": 84, "col_offset": 6, "nodeName": "start_queue_runners", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "sess", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "run", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "groundtruth_instance_masks", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "input_reader_pb2", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "input_reader_builder", "type": "Any"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "train", "type": "Any"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "prepare_or_wait_for_session", "type": "Any"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "start_queue_runners", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "sess", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "run", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "input_reader_pb2", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 141, "col_offset": 6, "nodeName": "build", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "input_reader_proto", "type": "Any"}, {"lineNumber": 144, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "randint", "type": "Any"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "Features", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "example", "type": "Any"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "get_temp_dir", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "sv", "type": "Any"}, {"lineNumber": 84, "col_offset": 6, "nodeName": "sv", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "sess", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "InputDataFields", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "groundtruth_classes", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "get_temp_dir", "type": "Any"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "sv", "type": "Any"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "sv", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "sess", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "groundtruth_classes", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 141, "col_offset": 6, "nodeName": "input_reader_builder", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "encode_jpeg", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "fields", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "image", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "InputDataFields", "type": "Any"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "groundtruth_boxes", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "groundtruth_boxes", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "self", "type": "InputReaderBuilderTest"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "image", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "InputDataFields", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "groundtruth_boxes", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "groundtruth_boxes", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "groundtruth_instance_masks", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "image", "type": "Any"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "constant", "type": "Any"}, {"lineNumber": 40, "col_offset": 54, "nodeName": "image_tensor", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "InputDataFields", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "fields", "type": "Any"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "InputDataFields", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "InputDataFields", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "InputDataFields", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "fields", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "InputDataFields", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "InputDataFields", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "InputDataFields", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "Feature", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "Feature", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "Feature", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "Feature", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "Feature", "type": "Any"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "Feature", "type": "Any"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "Feature", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "Feature", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "Feature", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "Feature", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "fields", "type": "Any"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "fields", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "fields", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "fields", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "fields", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "fields", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "fields", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "BytesList", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "BytesList", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "Int64List", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "Int64List", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "FloatList", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "FloatList", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "FloatList", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "FloatList", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "Int64List", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "FloatList", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "feature_pb2", "type": "Any"}, {"lineNumber": 61, "col_offset": 51, "nodeName": "flat_mask", "type": "List[float]"}, {"lineNumber": 43, "col_offset": 52, "nodeName": "encoded_jpeg", "type": "Any"}, {"lineNumber": 45, "col_offset": 52, "nodeName": "encode", "type": "Callable[..., bytes]"}]