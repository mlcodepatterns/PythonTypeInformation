[{"lineNumber": 9, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "test_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_alpha", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "test_fixed_lambda", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "test_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "test_loss", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "mixup", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "Y_true", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "mixup", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "Y_true", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "mixup", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "Y_true", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "lam", "type": "float"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "mixup", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "Y_true", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "return_value", "type": "float"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "Mixup", "type": "Any"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 13, "col_offset": 17, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 17, "col_offset": 33, "nodeName": "Y_true", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "on_sample", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "Mixup", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "Y_true", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "on_sample", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "Mixup", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "MIXUP_LAMBDA", "type": "torchbearer.state.StateKey"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "Y_true", "type": "Any"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "lam", "type": "float"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "on_sample", "type": "Any"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "lam", "type": "float"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "Mixup", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "Y_true", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "on_sample", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "mock_cross_entropy", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "Mixup", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "loss", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 13, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "mixup", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestMixupInputs"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "mixup", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestMixupInputs"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "mixup", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestMixupInputs"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "mixup", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestMixupInputs"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestMixupInputs"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 71, "col_offset": 93, "nodeName": "MIXUP_LAMBDA", "type": "torchbearer.state.StateKey"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "mock_cross_entropy", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 64, "col_offset": 91, "nodeName": "all", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 71, "col_offset": 93, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "call", "type": "Any"}, {"lineNumber": 73, "col_offset": 71, "nodeName": "call", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "eq", "type": "Any"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "MIXUP_LAMBDA", "type": "torchbearer.state.StateKey"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 63, "col_offset": 57, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 21, "col_offset": 40, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 21, "col_offset": 56, "nodeName": "X", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 49, "col_offset": 75, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 63, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 64, "col_offset": 57, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 64, "col_offset": 123, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 21, "col_offset": 40, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 21, "col_offset": 60, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 21, "col_offset": 94, "nodeName": "X", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 49, "col_offset": 81, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 64, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 64, "col_offset": 91, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 64, "col_offset": 123, "nodeName": "torch", "type": "Any"}, {"lineNumber": 21, "col_offset": 66, "nodeName": "MIXUP_LAMBDA", "type": "torchbearer.state.StateKey"}, {"lineNumber": 21, "col_offset": 142, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 49, "col_offset": 81, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 64, "col_offset": 97, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 21, "col_offset": 66, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 21, "col_offset": 148, "nodeName": "MIXUP_LAMBDA", "type": "torchbearer.state.StateKey"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 64, "col_offset": 97, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 21, "col_offset": 96, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 21, "col_offset": 148, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 21, "col_offset": 102, "nodeName": "MIXUP_PERMUTATION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 21, "col_offset": 102, "nodeName": "torchbearer", "type": "module"}]