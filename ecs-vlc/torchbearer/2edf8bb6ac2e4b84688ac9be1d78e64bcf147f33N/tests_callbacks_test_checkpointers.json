[{"lineNumber": 9, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "torchmodel", "type": "unittest.mock.Mock"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "optim", "type": "unittest.mock.Mock"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "torchmodel", "type": "unittest.mock.Mock"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "optim", "type": "unittest.mock.Mock"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "torchmodel", "type": "unittest.mock.Mock"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "optim", "type": "unittest.mock.Mock"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "torchmodel", "type": "unittest.mock.Mock"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "optim", "type": "unittest.mock.Mock"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "torchmodel", "type": "unittest.mock.Mock"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "optim", "type": "unittest.mock.Mock"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "torchmodel", "type": "unittest.mock.Mock"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "optim", "type": "unittest.mock.Mock"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "most_recent", "type": "str"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.MostRecent"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "most_recent", "type": "str"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "epochs_since_last_save", "type": "int"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "most_recent", "type": "str"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "best", "type": "str"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "epochs_since_last_save", "type": "int"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "state_dict", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable[[Any], None]"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "most_recent", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "MostRecent", "type": "Type[torchbearer.callbacks.checkpointers.MostRecent]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "state_dict", "type": "Callable[[], Any]"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable[[Any], None]"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "state", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "most_recent", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "epochs_since_last_save", "type": "Any"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 216, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 219, "col_offset": 27, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 243, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 249, "col_offset": 27, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 262, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 264, "col_offset": 27, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 268, "col_offset": 27, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 276, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 279, "col_offset": 27, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 291, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 294, "col_offset": 27, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 299, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 305, "col_offset": 27, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "state_dict", "type": "Callable[[], Any]"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable[[Any], None]"}, {"lineNumber": 317, "col_offset": 30, "nodeName": "state", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "most_recent", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "best", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "epochs_since_last_save", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "mock_dirs", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "Model", "type": "Any"}, {"lineNumber": 20, "col_offset": 36, "nodeName": "torchmodel", "type": "unittest.mock.Mock"}, {"lineNumber": 20, "col_offset": 48, "nodeName": "optim", "type": "unittest.mock.Mock"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "Model", "type": "Any"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "torchmodel", "type": "unittest.mock.Mock"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "optim", "type": "unittest.mock.Mock"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "Model", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "torchmodel", "type": "unittest.mock.Mock"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "optim", "type": "unittest.mock.Mock"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "Model", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "torchmodel", "type": "unittest.mock.Mock"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "optim", "type": "unittest.mock.Mock"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "Model", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "torchmodel", "type": "unittest.mock.Mock"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "optim", "type": "unittest.mock.Mock"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "Model", "type": "Any"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "torchmodel", "type": "unittest.mock.Mock"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "optim", "type": "unittest.mock.Mock"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "most_recent", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "most_recent", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestModelCheckpoint"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 135, "col_offset": 73, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestModelCheckpoint"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 138, "col_offset": 74, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.MostRecent"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.MostRecent"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestInterval"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestInterval"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 243, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 280, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "mode", "type": "Any"}, {"lineNumber": 299, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 306, "col_offset": 24, "nodeName": "mode", "type": "Any"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "TestBest"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "self", "type": "TestBest"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "TestBest"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "ModelCheckpoint", "type": "Callable[..., Union[torchbearer.callbacks.checkpointers.Best, torchbearer.callbacks.checkpointers.Interval]]"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "ModelCheckpoint", "type": "Callable[..., Union[torchbearer.callbacks.checkpointers.Best, torchbearer.callbacks.checkpointers.Interval]]"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 280, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 306, "col_offset": 24, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 32, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 177, "col_offset": 32, "nodeName": "mock_save_check", "type": "Any"}]