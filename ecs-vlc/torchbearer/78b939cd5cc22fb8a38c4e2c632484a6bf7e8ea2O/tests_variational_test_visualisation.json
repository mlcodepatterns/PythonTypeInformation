[{"lineNumber": 10, "col_offset": 25, "nodeName": "LatentWalker", "type": "Type[torchbearer.variational.visualisation.LatentWalker]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "vis", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "test_on_train_on_val", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "test_for_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "test_data_key", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_to_key_to_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "test_vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_vis_to_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "test_vis_to_key", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "test_data_key", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test_save_walk", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "test_empty_method", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "test_recon", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "test_single_dim", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "test_single_dim_alt", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "test_single_dim_zero_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "test_multi_dim", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "test_multi_dim_same_image", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "test_multi_dim_zero_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "test_limits", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "test_code_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "test_code_shape_alt", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "test_vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "test_vis", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 10, "col_offset": 25, "nodeName": "vis", "type": "module"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 326, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "space_id", "type": "int"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "data_key", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "out_key", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "out_file", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "_save_walk", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "data_key", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "return_value", "type": "str"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "walker", "type": "torchbearer.variational.visualisation.LatentWalker"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "row_size", "type": "int"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "rv", "type": "torchbearer.variational.visualisation.ReconstructionViewer"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "codes", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "latent_dims", "type": "List[int]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 147, "col_offset": 46, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "codes", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "latent_dims", "type": "List[int]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 247, "col_offset": 46, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 277, "col_offset": 19, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "codes", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "latent_dims", "type": "List[int]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 305, "col_offset": 46, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "code1", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "code2", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "pw", "type": "torchbearer.variational.visualisation.CodePathWalker"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "correct_code", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "line_inv", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "codes", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "latent_dims", "type": "List[int]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 338, "col_offset": 46, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "im1", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "im2", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "ipw", "type": "torchbearer.variational.visualisation.ImagePathWalker"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 348, "col_offset": 20, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "dev", "type": "str"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "SimpleLatentWalker", "type": "Type[SimpleLatentWalker]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "on_train", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "on_val", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "SimpleLatentWalker", "type": "Type[SimpleLatentWalker]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "for_space", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "space_id", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "SimpleLatentWalker", "type": "Type[SimpleLatentWalker]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "for_data", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "data_key", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "SimpleLatentWalker", "type": "Type[SimpleLatentWalker]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "to_key", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "out_key", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "to_file", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "out_file", "type": "str"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "MODEL", "type": "Any"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "DEVICE", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "SimpleLatentWalker", "type": "Type[SimpleLatentWalker]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_vis", "type": "Callable[[Any], None]"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "MODEL", "type": "Any"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "DEVICE", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "SimpleLatentWalker", "type": "Type[SimpleLatentWalker]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "to_file", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "_vis", "type": "Callable[[Any], None]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "MODEL", "type": "Any"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "DEVICE", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "SimpleLatentWalker", "type": "Type[SimpleLatentWalker]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "to_key", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_vis", "type": "Callable[[Any], None]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "MODEL", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "DEVICE", "type": "Any"}, {"lineNumber": 92, "col_offset": 67, "nodeName": "data_key", "type": "str"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "SimpleLatentWalker", "type": "Type[SimpleLatentWalker]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "for_data", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "data_key", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "_vis", "type": "Callable[[Any], None]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "MODEL", "type": "Any"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "DEVICE", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "SimpleLatentWalker", "type": "Type[SimpleLatentWalker]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "to_file", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_vis", "type": "Callable[[Any], None]"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "LatentWalker", "type": "Type[torchbearer.variational.visualisation.LatentWalker]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "X", "type": "Any"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "Y_PRED", "type": "Any"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "ReconstructionViewer", "type": "Type[torchbearer.variational.visualisation.ReconstructionViewer]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "rv", "type": "torchbearer.variational.visualisation.ReconstructionViewer"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "rv", "type": "torchbearer.variational.visualisation.ReconstructionViewer"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "methodName", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 139, "col_offset": 50, "nodeName": "Y_PRED", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "rand", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "encode", "type": "Any"}, {"lineNumber": 146, "col_offset": 47, "nodeName": "codes", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "decode", "type": "Any"}, {"lineNumber": 147, "col_offset": 46, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "LinSpaceWalker", "type": "Type[torchbearer.variational.visualisation.LinSpaceWalker]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "LinSpaceWalker", "type": "Type[torchbearer.variational.visualisation.LinSpaceWalker]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "LinSpaceWalker", "type": "Type[torchbearer.variational.visualisation.LinSpaceWalker]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "LinSpaceWalker", "type": "Type[torchbearer.variational.visualisation.LinSpaceWalker]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "cat", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "LinSpaceWalker", "type": "Type[torchbearer.variational.visualisation.LinSpaceWalker]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "LinSpaceWalker", "type": "Type[torchbearer.variational.visualisation.LinSpaceWalker]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 215, "col_offset": 29, "nodeName": "cat", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "LinSpaceWalker", "type": "Type[torchbearer.variational.visualisation.LinSpaceWalker]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "methodName", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 239, "col_offset": 50, "nodeName": "Y_PRED", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 241, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "rand", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "encode", "type": "Any"}, {"lineNumber": 246, "col_offset": 47, "nodeName": "codes", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "decode", "type": "Any"}, {"lineNumber": 247, "col_offset": 46, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "RandomWalker", "type": "Type[torchbearer.variational.visualisation.RandomWalker]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "decode", "type": "Any"}, {"lineNumber": 259, "col_offset": 46, "nodeName": "rand", "type": "Any"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "RandomWalker", "type": "Type[torchbearer.variational.visualisation.RandomWalker]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "mock_rand", "type": "Any"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "mock_randn", "type": "Any"}, {"lineNumber": 273, "col_offset": 34, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "RandomWalker", "type": "Type[torchbearer.variational.visualisation.RandomWalker]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "state", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 277, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "RandomWalker", "type": "Type[torchbearer.variational.visualisation.RandomWalker]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 285, "col_offset": 18, "nodeName": "state", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "methodName", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "TestCodePathWalker"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 297, "col_offset": 50, "nodeName": "Y_PRED", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "TestCodePathWalker"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "self", "type": "TestCodePathWalker"}, {"lineNumber": 300, "col_offset": 23, "nodeName": "rand", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "TestCodePathWalker"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "encode", "type": "Any"}, {"lineNumber": 304, "col_offset": 47, "nodeName": "codes", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "decode", "type": "Any"}, {"lineNumber": 305, "col_offset": 46, "nodeName": "self", "type": "TestCodePathWalker"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "eye", "type": "Any"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "to", "type": "Any"}, {"lineNumber": 309, "col_offset": 42, "nodeName": "float", "type": "Any"}, {"lineNumber": 311, "col_offset": 13, "nodeName": "CodePathWalker", "type": "Type[torchbearer.variational.visualisation.CodePathWalker]"}, {"lineNumber": 311, "col_offset": 35, "nodeName": "code1", "type": "Any"}, {"lineNumber": 311, "col_offset": 42, "nodeName": "code2", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "pw", "type": "torchbearer.variational.visualisation.CodePathWalker"}, {"lineNumber": 312, "col_offset": 18, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "pw", "type": "torchbearer.variational.visualisation.CodePathWalker"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "self", "type": "TestCodePathWalker"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "pw", "type": "torchbearer.variational.visualisation.CodePathWalker"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 320, "col_offset": 51, "nodeName": "line_inv", "type": "Any"}, {"lineNumber": 320, "col_offset": 61, "nodeName": "line", "type": "Any"}, {"lineNumber": 321, "col_offset": 51, "nodeName": "line", "type": "Any"}, {"lineNumber": 321, "col_offset": 57, "nodeName": "line_inv", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "methodName", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "TestImagePathWalker"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 330, "col_offset": 50, "nodeName": "Y_PRED", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "TestImagePathWalker"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "TestImagePathWalker"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "rand", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "TestImagePathWalker"}, {"lineNumber": 335, "col_offset": 26, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "encode", "type": "Any"}, {"lineNumber": 337, "col_offset": 47, "nodeName": "codes", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "decode", "type": "Any"}, {"lineNumber": 338, "col_offset": 46, "nodeName": "self", "type": "TestImagePathWalker"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 342, "col_offset": 38, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 344, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 345, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 346, "col_offset": 14, "nodeName": "ImagePathWalker", "type": "Type[torchbearer.variational.visualisation.ImagePathWalker]"}, {"lineNumber": 346, "col_offset": 37, "nodeName": "im1", "type": "Any"}, {"lineNumber": 346, "col_offset": 42, "nodeName": "im2", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "ipw", "type": "torchbearer.variational.visualisation.ImagePathWalker"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "ipw", "type": "torchbearer.variational.visualisation.ImagePathWalker"}, {"lineNumber": 348, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "ipw", "type": "torchbearer.variational.visualisation.ImagePathWalker"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 52, "nodeName": "_vis", "type": "Callable[[Any], None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestLatentWalker"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "variable_space", "type": "int"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "space_id", "type": "int"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "data_key", "type": "Any"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "data_key", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestLatentWalker"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "file", "type": "Any"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "out_file", "type": "str"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestLatentWalker"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "store_key", "type": "Any"}, {"lineNumber": 51, "col_offset": 40, "nodeName": "out_key", "type": "str"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "tb", "type": "module"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "tb", "type": "module"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "tb", "type": "module"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestLatentWalker"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestLatentWalker"}, {"lineNumber": 62, "col_offset": 50, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "tb", "type": "module"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "tb", "type": "module"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "tb", "type": "module"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestLatentWalker"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestLatentWalker"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "tb", "type": "module"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "tb", "type": "module"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "tb", "type": "module"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestLatentWalker"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "tb", "type": "module"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "tb", "type": "module"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "tb", "type": "module"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestLatentWalker"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "tb", "type": "module"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "tb", "type": "module"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "tb", "type": "module"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "vis", "type": "module"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestLatentWalker"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "tb", "type": "module"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "tb", "type": "module"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "rand", "type": "Any"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "rand", "type": "Any"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "vis", "type": "module"}, {"lineNumber": 127, "col_offset": 47, "nodeName": "row_size", "type": "int"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "rv", "type": "torchbearer.variational.visualisation.ReconstructionViewer"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestReconstructionViewer"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "tb", "type": "module"}, {"lineNumber": 139, "col_offset": 50, "nodeName": "tb", "type": "module"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "rand", "type": "Any"}, {"lineNumber": 139, "col_offset": 61, "nodeName": "rand", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 146, "col_offset": 47, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "vis", "type": "module"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 157, "col_offset": 58, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "vis", "type": "module"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 168, "col_offset": 58, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "vis", "type": "module"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 179, "col_offset": 58, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "vis", "type": "module"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 190, "col_offset": 58, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 191, "col_offset": 58, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "vis", "type": "module"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 203, "col_offset": 58, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 204, "col_offset": 58, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "vis", "type": "module"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 215, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 216, "col_offset": 58, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 217, "col_offset": 58, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "vis", "type": "module"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "lw", "type": "torchbearer.variational.visualisation.LinSpaceWalker"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 229, "col_offset": 33, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 229, "col_offset": 58, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 230, "col_offset": 33, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 230, "col_offset": 58, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "tb", "type": "module"}, {"lineNumber": 239, "col_offset": 50, "nodeName": "tb", "type": "module"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "rand", "type": "Any"}, {"lineNumber": 239, "col_offset": 61, "nodeName": "rand", "type": "Any"}, {"lineNumber": 241, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 246, "col_offset": 47, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "vis", "type": "module"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 259, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "vis", "type": "module"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 273, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "vis", "type": "module"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 276, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "vis", "type": "module"}, {"lineNumber": 285, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "rw", "type": "torchbearer.variational.visualisation.RandomWalker"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "tb", "type": "module"}, {"lineNumber": 297, "col_offset": 50, "nodeName": "tb", "type": "module"}, {"lineNumber": 297, "col_offset": 28, "nodeName": "rand", "type": "Any"}, {"lineNumber": 297, "col_offset": 61, "nodeName": "rand", "type": "Any"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 300, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "self", "type": "TestCodePathWalker"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 304, "col_offset": 47, "nodeName": "self", "type": "TestCodePathWalker"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 309, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 311, "col_offset": 13, "nodeName": "vis", "type": "module"}, {"lineNumber": 312, "col_offset": 18, "nodeName": "self", "type": "TestCodePathWalker"}, {"lineNumber": 312, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "pw", "type": "torchbearer.variational.visualisation.CodePathWalker"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "self", "type": "TestCodePathWalker"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "correct_code", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "correct_code", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "correct_code", "type": "Any"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "correct_code", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "TestCodePathWalker"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "tb", "type": "module"}, {"lineNumber": 330, "col_offset": 50, "nodeName": "tb", "type": "module"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "rand", "type": "Any"}, {"lineNumber": 330, "col_offset": 61, "nodeName": "rand", "type": "Any"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "TestImagePathWalker"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 337, "col_offset": 47, "nodeName": "self", "type": "TestImagePathWalker"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "mock_super", "type": "Any"}, {"lineNumber": 344, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 345, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 346, "col_offset": 14, "nodeName": "vis", "type": "module"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 347, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "ipw", "type": "torchbearer.variational.visualisation.ImagePathWalker"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "mock_ope", "type": "Any"}, {"lineNumber": 24, "col_offset": 52, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "vis", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "_save_walk", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 119, "col_offset": 55, "nodeName": "vis", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "tb", "type": "module"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 139, "col_offset": 61, "nodeName": "torch", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "tb", "type": "module"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "codes", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "tb", "type": "module"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "codes", "type": "Any"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "tb", "type": "module"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "tb", "type": "module"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 189, "col_offset": 68, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "tb", "type": "module"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "codes", "type": "Any"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "tb", "type": "module"}, {"lineNumber": 215, "col_offset": 40, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 215, "col_offset": 87, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "tb", "type": "module"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "codes", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 239, "col_offset": 61, "nodeName": "torch", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "tb", "type": "module"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "tb", "type": "module"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 276, "col_offset": 29, "nodeName": "tb", "type": "module"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "mock_rand", "type": "Any"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "mock_randn", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "tb", "type": "module"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "mock_rand", "type": "Any"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "mock_randn", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 297, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 297, "col_offset": 61, "nodeName": "torch", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "TestCodePathWalker"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "TestCodePathWalker"}, {"lineNumber": 312, "col_offset": 29, "nodeName": "tb", "type": "module"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 330, "col_offset": 61, "nodeName": "torch", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "TestImagePathWalker"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "TestImagePathWalker"}, {"lineNumber": 347, "col_offset": 30, "nodeName": "tb", "type": "module"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 119, "col_offset": 55, "nodeName": "walker", "type": "torchbearer.variational.visualisation.LatentWalker"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "eye", "type": "Any"}, {"lineNumber": 323, "col_offset": 67, "nodeName": "correct_code", "type": "Any"}, {"lineNumber": 352, "col_offset": 75, "nodeName": "im1", "type": "Any"}, {"lineNumber": 353, "col_offset": 75, "nodeName": "im2", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "mock_ope", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "vis", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "_save_walk", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "mock_save_img", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "mock_save_img", "type": "Any"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "cat", "type": "Any"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "codes", "type": "Any"}, {"lineNumber": 180, "col_offset": 69, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "codes", "type": "Any"}, {"lineNumber": 189, "col_offset": 68, "nodeName": "codes", "type": "Any"}, {"lineNumber": 193, "col_offset": 69, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 206, "col_offset": 69, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 215, "col_offset": 40, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 215, "col_offset": 52, "nodeName": "shape", "type": "Any"}, {"lineNumber": 215, "col_offset": 87, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 215, "col_offset": 99, "nodeName": "shape", "type": "Any"}, {"lineNumber": 219, "col_offset": 69, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 232, "col_offset": 69, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "lw", "type": "SimpleLatentWalker"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 158, "col_offset": 69, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 169, "col_offset": 69, "nodeName": "correct_lin_sample", "type": "Any"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 189, "col_offset": 68, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 215, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 215, "col_offset": 87, "nodeName": "torch", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 215, "col_offset": 52, "nodeName": "codes", "type": "Any"}, {"lineNumber": 215, "col_offset": 99, "nodeName": "codes", "type": "Any"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "decode", "type": "Any"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 132, "col_offset": 43, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 132, "col_offset": 56, "nodeName": "row_size", "type": "int"}, {"lineNumber": 132, "col_offset": 67, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 132, "col_offset": 85, "nodeName": "row_size", "type": "int"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 215, "col_offset": 52, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 215, "col_offset": 99, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "decode", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "decode", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "encode", "type": "Any"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "encode", "type": "Any"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "X", "type": "Any"}, {"lineNumber": 132, "col_offset": 73, "nodeName": "Y_PRED", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "decode", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "decode", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "decode", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "decode", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "decode", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "decode", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "decode", "type": "Any"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "self", "type": "TestCodePathWalker"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "tb", "type": "module"}, {"lineNumber": 132, "col_offset": 73, "nodeName": "tb", "type": "module"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "mock_model", "type": "Any"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "self", "type": "TestRandomWalker"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "self", "type": "TestLinspaceWalker"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "self", "type": "TestLinspaceWalker"}]