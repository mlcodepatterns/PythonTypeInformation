[{"lineNumber": 8, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "test_write_header", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "test_write_no_header", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "test_csv_closed", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_append", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "test_get_field_dict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "logger_fields_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "EPOCH", "type": "Any"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "BATCH", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "METRICS", "type": "Any"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "CSVLogger", "type": "Type[torchbearer.callbacks.csv_logger.CSVLogger]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "on_end", "type": "Callable[[Any], None]"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "EPOCH", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "BATCH", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "METRICS", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "CSVLogger", "type": "Type[torchbearer.callbacks.csv_logger.CSVLogger]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "on_end", "type": "Callable[[Any], None]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "EPOCH", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "BATCH", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "METRICS", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "CSVLogger", "type": "Type[torchbearer.callbacks.csv_logger.CSVLogger]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "on_end", "type": "Callable[[Any], None]"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "called", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "EPOCH", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "BATCH", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "METRICS", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "CSVLogger", "type": "Type[torchbearer.callbacks.csv_logger.CSVLogger]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "on_end", "type": "Callable[[Any], None]"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "EPOCH", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "BATCH", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "METRICS", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "CSVLogger", "type": "Type[torchbearer.callbacks.csv_logger.CSVLogger]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "_get_field_dict", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 96, "col_offset": 52, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "logger_fields_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 98, "col_offset": 49, "nodeName": "correct_fields_dict", "type": "Dict[str, Union[int, float]]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "EPOCH", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "BATCH", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "METRICS", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "CSVLogger", "type": "Type[torchbearer.callbacks.csv_logger.CSVLogger]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "on_end", "type": "Callable[[Any], None]"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "EPOCH", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "BATCH", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "METRICS", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "CSVLogger", "type": "Type[torchbearer.callbacks.csv_logger.CSVLogger]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "on_end", "type": "Callable[[Any], None]"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "state", "type": "Dict[Any, Union[int, Dict[str, Union[float, int]]]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "header", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 43, "nodeName": "header", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "header", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "header", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 47, "nodeName": "header", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 47, "nodeName": "header", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "close", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "mock_write", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "logger", "type": "torchbearer.callbacks.csv_logger.CSVLogger"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "mock_calls", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "mock_calls", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "mock_write", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "mock_open", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "mock_open", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "mock_open", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "mock_open", "type": "Any"}]