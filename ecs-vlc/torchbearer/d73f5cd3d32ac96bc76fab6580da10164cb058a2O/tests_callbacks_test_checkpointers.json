[{"lineNumber": 9, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "test_make_dirs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "test_save_checkpoint_save_filename", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_save_checkpoint_formatting", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "test_save_checkpoint_formatting_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_save_checkpoint_subformatting", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_save_checkpoint_model_only", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "test_save_checkpoint_wrong_format", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "test_best_only", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "test_not_best_only", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "test_save", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "test_interval_is_1", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "test_interval_is_more_than_1", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "test_interval_on_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "test_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "test_min_with_increasing", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "test_min_with_decreasing", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "test_max_with_increasing", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "test_max_with_decreasing", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "test_min_delta_no_save", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "test_min_delta_save", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "test_auto_shoud_be_min", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "test_auto_shoud_be_max", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "test_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "most_recent", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.MostRecent"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "epochs_since_last_save", "type": "int"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "best", "type": "str"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "epochs_since_last_save", "type": "int"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 20, "col_offset": 53, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "MostRecent", "type": "Type[torchbearer.callbacks.checkpointers.MostRecent]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Any"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Any"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Any"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "state_dict", "type": "Callable[[], Any]"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "state", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "epochs_since_last_save", "type": "Any"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 241, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 252, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 280, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 282, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 286, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 297, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 300, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 306, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 310, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 312, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 316, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 321, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 325, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 327, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 332, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 335, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 338, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "state_dict", "type": "Callable[[], Any]"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable"}, {"lineNumber": 349, "col_offset": 30, "nodeName": "state", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "best", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "epochs_since_last_save", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "mock_dirs", "type": "Any"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 31, "col_offset": 48, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 64, "col_offset": 48, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 117, "col_offset": 36, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "most_recent", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "most_recent", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestModelCheckpoint"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 154, "col_offset": 73, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestModelCheckpoint"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 157, "col_offset": 74, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.MostRecent"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.MostRecent"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "on_checkpoint", "type": "Any"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "on_step_training", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "TestInterval"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 257, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 300, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 306, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 321, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "mode", "type": "Any"}, {"lineNumber": 332, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 339, "col_offset": 24, "nodeName": "mode", "type": "Any"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "TestBest"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "TestBest"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 22, "col_offset": 60, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "ModelCheckpoint", "type": "Callable[..., Union[torchbearer.callbacks.checkpointers.Best, torchbearer.callbacks.checkpointers.Interval]]"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "ModelCheckpoint", "type": "Callable[..., Union[torchbearer.callbacks.checkpointers.Best, torchbearer.callbacks.checkpointers.Interval]]"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 257, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 313, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 339, "col_offset": 24, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 22, "col_offset": 60, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 22, "col_offset": 78, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 24, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 24, "col_offset": 63, "nodeName": "message", "type": "Warning"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 32, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 208, "col_offset": 32, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 24, "col_offset": 63, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "mock_save_check", "type": "Any"}]