[{"lineNumber": 13, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "train", "type": "unittest.mock.Mock"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "eval", "type": "unittest.mock.Mock"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "reset", "type": "unittest.mock.Mock"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "process", "type": "unittest.mock.Mock"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "process_final", "type": "unittest.mock.Mock"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "_to_dict", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "calls", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "calls", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "Metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "ToDict", "type": "Any"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "BatchLambda", "type": "Any"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assert_has_calls", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 47, "nodeName": "calls", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assert_has_calls", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "calls", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "EpochLambda", "type": "Any"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "process_final", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assert_not_called", "type": "Callable[[], None]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "process_final_validate", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "EpochLambda", "type": "Any"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assert_not_called", "type": "Callable[[], None]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "_to_dict", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "train", "type": "unittest.mock.Mock"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "process", "type": "unittest.mock.Mock"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "_to_dict", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "train", "type": "unittest.mock.Mock"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "process_final", "type": "unittest.mock.Mock"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "_to_dict", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "eval", "type": "unittest.mock.Mock"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "process", "type": "unittest.mock.Mock"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_to_dict", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "eval", "type": "unittest.mock.Mock"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "process_final", "type": "unittest.mock.Mock"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_to_dict", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "reset", "type": "unittest.mock.Mock"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 61, "col_offset": 79, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 62, "col_offset": 79, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 63, "col_offset": 79, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "_states", "type": "List[Dict[torchbearer.state.StateKey, Any]]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "process", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "_states", "type": "List[Dict[torchbearer.state.StateKey, Any]]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "process", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "DEVICE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "DATA_TYPE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 86, "col_offset": 78, "nodeName": "float32", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "BATCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 87, "col_offset": 90, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 87, "col_offset": 136, "nodeName": "DEVICE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "BATCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 88, "col_offset": 90, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 88, "col_offset": 136, "nodeName": "DEVICE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "BATCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 89, "col_offset": 90, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 89, "col_offset": 136, "nodeName": "DEVICE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "BATCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 90, "col_offset": 90, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 90, "col_offset": 136, "nodeName": "DEVICE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "BATCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 91, "col_offset": 90, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 91, "col_offset": 136, "nodeName": "DEVICE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "_states", "type": "List[Dict[torchbearer.state.StateKey, Any]]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "process", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "call_args_list", "type": "unittest.mock._CallList"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "call_args_list", "type": "unittest.mock._CallList"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "_states", "type": "List[Dict[torchbearer.state.StateKey, Any]]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "process", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "DEVICE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 123, "col_offset": 49, "nodeName": "DATA_TYPE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 123, "col_offset": 72, "nodeName": "float32", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "process", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "process", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "process_final", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "process", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "process_final", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 61, "col_offset": 79, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 61, "col_offset": 45, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 61, "col_offset": 99, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 62, "col_offset": 79, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 62, "col_offset": 99, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 63, "col_offset": 79, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 63, "col_offset": 99, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "_states", "type": "List[Dict[torchbearer.state.StateKey, Any]]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "calls", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "call", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 70, "col_offset": 72, "nodeName": "data", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "_states", "type": "List[Dict[torchbearer.state.StateKey, Any]]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "calls", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "call", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 78, "col_offset": 72, "nodeName": "data", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 86, "col_offset": 78, "nodeName": "torch", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 87, "col_offset": 90, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 87, "col_offset": 136, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 87, "col_offset": 67, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 87, "col_offset": 110, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 88, "col_offset": 90, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 88, "col_offset": 136, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 88, "col_offset": 67, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 88, "col_offset": 110, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 89, "col_offset": 90, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 89, "col_offset": 136, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 89, "col_offset": 67, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 89, "col_offset": 110, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 90, "col_offset": 90, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 90, "col_offset": 136, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 90, "col_offset": 67, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 90, "col_offset": 110, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 91, "col_offset": 90, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 91, "col_offset": 136, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 91, "col_offset": 67, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 91, "col_offset": 110, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 96, "col_offset": 59, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "_states", "type": "List[Dict[torchbearer.state.StateKey, Any]]"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "eq", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "lt", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "_states", "type": "List[Dict[torchbearer.state.StateKey, Any]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "eq", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "lt", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 123, "col_offset": 49, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 123, "col_offset": 72, "nodeName": "torch", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "metric", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "_states", "type": "List[Dict[torchbearer.state.StateKey, Any]]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "_to_dict", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "_to_dict", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "_to_dict", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "_to_dict", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 61, "col_offset": 108, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 62, "col_offset": 54, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 62, "col_offset": 108, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 63, "col_offset": 108, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 87, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 87, "col_offset": 110, "nodeName": "torch", "type": "Any"}, {"lineNumber": 88, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 88, "col_offset": 110, "nodeName": "torch", "type": "Any"}, {"lineNumber": 89, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 89, "col_offset": 110, "nodeName": "torch", "type": "Any"}, {"lineNumber": 90, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 90, "col_offset": 110, "nodeName": "torch", "type": "Any"}, {"lineNumber": 91, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 91, "col_offset": 110, "nodeName": "torch", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 96, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "eq", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "lt", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 107, "col_offset": 80, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "abs", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 113, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 118, "col_offset": 80, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "abs", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "self", "type": "TestToDict"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 108, "nodeName": "torch", "type": "Any"}, {"lineNumber": 62, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 62, "col_offset": 108, "nodeName": "torch", "type": "Any"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 63, "col_offset": 108, "nodeName": "torch", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "abs", "type": "Any"}, {"lineNumber": 107, "col_offset": 80, "nodeName": "torch", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 108, "col_offset": 43, "nodeName": "add", "type": "Any"}, {"lineNumber": 118, "col_offset": 80, "nodeName": "torch", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 119, "col_offset": 43, "nodeName": "add", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "_states", "type": "List[Dict[torchbearer.state.StateKey, Any]]"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 70, "col_offset": 72, "nodeName": "_states", "type": "List[Dict[torchbearer.state.StateKey, Any]]"}, {"lineNumber": 70, "col_offset": 88, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "_states", "type": "List[Dict[torchbearer.state.StateKey, Any]]"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 78, "col_offset": 72, "nodeName": "_states", "type": "List[Dict[torchbearer.state.StateKey, Any]]"}, {"lineNumber": 78, "col_offset": 88, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 101, "col_offset": 84, "nodeName": "calls", "type": "List[List[Any]]"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "add", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "call_args_list", "type": "unittest.mock._CallList"}, {"lineNumber": 108, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "call_args_list", "type": "unittest.mock._CallList"}, {"lineNumber": 119, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 70, "col_offset": 72, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 70, "col_offset": 85, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 88, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 78, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 78, "col_offset": 72, "nodeName": "self", "type": "TestBatchLambda"}, {"lineNumber": 78, "col_offset": 85, "nodeName": "i", "type": "int"}, {"lineNumber": 78, "col_offset": 88, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "call_args_list", "type": "unittest.mock._CallList"}, {"lineNumber": 101, "col_offset": 90, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 108, "col_offset": 101, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 119, "col_offset": 101, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 101, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "call_args_list", "type": "unittest.mock._CallList"}, {"lineNumber": 108, "col_offset": 101, "nodeName": "torch", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 119, "col_offset": 53, "nodeName": "call_args_list", "type": "unittest.mock._CallList"}, {"lineNumber": 119, "col_offset": 101, "nodeName": "torch", "type": "Any"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 102, "col_offset": 57, "nodeName": "call_args_list", "type": "unittest.mock._CallList"}, {"lineNumber": 102, "col_offset": 105, "nodeName": "calls", "type": "List[List[Any]]"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 119, "col_offset": 53, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 102, "col_offset": 57, "nodeName": "_metric_function", "type": "unittest.mock.Mock"}, {"lineNumber": 102, "col_offset": 94, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 111, "nodeName": "i", "type": "int"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 119, "col_offset": 53, "nodeName": "self", "type": "TestEpochLambda"}, {"lineNumber": 102, "col_offset": 57, "nodeName": "self", "type": "TestEpochLambda"}]