[{"lineNumber": 11, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, str]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "return_value", "type": "unittest.mock.Mock"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "reset", "type": "unittest.mock.Mock"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "process", "type": "unittest.mock.Mock"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "process_final", "type": "unittest.mock.Mock"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "eval", "type": "unittest.mock.Mock"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "train", "type": "unittest.mock.Mock"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "DefaultAccuracy", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, str]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "DefaultAccuracy", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "DefaultAccuracy", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "cross_entropy", "type": "Any"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "DefaultAccuracy", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "nll_loss", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "DefaultAccuracy", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "DefaultAccuracy", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "mse_loss", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "DefaultAccuracy", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "DefaultAccuracy", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "DefaultAccuracy", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "binary_cross_entropy", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "DefaultAccuracy", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "binary_cross_entropy_with_logits", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "DefaultAccuracy", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "cat_acc", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "DefaultAccuracy", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "process", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "process_final", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestDefaultAccuracy"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 19, "col_offset": 40, "nodeName": "CrossEntropyLoss", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestDefaultAccuracy"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 24, "col_offset": 40, "nodeName": "NLLLoss", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestDefaultAccuracy"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "F", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestDefaultAccuracy"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "F", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestDefaultAccuracy"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "MSELoss", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestDefaultAccuracy"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "F", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestDefaultAccuracy"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "BCELoss", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestDefaultAccuracy"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "BCEWithLogitsLoss", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestDefaultAccuracy"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "F", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestDefaultAccuracy"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "F", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestDefaultAccuracy"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "cat_acc", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "reset", "type": "unittest.mock.Mock"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "process", "type": "unittest.mock.Mock"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "process_final", "type": "unittest.mock.Mock"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "eval", "type": "unittest.mock.Mock"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "train", "type": "unittest.mock.Mock"}, {"lineNumber": 19, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 24, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "mock", "type": "unittest.mock.Mock"}]