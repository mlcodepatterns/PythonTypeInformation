[{"lineNumber": 9, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "test_make_dirs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "test_save_checkpoint_save_filename", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "test_save_checkpoint_formatting", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "test_save_checkpoint_formatting_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_save_checkpoint_subformatting", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "test_save_checkpoint_wrong_format", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "test_best_only", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "test_not_best_only", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "test_save", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "test_interval_is_1", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "test_interval_is_more_than_1", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "test_interval_on_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "test_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "test_min_with_increasing", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "test_min_with_decreasing", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "test_max_with_increasing", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "test_max_with_decreasing", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "test_min_delta_no_save", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "test_min_delta_save", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "test_auto_shoud_be_min", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "test_auto_shoud_be_max", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "test_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "file_format", "type": "str"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.MostRecent"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "epochs_since_last_save", "type": "int"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "best", "type": "str"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "epochs_since_last_save", "type": "int"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "SELF", "type": "torchbearer.state.StateKey"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "_Checkpointer", "type": "Type[torchbearer.callbacks.checkpointers._Checkpointer]"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "file_format", "type": "str"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "MostRecent", "type": "Type[torchbearer.callbacks.checkpointers.MostRecent]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Any"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Any"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "state_dict", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "state", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "epochs_since_last_save", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 210, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 241, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 252, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 280, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 282, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 286, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 297, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 302, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "file_path", "type": "str"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 306, "col_offset": 23, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Dict[str, float]]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "state_dict", "type": "Callable[[], Any]"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable"}, {"lineNumber": 319, "col_offset": 30, "nodeName": "state", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "best", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "epochs_since_last_save", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "mock_dirs", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 20, "col_offset": 36, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 20, "col_offset": 48, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "save_checkpoint", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "Trial", "type": "Any"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "torchmodel", "type": "mock.Mock"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "optim", "type": "mock.Mock"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "most_recent", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "most_recent", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestModelCheckpoint"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 124, "col_offset": 73, "nodeName": "Best", "type": "Type[torchbearer.callbacks.checkpointers.Best]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestModelCheckpoint"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 127, "col_offset": 74, "nodeName": "Interval", "type": "Type[torchbearer.callbacks.checkpointers.Interval]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.MostRecent"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.MostRecent"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "on_checkpoint", "type": "Any"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "on_step_training", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 35, "nodeName": "state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestInterval"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 210, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 257, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "mode", "type": "Any"}, {"lineNumber": 302, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 309, "col_offset": 24, "nodeName": "mode", "type": "Any"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "TestBest"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "TestBest"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers._Checkpointer"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "ModelCheckpoint", "type": "Callable[..., Union[torchbearer.callbacks.checkpointers.Best, torchbearer.callbacks.checkpointers.Interval]]"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "ModelCheckpoint", "type": "Callable[..., Union[torchbearer.callbacks.checkpointers.Best, torchbearer.callbacks.checkpointers.Interval]]"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Interval"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 257, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 309, "col_offset": 24, "nodeName": "check", "type": "torchbearer.callbacks.checkpointers.Best"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "mock_save", "type": "Any"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "mock_save_check", "type": "Any"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "mock_save_check", "type": "Any"}]