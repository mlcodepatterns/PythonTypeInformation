[{"lineNumber": 8, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "TerminateOnNaN", "type": "Type[torchbearer.callbacks.terminate_on_nan.TerminateOnNaN]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 21, "col_offset": 36, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 23, "col_offset": 38, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "TerminateOnNaN", "type": "Type[torchbearer.callbacks.terminate_on_nan.TerminateOnNaN]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "TerminateOnNaN", "type": "Type[torchbearer.callbacks.terminate_on_nan.TerminateOnNaN]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "TerminateOnNaN", "type": "Type[torchbearer.callbacks.terminate_on_nan.TerminateOnNaN]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "TerminateOnNaN", "type": "Type[torchbearer.callbacks.terminate_on_nan.TerminateOnNaN]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "state", "type": "Dict[str, Union[Dict[str, float], bool, int]]"}, {"lineNumber": 16, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 51, "col_offset": 62, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 86, "col_offset": 62, "nodeName": "float", "type": "Type[float]"}]