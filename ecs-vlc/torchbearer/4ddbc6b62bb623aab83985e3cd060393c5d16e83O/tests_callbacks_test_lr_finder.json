[{"lineNumber": 7, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "test_scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "test_modes", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "test_next_lr_tri", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_next_lr_tri2", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_next_lr_exp_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "test_end_to_end", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_end_to_end_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "finder", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "scaler", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "finder2", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "finder", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "true_scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "finder2", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "gamma", "type": "float"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "true_scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "finder3", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "finder", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "cycle_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "finder", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "gamma", "type": "float"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "finder", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "iterations", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "iterations", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "iterations", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "iterations", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "model2", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "clr", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "model2", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "clr", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 10, "col_offset": 17, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "finder", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "finder", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "finder", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "finder", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "on_start", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "on_start", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 10, "col_offset": 17, "nodeName": "lrf", "type": "module"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 13, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "lrf", "type": "module"}, {"lineNumber": 14, "col_offset": 40, "nodeName": "scaler", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "lrf", "type": "module"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "scale_mode", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "lrf", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "scale_mode", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "gamma", "type": "float"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "x", "type": "int"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "lrf", "type": "module"}, {"lineNumber": 29, "col_offset": 55, "nodeName": "gamma", "type": "float"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "scale_mode", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "lrf", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "floor", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "lrf", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "gamma", "type": "float"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "x", "type": "int"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "lrf", "type": "module"}, {"lineNumber": 56, "col_offset": 69, "nodeName": "gamma", "type": "float"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "next_lr", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "optim", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "lrf", "type": "module"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "clr", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "optim", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "on_sample", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "on_step_training", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "optim", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "lr", "type": "Any"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "optim", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "lr", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "optim", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "lrf", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "clr", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "optim", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "on_sample", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "on_step_training", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "optim", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "lr", "type": "Any"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "optim", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 11, "col_offset": 24, "nodeName": "scale_fn", "type": "Any"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "scale_fn", "type": "Any"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "finder", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "scale_fn", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "finder", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "scale_fn", "type": "Any"}, {"lineNumber": 25, "col_offset": 48, "nodeName": "true_scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "finder3", "type": "Any"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "scale_fn", "type": "Any"}, {"lineNumber": 31, "col_offset": 48, "nodeName": "true_scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 49, "col_offset": 70, "nodeName": "scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 50, "col_offset": 63, "nodeName": "scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 59, "col_offset": 76, "nodeName": "scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 61, "col_offset": 61, "nodeName": "scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 63, "col_offset": 70, "nodeName": "scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "finder", "type": "Any"}, {"lineNumber": 65, "col_offset": 63, "nodeName": "scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "tb", "type": "module"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "clr", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "optim", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "clr", "type": "Any"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "optim", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "lr", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "tb", "type": "module"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "clr", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "optim", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "clr", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "optim", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "lr", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "lr", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "lr", "type": "Any"}, {"lineNumber": 11, "col_offset": 24, "nodeName": "finder", "type": "Any"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "finder2", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "finder", "type": "Any"}, {"lineNumber": 22, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "finder2", "type": "Any"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "finder3", "type": "Any"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "x", "type": "int"}, {"lineNumber": 49, "col_offset": 79, "nodeName": "cycle_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 72, "nodeName": "cycle_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "tb", "type": "module"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "tb", "type": "module"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "tb", "type": "module"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "tb", "type": "module"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "model2", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "model2", "type": "Any"}]