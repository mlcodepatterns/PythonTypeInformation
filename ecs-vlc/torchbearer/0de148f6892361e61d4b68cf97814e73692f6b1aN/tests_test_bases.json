[{"lineNumber": 11, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "test_requires_grad", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_empty_methods", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "test_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "test_empty_methods", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "test_opt", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "test_forward_x", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test_forward_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "test_loss_no_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "test_loss_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "test_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "test_callback_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "model_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "model_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "loss_sig", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "loss_sig", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "root", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "metric", "type": "torchbearer.bases.Metric"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "zero_grad", "type": "mock.Mock"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "x", "type": "str"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "x", "type": "str"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "y_true", "type": "str"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "crit", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "y_true", "type": "str"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "crit", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "loss", "type": "mock.Mock"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "backward", "type": "mock.Mock"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "on_forward", "type": "mock.Mock"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "on_criterion", "type": "mock.Mock"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "on_backward", "type": "mock.Mock"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "Metric", "type": "Type[torchbearer.bases.Metric]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "Callback", "type": "Type[torchbearer.bases.Callback]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 55, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "Callback", "type": "Type[torchbearer.bases.Callback]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "Callback", "type": "Type[torchbearer.bases.Callback]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 77, "col_offset": 73, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 78, "col_offset": 65, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 78, "col_offset": 89, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 79, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 78, "col_offset": 112, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 81, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 81, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 82, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 82, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any], Any], Callable[[Any, Any], Any], mock.Mock, mock.MagicMock, Dict[nothing, nothing]]]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "model_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 96, "col_offset": 65, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 96, "col_offset": 89, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 97, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "x", "type": "str"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 96, "col_offset": 112, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 99, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 99, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 99, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 100, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 100, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "model_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 113, "col_offset": 61, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 114, "col_offset": 65, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 114, "col_offset": 89, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 115, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "x", "type": "str"}, {"lineNumber": 113, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 114, "col_offset": 112, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 117, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 117, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 118, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 118, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 58, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "loss_sig", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 132, "col_offset": 75, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 133, "col_offset": 70, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 134, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 132, "col_offset": 95, "nodeName": "y_true", "type": "str"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "crit", "type": "Any"}, {"lineNumber": 133, "col_offset": 93, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 136, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 136, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 137, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 137, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "loss_sig", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 150, "col_offset": 75, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 151, "col_offset": 46, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 151, "col_offset": 70, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 152, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 150, "col_offset": 95, "nodeName": "y_true", "type": "str"}, {"lineNumber": 151, "col_offset": 40, "nodeName": "crit", "type": "Any"}, {"lineNumber": 151, "col_offset": 93, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 154, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 154, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 154, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 155, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 155, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 51, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "loss", "type": "mock.Mock"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 164, "col_offset": 73, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 165, "col_offset": 60, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 165, "col_offset": 84, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 166, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 165, "col_offset": 107, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 168, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 168, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 169, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 169, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any], Any], mock.Mock, mock.MagicMock, Dict[nothing, nothing]]]]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 176, "col_offset": 35, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 180, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 180, "col_offset": 73, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 181, "col_offset": 67, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 181, "col_offset": 91, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 182, "col_offset": 59, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 181, "col_offset": 114, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 182, "col_offset": 44, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 184, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 184, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 184, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 185, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 185, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any], Any], mock.Mock, Dict[nothing, nothing]]]]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 14, "col_offset": 32, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "state_dict", "type": "Callable[[], Dict[Any, Any]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "load_state_dict", "type": "Callable"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "on_init", "type": "Callable[[Any], None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "on_start_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "on_start_training", "type": "Callable[[Any], None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "on_sample", "type": "Callable[[Any], None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "on_forward", "type": "Callable[[Any], None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "on_criterion", "type": "Callable[[Any], None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "on_backward", "type": "Callable[[Any], None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "on_end_training", "type": "Callable[[Any], None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "on_end", "type": "Callable[[Any], None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "on_start_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "on_sample_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "on_forward_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "on_end_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "on_criterion_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 77, "col_offset": 73, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 78, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 78, "col_offset": 89, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 79, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 81, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 81, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 82, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 82, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 96, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 96, "col_offset": 89, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 97, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 99, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 99, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 99, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 100, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 100, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 102, "col_offset": 49, "nodeName": "x", "type": "str"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 113, "col_offset": 61, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 114, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 114, "col_offset": 89, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 115, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 117, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 117, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 118, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 118, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 120, "col_offset": 49, "nodeName": "x", "type": "str"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 132, "col_offset": 75, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 133, "col_offset": 70, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 134, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 132, "col_offset": 67, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 136, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 136, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 137, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 137, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 150, "col_offset": 75, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 151, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 151, "col_offset": 70, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 152, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 150, "col_offset": 67, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 154, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 154, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 154, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 155, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 155, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 164, "col_offset": 73, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 165, "col_offset": 60, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 165, "col_offset": 84, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 166, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 165, "col_offset": 54, "nodeName": "loss", "type": "mock.Mock"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 168, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 168, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 169, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 169, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 180, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 180, "col_offset": 73, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 181, "col_offset": 67, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 181, "col_offset": 91, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 182, "col_offset": 59, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 184, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 184, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 184, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 185, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 185, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 14, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "process", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "process_final", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "zero_grad", "type": "mock.Mock"}, {"lineNumber": 96, "col_offset": 52, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 114, "col_offset": 52, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 139, "col_offset": 54, "nodeName": "y_true", "type": "str"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "backward", "type": "mock.Mock"}, {"lineNumber": 181, "col_offset": 54, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "on_forward", "type": "mock.Mock"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "on_criterion", "type": "mock.Mock"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "on_backward", "type": "mock.Mock"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "metric", "type": "torchbearer.bases.Metric"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "metric", "type": "torchbearer.bases.Metric"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "crit", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "crit", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "loss", "type": "mock.Mock"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "torchbearer", "type": "module"}]