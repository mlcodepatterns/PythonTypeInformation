[{"lineNumber": 11, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "test_requires_grad", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_empty_methods", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "test_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "test_empty_methods", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "state_model_with_e", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "stateless_model_with_e", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "optional_model_with_e", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_opt", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "test_forward_x", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "test_forward_multiple_x", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "test_forward_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "test_forward_multiple_x_and_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "test_loss_no_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "test_loss_multiple_output_no_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "test_loss_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "test_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "test_callback_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "test_stateless_type_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "test_stateless_exception", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "test_exception_exception", "type": "Callable[[Any], Any]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "test_state_exception", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "test_state_type_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 340, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "state_model_with_e", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "stateless_model_with_e", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "test_opt", "type": "Callable[[Any], Any]"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "test_forward_x", "type": "Callable[[Any], Any]"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "test_forward_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "test_loss_no_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "test_loss_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "test_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "test_callback_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "test_stateless_type_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "test_stateless_exception", "type": "Callable[[Any], Any]"}, {"lineNumber": 509, "col_offset": 4, "nodeName": "test_state_exception", "type": "Callable[[Any], Any]"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "test_state_type_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "model_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "model_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "model_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "model_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "loss_sig", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "loss_sig", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "loss_sig", "type": "Callable[[Any], Any]"}, {"lineNumber": 340, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "model_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "model_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "loss_sig", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "loss_sig", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "root", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "metric", "type": "torchbearer.bases.Metric"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "model", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "model", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "zero_grad", "type": "mock.Mock"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "x", "type": "str"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "x1", "type": "str"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "x2", "type": "str"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "x", "type": "str"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "x1", "type": "str"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "x2", "type": "str"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "y_true", "type": "str"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "crit", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "y_pred1", "type": "str"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "y_pred2", "type": "str"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "y_true1", "type": "str"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "y_true2", "type": "str"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "crit", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "y_true", "type": "str"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "crit", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "loss", "type": "mock.Mock"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "backward", "type": "mock.Mock"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "on_forward", "type": "mock.Mock"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "on_criterion", "type": "mock.Mock"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "on_backward", "type": "mock.Mock"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "module_name", "type": "str"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "bogus_module", "type": "module"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "old_module", "type": "Any"}, {"lineNumber": 350, "col_offset": 35, "nodeName": "bogus_module", "type": "module"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "mock_amp", "type": "mock.MagicMock"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "amp", "type": "mock.MagicMock"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "mock_amp", "type": "mock.MagicMock"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "model", "type": "Callable[[Any], Any]"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "zero_grad", "type": "mock.Mock"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 382, "col_offset": 18, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "x", "type": "str"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 399, "col_offset": 18, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "x", "type": "str"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 416, "col_offset": 18, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "y_true", "type": "str"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "crit", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 434, "col_offset": 18, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "y_true", "type": "str"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "crit", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 451, "col_offset": 18, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "loss", "type": "mock.Mock"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "backward", "type": "mock.Mock"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 464, "col_offset": 18, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "on_forward", "type": "mock.Mock"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "on_criterion", "type": "mock.Mock"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "on_backward", "type": "mock.Mock"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 479, "col_offset": 18, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 490, "col_offset": 18, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 501, "col_offset": 18, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 513, "col_offset": 18, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 525, "col_offset": 18, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "Metric", "type": "Type[torchbearer.bases.Metric]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "Callback", "type": "Type[torchbearer.bases.Callback]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 55, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "Callback", "type": "Type[torchbearer.bases.Callback]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "Callback", "type": "Type[torchbearer.bases.Callback]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "e", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "e", "type": "Any"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "e", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 96, "col_offset": 73, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 97, "col_offset": 65, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 97, "col_offset": 89, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 98, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 97, "col_offset": 112, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 100, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 100, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 101, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 101, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any], Any], Callable[[Any, Any], Any], mock.Mock, mock.MagicMock, Dict[nothing, nothing]]]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "model_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 114, "col_offset": 61, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 115, "col_offset": 65, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 115, "col_offset": 89, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 116, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "x", "type": "str"}, {"lineNumber": 114, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 115, "col_offset": 112, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 118, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 118, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 119, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 119, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "model_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 133, "col_offset": 68, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 134, "col_offset": 65, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 134, "col_offset": 89, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 135, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 133, "col_offset": 61, "nodeName": "model", "type": "Any"}, {"lineNumber": 134, "col_offset": 112, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 137, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 137, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 138, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 138, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "model_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 152, "col_offset": 61, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 153, "col_offset": 65, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 153, "col_offset": 89, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 154, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "x", "type": "str"}, {"lineNumber": 152, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 153, "col_offset": 112, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 156, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 156, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 156, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 157, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 157, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 58, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "model_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 172, "col_offset": 68, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 173, "col_offset": 65, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 173, "col_offset": 89, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 174, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 172, "col_offset": 61, "nodeName": "model", "type": "Any"}, {"lineNumber": 173, "col_offset": 112, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 176, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 176, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 177, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 177, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 58, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "loss_sig", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 192, "col_offset": 75, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 193, "col_offset": 46, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 193, "col_offset": 70, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 194, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 192, "col_offset": 95, "nodeName": "y_true", "type": "str"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "crit", "type": "Any"}, {"lineNumber": 193, "col_offset": 93, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 196, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 196, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 196, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 197, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 197, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 31, "nodeName": "loss_sig", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 212, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 212, "col_offset": 87, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 213, "col_offset": 46, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 213, "col_offset": 70, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 214, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 213, "col_offset": 40, "nodeName": "crit", "type": "Any"}, {"lineNumber": 213, "col_offset": 93, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 216, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 216, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 216, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 217, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 217, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 217, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "loss_sig", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 230, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 230, "col_offset": 75, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 231, "col_offset": 70, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 232, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 230, "col_offset": 95, "nodeName": "y_true", "type": "str"}, {"lineNumber": 231, "col_offset": 40, "nodeName": "crit", "type": "Any"}, {"lineNumber": 231, "col_offset": 93, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 234, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 234, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 235, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 235, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 51, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "loss", "type": "mock.Mock"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 244, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 244, "col_offset": 73, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 245, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 245, "col_offset": 60, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 245, "col_offset": 84, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 246, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 245, "col_offset": 107, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 248, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 248, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 248, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 248, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 249, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 249, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any], Any], mock.Mock, mock.MagicMock, Dict[nothing, nothing]]]]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 254, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 257, "col_offset": 37, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 258, "col_offset": 36, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 260, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 260, "col_offset": 73, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 261, "col_offset": 67, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 261, "col_offset": 91, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 262, "col_offset": 59, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 261, "col_offset": 114, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 262, "col_offset": 44, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 264, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 264, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 264, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 265, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 265, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 265, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any], Any], mock.Mock, Dict[nothing, nothing]]]]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 273, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 273, "col_offset": 105, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 274, "col_offset": 17, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 274, "col_offset": 48, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 274, "col_offset": 83, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 276, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 276, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 276, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 277, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 277, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 279, "col_offset": 45, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 285, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 285, "col_offset": 105, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 286, "col_offset": 48, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 286, "col_offset": 83, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 288, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 288, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 288, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 288, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 288, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 289, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 289, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 289, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 291, "col_offset": 45, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 299, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 299, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 300, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 301, "col_offset": 17, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 301, "col_offset": 48, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 301, "col_offset": 83, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 303, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 303, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 303, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 303, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 303, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 304, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 304, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 306, "col_offset": 45, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 315, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 315, "col_offset": 101, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 316, "col_offset": 17, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 316, "col_offset": 48, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 316, "col_offset": 83, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 318, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 318, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 318, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 318, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 319, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 319, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 319, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 321, "col_offset": 45, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 328, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 328, "col_offset": 101, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 329, "col_offset": 48, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 329, "col_offset": 83, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 331, "col_offset": 18, "nodeName": "base_closure", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 331, "col_offset": 31, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 331, "col_offset": 46, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 331, "col_offset": 65, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 331, "col_offset": 85, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 332, "col_offset": 31, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 332, "col_offset": 54, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 332, "col_offset": 72, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 334, "col_offset": 45, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 348, "col_offset": 23, "nodeName": "ModuleType", "type": "Type[module]"}, {"lineNumber": 348, "col_offset": 40, "nodeName": "module_name", "type": "str"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "modules", "type": "Dict[str, Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 351, "col_offset": 24, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "bogus_module", "type": "module"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 355, "col_offset": 23, "nodeName": "apex_closure", "type": "Callable[[], Callable[[Any], Any]]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "tearDown", "type": "Callable[[], None]"}, {"lineNumber": 359, "col_offset": 11, "nodeName": "old_module", "type": "Any"}, {"lineNumber": 361, "col_offset": 34, "nodeName": "old_module", "type": "Any"}, {"lineNumber": 365, "col_offset": 18, "nodeName": "e", "type": "Any"}, {"lineNumber": 371, "col_offset": 18, "nodeName": "e", "type": "Any"}, {"lineNumber": 376, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 378, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 378, "col_offset": 73, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 379, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 379, "col_offset": 65, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 379, "col_offset": 89, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 380, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 380, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 379, "col_offset": 112, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 382, "col_offset": 18, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any], Any], Callable[[Any, Any], Any], mock.Mock, mock.MagicMock, Dict[nothing, nothing]]]]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 387, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 391, "col_offset": 32, "nodeName": "model_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 395, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 395, "col_offset": 35, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 395, "col_offset": 61, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 396, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 396, "col_offset": 65, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 396, "col_offset": 89, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 397, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 395, "col_offset": 32, "nodeName": "x", "type": "str"}, {"lineNumber": 395, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 396, "col_offset": 112, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 399, "col_offset": 18, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 404, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 408, "col_offset": 16, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 408, "col_offset": 32, "nodeName": "model_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 412, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 412, "col_offset": 35, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 412, "col_offset": 61, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 413, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 413, "col_offset": 65, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 413, "col_offset": 89, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 414, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 414, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 412, "col_offset": 32, "nodeName": "x", "type": "str"}, {"lineNumber": 412, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 413, "col_offset": 112, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 416, "col_offset": 18, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 58, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 422, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 428, "col_offset": 15, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 428, "col_offset": 31, "nodeName": "loss_sig", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 430, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 430, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 430, "col_offset": 75, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 431, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 431, "col_offset": 46, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 431, "col_offset": 70, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 432, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 432, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 430, "col_offset": 95, "nodeName": "y_true", "type": "str"}, {"lineNumber": 431, "col_offset": 40, "nodeName": "crit", "type": "Any"}, {"lineNumber": 431, "col_offset": 93, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 434, "col_offset": 18, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 439, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 445, "col_offset": 31, "nodeName": "loss_sig", "type": "Callable[[Any], Any]"}, {"lineNumber": 447, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 447, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 447, "col_offset": 75, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 448, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 448, "col_offset": 46, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 448, "col_offset": 70, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 449, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 449, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 447, "col_offset": 95, "nodeName": "y_true", "type": "str"}, {"lineNumber": 448, "col_offset": 40, "nodeName": "crit", "type": "Any"}, {"lineNumber": 448, "col_offset": 93, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 451, "col_offset": 18, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 453, "col_offset": 51, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 456, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "loss", "type": "mock.Mock"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 460, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 460, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 460, "col_offset": 73, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 461, "col_offset": 60, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 461, "col_offset": 84, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 462, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 462, "col_offset": 57, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 461, "col_offset": 107, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 464, "col_offset": 18, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 465, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any], Any], mock.Mock, mock.MagicMock, Dict[nothing, nothing]]]]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 470, "col_offset": 24, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 471, "col_offset": 35, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 472, "col_offset": 37, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 473, "col_offset": 36, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 475, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 475, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 475, "col_offset": 73, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 476, "col_offset": 17, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 476, "col_offset": 67, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 476, "col_offset": 91, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 477, "col_offset": 17, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 477, "col_offset": 59, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 476, "col_offset": 114, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 477, "col_offset": 44, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 479, "col_offset": 18, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 480, "col_offset": 16, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any], Any], mock.Mock, Dict[nothing, nothing]]]]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 487, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 487, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 487, "col_offset": 105, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 488, "col_offset": 17, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 488, "col_offset": 48, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 488, "col_offset": 83, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 490, "col_offset": 18, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 492, "col_offset": 45, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 498, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 498, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 498, "col_offset": 105, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 499, "col_offset": 17, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 499, "col_offset": 48, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 499, "col_offset": 83, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 501, "col_offset": 18, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 503, "col_offset": 45, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 510, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 510, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 510, "col_offset": 101, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 511, "col_offset": 17, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 511, "col_offset": 48, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 511, "col_offset": 83, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 513, "col_offset": 18, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 515, "col_offset": 45, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 522, "col_offset": 38, "nodeName": "MODEL", "type": "torchbearer.state.StateKey"}, {"lineNumber": 522, "col_offset": 101, "nodeName": "CRITERION", "type": "torchbearer.state.StateKey"}, {"lineNumber": 523, "col_offset": 17, "nodeName": "OPTIMIZER", "type": "torchbearer.state.StateKey"}, {"lineNumber": 523, "col_offset": 48, "nodeName": "CALLBACK_LIST", "type": "torchbearer.state.StateKey"}, {"lineNumber": 523, "col_offset": 83, "nodeName": "BACKWARD_ARGS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 525, "col_offset": 18, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 527, "col_offset": 45, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 14, "col_offset": 32, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "state_dict", "type": "Callable[[], Dict[Any, Any]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "load_state_dict", "type": "Callable"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "on_init", "type": "Callable[[Any], None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "on_start_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "on_start_training", "type": "Callable[[Any], None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "on_sample", "type": "Callable[[Any], None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "on_forward", "type": "Callable[[Any], None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "on_criterion", "type": "Callable[[Any], None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "on_backward", "type": "Callable[[Any], None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "on_end_training", "type": "Callable[[Any], None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "on_end", "type": "Callable[[Any], None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "on_start_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "on_sample_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "on_forward_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "on_end_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "on_criterion_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 96, "col_offset": 73, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 97, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 97, "col_offset": 89, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 98, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 100, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 100, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 101, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 101, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 114, "col_offset": 61, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 115, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 115, "col_offset": 89, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 116, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 118, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 118, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 119, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 119, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 121, "col_offset": 49, "nodeName": "x", "type": "str"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 133, "col_offset": 68, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 134, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 134, "col_offset": 89, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 135, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "x1", "type": "str"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "x2", "type": "str"}, {"lineNumber": 135, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 137, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 137, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 138, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 138, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 140, "col_offset": 49, "nodeName": "x1", "type": "str"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 141, "col_offset": 49, "nodeName": "x2", "type": "str"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 152, "col_offset": 61, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 153, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 153, "col_offset": 89, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 154, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 154, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 156, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 156, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 156, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 157, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 157, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 159, "col_offset": 49, "nodeName": "x", "type": "str"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 172, "col_offset": 68, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 173, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 173, "col_offset": 89, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 174, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "x1", "type": "str"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "x2", "type": "str"}, {"lineNumber": 174, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 176, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 176, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 177, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 177, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 179, "col_offset": 49, "nodeName": "x1", "type": "str"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 180, "col_offset": 49, "nodeName": "x2", "type": "str"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 192, "col_offset": 75, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 193, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 193, "col_offset": 70, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 194, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 192, "col_offset": 67, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 194, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 196, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 196, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 196, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 197, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 197, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 212, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 212, "col_offset": 87, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 213, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 213, "col_offset": 70, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 214, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 212, "col_offset": 108, "nodeName": "y_true1", "type": "str"}, {"lineNumber": 212, "col_offset": 117, "nodeName": "y_true2", "type": "str"}, {"lineNumber": 214, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 216, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 216, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 216, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 217, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 217, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 217, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 230, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 230, "col_offset": 75, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 231, "col_offset": 70, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 232, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 230, "col_offset": 67, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 232, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 234, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 234, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 235, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 235, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 244, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 244, "col_offset": 73, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 245, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 245, "col_offset": 60, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 245, "col_offset": 84, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 246, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 245, "col_offset": 54, "nodeName": "loss", "type": "mock.Mock"}, {"lineNumber": 246, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 248, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 248, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 248, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 248, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 249, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 249, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 260, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 260, "col_offset": 73, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 261, "col_offset": 67, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 261, "col_offset": 91, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 262, "col_offset": 59, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 264, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 264, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 264, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 265, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 265, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 265, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 273, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 273, "col_offset": 105, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 274, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 274, "col_offset": 48, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 274, "col_offset": 83, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 273, "col_offset": 57, "nodeName": "stateless_model_with_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 274, "col_offset": 40, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 274, "col_offset": 75, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 276, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 276, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 276, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 277, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 277, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any], Any], mock.Mock, Dict[nothing, nothing]]]]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 285, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 285, "col_offset": 105, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 286, "col_offset": 48, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 286, "col_offset": 83, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 285, "col_offset": 57, "nodeName": "stateless_model_with_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 286, "col_offset": 40, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 286, "col_offset": 75, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 288, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 288, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 288, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 288, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 289, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 289, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 289, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 291, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any], Any], mock.Mock, Dict[nothing, nothing]]]]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 295, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 299, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 299, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 300, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 301, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 301, "col_offset": 48, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 301, "col_offset": 83, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 299, "col_offset": 57, "nodeName": "optional_model_with_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 301, "col_offset": 40, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 301, "col_offset": 75, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 303, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 303, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 303, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 303, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 304, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 304, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 306, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[..., Any], Callable[[Any], Any], mock.Mock, Dict[nothing, nothing]]]]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 310, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 311, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 315, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 315, "col_offset": 101, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 316, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 316, "col_offset": 48, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 316, "col_offset": 83, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 315, "col_offset": 57, "nodeName": "state_model_with_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 316, "col_offset": 40, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 316, "col_offset": 75, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 318, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 318, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 318, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 319, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 319, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 319, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 321, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 321, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any, Any], Any], Callable[[Any], Any], mock.Mock, Dict[nothing, nothing]]]]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 325, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 328, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 328, "col_offset": 101, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 329, "col_offset": 48, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 329, "col_offset": 83, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 328, "col_offset": 57, "nodeName": "state_model_with_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 40, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 329, "col_offset": 75, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 331, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 331, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 331, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 331, "col_offset": 85, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 332, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 332, "col_offset": 54, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 332, "col_offset": 72, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 334, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any, Any], Any], Callable[[Any], Any], mock.Mock, Dict[nothing, nothing]]]]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 348, "col_offset": 23, "nodeName": "types", "type": "module"}, {"lineNumber": 349, "col_offset": 54, "nodeName": "module_name", "type": "str"}, {"lineNumber": 349, "col_offset": 69, "nodeName": "modules", "type": "Dict[str, Any]"}, {"lineNumber": 349, "col_offset": 26, "nodeName": "modules", "type": "Dict[str, Any]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 350, "col_offset": 20, "nodeName": "module_name", "type": "str"}, {"lineNumber": 359, "col_offset": 11, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "modules", "type": "Dict[str, Any]"}, {"lineNumber": 361, "col_offset": 34, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 378, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 378, "col_offset": 73, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 379, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 379, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 379, "col_offset": 89, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 380, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 380, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 380, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 384, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 395, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 395, "col_offset": 35, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 395, "col_offset": 61, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 396, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 396, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 396, "col_offset": 89, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 397, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 397, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 401, "col_offset": 49, "nodeName": "x", "type": "str"}, {"lineNumber": 412, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 412, "col_offset": 35, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 412, "col_offset": 61, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 413, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 413, "col_offset": 65, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 413, "col_offset": 89, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 414, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 414, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 414, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 418, "col_offset": 49, "nodeName": "x", "type": "str"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 430, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 430, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 430, "col_offset": 75, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 431, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 431, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 431, "col_offset": 70, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 432, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 432, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 430, "col_offset": 67, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 432, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 447, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 447, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 447, "col_offset": 75, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 448, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 448, "col_offset": 46, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 448, "col_offset": 70, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 449, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 449, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 447, "col_offset": 67, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 449, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 460, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 460, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 460, "col_offset": 73, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 461, "col_offset": 60, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 461, "col_offset": 84, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 462, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 462, "col_offset": 57, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 461, "col_offset": 54, "nodeName": "loss", "type": "mock.Mock"}, {"lineNumber": 462, "col_offset": 44, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 475, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 475, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 475, "col_offset": 73, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 476, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 476, "col_offset": 67, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 476, "col_offset": 91, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 477, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 477, "col_offset": 59, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 481, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 482, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 487, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 487, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 487, "col_offset": 105, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 488, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 488, "col_offset": 48, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 488, "col_offset": 83, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 487, "col_offset": 57, "nodeName": "stateless_model_with_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 488, "col_offset": 40, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 488, "col_offset": 75, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 492, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 492, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 493, "col_offset": 20, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any], Any], mock.Mock, Dict[nothing, nothing]]]]"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 498, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 498, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 498, "col_offset": 105, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 499, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 499, "col_offset": 48, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 499, "col_offset": 83, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 498, "col_offset": 57, "nodeName": "stateless_model_with_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 499, "col_offset": 40, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 499, "col_offset": 75, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 503, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 503, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 504, "col_offset": 20, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any], Any], mock.Mock, Dict[nothing, nothing]]]]"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 507, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 510, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 510, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 510, "col_offset": 101, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 511, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 511, "col_offset": 48, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 511, "col_offset": 83, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 510, "col_offset": 57, "nodeName": "state_model_with_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 511, "col_offset": 40, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 511, "col_offset": 75, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 515, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 515, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 516, "col_offset": 12, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 516, "col_offset": 20, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any, Any], Any], Callable[[Any], Any], mock.Mock, Dict[nothing, nothing]]]]"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 519, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 522, "col_offset": 38, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 522, "col_offset": 101, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 523, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 523, "col_offset": 48, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 523, "col_offset": 83, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 522, "col_offset": 57, "nodeName": "state_model_with_e", "type": "Callable[[Any], Any]"}, {"lineNumber": 523, "col_offset": 40, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 523, "col_offset": 75, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 527, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 527, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "closure", "type": "Callable[[Any], Any]"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Optional[Union[Callable[[Any, Any], Any], Callable[[Any], Any], mock.Mock, Dict[nothing, nothing]]]]"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 14, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "process", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "process_final", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "zero_grad", "type": "mock.Mock"}, {"lineNumber": 115, "col_offset": 52, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 134, "col_offset": 52, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 153, "col_offset": 52, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 173, "col_offset": 52, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 199, "col_offset": 46, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 199, "col_offset": 54, "nodeName": "y_true", "type": "str"}, {"lineNumber": 212, "col_offset": 68, "nodeName": "y_pred1", "type": "str"}, {"lineNumber": 212, "col_offset": 77, "nodeName": "y_pred2", "type": "str"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 219, "col_offset": 46, "nodeName": "y_pred1", "type": "str"}, {"lineNumber": 219, "col_offset": 55, "nodeName": "y_pred2", "type": "str"}, {"lineNumber": 219, "col_offset": 64, "nodeName": "y_true1", "type": "str"}, {"lineNumber": 219, "col_offset": 73, "nodeName": "y_true2", "type": "str"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "backward", "type": "mock.Mock"}, {"lineNumber": 261, "col_offset": 54, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "on_forward", "type": "mock.Mock"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "on_criterion", "type": "mock.Mock"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "on_backward", "type": "mock.Mock"}, {"lineNumber": 273, "col_offset": 57, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 273, "col_offset": 85, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 273, "col_offset": 142, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 285, "col_offset": 57, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 285, "col_offset": 85, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 285, "col_offset": 142, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 299, "col_offset": 57, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 299, "col_offset": 84, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 300, "col_offset": 54, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 306, "col_offset": 13, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 309, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 315, "col_offset": 57, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 315, "col_offset": 81, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 315, "col_offset": 138, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 321, "col_offset": 13, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 328, "col_offset": 57, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 328, "col_offset": 81, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 328, "col_offset": 138, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "self", "type": "TestBaseCrit"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 342, "col_offset": 14, "nodeName": "TestApexCrit", "type": "Type[TestApexCrit]"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 349, "col_offset": 69, "nodeName": "sys", "type": "module"}, {"lineNumber": 349, "col_offset": 26, "nodeName": "sys", "type": "module"}, {"lineNumber": 349, "col_offset": 38, "nodeName": "module_name", "type": "str"}, {"lineNumber": 351, "col_offset": 39, "nodeName": "module_name", "type": "str"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 358, "col_offset": 14, "nodeName": "TestApexCrit", "type": "Type[TestApexCrit]"}, {"lineNumber": 358, "col_offset": 28, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 379, "col_offset": 52, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 384, "col_offset": 24, "nodeName": "zero_grad", "type": "mock.Mock"}, {"lineNumber": 396, "col_offset": 52, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 413, "col_offset": 52, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 419, "col_offset": 29, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 436, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 436, "col_offset": 46, "nodeName": "y_pred", "type": "str"}, {"lineNumber": 436, "col_offset": 54, "nodeName": "y_true", "type": "str"}, {"lineNumber": 453, "col_offset": 29, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 476, "col_offset": 54, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 481, "col_offset": 24, "nodeName": "on_forward", "type": "mock.Mock"}, {"lineNumber": 482, "col_offset": 24, "nodeName": "on_criterion", "type": "mock.Mock"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "on_backward", "type": "mock.Mock"}, {"lineNumber": 487, "col_offset": 57, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 487, "col_offset": 85, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 487, "col_offset": 142, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 492, "col_offset": 13, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 495, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 498, "col_offset": 57, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 498, "col_offset": 85, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 498, "col_offset": 142, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 503, "col_offset": 13, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 506, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 510, "col_offset": 57, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 510, "col_offset": 81, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 510, "col_offset": 138, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 515, "col_offset": 13, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 518, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 522, "col_offset": 57, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 522, "col_offset": 81, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 522, "col_offset": 138, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 527, "col_offset": 13, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 530, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "metric", "type": "torchbearer.bases.Metric"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "metric", "type": "torchbearer.bases.Metric"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "crit", "type": "Any"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "crit", "type": "Any"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "crit", "type": "Any"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "loss", "type": "mock.Mock"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 282, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 384, "col_offset": 24, "nodeName": "opt", "type": "mock.Mock"}, {"lineNumber": 401, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 418, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 419, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 436, "col_offset": 24, "nodeName": "crit", "type": "Any"}, {"lineNumber": 453, "col_offset": 29, "nodeName": "crit", "type": "Any"}, {"lineNumber": 466, "col_offset": 38, "nodeName": "mock_calls", "type": "Any"}, {"lineNumber": 481, "col_offset": 24, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 482, "col_offset": 24, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "callback_list", "type": "mock.Mock"}, {"lineNumber": 495, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 506, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 518, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 530, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 282, "col_offset": 28, "nodeName": "exception", "type": "Any"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "exception", "type": "Any"}, {"lineNumber": 295, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "exception", "type": "Any"}, {"lineNumber": 310, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 311, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "exception", "type": "Any"}, {"lineNumber": 325, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "exception", "type": "Any"}, {"lineNumber": 401, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 418, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 466, "col_offset": 38, "nodeName": "scale_loss", "type": "Any"}, {"lineNumber": 495, "col_offset": 28, "nodeName": "exception", "type": "Any"}, {"lineNumber": 506, "col_offset": 28, "nodeName": "exception", "type": "Any"}, {"lineNumber": 507, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 518, "col_offset": 28, "nodeName": "exception", "type": "Any"}, {"lineNumber": 519, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 530, "col_offset": 28, "nodeName": "exception", "type": "Any"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 282, "col_offset": 28, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 295, "col_offset": 34, "nodeName": "exception", "type": "Any"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 310, "col_offset": 34, "nodeName": "exception", "type": "Any"}, {"lineNumber": 311, "col_offset": 34, "nodeName": "exception", "type": "Any"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 325, "col_offset": 34, "nodeName": "exception", "type": "Any"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 466, "col_offset": 38, "nodeName": "mock_amp", "type": "mock.MagicMock"}, {"lineNumber": 495, "col_offset": 28, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 506, "col_offset": 28, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 507, "col_offset": 34, "nodeName": "exception", "type": "Any"}, {"lineNumber": 518, "col_offset": 28, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 519, "col_offset": 34, "nodeName": "exception", "type": "Any"}, {"lineNumber": 530, "col_offset": 28, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 295, "col_offset": 34, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 310, "col_offset": 34, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 311, "col_offset": 34, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 325, "col_offset": 34, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 466, "col_offset": 38, "nodeName": "self", "type": "TestApexCrit"}, {"lineNumber": 507, "col_offset": 34, "nodeName": "context", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 519, "col_offset": 34, "nodeName": "context", "type": "unittest._AssertRaisesContext"}]