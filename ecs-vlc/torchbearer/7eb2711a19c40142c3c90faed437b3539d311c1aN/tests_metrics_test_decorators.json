[{"lineNumber": 8, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 8, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 10, "col_offset": 17, "nodeName": "Loss", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "Metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "metric", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "metric", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "Metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "Metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "Metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "Metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 10, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 11, "col_offset": 41, "nodeName": "metric", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "Loss", "type": "Any"}, {"lineNumber": 17, "col_offset": 41, "nodeName": "metric", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "metrics", "type": "module"}, {"lineNumber": 29, "col_offset": 55, "nodeName": "MyMetric", "type": "Type[Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "get_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 54, "nodeName": "metric", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "metric", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "Metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "to_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "Metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "mean", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "Metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "std", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "Metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 106, "col_offset": 64, "nodeName": "metric", "type": "torchbearer.metrics.metrics.Metric"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "default_for_key", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 13, "col_offset": 34, "nodeName": "Loss", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "default_for_key", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "default_for_key", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "metrics", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "lambda_metric", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "metric", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "EpochLambda", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "_final", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "lambda_metric", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "metric", "type": "Any"}, {"lineNumber": 42, "col_offset": 43, "nodeName": "BatchLambda", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "_metric_function", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "to_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "ToDict", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "metrics", "type": "module"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "ToDict", "type": "Any"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "mean", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "MetricTree", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "ToDict", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "metric", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "Mean", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "metrics", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "MetricTree", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 70, "col_offset": 52, "nodeName": "ToDict", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "metric", "type": "Any"}, {"lineNumber": 71, "col_offset": 59, "nodeName": "Mean", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "std", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "MetricTree", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 79, "col_offset": 52, "nodeName": "ToDict", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "metric", "type": "Any"}, {"lineNumber": 80, "col_offset": 59, "nodeName": "Std", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "metrics", "type": "module"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "MetricTree", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "ToDict", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "metric", "type": "Any"}, {"lineNumber": 89, "col_offset": 59, "nodeName": "Std", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 95, "col_offset": 64, "nodeName": "metric", "type": "Type[torchbearer.metrics.metrics.Metric]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "MetricTree", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "ToDict", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "metric", "type": "Any"}, {"lineNumber": 98, "col_offset": 59, "nodeName": "RunningMean", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "_step_size", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "running_mean", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "MetricTree", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "ToDict", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "metric", "type": "Any"}, {"lineNumber": 109, "col_offset": 59, "nodeName": "RunningMean", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "_step_size", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestDecorators"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 13, "col_offset": 34, "nodeName": "metrics", "type": "module"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "mock", "type": "unittest.mock.Mock"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "metrics", "type": "module"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "metrics", "type": "module"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "metrics", "type": "module"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "metrics", "type": "module"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "metrics", "type": "module"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "children", "type": "Any"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "metrics", "type": "module"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "metrics", "type": "module"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "root", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "metrics", "type": "module"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "children", "type": "Any"}, {"lineNumber": 70, "col_offset": 52, "nodeName": "metrics", "type": "module"}, {"lineNumber": 71, "col_offset": 59, "nodeName": "metrics", "type": "module"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "root", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "metrics", "type": "module"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "metrics", "type": "module"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "children", "type": "Any"}, {"lineNumber": 79, "col_offset": 52, "nodeName": "metrics", "type": "module"}, {"lineNumber": 80, "col_offset": 59, "nodeName": "metrics", "type": "module"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "root", "type": "Any"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "metrics", "type": "module"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "children", "type": "Any"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "metrics", "type": "module"}, {"lineNumber": 89, "col_offset": 59, "nodeName": "metrics", "type": "module"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "root", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "running_mean", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "metrics", "type": "module"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "children", "type": "Any"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "metrics", "type": "module"}, {"lineNumber": 98, "col_offset": 59, "nodeName": "metrics", "type": "module"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "root", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "metrics", "type": "module"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "metrics", "type": "module"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "children", "type": "Any"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "metrics", "type": "module"}, {"lineNumber": 109, "col_offset": 59, "nodeName": "metrics", "type": "module"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "root", "type": "Any"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "get_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "get_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "children", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "children", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "children", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "children", "type": "Any"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "metrics", "type": "module"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "children", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "children", "type": "Any"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "children", "type": "Any"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "children", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "children", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "children", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "children", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "children", "type": "Any"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "children", "type": "Any"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "children", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "children", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "children", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "out", "type": "Any"}]