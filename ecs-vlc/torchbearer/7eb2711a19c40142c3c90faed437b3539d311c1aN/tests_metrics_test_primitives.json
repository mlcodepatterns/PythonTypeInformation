[{"lineNumber": 10, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 10, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "root", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "metric", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "root", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "root", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "root", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "targets", "type": "List[int]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "root", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "root", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "targets", "type": "List[int]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "root", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "_targets", "type": "List[float]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "root", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestLoss"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestEpoch"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, int]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "result", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "process_final", "type": "Any"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, int]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "result", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestBinaryAccuracy"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestBinaryAccuracy"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestMeanSquaredError"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestMeanSquaredError"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "LOSS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "Loss", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "self", "type": "TestLoss"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestLoss"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "result", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "self", "type": "TestLoss"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestLoss"}, {"lineNumber": 26, "col_offset": 37, "nodeName": "result", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "Epoch", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "self", "type": "TestEpoch"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestEpoch"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "self", "type": "TestEpoch"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestEpoch"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "BinaryAccuracy", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "self", "type": "TestBinaryAccuracy"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "self", "type": "TestBinaryAccuracy"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "metric", "type": "Any"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "targets", "type": "List[int]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "TopKCategoricalAccuracy", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "TopKCategoricalAccuracy", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "metric", "type": "Any"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "targets", "type": "List[int]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 163, "col_offset": 30, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "get_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "MeanSquaredError", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "self", "type": "TestMeanSquaredError"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "_targets", "type": "List[float]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "self", "type": "TestMeanSquaredError"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 30, "nodeName": "_targets", "type": "List[float]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 14, "col_offset": 34, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestLoss"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "self", "type": "TestLoss"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestLoss"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "self", "type": "TestLoss"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "self", "type": "TestEpoch"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "self", "type": "TestEpoch"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestBinaryAccuracy"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "self", "type": "TestBinaryAccuracy"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "self", "type": "TestBinaryAccuracy"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "TestBinaryAccuracy"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestBinaryAccuracy"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "self", "type": "TestBinaryAccuracy"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "self", "type": "TestBinaryAccuracy"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "TestBinaryAccuracy"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "targets", "type": "List[int]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "targets", "type": "List[int]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 163, "col_offset": 30, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 179, "col_offset": 41, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestMeanSquaredError"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "self", "type": "TestMeanSquaredError"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "self", "type": "TestMeanSquaredError"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "self", "type": "TestMeanSquaredError"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "item", "type": "Any"}, {"lineNumber": 190, "col_offset": 53, "nodeName": "_targets", "type": "List[float]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestMeanSquaredError"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "self", "type": "TestMeanSquaredError"}, {"lineNumber": 197, "col_offset": 30, "nodeName": "self", "type": "TestMeanSquaredError"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "self", "type": "TestMeanSquaredError"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "item", "type": "Any"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "_targets", "type": "List[float]"}, {"lineNumber": 14, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "self", "type": "TestBinaryAccuracy"}, {"lineNumber": 70, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "self", "type": "TestBinaryAccuracy"}, {"lineNumber": 78, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 113, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "self", "type": "TestCategoricalAccuracy"}, {"lineNumber": 121, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 148, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 156, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "self", "type": "TestTopKCategoricalAccuracy"}, {"lineNumber": 164, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 179, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 190, "col_offset": 53, "nodeName": "self", "type": "TestMeanSquaredError"}, {"lineNumber": 190, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "self", "type": "TestMeanSquaredError"}, {"lineNumber": 198, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "result", "type": "Any"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 80, "col_offset": 49, "nodeName": "result", "type": "Any"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "result", "type": "Any"}, {"lineNumber": 115, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 115, "col_offset": 49, "nodeName": "result", "type": "Any"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 123, "col_offset": 49, "nodeName": "result", "type": "Any"}, {"lineNumber": 150, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 150, "col_offset": 49, "nodeName": "result", "type": "Any"}, {"lineNumber": 158, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 158, "col_offset": 49, "nodeName": "result", "type": "Any"}, {"lineNumber": 166, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 166, "col_offset": 49, "nodeName": "result", "type": "Any"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "result", "type": "Any"}, {"lineNumber": 192, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 192, "col_offset": 49, "nodeName": "result", "type": "Any"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "result", "type": "Any"}, {"lineNumber": 200, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 200, "col_offset": 49, "nodeName": "result", "type": "Any"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "i", "type": "int"}]