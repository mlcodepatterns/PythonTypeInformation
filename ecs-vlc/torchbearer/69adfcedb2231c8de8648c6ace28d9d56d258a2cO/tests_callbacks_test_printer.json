[{"lineNumber": 9, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "test_precision", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "test_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_not_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "test_console_printer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_tqdm", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "test_tqdm_custom_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_tqdm_on_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "test_tqdm_module_init_notebook", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "test_tqdm_module_init_notebook", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "metrics", "type": "Dict[str, float]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "metrics", "type": "Dict[str, str]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "metrics", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "printer", "type": "torchbearer.callbacks.printer.ConsolePrinter"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "tqdm_module", "type": "mock.MagicMock"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "tqdm_module", "type": "mock.MagicMock"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "tqdm_module", "type": "mock.MagicMock"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "tqdm_module", "type": "mock.MagicMock"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "tqdm_module", "type": "mock.MagicMock"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "tqdm_module", "type": "mock.MagicMock"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "tqdm_module", "type": "mock.MagicMock"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "tqdm_module", "type": "mock.MagicMock"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 12, "col_offset": 14, "nodeName": "_format_metrics", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 12, "col_offset": 60, "nodeName": "metrics", "type": "Dict[str, float]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 13, "col_offset": 39, "nodeName": "res", "type": "Any"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "_format_metrics", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 60, "nodeName": "metrics", "type": "Dict[str, str]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "_format_metrics", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 22, "col_offset": 60, "nodeName": "metrics", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "BATCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 29, "col_offset": 61, "nodeName": "MAX_EPOCHS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 29, "col_offset": 89, "nodeName": "TRAIN_STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 29, "col_offset": 119, "nodeName": "VALIDATION_STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 29, "col_offset": 154, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "ConsolePrinter", "type": "Type[torchbearer.callbacks.printer.ConsolePrinter]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "on_end_training", "type": "Callable[[Any], None]"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "on_end_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "MAX_EPOCHS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 53, "col_offset": 67, "nodeName": "TRAIN_STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 53, "col_offset": 97, "nodeName": "VALIDATION_STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 53, "col_offset": 132, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "Tqdm", "type": "Type[torchbearer.callbacks.printer.Tqdm]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "on_start_training", "type": "Callable[[Any], None]"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "on_end_training", "type": "Callable[[Any], None]"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "on_start_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "on_end_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, float]]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "MAX_EPOCHS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 90, "col_offset": 67, "nodeName": "TRAIN_STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "VALIDATION_STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 91, "col_offset": 52, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, int], List[List[Union[List[nothing], int, Dict[str, int]]]]]]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "Tqdm", "type": "Type[torchbearer.callbacks.printer.Tqdm]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, int], List[List[Union[List[nothing], int, Dict[str, int]]]]]]"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, int], List[List[Union[List[nothing], int, Dict[str, int]]]]]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "on_start_training", "type": "Callable[[Any], None]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, int], List[List[Union[List[nothing], int, Dict[str, int]]]]]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "Tqdm", "type": "Type[torchbearer.callbacks.printer.Tqdm]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, int], List[List[Union[List[nothing], int, Dict[str, int]]]]]]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "MAX_EPOCHS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 111, "col_offset": 67, "nodeName": "HISTORY", "type": "torchbearer.state.StateKey"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "Tqdm", "type": "Type[torchbearer.callbacks.printer.Tqdm]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, List[Union[int, Tuple[int, Dict[str, float]]]], Dict[str, float]]]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, List[Union[int, Tuple[int, Dict[str, float]]]], Dict[str, float]]]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "on_end", "type": "Callable[[Any], None]"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, List[Union[int, Tuple[int, Dict[str, float]]]], Dict[str, float]]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "mock_is_notebook", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "Tqdm", "type": "Type[torchbearer.callbacks.printer.Tqdm]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "mock_is_notebook", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "Tqdm", "type": "Type[torchbearer.callbacks.printer.Tqdm]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 12, "col_offset": 14, "nodeName": "printer", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestFormatMetrics"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "printer", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestFormatMetrics"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "printer", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestFormatMetrics"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 29, "col_offset": 61, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 29, "col_offset": 89, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 29, "col_offset": 119, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 29, "col_offset": 154, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "TRAIN_STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "printer", "type": "torchbearer.callbacks.printer.ConsolePrinter"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "mock_print", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "mock_print", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "printer", "type": "torchbearer.callbacks.printer.ConsolePrinter"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "mock_print", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "mock_print", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "VALIDATION_STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "printer", "type": "torchbearer.callbacks.printer.ConsolePrinter"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "mock_print", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "mock_print", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "printer", "type": "torchbearer.callbacks.printer.ConsolePrinter"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "mock_print", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "mock_print", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 53, "col_offset": 67, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 53, "col_offset": 97, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 53, "col_offset": 132, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "TRAIN_STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "set_postfix_str", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "set_postfix_str", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "set_postfix_str", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestTqdm"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "close", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "set_postfix_str", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "VALIDATION_STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "set_postfix_str", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "set_postfix_str", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "set_postfix_str", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestTqdm"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "close", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 90, "col_offset": 67, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 91, "col_offset": 52, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "HISTORY", "type": "torchbearer.state.StateKey"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "TRAIN_STEPS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 111, "col_offset": 67, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "set_postfix_str", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "set_postfix_str", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "set_postfix_str", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "set_postfix_str", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "set_postfix_str", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestTqdm"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "close", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "tqdm_module", "type": "Any"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "tqdm_notebook", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "tqdm_module", "type": "Any"}, {"lineNumber": 145, "col_offset": 44, "nodeName": "base_tqdm", "type": "Any"}, {"lineNumber": 12, "col_offset": 14, "nodeName": "callbacks", "type": "module"}, {"lineNumber": 12, "col_offset": 79, "nodeName": "round", "type": "Callable[..., float]"}, {"lineNumber": 12, "col_offset": 85, "nodeName": "x", "type": "Any"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "callbacks", "type": "module"}, {"lineNumber": 17, "col_offset": 79, "nodeName": "round", "type": "Callable[..., float]"}, {"lineNumber": 17, "col_offset": 85, "nodeName": "x", "type": "Any"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "callbacks", "type": "module"}, {"lineNumber": 22, "col_offset": 79, "nodeName": "round", "type": "Callable[..., float]"}, {"lineNumber": 22, "col_offset": 85, "nodeName": "x", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, Dict[str, int], List[List[Union[List[nothing], int, Dict[str, int]]]]]]"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "tqdm", "type": "torchbearer.callbacks.printer.Tqdm"}, {"lineNumber": 12, "col_offset": 14, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "mock_tqdm", "type": "mock.MagicMock"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "torchbearer", "type": "module"}]