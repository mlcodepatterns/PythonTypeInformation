[{"lineNumber": 10, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "test_requires_grad", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "test_empty_methods", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "test_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "test_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "test_empty_methods", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "_targets", "type": "List[int]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "root", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "metric", "type": "torchbearer.bases.Metric"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "process", "type": "Any"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "Metric", "type": "Type[torchbearer.bases.Metric]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "Callback", "type": "Type[torchbearer.bases.Callback]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 55, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "Callback", "type": "Type[torchbearer.bases.Callback]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "Callback", "type": "Type[torchbearer.bases.Callback]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 13, "col_offset": 32, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 14, "col_offset": 32, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "_metric", "type": "Any"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "state_dict", "type": "Callable[[], Dict[Any, Any]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "load_state_dict", "type": "Callable"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "on_start", "type": "Callable[[Any], None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "on_start_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "on_start_training", "type": "Callable[[Any], None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "on_sample", "type": "Callable[[Any], None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "on_forward", "type": "Callable[[Any], None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "on_criterion", "type": "Callable[[Any], None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "on_backward", "type": "Callable[[Any], None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "on_end_training", "type": "Callable[[Any], None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "on_checkpoint", "type": "Callable[[Any], None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "on_end", "type": "Callable[[Any], None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "on_start_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "on_sample_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "on_forward_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "on_end_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestCallback"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "on_criterion_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 13, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 14, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "process", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "process_final", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "_state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "metric", "type": "torchbearer.bases.Metric"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "metric", "type": "torchbearer.bases.Metric"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "callback", "type": "torchbearer.bases.Callback"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "Y_PRED", "type": "torchbearer.state.StateKey"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "torchbearer", "type": "module"}]