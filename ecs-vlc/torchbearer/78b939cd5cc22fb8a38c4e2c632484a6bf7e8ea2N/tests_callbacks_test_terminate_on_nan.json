[{"lineNumber": 7, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "test_should_terminate", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "test_should_not_terminate", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_monitor_should_terminate", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "test_monitor_should_not_terminate", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_not_found_metric", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 10, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 11, "col_offset": 12, "nodeName": "BATCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "TerminateOnNaN", "type": "Type[torchbearer.callbacks.terminate_on_nan.TerminateOnNaN]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 18, "col_offset": 36, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "BATCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "TerminateOnNaN", "type": "Type[torchbearer.callbacks.terminate_on_nan.TerminateOnNaN]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "BATCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "TerminateOnNaN", "type": "Type[torchbearer.callbacks.terminate_on_nan.TerminateOnNaN]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "BATCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "TerminateOnNaN", "type": "Type[torchbearer.callbacks.terminate_on_nan.TerminateOnNaN]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "EPOCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "BATCH", "type": "torchbearer.state.StateKey"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "METRICS", "type": "torchbearer.state.StateKey"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "TerminateOnNaN", "type": "Type[torchbearer.callbacks.terminate_on_nan.TerminateOnNaN]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "on_step_training", "type": "Callable[[Any], None]"}, {"lineNumber": 86, "col_offset": 36, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "on_step_validation", "type": "Callable[[Any], None]"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "on_end_epoch", "type": "Callable[[Any], None]"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 10, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 11, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "terminator", "type": "torchbearer.callbacks.terminate_on_nan.TerminateOnNaN"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestTerminateOnNaN"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Union[int, bool, Dict[str, float]]]"}, {"lineNumber": 13, "col_offset": 50, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 19, "col_offset": 30, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 47, "col_offset": 72, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 81, "col_offset": 72, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "STOP_TRAINING", "type": "torchbearer.state.StateKey"}, {"lineNumber": 19, "col_offset": 30, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "torchbearer", "type": "module"}]