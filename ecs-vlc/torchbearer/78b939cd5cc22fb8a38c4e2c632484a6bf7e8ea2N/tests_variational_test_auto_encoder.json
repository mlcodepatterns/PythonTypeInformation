[{"lineNumber": 9, "col_offset": 15, "nodeName": "AutoEncoderBase", "type": "Type[torchbearer.variational.auto_encoder.AutoEncoderBase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "encode", "type": "Callable[..., Any]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "decode", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "test_empty_methods", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "test_forward_call_counts", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_forward_call_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test_forward_replace_y_true", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "test_latent_dims", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 15, "nodeName": "ae", "type": "module"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "base", "type": "torchbearer.variational.auto_encoder.AutoEncoderBase"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "latents", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "encode", "type": "mock.Mock"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "decode", "type": "mock.Mock"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "latents", "type": "int"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "encode", "type": "mock.Mock"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "return_value", "type": "None"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "decode", "type": "mock.Mock"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "latents", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "encode", "type": "mock.Mock"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "return_value", "type": "None"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "decode", "type": "mock.Mock"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "latents", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "state", "type": "Any"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 14, "col_offset": 23, "nodeName": "state", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "AutoEncoderBase", "type": "Type[torchbearer.variational.auto_encoder.AutoEncoderBase]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "SimpleAE", "type": "Type[SimpleAE]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "latents", "type": "int"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "forward", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "forward", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "SimpleAE", "type": "Type[SimpleAE]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "latents", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "encode", "type": "mock.Mock"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "forward", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "SimpleAE", "type": "Type[SimpleAE]"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "latents", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "encode", "type": "mock.Mock"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "forward", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "X", "type": "torchbearer.state.StateKey"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "SimpleAE", "type": "Type[SimpleAE]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "latents", "type": "int"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "ae", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestAutoEncoder"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestAutoEncoder"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "tb", "type": "module"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "tb", "type": "module"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestAutoEncoder"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestAutoEncoder"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestAutoEncoder"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestAutoEncoder"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "call_count", "type": "int"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "tb", "type": "module"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "tb", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestAutoEncoder"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestAutoEncoder"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "tb", "type": "module"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "tb", "type": "module"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestAutoEncoder"}, {"lineNumber": 66, "col_offset": 67, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "tb", "type": "module"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "tb", "type": "module"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestAutoEncoder"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "latent_dims", "type": "Any"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "latents", "type": "int"}, {"lineNumber": 21, "col_offset": 55, "nodeName": "encode", "type": "Callable[..., Any]"}, {"lineNumber": 22, "col_offset": 55, "nodeName": "decode", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "encode", "type": "mock.Mock"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "decode", "type": "mock.Mock"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "encode", "type": "mock.Mock"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "decode", "type": "mock.Mock"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 52, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 57, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 53, "col_offset": 60, "nodeName": "state", "type": "Dict[torchbearer.state.StateKey, Any]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 21, "col_offset": 55, "nodeName": "base", "type": "torchbearer.variational.auto_encoder.AutoEncoderBase"}, {"lineNumber": 22, "col_offset": 55, "nodeName": "base", "type": "torchbearer.variational.auto_encoder.AutoEncoderBase"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "encode", "type": "mock.Mock"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "decode", "type": "mock.Mock"}, {"lineNumber": 66, "col_offset": 53, "nodeName": "Y_TRUE", "type": "torchbearer.state.StateKey"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "model", "type": "SimpleAE"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 66, "col_offset": 53, "nodeName": "tb", "type": "module"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "decode", "type": "mock.Mock"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "model", "type": "SimpleAE"}]