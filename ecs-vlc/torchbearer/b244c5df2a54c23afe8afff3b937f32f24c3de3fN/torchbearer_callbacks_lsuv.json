[{"lineNumber": 34, "col_offset": 11, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "gg", "type": "Dict[str, Optional[Union[Callable[[Any], Any], float, bool, int, Dict[nothing, nothing], Any]]]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "gg", "type": "Dict[str, Optional[Union[Callable[[Any], Any], float, bool, int, Dict[nothing, nothing], Any]]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "flat_shape", "type": "Tuple[Any, Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "q", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "gg", "type": "Dict[str, Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "train", "type": "bool"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "do_orthonorm", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "layer_idx", "type": "int"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "train", "type": "bool"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "gg", "type": "Dict[str, Optional[Union[Callable[[Any], Any], float, bool, int, Dict[nothing, nothing], Any]]]"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "gg", "type": "Dict[str, Optional[Union[Callable[[Any], Any], float, bool, int, Dict[nothing, nothing], Any]]]"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "store_activations", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "reset_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "w", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "flat_shape", "type": "Tuple[Any, Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "u", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "v", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "svd", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "u", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "view", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "to", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "float", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "w_ortho", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "reset_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "training", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "gg", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 90, "nodeName": "weight_lambda", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "apply", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "count_conv_fc_layers", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "current_std", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "attempts", "type": "int"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "weight", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "prod", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "device", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "flat_shape", "type": "Tuple[Any, Any]"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "t", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "q", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "gg", "type": "Dict[str, Optional[Union[Callable[[Any], Any], float, bool, int, Dict[nothing, nothing], Any]]]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "m", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "m", "type": "Any"}, {"lineNumber": 81, "col_offset": 56, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "m", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "m", "type": "Any"}, {"lineNumber": 88, "col_offset": 56, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "gg", "type": "Dict[str, Optional[Union[Callable[[Any], Any], float, bool, int, Dict[nothing, nothing], Any]]]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "m", "type": "Any"}, {"lineNumber": 92, "col_offset": 53, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 93, "col_offset": 46, "nodeName": "m", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "svd_orthonormal", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "w_ortho", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 111, "col_offset": 63, "nodeName": "weight_lambda", "type": "Any"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "gg", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "apply", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "orthogonal_weights_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "gg", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "apply", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "add_current_hook", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "std", "type": "Any"}, {"lineNumber": 122, "col_offset": 63, "nodeName": "std_tol", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "current_std", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "attempts", "type": "int"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "gg", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "gg", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "gg", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "gg", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "gg", "type": "Dict[str, Optional[Union[Callable[[Any], Any], float, bool, int, Dict[nothing, nothing], Any]]]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "LSUV", "type": "Type[LSUV]"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "m", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "w", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "u", "type": "Any"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "v", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 81, "col_offset": 56, "nodeName": "nn", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "gg", "type": "Dict[str, Optional[Union[Callable[[Any], Any], float, bool, int, Dict[nothing, nothing], Any]]]"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "gg", "type": "Dict[str, Optional[Union[Callable[[Any], Any], float, bool, int, Dict[nothing, nothing], Any]]]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "gg", "type": "Dict[str, Optional[Union[Callable[[Any], Any], float, bool, int, Dict[nothing, nothing], Any]]]"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "register_forward_hook", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 88, "col_offset": 56, "nodeName": "nn", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 92, "col_offset": 53, "nodeName": "nn", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "gg", "type": "Union[Dict[str, Optional[Union[Callable[[Any], Any], float, bool, int, Dict[nothing, nothing], Any]]], Dict[str, Any]]"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "weight", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "gg", "type": "Dict[str, Optional[Union[Callable[[Any], Any], float, bool, int, Dict[nothing, nothing], Any]]]"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "gg", "type": "Dict[str, Optional[Union[Callable[[Any], Any], float, bool, int, Dict[nothing, nothing], Any]]]"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "item", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "gg", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "needed_std", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "gg", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "apply", "type": "Any"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "apply_weights_correction", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "std", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "attempts", "type": "int"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "max_attempts", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "gg", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 83, "col_offset": 58, "nodeName": "store_activations_wrapper", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "gg", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 123, "col_offset": 56, "nodeName": "current_std", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 83, "col_offset": 58, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "self", "type": "LSUV"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "abs", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "gg", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "current_std", "type": "Any"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "needed_std", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "self", "type": "LSUV"}]