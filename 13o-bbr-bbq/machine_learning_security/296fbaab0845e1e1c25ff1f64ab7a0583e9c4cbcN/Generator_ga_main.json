[{"lineNumber": 16, "col_offset": 0, "nodeName": "OK", "type": "str"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "NOTE", "type": "str"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "FAIL", "type": "str"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "WARNING", "type": "str"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "NONE", "type": "str"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "genom_list", "type": "None"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "evaluation", "type": "None"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "genom_list", "type": "Any"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "genom_list", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "evaluation", "type": "Any"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "evaluation", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "genom_list", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "evaluation", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "genom_list", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "genom_list", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "evaluation", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "evaluation", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "util", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "template", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "template", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "obj_browser", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "browser", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "full_path", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "wait_time", "type": "float"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "html_dir", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "html_template", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "html_template_path", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "html_file", "type": "str"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "result_dir", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "genom_length", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "max_genom_list", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "select_genom", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "individual_mutation_rate", "type": "float"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "genom_mutation_rate", "type": "float"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "max_generation", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "max_fitness", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "gene_dir", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "genes_path", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "html_checker_dir", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "html_checker", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "html_checker_option", "type": "str"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "html_checked_path", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "html_eval_place_list", "type": "List[str]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "bingo_score", "type": "float"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "warning_score", "type": "float"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "error_score", "type": "float"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "result_file", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "result_list", "type": "List[List[Any]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "lst_gene", "type": "List[int]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "indivisual", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "html", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "eval_html_path", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "command", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "enc", "type": "str"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "env_tmp", "type": "Dict[str, str]"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "enc", "type": "str"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "str_eval_result", "type": "str"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "str_pattern", "type": "str"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "obj_match", "type": "Optional[Match[str]]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "warnings", "type": "float"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "errors", "type": "float"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "obj_match", "type": "Optional[Match[str]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "int_score", "type": "float"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "error_flag", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "sort_result", "type": "List[Gene]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "genom_list", "type": "List[Gene]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "cross_first", "type": "int"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "cross_second", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "one", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "second", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "progeny_one", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "progeny_second", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "genom_list", "type": "List[Gene]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "next_generation_geno", "type": "List[Gene]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "next_generation_geno", "type": "List[Gene]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "lst_ga", "type": "List[Gene]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "idx", "type": "Gene"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "obj_ga", "type": "List[Gene]"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "lst_ga", "type": "List[Gene]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "df_genes", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "save_path", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "eval_place", "type": "str"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "html_eval_place_list", "type": "List[str]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "str_best_individual", "type": "str"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "gene_num", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "str_best_individual", "type": "str"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "result_list", "type": "List[List[Any]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "Gene"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Gene"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "self", "type": "Gene"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "self", "type": "Gene"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Gene"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Gene"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "Utilty", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "ConfigParser", "type": "Type[configparser.ConfigParser]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "FileExistsError", "type": "Type[FileExistsError]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "join_path", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "full_path", "type": "str"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "join_path", "type": "Any"}, {"lineNumber": 64, "col_offset": 54, "nodeName": "html_dir", "type": "Any"}, {"lineNumber": 64, "col_offset": 69, "nodeName": "html_template", "type": "str"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "join_path", "type": "Any"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "full_path", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "join_path", "type": "Any"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "full_path", "type": "str"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "join_path", "type": "Any"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "gene_dir", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "join_path", "type": "Any"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "full_path", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "join_path", "type": "Any"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "html_checker_dir", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "join_path", "type": "Any"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "html_dir", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "genom_length", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "print_message", "type": "Any"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "OK", "type": "str"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "Gene", "type": "Type[Gene]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "lst_gene", "type": "List[int]"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "transform_gene_num2str", "type": "Any"}, {"lineNumber": 100, "col_offset": 54, "nodeName": "df_gene", "type": "Any"}, {"lineNumber": 100, "col_offset": 63, "nodeName": "genom_list", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "render", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "join_path", "type": "Any"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "html_dir", "type": "Any"}, {"lineNumber": 103, "col_offset": 67, "nodeName": "fout", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 108, "col_offset": 49, "nodeName": "eval_html_path", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "getpreferredencoding", "type": "Callable[..., str]"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "env_tmp", "type": "Dict[str, str]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "Popen", "type": "Type[subprocess.Popen[Any]]"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "command", "type": "Any"}, {"lineNumber": 116, "col_offset": 75, "nodeName": "fin", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "str_eval_result", "type": "str"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "match", "type": "Callable"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "str_pattern", "type": "str"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "warnings", "type": "float"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "errors", "type": "float"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "warnings", "type": "float"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "errors", "type": "float"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "selenium_score", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "error_flag", "type": "Any"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "check_individual_selenium", "type": "Any"}, {"lineNumber": 133, "col_offset": 73, "nodeName": "obj_browser", "type": "Any"}, {"lineNumber": 133, "col_offset": 91, "nodeName": "eval_html_path", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "selenium_score", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "int_score", "type": "float"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "bingo_score", "type": "float"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "int_score", "type": "float"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "obj_ga", "type": "List[Gene]"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 168, "col_offset": 40, "nodeName": "genom_length", "type": "int"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "cross_first", "type": "int"}, {"lineNumber": 169, "col_offset": 51, "nodeName": "genom_length", "type": "int"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "getGenom", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "getGenom", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 184, "col_offset": 38, "nodeName": "ga", "type": "List[Gene]"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "ga_elite", "type": "List[Gene]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "ga_progeny", "type": "List[Gene]"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "fillna", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "join_path", "type": "Any"}, {"lineNumber": 220, "col_offset": 40, "nodeName": "result_dir", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "current_generation", "type": "List[Gene]"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "int_count", "type": "int"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 299, "col_offset": 46, "nodeName": "save_path", "type": "Any"}, {"lineNumber": 303, "col_offset": 24, "nodeName": "getGenom", "type": "Callable[[], Any]"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "str_best_individual", "type": "str"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "print_message", "type": "Any"}, {"lineNumber": 306, "col_offset": 32, "nodeName": "NOTE", "type": "str"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "print_message", "type": "Any"}, {"lineNumber": 307, "col_offset": 32, "nodeName": "NOTE", "type": "str"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 53, "col_offset": 52, "nodeName": "__file__", "type": "str"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "configparser", "type": "module"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "read", "type": "Callable[..., List[str]]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "util", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "util", "type": "Any"}, {"lineNumber": 64, "col_offset": 54, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 64, "col_offset": 69, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "util", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "util", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "util", "type": "Any"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "util", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "util", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "util", "type": "Any"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "util", "type": "Any"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 94, "col_offset": 70, "nodeName": "lst_gene", "type": "List[int]"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "util", "type": "Any"}, {"lineNumber": 100, "col_offset": 63, "nodeName": "obj_ga", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "template", "type": "Any"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "eval_place", "type": "Any"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "indivisual", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "util", "type": "Any"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "eval_html_path", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "write", "type": "Callable[[str], int]"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "html", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "locale", "type": "module"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 112, "col_offset": 41, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 112, "col_offset": 65, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 112, "col_offset": 86, "nodeName": "env_tmp", "type": "Dict[str, str]"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "html_checked_path", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "re", "type": "module"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "util", "type": "Any"}, {"lineNumber": 133, "col_offset": 73, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "print_message", "type": "Any"}, {"lineNumber": 139, "col_offset": 36, "nodeName": "OK", "type": "str"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "print_message", "type": "Any"}, {"lineNumber": 146, "col_offset": 36, "nodeName": "OK", "type": "str"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "_", "type": "int"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "random", "type": "module"}, {"lineNumber": 168, "col_offset": 40, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "random", "type": "module"}, {"lineNumber": 169, "col_offset": 51, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "ga_first", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "ga_second", "type": "Any"}, {"lineNumber": 174, "col_offset": 77, "nodeName": "one", "type": "Any"}, {"lineNumber": 175, "col_offset": 80, "nodeName": "second", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "genom_list", "type": "List[Gene]"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "Gene", "type": "Type[Gene]"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "progeny_one", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "genom_list", "type": "List[Gene]"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "Gene", "type": "Type[Gene]"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "progeny_second", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "next_generation_geno", "type": "List[Gene]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "next_generation_geno", "type": "List[Gene]"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "induvidual_mutation", "type": "float"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "lst_gene", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "idx2", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "util", "type": "Any"}, {"lineNumber": 220, "col_offset": 40, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 220, "col_offset": 57, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 220, "col_offset": 87, "nodeName": "name", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "save_path", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 222, "col_offset": 88, "nodeName": "save_path", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "print_message", "type": "Any"}, {"lineNumber": 229, "col_offset": 36, "nodeName": "NOTE", "type": "str"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "print_message", "type": "Any"}, {"lineNumber": 232, "col_offset": 36, "nodeName": "NOTE", "type": "str"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "max_genom_list", "type": "int"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "elite_genes", "type": "List[Gene]"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "progeny_gene", "type": "List[Gene]"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "next_generation_individual_group", "type": "List[Gene]"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "next_generation_individual_group", "type": "List[Gene]"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "fits", "type": "List[Any]"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "flt_avg", "type": "Any"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "current_generation", "type": "List[Gene]"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "next_generation_individual_group", "type": "List[Gene]"}, {"lineNumber": 304, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "util", "type": "Any"}, {"lineNumber": 306, "col_offset": 38, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 306, "col_offset": 70, "nodeName": "str_best_individual", "type": "str"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "util", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "join_path", "type": "Any"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "full_path", "type": "str"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "print_message", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "FAIL", "type": "str"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 62, "col_offset": 55, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 66, "col_offset": 57, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 72, "col_offset": 46, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 77, "col_offset": 61, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 79, "col_offset": 66, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 81, "col_offset": 68, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "lst_gene", "type": "List[int]"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "html_file", "type": "str"}, {"lineNumber": 102, "col_offset": 88, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 102, "col_offset": 92, "nodeName": "individual_idx", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "codecs", "type": "module"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "fout", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "html_checked_path", "type": "Any"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 112, "col_offset": 41, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 112, "col_offset": 65, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "codecs", "type": "module"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "fin", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "util", "type": "Any"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 139, "col_offset": 84, "nodeName": "indivisual", "type": "Any"}, {"lineNumber": 139, "col_offset": 96, "nodeName": "eval_place", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "result_list", "type": "List[List[Any]]"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "eval_place", "type": "Any"}, {"lineNumber": 143, "col_offset": 49, "nodeName": "genom_list", "type": "Any"}, {"lineNumber": 143, "col_offset": 68, "nodeName": "indivisual", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "util", "type": "Any"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 148, "col_offset": 58, "nodeName": "name", "type": "Any"}, {"lineNumber": 150, "col_offset": 58, "nodeName": "indivisual", "type": "Any"}, {"lineNumber": 151, "col_offset": 58, "nodeName": "genom_list", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "sort_result", "type": "List[Gene]"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 161, "col_offset": 50, "nodeName": "elite", "type": "int"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "one", "type": "Any"}, {"lineNumber": 174, "col_offset": 42, "nodeName": "second", "type": "Any"}, {"lineNumber": 174, "col_offset": 81, "nodeName": "cross_second", "type": "int"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "second", "type": "Any"}, {"lineNumber": 175, "col_offset": 48, "nodeName": "one", "type": "Any"}, {"lineNumber": 175, "col_offset": 87, "nodeName": "cross_second", "type": "int"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "ga_elite", "type": "List[Gene]"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 46, "nodeName": "ga_progeny", "type": "List[Gene]"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "next_generation_geno", "type": "List[Gene]"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "getGenom", "type": "Callable[[], Any]"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "setGenom", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "lst_gene", "type": "List[Any]"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "idx", "type": "Gene"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "idx", "type": "Gene"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 217, "col_offset": 31, "nodeName": "genes_path", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 220, "col_offset": 57, "nodeName": "result_file", "type": "str"}, {"lineNumber": 220, "col_offset": 87, "nodeName": "obj_browser", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "util", "type": "Any"}, {"lineNumber": 229, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 229, "col_offset": 78, "nodeName": "eval_place", "type": "str"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "util", "type": "Any"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 238, "col_offset": 38, "nodeName": "max_generation", "type": "int"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "print_message", "type": "Any"}, {"lineNumber": 239, "col_offset": 40, "nodeName": "NOTE", "type": "str"}, {"lineNumber": 241, "col_offset": 20, "nodeName": "indivisual", "type": "int"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "idx", "type": "int"}, {"lineNumber": 241, "col_offset": 39, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "idx", "type": "int"}, {"lineNumber": 260, "col_offset": 30, "nodeName": "select", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 260, "col_offset": 42, "nodeName": "current_generation", "type": "List[Gene]"}, {"lineNumber": 260, "col_offset": 62, "nodeName": "select_genom", "type": "int"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 264, "col_offset": 34, "nodeName": "select_genom", "type": "int"}, {"lineNumber": 268, "col_offset": 51, "nodeName": "next_generation_gene_create", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 268, "col_offset": 84, "nodeName": "current_generation", "type": "List[Gene]"}, {"lineNumber": 269, "col_offset": 84, "nodeName": "elite_genes", "type": "List[Gene]"}, {"lineNumber": 270, "col_offset": 84, "nodeName": "progeny_gene", "type": "List[Gene]"}, {"lineNumber": 273, "col_offset": 51, "nodeName": "mutation", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 273, "col_offset": 65, "nodeName": "next_generation_individual_group", "type": "List[Gene]"}, {"lineNumber": 274, "col_offset": 65, "nodeName": "individual_mutation_rate", "type": "float"}, {"lineNumber": 275, "col_offset": 65, "nodeName": "genom_mutation_rate", "type": "float"}, {"lineNumber": 276, "col_offset": 65, "nodeName": "df_genes", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "print_message", "type": "Any"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "NOTE", "type": "str"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "flt_avg", "type": "Any"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "max_fitness", "type": "int"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "result_list", "type": "List[List[Any]]"}, {"lineNumber": 303, "col_offset": 24, "nodeName": "elite_genes", "type": "List[Gene]"}, {"lineNumber": 304, "col_offset": 39, "nodeName": "values", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "util", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "util", "type": "Any"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 58, "col_offset": 73, "nodeName": "e", "type": "FileExistsError"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "config", "type": "configparser.ConfigParser"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "random", "type": "module"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "group", "type": "Callable"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "group", "type": "Callable"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 143, "col_offset": 49, "nodeName": "obj_ga", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 148, "col_offset": 58, "nodeName": "obj_browser", "type": "Any"}, {"lineNumber": 149, "col_offset": 58, "nodeName": "capabilities", "type": "Any"}, {"lineNumber": 151, "col_offset": 58, "nodeName": "obj_ga", "type": "Any"}, {"lineNumber": 152, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 152, "col_offset": 62, "nodeName": "int_score", "type": "float"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "cross_first", "type": "int"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "cross_first", "type": "int"}, {"lineNumber": 174, "col_offset": 61, "nodeName": "cross_second", "type": "int"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "cross_first", "type": "int"}, {"lineNumber": 175, "col_offset": 52, "nodeName": "cross_first", "type": "int"}, {"lineNumber": 175, "col_offset": 64, "nodeName": "cross_second", "type": "int"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 200, "col_offset": 63, "nodeName": "Decimal", "type": "Type[decimal.Decimal]"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "idx", "type": "Gene"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "genom_mutation", "type": "float"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "idx", "type": "Gene"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "lst_ga", "type": "List[Gene]"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "lst_ga", "type": "List[Gene]"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "pd", "type": "Any"}, {"lineNumber": 217, "col_offset": 31, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 220, "col_offset": 57, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 220, "col_offset": 87, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "current_generation", "type": "List[Gene]"}, {"lineNumber": 235, "col_offset": 42, "nodeName": "create_genom", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 60, "nodeName": "df_genes", "type": "Any"}, {"lineNumber": 238, "col_offset": 38, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "util", "type": "Any"}, {"lineNumber": 239, "col_offset": 46, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 240, "col_offset": 95, "nodeName": "max_generation", "type": "int"}, {"lineNumber": 241, "col_offset": 49, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 241, "col_offset": 55, "nodeName": "max_genom_list", "type": "int"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "print_message", "type": "Any"}, {"lineNumber": 242, "col_offset": 44, "nodeName": "OK", "type": "str"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "evaluation_result", "type": "Optional[float]"}, {"lineNumber": 247, "col_offset": 39, "nodeName": "eval_status", "type": "int"}, {"lineNumber": 247, "col_offset": 53, "nodeName": "evaluation", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 248, "col_offset": 69, "nodeName": "df_genes", "type": "Any"}, {"lineNumber": 249, "col_offset": 69, "nodeName": "eval_place", "type": "str"}, {"lineNumber": 250, "col_offset": 69, "nodeName": "idx", "type": "int"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "eval_status", "type": "int"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "indivisual", "type": "int"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "setEvaluation", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 65, "nodeName": "evaluation_result", "type": "Any"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 257, "col_offset": 31, "nodeName": "wait_time", "type": "float"}, {"lineNumber": 260, "col_offset": 30, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 260, "col_offset": 62, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 264, "col_offset": 34, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 268, "col_offset": 51, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 273, "col_offset": 51, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 274, "col_offset": 65, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 275, "col_offset": 65, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 280, "col_offset": 24, "nodeName": "getEvaluation", "type": "Callable[[], Any]"}, {"lineNumber": 280, "col_offset": 46, "nodeName": "_", "type": "Gene"}, {"lineNumber": 280, "col_offset": 51, "nodeName": "current_generation", "type": "List[Gene]"}, {"lineNumber": 283, "col_offset": 26, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 283, "col_offset": 30, "nodeName": "fits", "type": "List[Any]"}, {"lineNumber": 283, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "util", "type": "Any"}, {"lineNumber": 284, "col_offset": 46, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 285, "col_offset": 79, "nodeName": "int_count", "type": "int"}, {"lineNumber": 288, "col_offset": 79, "nodeName": "flt_avg", "type": "Any"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "print_message", "type": "Any"}, {"lineNumber": 292, "col_offset": 44, "nodeName": "NOTE", "type": "str"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 93, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 50, "nodeName": "index", "type": "Any"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "obj_match", "type": "Optional[Match[str]]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "obj_match", "type": "Optional[Match[str]]"}, {"lineNumber": 148, "col_offset": 58, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 149, "col_offset": 58, "nodeName": "obj_browser", "type": "Any"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "random", "type": "module"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 207, "col_offset": 40, "nodeName": "idx2", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 235, "col_offset": 42, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 239, "col_offset": 95, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 239, "col_offset": 99, "nodeName": "int_count", "type": "int"}, {"lineNumber": 240, "col_offset": 95, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 241, "col_offset": 55, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "util", "type": "Any"}, {"lineNumber": 242, "col_offset": 48, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 243, "col_offset": 80, "nodeName": "eval_place", "type": "str"}, {"lineNumber": 245, "col_offset": 80, "nodeName": "max_genom_list", "type": "int"}, {"lineNumber": 247, "col_offset": 53, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 247, "col_offset": 69, "nodeName": "current_generation", "type": "List[Gene]"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "time", "type": "module"}, {"lineNumber": 257, "col_offset": 31, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "progeny_gene", "type": "List[Gene]"}, {"lineNumber": 265, "col_offset": 40, "nodeName": "crossover", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 280, "col_offset": 24, "nodeName": "_", "type": "Gene"}, {"lineNumber": 283, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 283, "col_offset": 48, "nodeName": "fits", "type": "List[Any]"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 286, "col_offset": 79, "nodeName": "min", "type": "Callable"}, {"lineNumber": 286, "col_offset": 83, "nodeName": "fits", "type": "List[Any]"}, {"lineNumber": 287, "col_offset": 79, "nodeName": "max", "type": "Callable"}, {"lineNumber": 287, "col_offset": 83, "nodeName": "fits", "type": "List[Any]"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "util", "type": "Any"}, {"lineNumber": 292, "col_offset": 50, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 304, "col_offset": 39, "nodeName": "loc", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 93, "col_offset": 50, "nodeName": "df_gene", "type": "Any"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 149, "col_offset": 58, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 204, "col_offset": 41, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 204, "col_offset": 66, "nodeName": "Decimal", "type": "Type[decimal.Decimal]"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "lst_gene", "type": "List[Any]"}, {"lineNumber": 205, "col_offset": 40, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "lst_gene", "type": "List[Any]"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 244, "col_offset": 80, "nodeName": "indivisual", "type": "int"}, {"lineNumber": 245, "col_offset": 80, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 246, "col_offset": 80, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 246, "col_offset": 84, "nodeName": "int_count", "type": "int"}, {"lineNumber": 247, "col_offset": 88, "nodeName": "indivisual", "type": "int"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "current_generation", "type": "List[Gene]"}, {"lineNumber": 265, "col_offset": 40, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 265, "col_offset": 55, "nodeName": "elite_genes", "type": "List[Gene]"}, {"lineNumber": 265, "col_offset": 75, "nodeName": "elite_genes", "type": "List[Gene]"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 292, "col_offset": 88, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 292, "col_offset": 92, "nodeName": "flt_avg", "type": "Any"}, {"lineNumber": 304, "col_offset": 39, "nodeName": "df_genes", "type": "Any"}, {"lineNumber": 304, "col_offset": 52, "nodeName": "gene_num", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "str_best_individual", "type": "str"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "str_eval_result", "type": "str"}, {"lineNumber": 204, "col_offset": 41, "nodeName": "random", "type": "module"}, {"lineNumber": 205, "col_offset": 40, "nodeName": "random", "type": "module"}, {"lineNumber": 256, "col_offset": 39, "nodeName": "indivisual", "type": "int"}, {"lineNumber": 265, "col_offset": 87, "nodeName": "i", "type": "int"}, {"lineNumber": 205, "col_offset": 58, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 205, "col_offset": 62, "nodeName": "index", "type": "Any"}, {"lineNumber": 265, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 205, "col_offset": 62, "nodeName": "df_genes", "type": "Any"}]