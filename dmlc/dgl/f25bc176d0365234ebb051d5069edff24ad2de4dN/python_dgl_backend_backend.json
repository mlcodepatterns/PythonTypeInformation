[{"lineNumber": 19, "col_offset": 0, "nodeName": "data_type_dict", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "cpu", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "tensor", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "as_scalar", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "get_preferred_sparse_format", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "sparse_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "sparse_matrix_indices", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "is_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 0, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 0, "nodeName": "ndim", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 0, "nodeName": "context", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 0, "nodeName": "device_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 234, "col_offset": 0, "nodeName": "device_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 238, "col_offset": 0, "nodeName": "astype", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 255, "col_offset": 0, "nodeName": "asnumpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 0, "nodeName": "copy_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 295, "col_offset": 0, "nodeName": "sum", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 0, "nodeName": "reduce_sum", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 0, "nodeName": "mean", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 346, "col_offset": 0, "nodeName": "reduce_mean", "type": "Callable[[Any], Any]"}, {"lineNumber": 361, "col_offset": 0, "nodeName": "max", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 378, "col_offset": 0, "nodeName": "reduce_max", "type": "Callable[[Any], Any]"}, {"lineNumber": 393, "col_offset": 0, "nodeName": "min", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 410, "col_offset": 0, "nodeName": "reduce_min", "type": "Callable[[Any], Any]"}, {"lineNumber": 426, "col_offset": 0, "nodeName": "argsort", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 444, "col_offset": 0, "nodeName": "topk", "type": "Callable[..., Any]"}, {"lineNumber": 462, "col_offset": 0, "nodeName": "argtopk", "type": "Callable[..., Any]"}, {"lineNumber": 481, "col_offset": 0, "nodeName": "exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 496, "col_offset": 0, "nodeName": "softmax", "type": "Callable[..., Any]"}, {"lineNumber": 514, "col_offset": 0, "nodeName": "cat", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 531, "col_offset": 0, "nodeName": "stack", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 548, "col_offset": 0, "nodeName": "split", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 568, "col_offset": 0, "nodeName": "repeat", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 587, "col_offset": 0, "nodeName": "gather_row", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 604, "col_offset": 0, "nodeName": "slice_axis", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 625, "col_offset": 0, "nodeName": "take", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 639, "col_offset": 0, "nodeName": "narrow_row", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 662, "col_offset": 0, "nodeName": "scatter_row", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 683, "col_offset": 0, "nodeName": "scatter_row_inplace", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 699, "col_offset": 0, "nodeName": "squeeze", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 716, "col_offset": 0, "nodeName": "unsqueeze", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 733, "col_offset": 0, "nodeName": "reshape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 750, "col_offset": 0, "nodeName": "swapaxes", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 767, "col_offset": 0, "nodeName": "zeros", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 786, "col_offset": 0, "nodeName": "zeros_like", "type": "Callable[[Any], Any]"}, {"lineNumber": 802, "col_offset": 0, "nodeName": "ones", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 821, "col_offset": 0, "nodeName": "uniform", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 841, "col_offset": 0, "nodeName": "pad_packed_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 865, "col_offset": 0, "nodeName": "pack_padded_tensor", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 885, "col_offset": 0, "nodeName": "unsorted_1d_segment_sum", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 910, "col_offset": 0, "nodeName": "unsorted_1d_segment_mean", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 937, "col_offset": 0, "nodeName": "boolean_mask", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 955, "col_offset": 0, "nodeName": "equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 970, "col_offset": 0, "nodeName": "logical_not", "type": "Callable[[Any], Any]"}, {"lineNumber": 985, "col_offset": 0, "nodeName": "clone", "type": "Callable[[Any], Any]"}, {"lineNumber": 1008, "col_offset": 0, "nodeName": "unique", "type": "Callable[[Any], Any]"}, {"lineNumber": 1023, "col_offset": 0, "nodeName": "full_1d", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 1044, "col_offset": 0, "nodeName": "nonzero_1d", "type": "Callable[[Any], Any]"}, {"lineNumber": 1059, "col_offset": 0, "nodeName": "sort_1d", "type": "Callable[[Any], Any]"}, {"lineNumber": 1076, "col_offset": 0, "nodeName": "arange", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1093, "col_offset": 0, "nodeName": "rand_shuffle", "type": "Callable[[Any], Any]"}, {"lineNumber": 1110, "col_offset": 0, "nodeName": "zerocopy_to_dlpack", "type": "Callable[[Any], Any]"}, {"lineNumber": 1125, "col_offset": 0, "nodeName": "zerocopy_from_dlpack", "type": "Callable[[Any], Any]"}, {"lineNumber": 1140, "col_offset": 0, "nodeName": "zerocopy_to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 1155, "col_offset": 0, "nodeName": "zerocopy_from_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 1170, "col_offset": 0, "nodeName": "zerocopy_to_dgl_ndarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 1183, "col_offset": 0, "nodeName": "zerocopy_from_dgl_ndarray", "type": "Callable[[Any], Any]"}, {"lineNumber": 1205, "col_offset": 0, "nodeName": "binary_reduce", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 1243, "col_offset": 0, "nodeName": "copy_reduce", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 1277, "col_offset": 0, "nodeName": "sync", "type": "Callable[[], Any]"}]