[{"lineNumber": 21, "col_offset": 0, "nodeName": "is_internal_column", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "is_all", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "dgl_warning_format", "type": "Callable[..., Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "ALL", "type": "str"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "SLICE_FULL", "type": "slice"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "NTYPE", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "NID", "type": "str"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "ETYPE", "type": "str"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "EID", "type": "str"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "_INTERNAL_COLUMNS", "type": "Set[str]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "formatwarning", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "dgl_warning_format", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "dgl_warning", "type": "Callable"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "NTYPE", "type": "str"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "NID", "type": "str"}, {"lineNumber": 19, "col_offset": 33, "nodeName": "ETYPE", "type": "str"}, {"lineNumber": 19, "col_offset": 40, "nodeName": "EID", "type": "str"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "warnings", "type": "module"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "warnings", "type": "module"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "_init_internal_api", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "_INTERNAL_COLUMNS", "type": "Set[str]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 32, "col_offset": 38, "nodeName": "message", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "arg", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "arg", "type": "Any"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "ALL", "type": "str"}]