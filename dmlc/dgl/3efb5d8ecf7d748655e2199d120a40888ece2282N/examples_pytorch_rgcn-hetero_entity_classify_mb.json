[{"lineNumber": 53, "col_offset": 0, "nodeName": "extract_embed", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "evaluate", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "emb", "type": "Dict[Any, Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "ntype", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "srctypes", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "emb", "type": "Dict[Any, Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "emb", "type": "Dict[Any, Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "lbl", "type": "Any"}, {"lineNumber": 65, "col_offset": 7, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "logits", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "acc", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "g", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "category", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "predict_category", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "train_idx", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "train_idx", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "test_idx", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "test_idx", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "labels", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "labels", "type": "Any"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "validation", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "train_label", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "val_label", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "test_label", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "embed_layer", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "node_embed", "type": "Any"}, {"lineNumber": 121, "col_offset": 7, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "sampler", "type": "HeteroNeighborSampler"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "val_sampler", "type": "HeteroNeighborSampler"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "test_sampler", "type": "HeteroNeighborSampler"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "all_params", "type": "itertools.chain[nothing]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "dur", "type": "List[float]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "epoch", "type": "int"}, {"lineNumber": 183, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "fp", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "g", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "category", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "category", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "fanouts", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "fanouts", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "blocks", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "seeds", "type": "Dict[Any, Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "cur", "type": "Dict[Any, Any]"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "seeds", "type": "Dict[Any, Any]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "fanout", "type": "None"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "fanouts", "type": "List[None]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "block", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "nid", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "eval", "type": "Any"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "extract_embed", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "node_embed", "type": "Any"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "labels", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "emb", "type": "Dict[Any, Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "lbl", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "cross_entropy", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "logits", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "lbl", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "acc", "type": "Any"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "val_idx", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "train_idx", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "val_idx", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "train_idx", "type": "Any"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "labels", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "labels", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "labels", "type": "Any"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "RelGraphEmbed", "type": "Any"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "g", "type": "Any"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "n_hidden", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "embed_layer", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "EntityClassify", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "g", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "n_hidden", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "HeteroNeighborSampler", "type": "Type[HeteroNeighborSampler]"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "g", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "category", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "HeteroNeighborSampler", "type": "Type[HeteroNeighborSampler]"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "g", "type": "Any"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "category", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "_", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 7, "nodeName": "val_blocks", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "sample_blocks", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "val_idx", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "HeteroNeighborSampler", "type": "Type[HeteroNeighborSampler]"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "g", "type": "Any"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "category", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "_", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 7, "nodeName": "test_blocks", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "sample_blocks", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "test_idx", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "all_params", "type": "itertools.chain[nothing]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "n_epochs", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 7, "nodeName": "model_path", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "test_loss", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "test_acc", "type": "Any"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "evaluate", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "test_idx", "type": "Any"}, {"lineNumber": 179, "col_offset": 52, "nodeName": "test_blocks", "type": "List[Any]"}, {"lineNumber": 179, "col_offset": 65, "nodeName": "node_embed", "type": "Any"}, {"lineNumber": 179, "col_offset": 77, "nodeName": "labels", "type": "Any"}, {"lineNumber": 179, "col_offset": 85, "nodeName": "category", "type": "Any"}, {"lineNumber": 179, "col_offset": 95, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "add_mutually_exclusive_group", "type": "Callable[..., argparse._MutuallyExclusiveGroup]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 10, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "HeteroNeighborSampler"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "HeteroNeighborSampler"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "HeteroNeighborSampler"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "category", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "self", "type": "HeteroNeighborSampler"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "block", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "cur", "type": "Dict[Any, Any]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "ntype", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "srctypes", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "seeds", "type": "Dict[Any, Any]"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "blocks", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "data", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "emb", "type": "Dict[Any, Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "blocks", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "emb", "type": "Dict[Any, Any]"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "blocks", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "category", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "F", "type": "Any"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "item", "type": "Any"}, {"lineNumber": 70, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 59, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "AIFB", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "train_idx", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "train_idx", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "set_device", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "train_idx", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "val_idx", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "test_idx", "type": "Any"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "n_bases", "type": "Any"}, {"lineNumber": 118, "col_offset": 35, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "use_self_loop", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 125, "col_offset": 65, "nodeName": "n_layers", "type": "Any"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "sample_blocks", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 62, "nodeName": "n_layers", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "val_sampler", "type": "HeteroNeighborSampler"}, {"lineNumber": 137, "col_offset": 63, "nodeName": "n_layers", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "test_sampler", "type": "HeteroNeighborSampler"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "itertools", "type": "module"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 141, "col_offset": 53, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "optim", "type": "Any"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "lr", "type": "Any"}, {"lineNumber": 142, "col_offset": 67, "nodeName": "l2norm", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "epoch", "type": "int"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "t0", "type": "float"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "loader", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "batch_tic", "type": "float"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "emb", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "lbl", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "logits", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "train_acc", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "epoch", "type": "int"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "val_loss", "type": "Any"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "val_acc", "type": "Any"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "evaluate", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "model", "type": "Any"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "val_idx", "type": "Any"}, {"lineNumber": 172, "col_offset": 53, "nodeName": "val_blocks", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 65, "nodeName": "node_embed", "type": "Any"}, {"lineNumber": 172, "col_offset": 77, "nodeName": "labels", "type": "Any"}, {"lineNumber": 172, "col_offset": 85, "nodeName": "category", "type": "Any"}, {"lineNumber": 172, "col_offset": 95, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "model_path", "type": "Any"}, {"lineNumber": 180, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 180, "col_offset": 56, "nodeName": "test_acc", "type": "Any"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 185, "col_offset": 42, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 187, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 193, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 195, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 199, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 201, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 207, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 209, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "fp", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "fp", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "self", "type": "HeteroNeighborSampler"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "long", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "fanout", "type": "None"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "frontier", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "frontier", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "to_block", "type": "Any"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "frontier", "type": "Any"}, {"lineNumber": 46, "col_offset": 43, "nodeName": "cur", "type": "Dict[Any, Any]"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "block", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "block", "type": "Any"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "NID", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "ntype", "type": "Any"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "node_embed", "type": "Any"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "nid", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "lbl", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "MUTAG", "type": "Any"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 117, "col_offset": 45, "nodeName": "n_layers", "type": "Any"}, {"lineNumber": 118, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 50, "nodeName": "fanout", "type": "Any"}, {"lineNumber": 125, "col_offset": 65, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "sampler", "type": "HeteroNeighborSampler"}, {"lineNumber": 133, "col_offset": 62, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 137, "col_offset": 63, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 141, "col_offset": 53, "nodeName": "embed_layer", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "th", "type": "Any"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 142, "col_offset": 67, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "blocks", "type": "Any"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "extract_embed", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "node_embed", "type": "Any"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "labels", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "emb", "type": "Dict[Any, Any]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "lbl", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "cross_entropy", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "logits", "type": "Any"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "lbl", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "epoch", "type": "int"}, {"lineNumber": 174, "col_offset": 28, "nodeName": "val_acc", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "th", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 180, "col_offset": 66, "nodeName": "item", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "in_subgraph", "type": "Any"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "g", "type": "Any"}, {"lineNumber": 43, "col_offset": 51, "nodeName": "cur", "type": "Dict[Any, Any]"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "sample_neighbors", "type": "Any"}, {"lineNumber": 45, "col_offset": 57, "nodeName": "g", "type": "Any"}, {"lineNumber": 45, "col_offset": 65, "nodeName": "cur", "type": "Dict[Any, Any]"}, {"lineNumber": 45, "col_offset": 70, "nodeName": "fanout", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "dgl", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "cur", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "blocks", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "srcnodes", "type": "Any"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "dgl", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "ntype", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "e", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "k", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "e", "type": "Any"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "items", "type": "Callable"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "sum", "type": "Any"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "BGS", "type": "Any"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "th", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "th", "type": "Any"}, {"lineNumber": 117, "col_offset": 45, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 125, "col_offset": 50, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "train_idx", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "time", "type": "module"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "time", "type": "module"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "blocks", "type": "Any"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "emb", "type": "Dict[Any, Any]"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "blocks", "type": "Any"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "category", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 165, "col_offset": 69, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "epoch", "type": "int"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "train_acc", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "dur", "type": "List[float]"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "t0", "type": "float"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "item", "type": "Any"}, {"lineNumber": 174, "col_offset": 54, "nodeName": "average", "type": "Any"}, {"lineNumber": 174, "col_offset": 65, "nodeName": "dur", "type": "List[float]"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 180, "col_offset": 66, "nodeName": "test_loss", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 39, "col_offset": 43, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "dgl", "type": "Any"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "self", "type": "HeteroNeighborSampler"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "sampling", "type": "Any"}, {"lineNumber": 45, "col_offset": 57, "nodeName": "self", "type": "HeteroNeighborSampler"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "ntype", "type": "Any"}, {"lineNumber": 49, "col_offset": 56, "nodeName": "NID", "type": "Any"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "block", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "ntype", "type": "Any"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "emb", "type": "Dict[Any, Any]"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "th", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "lbl", "type": "Any"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "AM", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "train_idx", "type": "Any"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "train_idx", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "lbl", "type": "Any"}, {"lineNumber": 165, "col_offset": 73, "nodeName": "seeds", "type": "Any"}, {"lineNumber": 167, "col_offset": 46, "nodeName": "item", "type": "Any"}, {"lineNumber": 167, "col_offset": 73, "nodeName": "batch_tic", "type": "float"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "val_loss", "type": "Any"}, {"lineNumber": 174, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "th", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "dgl", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "srcnodes", "type": "Any"}, {"lineNumber": 49, "col_offset": 56, "nodeName": "dgl", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "category", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "e", "type": "Any"}, {"lineNumber": 158, "col_offset": 40, "nodeName": "k", "type": "Any"}, {"lineNumber": 158, "col_offset": 43, "nodeName": "e", "type": "Any"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "items", "type": "Callable"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 165, "col_offset": 79, "nodeName": "category", "type": "Any"}, {"lineNumber": 167, "col_offset": 46, "nodeName": "loss", "type": "Any"}, {"lineNumber": 167, "col_offset": 59, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "time", "type": "module"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "block", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "ntype", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "logits", "type": "Any"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "emb", "type": "Dict[Any, Any]"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "th", "type": "Any"}, {"lineNumber": 165, "col_offset": 55, "nodeName": "lbl", "type": "Any"}, {"lineNumber": 167, "col_offset": 59, "nodeName": "time", "type": "module"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "logits", "type": "Any"}]