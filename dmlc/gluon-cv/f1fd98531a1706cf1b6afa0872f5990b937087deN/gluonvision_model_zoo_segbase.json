[{"lineNumber": 9, "col_offset": 19, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "aux", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "aux", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "c3", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "c4", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "pred", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "aux", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "module", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "bg", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "bg", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "bn1", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "bn1", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "relu", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "maxpool", "type": "Any"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "maxpool", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "layer1", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "layer1", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "layer2", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "layer2", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "layer3", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "layer3", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "layer4", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "layer4", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "bn1", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "maxpool", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "layer1", "type": "Any"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "layer2", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "layer3", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "layer4", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "c3", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "c3", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "c4", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "forward", "type": "Any"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "target", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "pred", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "batch_pix_accuracy", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "target", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "bg", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "batch_intersection_union", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "target", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "nclass", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "bg", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "correct", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "labeled", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "inter", "type": "Any"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "union", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "SegEvalModule"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "SegEvalModule"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "backbone", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "pred", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "voc_segmentation", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "voc_segmentation", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "bg", "type": "Any"}, {"lineNumber": 75, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "SegBaseModel", "type": "Type[SegBaseModel]"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "self", "type": "SegBaseModel"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "dilated_resnet50", "type": "Any"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "backbone", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "self", "type": "SegEvalModule"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "self", "type": "SegEvalModule"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "self", "type": "SegEvalModule"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "dilatedresnetv1", "type": "Any"}, {"lineNumber": 27, "col_offset": 81, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "dilated_resnet101", "type": "Any"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "backbone", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "dilatedresnetv1", "type": "Any"}, {"lineNumber": 29, "col_offset": 82, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "dilated_resnet152", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "dilatedresnetv1", "type": "Any"}, {"lineNumber": 31, "col_offset": 82, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 33, "col_offset": 65, "nodeName": "backbone", "type": "Any"}]