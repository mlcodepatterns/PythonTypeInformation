[{"lineNumber": 147, "col_offset": 0, "nodeName": "_parallel_apply", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "_criterion_parallel_apply", "type": "Callable[..., Any]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 10, "col_offset": 22, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 10, "col_offset": 22, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "kwargs_tup", "type": "None"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "lock", "type": "threading.Lock"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "results", "type": "Dict[nothing, nothing]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "threads", "type": "List[threading.Thread]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "threads", "type": "List[threading.Thread]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 204, "col_offset": 7, "nodeName": "kwargs_tup", "type": "None"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "lock", "type": "threading.Lock"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "results", "type": "Dict[nothing, nothing]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "threads", "type": "List[threading.Thread]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 244, "col_offset": 18, "nodeName": "threads", "type": "List[threading.Thread]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "baselr", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "baselr", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "baselr", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "niters", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "niters", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "N", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "power", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "power", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "T", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "module", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "sync", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "sync", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "sync", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "module", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "sync", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "sync", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "sync", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "kwargs_tup", "type": "Tuple[Dict[nothing, nothing], ...]"}, {"lineNumber": 153, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "Lock", "type": "Type[threading.Lock]"}, {"lineNumber": 176, "col_offset": 7, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "is_training", "type": "bool"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "is_training", "type": "bool"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "output", "type": "nothing"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "kwargs_tup", "type": "Tuple[Dict[nothing, nothing], ...]"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "Lock", "type": "Type[threading.Lock]"}, {"lineNumber": 230, "col_offset": 7, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "is_training", "type": "bool"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "is_training", "type": "bool"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "output", "type": "nothing"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "PolyLRScheduler"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "PolyLRScheduler"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "self", "type": "PolyLRScheduler"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "PolyLRScheduler"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "PolyLRScheduler"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "nepochs", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "niters", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "PolyLRScheduler"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "self", "type": "PolyLRScheduler"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "i", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "PolyLRScheduler"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "baselr", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "ModelDataParallel"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "reset_ctx", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "ModelDataParallel"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "ModelDataParallel"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "self", "type": "ModelDataParallel"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "CriterionDataParallel"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "CriterionDataParallel"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "CriterionDataParallel"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "self", "type": "CriterionDataParallel"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 155, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "threading", "type": "module"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 176, "col_offset": 7, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "start", "type": "Callable[[], None]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "join", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "results", "type": "Dict[nothing, nothing]"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "output", "type": "nothing"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "output", "type": "nothing"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "output", "type": "nothing"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "targets", "type": "Any"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 203, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 209, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "threading", "type": "module"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 230, "col_offset": 7, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "start", "type": "Callable[[], None]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "join", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 248, "col_offset": 17, "nodeName": "results", "type": "Dict[nothing, nothing]"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "output", "type": "nothing"}, {"lineNumber": 249, "col_offset": 30, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "output", "type": "nothing"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "output", "type": "nothing"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "niters", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "T", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "T", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "N", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "self", "type": "PolyLRScheduler"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "pow", "type": "Callable"}, {"lineNumber": 41, "col_offset": 71, "nodeName": "power", "type": "Any"}, {"lineNumber": 78, "col_offset": 48, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "_parallel_apply", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "module", "type": "Any"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "_criterion_parallel_apply", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "module", "type": "Any"}, {"lineNumber": 133, "col_offset": 58, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 133, "col_offset": 66, "nodeName": "targets", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "kwargs_tup", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "lock", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "kwargs_tup", "type": "Any"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "lock", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "PolyLRScheduler", "type": "Type[PolyLRScheduler]"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "self", "type": "PolyLRScheduler"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "self", "type": "PolyLRScheduler"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "self", "type": "PolyLRScheduler"}, {"lineNumber": 41, "col_offset": 71, "nodeName": "self", "type": "PolyLRScheduler"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "self", "type": "ModelDataParallel"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "module", "type": "Any"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "module", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 91, "col_offset": 42, "nodeName": "X", "type": "Any"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "self", "type": "CriterionDataParallel"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "module", "type": "Any"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "targets", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "output", "type": "Any"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "kwargs_tup", "type": "Tuple[Dict[nothing, nothing], ...]"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "input", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "results", "type": "Any"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "lock", "type": "Any"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "e", "type": "Exception"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "input", "type": "Any"}, {"lineNumber": 185, "col_offset": 30, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "kwargs_tup", "type": "Tuple[Dict[nothing, nothing], ...]"}, {"lineNumber": 210, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "targets", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "input", "type": "Any"}, {"lineNumber": 222, "col_offset": 39, "nodeName": "target", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "results", "type": "Any"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "lock", "type": "Any"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "e", "type": "Exception"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "input", "type": "Any"}, {"lineNumber": 239, "col_offset": 30, "nodeName": "target", "type": "Any"}, {"lineNumber": 239, "col_offset": 38, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 240, "col_offset": 37, "nodeName": "targets", "type": "Any"}, {"lineNumber": 240, "col_offset": 46, "nodeName": "kwargs_tup", "type": "Tuple[Dict[nothing, nothing], ...]"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "N", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "self", "type": "ModelDataParallel"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "self", "type": "ModelDataParallel"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "self", "type": "CriterionDataParallel"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "targets", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "self", "type": "CriterionDataParallel"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 48, "nodeName": "targets", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "kwargs_tup", "type": "Tuple[Dict[nothing, nothing], ...]"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "record", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 165, "col_offset": 36, "nodeName": "input", "type": "Any"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 168, "col_offset": 41, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "i", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "results", "type": "Any"}, {"lineNumber": 210, "col_offset": 48, "nodeName": "kwargs_tup", "type": "Tuple[Dict[nothing, nothing], ...]"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "record", "type": "Any"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 219, "col_offset": 36, "nodeName": "input", "type": "Any"}, {"lineNumber": 219, "col_offset": 43, "nodeName": "target", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 222, "col_offset": 49, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "i", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "results", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "T", "type": "Any"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "self", "type": "PolyLRScheduler"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "self", "type": "ModelDataParallel"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "self", "type": "CriterionDataParallel"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 142, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 165, "col_offset": 45, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "i", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 219, "col_offset": 53, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "i", "type": "Any"}]