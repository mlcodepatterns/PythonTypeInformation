[{"lineNumber": 105, "col_offset": 0, "nodeName": "split_load_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "parallel_apply", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 0, "nodeName": "criterion_parallel_apply", "type": "Callable[..., Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 11, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "kwargs", "type": "Tuple[Any, ...]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "lock", "type": "threading.Lock"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "results", "type": "Dict[nothing, nothing]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "is_recording", "type": "Any"}, {"lineNumber": 172, "col_offset": 7, "nodeName": "sync", "type": "Any"}, {"lineNumber": 191, "col_offset": 7, "nodeName": "kwargs_tup", "type": "Tuple[Any, ...]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "lock", "type": "threading.Lock"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "results", "type": "Dict[nothing, nothing]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "is_training", "type": "bool"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "is_recording", "type": "Any"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "sync", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "module", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "sync", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "sync", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "module", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "sync", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "sync", "type": "Any"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "kwargs", "type": "Tuple[Any, ...]"}, {"lineNumber": 130, "col_offset": 7, "nodeName": "kwargs_tup", "type": "Tuple[Any, ...]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "kwargs_tup", "type": "Tuple[Dict[nothing, nothing], ...]"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "Lock", "type": "Type[threading.Lock]"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "is_recording", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "threads", "type": "List[threading.Thread]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "threads", "type": "List[threading.Thread]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "kwargs_tup", "type": "Tuple[Dict[nothing, nothing], ...]"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "Lock", "type": "Type[threading.Lock]"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "is_recording", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "threads", "type": "List[threading.Thread]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "threads", "type": "List[threading.Thread]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "reset_ctx", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "DataParallelModel"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "DataParallelModel"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "DataParallelModel"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "kwargs", "type": "Tuple[Any, ...]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "split_load_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 59, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "parallel_apply", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "module", "type": "Any"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 54, "col_offset": 51, "nodeName": "kwargs", "type": "Tuple[Any, ...]"}, {"lineNumber": 54, "col_offset": 59, "nodeName": "sync", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "DataParallelCriterion"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "DataParallelCriterion"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "DataParallelCriterion"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "targets", "type": "Tuple[Any, ...]"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "kwargs", "type": "Tuple[Any, ...]"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "split_load_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "targets", "type": "Tuple[Any, ...]"}, {"lineNumber": 97, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 61, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "criterion_parallel_apply", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "module", "type": "Any"}, {"lineNumber": 102, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 102, "col_offset": 61, "nodeName": "targets", "type": "Tuple[Any, ...]"}, {"lineNumber": 102, "col_offset": 70, "nodeName": "kwargs", "type": "Tuple[Any, ...]"}, {"lineNumber": 102, "col_offset": 78, "nodeName": "sync", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "obj", "type": "Tuple[Any, ...]"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "obj", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "split_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "split_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "extend", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "threading", "type": "module"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "is_recording", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "output", "type": "nothing"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "threading", "type": "module"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "is_recording", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "output", "type": "nothing"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "self", "type": "DataParallelModel"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "module", "type": "Any"}, {"lineNumber": 50, "col_offset": 59, "nodeName": "self", "type": "DataParallelModel"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "module", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "self", "type": "DataParallelModel"}, {"lineNumber": 54, "col_offset": 59, "nodeName": "self", "type": "DataParallelModel"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "self", "type": "DataParallelCriterion"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "module", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 97, "col_offset": 61, "nodeName": "self", "type": "DataParallelCriterion"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "targets", "type": "Tuple[Any, ...]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "module", "type": "Any"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "self", "type": "DataParallelCriterion"}, {"lineNumber": 102, "col_offset": 78, "nodeName": "self", "type": "DataParallelCriterion"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "split_and_load", "type": "Any"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "obj", "type": "Tuple[Any, ...]"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "batch_axis", "type": "int"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "obj", "type": "Tuple[Any, ...]"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "obj", "type": "Tuple[Any, ...]"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "obj", "type": "Tuple[Any, ...]"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "targets", "type": "Any"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "ctx_list", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "extend", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "kwargs_tup", "type": "Tuple[Any, ...]"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "lock", "type": "Any"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "start", "type": "Callable[[], None]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "join", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "results", "type": "Dict[nothing, nothing]"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "output", "type": "nothing"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "output", "type": "nothing"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "output", "type": "nothing"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "module", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 192, "col_offset": 34, "nodeName": "kwargs_tup", "type": "Tuple[Any, ...]"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "lock", "type": "Any"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "start", "type": "Callable[[], None]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "join", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 230, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "results", "type": "Dict[nothing, nothing]"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "output", "type": "nothing"}, {"lineNumber": 232, "col_offset": 34, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "output", "type": "nothing"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "output", "type": "nothing"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "self", "type": "DataParallelModel"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "self", "type": "DataParallelModel"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "self", "type": "DataParallelModel"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "self", "type": "DataParallelModel"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "__repr__", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "self", "type": "DataParallelCriterion"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "targets", "type": "Tuple[Any, ...]"}, {"lineNumber": 96, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "self", "type": "DataParallelCriterion"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "self", "type": "DataParallelCriterion"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "self", "type": "DataParallelCriterion"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "self", "type": "DataParallelCriterion"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "obj", "type": "Tuple[Any, ...]"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 112, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 41, "nodeName": "obj", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "map", "type": "Callable"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "obj", "type": "Dict[str, Any]"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "map", "type": "Callable"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "_", "type": "int"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "output", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "results", "type": "Any"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "lock", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "e", "type": "Exception"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "input", "type": "Tuple[()]"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "kwargs_tup", "type": "Tuple[Any, ...]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "input", "type": "Tuple[()]"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 185, "col_offset": 49, "nodeName": "input", "type": "Tuple[()]"}, {"lineNumber": 185, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 185, "col_offset": 67, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 185, "col_offset": 71, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 185, "col_offset": 79, "nodeName": "kwargs_tup", "type": "Tuple[Any, ...]"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "results", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "lock", "type": "Any"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "e", "type": "Exception"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "input", "type": "Any"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "target", "type": "Any"}, {"lineNumber": 221, "col_offset": 38, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "targets", "type": "Tuple[Any, ...]"}, {"lineNumber": 222, "col_offset": 46, "nodeName": "kwargs_tup", "type": "Union[Tuple[Dict[nothing, nothing], ...], Tuple[Any, ...]]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "outputs", "type": "List[nothing]"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "input", "type": "Any"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "target", "type": "Any"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 238, "col_offset": 43, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 238, "col_offset": 47, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 238, "col_offset": 55, "nodeName": "targets", "type": "Tuple[Any, ...]"}, {"lineNumber": 238, "col_offset": 64, "nodeName": "kwargs_tup", "type": "Union[Tuple[Dict[nothing, nothing], ...], Tuple[Any, ...]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "kwargs", "type": "Tuple[Any, ...]"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "module", "type": "Any"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "targets", "type": "Tuple[Any, ...]"}, {"lineNumber": 101, "col_offset": 54, "nodeName": "kwargs", "type": "Tuple[Any, ...]"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "obj", "type": "Dict[str, Any]"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "_", "type": "int"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "record", "type": "Any"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "input", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "input", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "i", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "results", "type": "Any"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "record", "type": "Any"}, {"lineNumber": 202, "col_offset": 37, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 206, "col_offset": 53, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "i", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "results", "type": "Any"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "self", "type": "DataParallelModel"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "map", "type": "Callable"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "split_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "obj", "type": "Tuple[Any, ...]"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "module", "type": "Any"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "input", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "module", "type": "Any"}, {"lineNumber": 151, "col_offset": 45, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "input", "type": "Any"}, {"lineNumber": 154, "col_offset": 46, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "i", "type": "Any"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 203, "col_offset": 57, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "input", "type": "Any"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "target", "type": "Any"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "i", "type": "Any"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "map", "type": "Callable"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "split_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 54, "nodeName": "obj", "type": "Any"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "map", "type": "Callable"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "split_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 120, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 59, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 143, "col_offset": 49, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "input", "type": "Any"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "wait_to_read", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 203, "col_offset": 38, "nodeName": "input", "type": "Any"}, {"lineNumber": 203, "col_offset": 46, "nodeName": "target", "type": "Any"}, {"lineNumber": 115, "col_offset": 59, "nodeName": "items", "type": "Callable"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 59, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 115, "col_offset": 59, "nodeName": "obj", "type": "Dict[str, Any]"}]