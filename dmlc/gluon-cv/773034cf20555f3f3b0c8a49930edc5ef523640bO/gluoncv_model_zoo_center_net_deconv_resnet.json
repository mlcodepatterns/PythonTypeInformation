[{"lineNumber": 167, "col_offset": 0, "nodeName": "get_deconv_resnet", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 0, "nodeName": "resnet18_v1b_deconv", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 0, "nodeName": "resnet18_v1b_deconv_dcnv2", "type": "Callable[..., Any]"}, {"lineNumber": 220, "col_offset": 0, "nodeName": "resnet50_v1b_deconv", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 0, "nodeName": "resnet50_v1b_deconv_dcnv2", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 0, "nodeName": "resnet101_v1b_deconv", "type": "Callable[..., Any]"}, {"lineNumber": 256, "col_offset": 0, "nodeName": "resnet101_v1b_deconv_dcnv2", "type": "Callable[..., Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "Initializer", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "init", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "net", "type": "DeconvResnet"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "net", "type": "DeconvResnet"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "mx", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "f", "type": "int"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "c", "type": "float"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "c", "type": "int"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "BatchNorm", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_norm_layer", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "norm_layer", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "_norm_kwargs", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "_use_dcnv2", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "use_dcnv2", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "in_planes", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "layers", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 167, "col_offset": 58, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 188, "col_offset": 10, "nodeName": "DeconvResnet", "type": "Type[DeconvResnet]"}, {"lineNumber": 190, "col_offset": 49, "nodeName": "_", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "reset_ctx", "type": "Any"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "get_deconv_resnet", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "get_deconv_resnet", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "get_deconv_resnet", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "get_deconv_resnet", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "get_deconv_resnet", "type": "Callable[..., Any]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "get_deconv_resnet", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "nn", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "get_model", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "norm_kwargs", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "feat", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "feat", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "deconv", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "deconv_kernel", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "padding", "type": "int"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "output_padding", "type": "int"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "deconv_kernel", "type": "Any"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "padding", "type": "int"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "output_padding", "type": "int"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 122, "col_offset": 53, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "planes", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "num_filters", "type": "Any"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "num_kernels", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "_use_dcnv2", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "in_planes", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "planes", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 163, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "deconv", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 188, "col_offset": 36, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 188, "col_offset": 66, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "use_dcnv2", "type": "Any"}, {"lineNumber": 189, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 9, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 206, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 218, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 230, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 242, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 254, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 266, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "arr", "type": "Any"}, {"lineNumber": 41, "col_offset": 52, "nodeName": "arr", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "math", "type": "module"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "f", "type": "int"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "arr", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "arr", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "norm_kwargs", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "_make_deconv_layer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 50, "nodeName": "deconv_filters", "type": "Any"}, {"lineNumber": 96, "col_offset": 66, "nodeName": "deconv_kernels", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "deconv_kernel", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "padding", "type": "int"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "output_padding", "type": "int"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "num_kernels", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "num_filters", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "num_filters", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "num_kernels", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "padding", "type": "int"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "output_padding", "type": "int"}, {"lineNumber": 127, "col_offset": 46, "nodeName": "_get_deconv_cfg", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 67, "nodeName": "k", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 190, "col_offset": 9, "nodeName": "warnings", "type": "module"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "net", "type": "DeconvResnet"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "BilinearUpSample", "type": "Type[BilinearUpSample]"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "self", "type": "BilinearUpSample"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "nd", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "f", "type": "int"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "arr", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "arr", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "arr", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "DeconvResnet", "type": "Type[DeconvResnet]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "feat", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "deconv_kernel", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "padding", "type": "int"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "output_padding", "type": "int"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 127, "col_offset": 46, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "cnn", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "_norm_layer", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "Conv2DTranspose", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "_norm_layer", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "net", "type": "DeconvResnet"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "arr", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "f", "type": "int"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "arr", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "c", "type": "int"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "bn1", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "relu", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "maxpool", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "layer1", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "layer2", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "layer3", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "layer4", "type": "Any"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "ModulatedDeformableConvolution", "type": "Any"}, {"lineNumber": 131, "col_offset": 70, "nodeName": "planes", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 144, "col_offset": 56, "nodeName": "_norm_kwargs", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "planes", "type": "Any"}, {"lineNumber": 147, "col_offset": 54, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 149, "col_offset": 50, "nodeName": "padding", "type": "int"}, {"lineNumber": 150, "col_offset": 57, "nodeName": "output_padding", "type": "int"}, {"lineNumber": 152, "col_offset": 54, "nodeName": "planes", "type": "Any"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 154, "col_offset": 56, "nodeName": "_norm_kwargs", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "j", "type": "int"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "fabs", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 47, "col_offset": 54, "nodeName": "fabs", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 110, "col_offset": 75, "nodeName": "deconv_kernel", "type": "Any"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "nd", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "cnn", "type": "Any"}, {"lineNumber": 137, "col_offset": 82, "nodeName": "in_planes", "type": "Any"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "planes", "type": "Any"}, {"lineNumber": 143, "col_offset": 49, "nodeName": "in_planes", "type": "Any"}, {"lineNumber": 144, "col_offset": 56, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 153, "col_offset": 61, "nodeName": "BilinearUpSample", "type": "Type[BilinearUpSample]"}, {"lineNumber": 154, "col_offset": 56, "nodeName": "self", "type": "DeconvResnet"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "math", "type": "module"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "c", "type": "float"}, {"lineNumber": 47, "col_offset": 54, "nodeName": "math", "type": "module"}, {"lineNumber": 47, "col_offset": 72, "nodeName": "c", "type": "float"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "mx", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "f", "type": "int"}, {"lineNumber": 47, "col_offset": 64, "nodeName": "j", "type": "int"}, {"lineNumber": 47, "col_offset": 68, "nodeName": "f", "type": "int"}]