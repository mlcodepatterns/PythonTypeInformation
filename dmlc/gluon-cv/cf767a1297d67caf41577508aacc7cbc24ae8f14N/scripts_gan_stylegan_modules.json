[{"lineNumber": 10, "col_offset": 0, "nodeName": "get_weight_key", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "compute_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "weight_key", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 11, "col_offset": 13, "nodeName": "keys", "type": "Any"}, {"lineNumber": 19, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "weight_orig", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "multiplier", "type": "float"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "pad", "type": "Tuple[Any, Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "multiplier", "type": "float"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "pad", "type": "Tuple[Any, Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "channel", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "channel", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "weight", "type": "numpy.ndarray"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "weight_flip", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "weight_flip", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "multiplier", "type": "float"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "num_hidden", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "out_dim", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "multiplier", "type": "float"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "norm", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "style", "type": "EqualLinear"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "mx_params", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "style", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "new_weight", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "pad1", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "padding", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "pad2", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "padding", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "kernel1", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "kernel2", "type": "Any"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "downsample", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "upsample", "type": "None"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "initial", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "noise1", "type": "NoiseInjection"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "adain1", "type": "AdaptiveInstanceNorm"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "lrelu1", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "conv2", "type": "EqualConv2d"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "noise2", "type": "NoiseInjection"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "adain2", "type": "AdaptiveInstanceNorm"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "lrelu2", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 11, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 12, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "weight_key", "type": "Any"}, {"lineNumber": 13, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "shape", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 28, "col_offset": 44, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "FusedUpsample"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "FusedUpsample"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "FusedUpsample"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "FusedUpsample"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "padding", "type": "Any"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "padding", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "pad", "type": "Any"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "Deconvolution", "type": "Any"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "weight", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "FusedDownsample"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "FusedDownsample"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "FusedDownsample"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "FusedDownsample"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "padding", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "padding", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "pad", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "Convolution", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Blur"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "weight", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Blur"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "tile", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "flip", "type": "Any"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "weight", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Blur"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "tile", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "array", "type": "Any"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "weight", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "Convolution", "type": "Any"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "bias", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "kernel", "type": "Tuple[Any, Any]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "channel", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "out_dim", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "padding", "type": "Tuple[Any, Any]"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "prod", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "Convolution", "type": "Any"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "EqualLinear"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "EqualLinear"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "EqualLinear"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "prod", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "FullyConnected", "type": "Any"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "AdaptiveInstanceNorm"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "InstanceNorm", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "AdaptiveInstanceNorm"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "EqualLinear", "type": "Type[EqualLinear]"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "style_dim", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "beta", "type": "Any"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "split", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "norm", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "beta", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "NoiseInjection"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "compute_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "image", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "ConstantInput"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "tile", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "padding2", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "pad2", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "padding2", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "kernel_size2", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "kernel2", "type": "Any"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "kernel_size2", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "fused", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 238, "col_offset": 14, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "conv1", "type": "ConstantInput"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "upsample", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "NoiseInjection", "type": "Type[NoiseInjection]"}, {"lineNumber": 274, "col_offset": 37, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 275, "col_offset": 22, "nodeName": "AdaptiveInstanceNorm", "type": "Type[AdaptiveInstanceNorm]"}, {"lineNumber": 275, "col_offset": 43, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 275, "col_offset": 56, "nodeName": "style_dim", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "LeakyReLU", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "EqualConv2d", "type": "Type[EqualConv2d]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "NoiseInjection", "type": "Type[NoiseInjection]"}, {"lineNumber": 279, "col_offset": 37, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "AdaptiveInstanceNorm", "type": "Type[AdaptiveInstanceNorm]"}, {"lineNumber": 280, "col_offset": 43, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 280, "col_offset": 56, "nodeName": "style_dim", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "LeakyReLU", "type": "Any"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "upsample", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 287, "col_offset": 14, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 288, "col_offset": 14, "nodeName": "noise1", "type": "NoiseInjection"}, {"lineNumber": 288, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 288, "col_offset": 31, "nodeName": "noise", "type": "Any"}, {"lineNumber": 289, "col_offset": 14, "nodeName": "lrelu1", "type": "Any"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 290, "col_offset": 14, "nodeName": "adain1", "type": "AdaptiveInstanceNorm"}, {"lineNumber": 290, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 290, "col_offset": 31, "nodeName": "style", "type": "Any"}, {"lineNumber": 292, "col_offset": 14, "nodeName": "conv2", "type": "EqualConv2d"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "noise2", "type": "NoiseInjection"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 293, "col_offset": 31, "nodeName": "noise", "type": "Any"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "lrelu2", "type": "Any"}, {"lineNumber": 294, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 295, "col_offset": 14, "nodeName": "adain2", "type": "AdaptiveInstanceNorm"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 295, "col_offset": 31, "nodeName": "style", "type": "Any"}, {"lineNumber": 11, "col_offset": 13, "nodeName": "module", "type": "Any"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "weight_orig", "type": "Any"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "in_channel", "type": "Any"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 32, "col_offset": 51, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "F", "type": "Any"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "multiplier", "type": "float"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "F", "type": "Any"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "pad", "type": "Tuple[Any, Any]"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 56, "col_offset": 51, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "in_channel", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "F", "type": "Any"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "multiplier", "type": "float"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "F", "type": "Any"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "pad", "type": "Tuple[Any, Any]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "weight", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 46, "nodeName": "channel", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 55, "nodeName": "channel", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "nd", "type": "Any"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "self", "type": "Blur"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "context", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "F", "type": "Any"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "channel", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "EqualConv2d"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "EqualConv2d"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "EqualConv2d"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "EqualConv2d"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "EqualConv2d"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "padding", "type": "Any"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "padding", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "F", "type": "Any"}, {"lineNumber": 125, "col_offset": 48, "nodeName": "multiplier", "type": "float"}, {"lineNumber": 125, "col_offset": 60, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 83, "nodeName": "kernel", "type": "Tuple[Any, Any]"}, {"lineNumber": 125, "col_offset": 100, "nodeName": "padding", "type": "Tuple[Any, Any]"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "channel", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 135, "col_offset": 51, "nodeName": "out_dim", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "F", "type": "Any"}, {"lineNumber": 144, "col_offset": 51, "nodeName": "multiplier", "type": "float"}, {"lineNumber": 144, "col_offset": 63, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 144, "col_offset": 90, "nodeName": "num_hidden", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 153, "col_offset": 48, "nodeName": "in_channel", "type": "Any"}, {"lineNumber": 154, "col_offset": 44, "nodeName": "in_channel", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "style", "type": "EqualLinear"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "style", "type": "EqualLinear"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "mx_params", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "style", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "self", "type": "AdaptiveInstanceNorm"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 179, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "new_weight", "type": "Any"}, {"lineNumber": 181, "col_offset": 36, "nodeName": "noise", "type": "Any"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "params", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "batch", "type": "Any"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 238, "col_offset": 14, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "ConstantInput", "type": "Type[ConstantInput]"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "in_channel", "type": "Any"}, {"lineNumber": 254, "col_offset": 19, "nodeName": "fused", "type": "Any"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 278, "col_offset": 61, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 278, "col_offset": 81, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 278, "col_offset": 102, "nodeName": "padding", "type": "Any"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "UpSampling", "type": "Any"}, {"lineNumber": 286, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 287, "col_offset": 14, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 288, "col_offset": 14, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 289, "col_offset": 14, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 290, "col_offset": 14, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 292, "col_offset": 14, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 295, "col_offset": 14, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 19, "col_offset": 36, "nodeName": "weight_orig", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "self", "type": "FusedUpsample"}, {"lineNumber": 30, "col_offset": 55, "nodeName": "in_channel", "type": "Any"}, {"lineNumber": 30, "col_offset": 67, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 30, "col_offset": 80, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 30, "col_offset": 93, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "self", "type": "FusedUpsample"}, {"lineNumber": 32, "col_offset": 70, "nodeName": "Zero", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "self", "type": "FusedUpsample"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "weight", "type": "Any"}, {"lineNumber": 45, "col_offset": 64, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "self", "type": "FusedUpsample"}, {"lineNumber": 46, "col_offset": 55, "nodeName": "shape", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "self", "type": "FusedDownsample"}, {"lineNumber": 54, "col_offset": 55, "nodeName": "in_channel", "type": "Any"}, {"lineNumber": 54, "col_offset": 67, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 54, "col_offset": 80, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 54, "col_offset": 93, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 55, "col_offset": 61, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "self", "type": "FusedDownsample"}, {"lineNumber": 56, "col_offset": 88, "nodeName": "Zero", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "fan_in", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "self", "type": "FusedDownsample"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "weight", "type": "Any"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "shape", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "self", "type": "FusedDownsample"}, {"lineNumber": 73, "col_offset": 53, "nodeName": "shape", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 91, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "array", "type": "Any"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "weight", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "array", "type": "Any"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "weight_flip", "type": "Any"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 49, "nodeName": "shape", "type": "Any"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "self", "type": "Blur"}, {"lineNumber": 103, "col_offset": 66, "nodeName": "shape", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "self", "type": "EqualConv2d"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "params", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "params", "type": "Any"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "out_dim", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 83, "nodeName": "self", "type": "EqualConv2d"}, {"lineNumber": 125, "col_offset": 100, "nodeName": "self", "type": "EqualConv2d"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "self", "type": "EqualConv2d"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "self", "type": "EqualLinear"}, {"lineNumber": 134, "col_offset": 60, "nodeName": "out_dim", "type": "Any"}, {"lineNumber": 134, "col_offset": 69, "nodeName": "in_dim", "type": "Any"}, {"lineNumber": 134, "col_offset": 101, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "self", "type": "EqualLinear"}, {"lineNumber": 135, "col_offset": 84, "nodeName": "Zero", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 144, "col_offset": 90, "nodeName": "self", "type": "EqualLinear"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "AdaptiveInstanceNorm"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "self", "type": "AdaptiveInstanceNorm"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "self", "type": "NoiseInjection"}, {"lineNumber": 176, "col_offset": 63, "nodeName": "channel", "type": "Any"}, {"lineNumber": 176, "col_offset": 84, "nodeName": "Zero", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "self", "type": "ConstantInput"}, {"lineNumber": 188, "col_offset": 56, "nodeName": "channel", "type": "Any"}, {"lineNumber": 188, "col_offset": 65, "nodeName": "size", "type": "Any"}, {"lineNumber": 188, "col_offset": 71, "nodeName": "size", "type": "Any"}, {"lineNumber": 188, "col_offset": 83, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 213, "col_offset": 27, "nodeName": "EqualConv2d", "type": "Type[EqualConv2d]"}, {"lineNumber": 213, "col_offset": 39, "nodeName": "in_channel", "type": "Any"}, {"lineNumber": 213, "col_offset": 51, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 213, "col_offset": 64, "nodeName": "kernel1", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "LeakyReLU", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "upsample", "type": "str"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "upsample", "type": "str"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "EqualConv2d", "type": "Type[EqualConv2d]"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "init", "type": "Any"}, {"lineNumber": 32, "col_offset": 70, "nodeName": "init", "type": "Any"}, {"lineNumber": 45, "col_offset": 64, "nodeName": "weight", "type": "Any"}, {"lineNumber": 46, "col_offset": 55, "nodeName": "weight", "type": "Any"}, {"lineNumber": 55, "col_offset": 61, "nodeName": "init", "type": "Any"}, {"lineNumber": 56, "col_offset": 88, "nodeName": "init", "type": "Any"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "weight", "type": "Any"}, {"lineNumber": 73, "col_offset": 53, "nodeName": "weight", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "mean", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "weight", "type": "Any"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "nd", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "nd", "type": "Any"}, {"lineNumber": 102, "col_offset": 49, "nodeName": "weight", "type": "Any"}, {"lineNumber": 103, "col_offset": 66, "nodeName": "x", "type": "Any"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "self", "type": "EqualConv2d"}, {"lineNumber": 112, "col_offset": 64, "nodeName": "out_dim", "type": "Any"}, {"lineNumber": 112, "col_offset": 73, "nodeName": "in_dim", "type": "Any"}, {"lineNumber": 112, "col_offset": 81, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 112, "col_offset": 89, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "self", "type": "EqualConv2d"}, {"lineNumber": 114, "col_offset": 88, "nodeName": "Zero", "type": "Any"}, {"lineNumber": 134, "col_offset": 101, "nodeName": "init", "type": "Any"}, {"lineNumber": 135, "col_offset": 84, "nodeName": "init", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "in_channel", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 161, "col_offset": 36, "nodeName": "in_channel", "type": "Any"}, {"lineNumber": 176, "col_offset": 84, "nodeName": "init", "type": "Any"}, {"lineNumber": 188, "col_offset": 83, "nodeName": "init", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 213, "col_offset": 81, "nodeName": "pad1", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "add", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "add", "type": "Any"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "add", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "add", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "add", "type": "Any"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "EqualConv2d", "type": "Type[EqualConv2d]"}, {"lineNumber": 233, "col_offset": 43, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 233, "col_offset": 56, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 233, "col_offset": 69, "nodeName": "kernel2", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "LeakyReLU", "type": "Any"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "blur", "type": "Any"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 267, "col_offset": 27, "nodeName": "blur", "type": "Any"}, {"lineNumber": 270, "col_offset": 48, "nodeName": "in_channel", "type": "Any"}, {"lineNumber": 270, "col_offset": 68, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 272, "col_offset": 48, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 272, "col_offset": 69, "nodeName": "padding", "type": "Any"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "mx", "type": "Any"}, {"lineNumber": 32, "col_offset": 70, "nodeName": "mx", "type": "Any"}, {"lineNumber": 55, "col_offset": 61, "nodeName": "mx", "type": "Any"}, {"lineNumber": 56, "col_offset": 88, "nodeName": "mx", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "F", "type": "Any"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 49, "nodeName": "self", "type": "Blur"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "init", "type": "Any"}, {"lineNumber": 114, "col_offset": 88, "nodeName": "init", "type": "Any"}, {"lineNumber": 134, "col_offset": 101, "nodeName": "mx", "type": "Any"}, {"lineNumber": 135, "col_offset": 84, "nodeName": "mx", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "style", "type": "EqualLinear"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "style", "type": "Any"}, {"lineNumber": 176, "col_offset": 84, "nodeName": "mx", "type": "Any"}, {"lineNumber": 188, "col_offset": 83, "nodeName": "mx", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "FusedDownsample", "type": "Type[FusedDownsample]"}, {"lineNumber": 220, "col_offset": 51, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 220, "col_offset": 64, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 220, "col_offset": 77, "nodeName": "kernel2", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 221, "col_offset": 35, "nodeName": "LeakyReLU", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "EqualConv2d", "type": "Type[EqualConv2d]"}, {"lineNumber": 226, "col_offset": 47, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 226, "col_offset": 60, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 226, "col_offset": 73, "nodeName": "kernel2", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 227, "col_offset": 35, "nodeName": "AvgPool2D", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "LeakyReLU", "type": "Any"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 233, "col_offset": 86, "nodeName": "pad2", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "nn", "type": "Any"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "add", "type": "Any"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "nn", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "add", "type": "Any"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "mx", "type": "Any"}, {"lineNumber": 114, "col_offset": 88, "nodeName": "mx", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "mx_params", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "mx_params", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "self", "type": "AdaptiveInstanceNorm"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 220, "col_offset": 94, "nodeName": "pad2", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 221, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 226, "col_offset": 90, "nodeName": "pad2", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 227, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 258, "col_offset": 39, "nodeName": "FusedUpsample", "type": "Type[FusedUpsample]"}, {"lineNumber": 258, "col_offset": 53, "nodeName": "in_channel", "type": "Any"}, {"lineNumber": 258, "col_offset": 65, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 258, "col_offset": 78, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "add", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 265, "col_offset": 39, "nodeName": "EqualConv2d", "type": "Type[EqualConv2d]"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "add", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "k", "type": "Any"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "k", "type": "Any"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 258, "col_offset": 99, "nodeName": "padding", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 260, "col_offset": 43, "nodeName": "Blur", "type": "Type[Blur]"}, {"lineNumber": 260, "col_offset": 48, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 265, "col_offset": 58, "nodeName": "in_channel", "type": "Any"}, {"lineNumber": 265, "col_offset": 78, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 266, "col_offset": 58, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 266, "col_offset": 79, "nodeName": "padding", "type": "Any"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 268, "col_offset": 43, "nodeName": "Blur", "type": "Type[Blur]"}, {"lineNumber": 268, "col_offset": 48, "nodeName": "out_channel", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "self", "type": "StyledConvBlock"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "self", "type": "StyledConvBlock"}]