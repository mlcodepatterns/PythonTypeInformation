[{"lineNumber": 29, "col_offset": 0, "nodeName": "_make_basic_conv", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "_make_A", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "_make_B", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "_make_C", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "_make_D", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "_make_E", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "make_aux", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "setting_names", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "setting", "type": "Tuple[int, int, None, None]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "conv_settings", "type": "Tuple[Tuple[int, int, None, None]]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "net", "type": "Inception3"}, {"lineNumber": 215, "col_offset": 7, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "net", "type": "Inception3"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "use_pool", "type": "None"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "HybridConcurrent", "type": "Any"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "HybridConcurrent", "type": "Any"}, {"lineNumber": 80, "col_offset": 10, "nodeName": "HybridConcurrent", "type": "Any"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "HybridConcurrent", "type": "Any"}, {"lineNumber": 113, "col_offset": 10, "nodeName": "HybridConcurrent", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "branch_3x3", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "branch_3x3_split", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "branch_3x3dbl", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "branch_3x3dbl_split", "type": "Any"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 199, "col_offset": 39, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 214, "col_offset": 10, "nodeName": "Inception3", "type": "Type[Inception3]"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "BatchNorm", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "use_pool", "type": "None"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "value", "type": "Optional[int]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "setting", "type": "Tuple[int, int, None, None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "prefix", "type": "str"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "prefix", "type": "str"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "prefix", "type": "str"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "prefix", "type": "str"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "prefix", "type": "str"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "branch_3x3", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "HybridConcurrent", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "branch_3x3_split", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "branch_3x3dbl", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "HybridConcurrent", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "branch_3x3dbl_split", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "AvgPool2D", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "_make_basic_conv", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "_make_basic_conv", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "Flatten", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "classes", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "load_parameters", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "AvgPool2D", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "value", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "_make_basic_conv", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "out", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "out", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "out", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "out", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "out", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "branch_3x3", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "branch_3x3_split", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "branch_3x3_split", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "branch_3x3", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "branch_3x3dbl", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "branch_3x3dbl", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "branch_3x3dbl_split", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "branch_3x3dbl_split", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "_make_branch", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 166, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "classes", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "net", "type": "Inception3"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "get_model_file", "type": "Any"}, {"lineNumber": 217, "col_offset": 74, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "MaxPool2D", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "pool_features", "type": "int"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "channels_7x7", "type": "int"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "channels_7x7", "type": "int"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "channels_7x7", "type": "int"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "channels_7x7", "type": "int"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "channels_7x7", "type": "int"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "channels_7x7", "type": "int"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "Inception3", "type": "Type[Inception3]"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 168, "col_offset": 13, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "nn", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "_make_basic_conv", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "_make_basic_conv", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "_make_basic_conv", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "MaxPool2D", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 174, "col_offset": 30, "nodeName": "_make_basic_conv", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 175, "col_offset": 30, "nodeName": "_make_basic_conv", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "MaxPool2D", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "_make_A", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "_make_A", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "_make_A", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 180, "col_offset": 30, "nodeName": "_make_B", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "_make_C", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "_make_C", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "_make_C", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 184, "col_offset": 30, "nodeName": "_make_C", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 185, "col_offset": 30, "nodeName": "_make_D", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "_make_E", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "_make_E", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "AvgPool2D", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 217, "col_offset": 63, "nodeName": "root", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "self", "type": "Inception3"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "setting_names", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "i", "type": "int"}]