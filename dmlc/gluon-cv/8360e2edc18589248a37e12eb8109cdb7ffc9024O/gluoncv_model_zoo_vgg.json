[{"lineNumber": 119, "col_offset": 0, "nodeName": "vgg11", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "vgg13", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "vgg16", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 0, "nodeName": "vgg19", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 0, "nodeName": "vgg11_bn", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 0, "nodeName": "vgg13_bn", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 0, "nodeName": "vgg16_bn", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 0, "nodeName": "vgg19_bn", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 10, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "net", "type": "VGG"}, {"lineNumber": 112, "col_offset": 7, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "net", "type": "VGG"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "layers", "type": "List[int]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "filters", "type": "List[int]"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "vgg_spec", "type": "Dict[int, Tuple[List[int], List[int]]]"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "VGG", "type": "Type[VGG]"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "layers", "type": "List[int]"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "filters", "type": "List[int]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "batch_norm_suffix", "type": "str"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "get_vgg", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "get_vgg", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "get_vgg", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "get_vgg", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "get_vgg", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "get_vgg", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "get_vgg", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "get_vgg", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "num", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "layers", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "load_parameters", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "filters", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "VGG"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "_make_features", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "layers", "type": "Any"}, {"lineNumber": 52, "col_offset": 56, "nodeName": "filters", "type": "Any"}, {"lineNumber": 52, "col_offset": 65, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "classes", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "num", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "VGG"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "VGG"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "get", "type": "Callable"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "net", "type": "VGG"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "get_model_file", "type": "Any"}, {"lineNumber": 116, "col_offset": 59, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "VGG", "type": "Type[VGG]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "self", "type": "VGG"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "self", "type": "VGG"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "self", "type": "VGG"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "MaxPool2D", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "root", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "VGG"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "VGG"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "VGG"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "VGG"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "add", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 115, "col_offset": 54, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 115, "col_offset": 66, "nodeName": "batch_norm_suffix", "type": "str"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "filters", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "BatchNorm", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 60, "nodeName": "Xavier", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "nn", "type": "Any"}]