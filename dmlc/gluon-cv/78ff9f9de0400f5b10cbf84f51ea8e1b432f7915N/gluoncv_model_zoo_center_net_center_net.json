[{"lineNumber": 228, "col_offset": 0, "nodeName": "center_net_resnet18_v1b_voc", "type": "Callable[..., Any]"}, {"lineNumber": 258, "col_offset": 0, "nodeName": "center_net_resnet18_v1b_dcnv2_voc", "type": "Callable[..., Any]"}, {"lineNumber": 288, "col_offset": 0, "nodeName": "center_net_resnet18_v1b_coco", "type": "Callable[..., Any]"}, {"lineNumber": 318, "col_offset": 0, "nodeName": "center_net_resnet18_v1b_dcnv2_coco", "type": "Callable[..., Any]"}, {"lineNumber": 348, "col_offset": 0, "nodeName": "center_net_resnet50_v1b_voc", "type": "Callable[..., Any]"}, {"lineNumber": 378, "col_offset": 0, "nodeName": "center_net_resnet50_v1b_dcnv2_voc", "type": "Callable[..., Any]"}, {"lineNumber": 408, "col_offset": 0, "nodeName": "center_net_resnet50_v1b_coco", "type": "Callable[..., Any]"}, {"lineNumber": 438, "col_offset": 0, "nodeName": "center_net_resnet50_v1b_dcnv2_coco", "type": "Callable[..., Any]"}, {"lineNumber": 468, "col_offset": 0, "nodeName": "center_net_resnet101_v1b_voc", "type": "Callable[..., Any]"}, {"lineNumber": 498, "col_offset": 0, "nodeName": "center_net_resnet101_v1b_dcnv2_voc", "type": "Callable[..., Any]"}, {"lineNumber": 528, "col_offset": 0, "nodeName": "center_net_resnet101_v1b_coco", "type": "Callable[..., Any]"}, {"lineNumber": 558, "col_offset": 0, "nodeName": "center_net_resnet101_v1b_dcnv2_coco", "type": "Callable[..., Any]"}, {"lineNumber": 588, "col_offset": 0, "nodeName": "center_net_dla34_voc", "type": "Callable[..., Any]"}, {"lineNumber": 618, "col_offset": 0, "nodeName": "center_net_dla34_dcnv2_voc", "type": "Callable[..., Any]"}, {"lineNumber": 648, "col_offset": 0, "nodeName": "center_net_dla34_coco", "type": "Callable[..., Any]"}, {"lineNumber": 678, "col_offset": 0, "nodeName": "center_net_dla34_dcnv2_coco", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "net", "type": "CenterNet"}, {"lineNumber": 213, "col_offset": 7, "nodeName": "pretrained", "type": "bool"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "net", "type": "CenterNet"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 306, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 336, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 366, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 396, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 426, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 456, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 486, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 516, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 546, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 576, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 606, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 636, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 666, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 667, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 668, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 696, "col_offset": 14, "nodeName": "CLASSES", "type": "Any"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "classes", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "classes", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "topk", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "topk", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "nms_thresh", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "nms_thresh", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "nms_topk", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "nms_topk", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "post_nms", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "post_nms", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "post_nms", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "flip_test", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "flip_test", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "nms_thresh", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "nms_thresh", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "nms_topk", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "nms_topk", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "post_nms", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "post_nms", "type": "Any"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "post_nms", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "flip_test", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "heatmap", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "keep", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "results", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "results", "type": "Any"}, {"lineNumber": 186, "col_offset": 56, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 212, "col_offset": 10, "nodeName": "CenterNet", "type": "Type[CenterNet]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "full_name", "type": "str"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "VOCDetection", "type": "Any"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 247, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "resnet18_v1b_deconv", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "VOCDetection", "type": "Any"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 277, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 278, "col_offset": 19, "nodeName": "resnet18_v1b_deconv_dcnv2", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 14, "nodeName": "COCODetection", "type": "Any"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 307, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "resnet18_v1b_deconv", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 14, "nodeName": "COCODetection", "type": "Any"}, {"lineNumber": 337, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 337, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "resnet18_v1b_deconv_dcnv2", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 366, "col_offset": 14, "nodeName": "VOCDetection", "type": "Any"}, {"lineNumber": 367, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 367, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 368, "col_offset": 19, "nodeName": "resnet50_v1b_deconv", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 374, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 396, "col_offset": 14, "nodeName": "VOCDetection", "type": "Any"}, {"lineNumber": 397, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 397, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 398, "col_offset": 19, "nodeName": "resnet50_v1b_deconv_dcnv2", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 426, "col_offset": 14, "nodeName": "COCODetection", "type": "Any"}, {"lineNumber": 427, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 427, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "resnet50_v1b_deconv", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 434, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 456, "col_offset": 14, "nodeName": "COCODetection", "type": "Any"}, {"lineNumber": 457, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 457, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 458, "col_offset": 19, "nodeName": "resnet50_v1b_deconv_dcnv2", "type": "Any"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 464, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 14, "nodeName": "VOCDetection", "type": "Any"}, {"lineNumber": 487, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 487, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 488, "col_offset": 19, "nodeName": "resnet101_v1b_deconv", "type": "Any"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 494, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 516, "col_offset": 14, "nodeName": "VOCDetection", "type": "Any"}, {"lineNumber": 517, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 517, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 518, "col_offset": 19, "nodeName": "resnet101_v1b_deconv_dcnv2", "type": "Any"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 546, "col_offset": 14, "nodeName": "COCODetection", "type": "Any"}, {"lineNumber": 547, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 547, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 548, "col_offset": 19, "nodeName": "resnet101_v1b_deconv", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 554, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 576, "col_offset": 14, "nodeName": "COCODetection", "type": "Any"}, {"lineNumber": 577, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 577, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 578, "col_offset": 19, "nodeName": "resnet101_v1b_deconv_dcnv2", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 584, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 606, "col_offset": 14, "nodeName": "VOCDetection", "type": "Any"}, {"lineNumber": 607, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 607, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 608, "col_offset": 19, "nodeName": "dla34_deconv", "type": "Any"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 614, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 636, "col_offset": 14, "nodeName": "VOCDetection", "type": "Any"}, {"lineNumber": 637, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 637, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 638, "col_offset": 19, "nodeName": "dla34_deconv_dcnv2", "type": "Any"}, {"lineNumber": 639, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 644, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 666, "col_offset": 14, "nodeName": "COCODetection", "type": "Any"}, {"lineNumber": 667, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 667, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 668, "col_offset": 19, "nodeName": "dla34_deconv", "type": "Any"}, {"lineNumber": 669, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 674, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 696, "col_offset": 14, "nodeName": "COCODetection", "type": "Any"}, {"lineNumber": 697, "col_offset": 31, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 697, "col_offset": 47, "nodeName": "pretrained_base", "type": "Any"}, {"lineNumber": 698, "col_offset": 19, "nodeName": "dla34_deconv_dcnv2", "type": "Any"}, {"lineNumber": 699, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 704, "col_offset": 11, "nodeName": "get_center_net", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "heads", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "min", "type": "Callable"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "post_nms", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "topk", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "heatmap_nms", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "heads", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "classes", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "_clear_cached_op", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "min", "type": "Callable"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "post_nms", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "nms_topk", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "y_flip", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "out_flip", "type": "List[Any]"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "broadcast_equal", "type": "Any"}, {"lineNumber": 182, "col_offset": 60, "nodeName": "heatmap", "type": "Any"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 186, "col_offset": 56, "nodeName": "mx", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "load_parameters", "type": "Any"}, {"lineNumber": 218, "col_offset": 53, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "values", "type": "Any"}, {"lineNumber": 248, "col_offset": 50, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 248, "col_offset": 69, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 254, "col_offset": 62, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 254, "col_offset": 82, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, Union[float, int]], Dict[str, int]]]"}, {"lineNumber": 255, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 255, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 256, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 278, "col_offset": 56, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 278, "col_offset": 75, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 284, "col_offset": 68, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 284, "col_offset": 88, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, Union[float, int]], Dict[str, int]]]"}, {"lineNumber": 285, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 285, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 286, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 308, "col_offset": 50, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 308, "col_offset": 69, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 314, "col_offset": 63, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 314, "col_offset": 83, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, Union[float, int]], Dict[str, int]]]"}, {"lineNumber": 315, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 315, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 316, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 338, "col_offset": 56, "nodeName": "pretrained_base", "type": "Union[Any, bool]"}, {"lineNumber": 338, "col_offset": 75, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 344, "col_offset": 69, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 344, "col_offset": 89, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, int], Dict[str, Union[float, int]]]]"}, {"lineNumber": 345, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 345, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 346, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 368, "col_offset": 50, "nodeName": "pretrained_base", "type": "Union[Any, bool]"}, {"lineNumber": 368, "col_offset": 69, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 374, "col_offset": 62, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 374, "col_offset": 82, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, Union[float, int]], Dict[str, int]]]"}, {"lineNumber": 375, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 375, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 376, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 398, "col_offset": 56, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 398, "col_offset": 75, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 404, "col_offset": 68, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 404, "col_offset": 88, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, int], Dict[str, Union[float, int]]]]"}, {"lineNumber": 405, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 405, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 406, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 428, "col_offset": 50, "nodeName": "pretrained_base", "type": "Union[Any, bool]"}, {"lineNumber": 428, "col_offset": 69, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 434, "col_offset": 63, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 434, "col_offset": 83, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, Union[float, int]], Dict[str, int]]]"}, {"lineNumber": 435, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 435, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 436, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 458, "col_offset": 56, "nodeName": "pretrained_base", "type": "Union[Any, bool]"}, {"lineNumber": 458, "col_offset": 75, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 464, "col_offset": 69, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 464, "col_offset": 89, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, Union[float, int]], Dict[str, int]]]"}, {"lineNumber": 465, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 465, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 466, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 488, "col_offset": 51, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 488, "col_offset": 70, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 494, "col_offset": 63, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 494, "col_offset": 83, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, Union[float, int]], Dict[str, int]]]"}, {"lineNumber": 495, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 495, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 496, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 518, "col_offset": 57, "nodeName": "pretrained_base", "type": "Union[Any, bool]"}, {"lineNumber": 518, "col_offset": 76, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 524, "col_offset": 69, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 524, "col_offset": 89, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, int], Dict[str, Union[float, int]]]]"}, {"lineNumber": 525, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 525, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 526, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 548, "col_offset": 51, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 548, "col_offset": 70, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 554, "col_offset": 64, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 554, "col_offset": 84, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, int], Dict[str, Union[float, int]]]]"}, {"lineNumber": 555, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 555, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 556, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 578, "col_offset": 57, "nodeName": "pretrained_base", "type": "Union[Any, bool]"}, {"lineNumber": 578, "col_offset": 76, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 584, "col_offset": 70, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 584, "col_offset": 90, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, Union[float, int]], Dict[str, int]]]"}, {"lineNumber": 585, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 585, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 586, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 608, "col_offset": 43, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 608, "col_offset": 62, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 614, "col_offset": 55, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 614, "col_offset": 75, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, int], Dict[str, Union[float, int]]]]"}, {"lineNumber": 615, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 615, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 616, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 638, "col_offset": 49, "nodeName": "pretrained_base", "type": "Union[Any, bool]"}, {"lineNumber": 638, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 644, "col_offset": 55, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 644, "col_offset": 75, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, int], Dict[str, Union[float, int]]]]"}, {"lineNumber": 645, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 645, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 646, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 668, "col_offset": 43, "nodeName": "pretrained_base", "type": "Union[Any, bool]"}, {"lineNumber": 668, "col_offset": 62, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 674, "col_offset": 56, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 674, "col_offset": 76, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, Union[float, int]], Dict[str, int]]]"}, {"lineNumber": 675, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 675, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 676, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 698, "col_offset": 49, "nodeName": "pretrained_base", "type": "Union[bool, Any]"}, {"lineNumber": 698, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 704, "col_offset": 56, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 704, "col_offset": 76, "nodeName": "heads", "type": "collections.OrderedDict[str, Union[Dict[str, int], Dict[str, Union[float, int]]]]"}, {"lineNumber": 705, "col_offset": 59, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 705, "col_offset": 79, "nodeName": "classes", "type": "Any"}, {"lineNumber": 706, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 66, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "heads", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "MaxPool2D", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "CenterNetDecoder", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "items", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "head", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "num_output", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "bias", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "weight_initializer", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "head", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "y", "type": "Any"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "head", "type": "Any"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "heads", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "F", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "clip", "type": "Any"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "base_network", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "out_flip", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "F", "type": "Any"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "heatmap_nms", "type": "Any"}, {"lineNumber": 182, "col_offset": 50, "nodeName": "heatmap", "type": "Any"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "keep", "type": "Any"}, {"lineNumber": 183, "col_offset": 38, "nodeName": "heatmap", "type": "Any"}, {"lineNumber": 183, "col_offset": 47, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 55, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 215, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 215, "col_offset": 50, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "net", "type": "CenterNet"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "get_model_file", "type": "Any"}, {"lineNumber": 216, "col_offset": 43, "nodeName": "full_name", "type": "str"}, {"lineNumber": 216, "col_offset": 86, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "CenterNet", "type": "Type[CenterNet]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "topk", "type": "Any"}, {"lineNumber": 81, "col_offset": 61, "nodeName": "scale", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "heads", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "head_conv_channel", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "head", "type": "Any"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "F", "type": "Any"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "flip", "type": "Any"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "head", "type": "Any"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "y_flip", "type": "Any"}, {"lineNumber": 177, "col_offset": 41, "nodeName": "head", "type": "Any"}, {"lineNumber": 177, "col_offset": 49, "nodeName": "heads", "type": "Any"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "F", "type": "Any"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "out_flip", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 216, "col_offset": 58, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 216, "col_offset": 75, "nodeName": "root", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "net", "type": "CenterNet"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "reset_ctx", "type": "Any"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "values", "type": "Any"}, {"lineNumber": 87, "col_offset": 62, "nodeName": "bias", "type": "Any"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 87, "col_offset": 77, "nodeName": "Xavier", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "add", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "add", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "head", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "num_output", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "heads", "type": "Any"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 177, "col_offset": 49, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "flip", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "flip", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "net", "type": "CenterNet"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 250, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 280, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 310, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 310, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 340, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 340, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 370, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 370, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 400, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 400, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 430, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 430, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 460, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 460, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 490, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 490, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 520, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 520, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 550, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 550, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 580, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 580, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 610, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 610, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 640, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 640, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 670, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 670, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 700, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 700, "col_offset": 39, "nodeName": "classes", "type": "Any"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "init", "type": "Any"}, {"lineNumber": 87, "col_offset": 77, "nodeName": "init", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "head", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "head_conv_channel", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "head", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 94, "col_offset": 54, "nodeName": "weight_initializer", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "self", "type": "CenterNet"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "mx", "type": "Any"}, {"lineNumber": 87, "col_offset": 77, "nodeName": "mx", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "weight_initializer", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "Constant", "type": "Any"}, {"lineNumber": 95, "col_offset": 69, "nodeName": "bias", "type": "Any"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "out_flip", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "out_flip", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "init", "type": "Any"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "mx", "type": "Any"}]