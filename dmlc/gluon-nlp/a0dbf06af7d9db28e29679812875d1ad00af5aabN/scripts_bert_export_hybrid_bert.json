[{"lineNumber": 572, "col_offset": 0, "nodeName": "get_hybrid_model", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "HybridBaseTransformerEncoder", "type": "Type[HybridBaseTransformerEncoder]"}, {"lineNumber": 340, "col_offset": 22, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 784, "col_offset": 22, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 829, "col_offset": 27, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 885, "col_offset": 27, "nodeName": "HybridBlock", "type": "Any"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 604, "col_offset": 29, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "mutable_args", "type": "List[str]"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "mutable_args", "type": "FrozenSet[str]"}, {"lineNumber": 768, "col_offset": 4, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 778, "col_offset": 7, "nodeName": "pretrained", "type": "bool"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_num_layers", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_max_length", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "max_length", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "_num_heads", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_units", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "units", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "_hidden_size", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "_output_attention", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "output_attention", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "_output_all_encodings", "type": "Any"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "output_all_encodings", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "_use_residual", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "use_residual", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "_scaled", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "_use_layer_norm_before_dropout", "type": "bool"}, {"lineNumber": 123, "col_offset": 46, "nodeName": "use_layer_norm_before_dropout", "type": "bool"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "_scale_embed", "type": "bool"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "scale_embed", "type": "bool"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "_input_size", "type": "Any"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "_seq_length", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "position_weight", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "length", "type": "Any"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "_seq_length", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "C_in", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "_input_size", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "_scale_embed", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "steps", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 222, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "all_encodings_outputs", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "additional_outputs", "type": "List[Any]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "cell", "type": "Any"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "transformer_cells", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "_output_all_encodings", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "_use_decoder", "type": "Any"}, {"lineNumber": 412, "col_offset": 28, "nodeName": "use_decoder", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "_use_classifier", "type": "Any"}, {"lineNumber": 413, "col_offset": 31, "nodeName": "use_classifier", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "_use_pooler", "type": "Any"}, {"lineNumber": 414, "col_offset": 27, "nodeName": "use_pooler", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 415, "col_offset": 27, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 416, "col_offset": 23, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "_use_pooler", "type": "Any"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "_use_decoder", "type": "Any"}, {"lineNumber": 440, "col_offset": 15, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "embed", "type": "Any"}, {"lineNumber": 479, "col_offset": 15, "nodeName": "pooler", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 492, "col_offset": 11, "nodeName": "_output_all_encodings", "type": "Any"}, {"lineNumber": 498, "col_offset": 11, "nodeName": "attention_out", "type": "Any"}, {"lineNumber": 501, "col_offset": 11, "nodeName": "_use_pooler", "type": "Any"}, {"lineNumber": 507, "col_offset": 11, "nodeName": "_use_decoder", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "word_embedding", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "type_embedding", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "num_masked_positions", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 554, "col_offset": 14, "nodeName": "context", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 555, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "batch_idx", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "batch_idx", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "masked_positions", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "position_idx", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 597, "col_offset": 32, "nodeName": "bert_12_768_12", "type": "Callable[..., Any]"}, {"lineNumber": 598, "col_offset": 33, "nodeName": "bert_24_1024_16", "type": "Callable[..., Any]"}, {"lineNumber": 599, "col_offset": 11, "nodeName": "lower", "type": "Any"}, {"lineNumber": 600, "col_offset": 7, "nodeName": "name", "type": "Any"}, {"lineNumber": 600, "col_offset": 19, "nodeName": "models", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 608, "col_offset": 71, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 609, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 648, "col_offset": 11, "nodeName": "get_hybrid_bert_model", "type": "Callable[..., Any]"}, {"lineNumber": 655, "col_offset": 72, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 657, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 694, "col_offset": 11, "nodeName": "get_hybrid_bert_model", "type": "Callable[..., Any]"}, {"lineNumber": 702, "col_offset": 47, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 705, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 748, "col_offset": 22, "nodeName": "bert_hparams", "type": "Any"}, {"lineNumber": 750, "col_offset": 19, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 750, "col_offset": 29, "nodeName": "mutable_args", "type": "List[str]"}, {"lineNumber": 751, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 753, "col_offset": 4, "nodeName": "update", "type": "Any"}, {"lineNumber": 753, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 755, "col_offset": 14, "nodeName": "HybridBERTEncoder", "type": "Type[HybridBERTEncoder]"}, {"lineNumber": 768, "col_offset": 17, "nodeName": "_load_vocab", "type": "Any"}, {"lineNumber": 768, "col_offset": 29, "nodeName": "dataset_name", "type": "None"}, {"lineNumber": 768, "col_offset": 43, "nodeName": "vocab", "type": "None"}, {"lineNumber": 768, "col_offset": 50, "nodeName": "root", "type": "str"}, {"lineNumber": 770, "col_offset": 10, "nodeName": "HybridBERTModel", "type": "Type[HybridBERTModel]"}, {"lineNumber": 770, "col_offset": 26, "nodeName": "encoder", "type": "HybridBERTEncoder"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "ignore_extra", "type": "bool"}, {"lineNumber": 782, "col_offset": 11, "nodeName": "net", "type": "HybridBERTModel"}, {"lineNumber": 782, "col_offset": 16, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 802, "col_offset": 8, "nodeName": "bert", "type": "Any"}, {"lineNumber": 802, "col_offset": 20, "nodeName": "bert", "type": "Any"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "bert_output", "type": "Any"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 827, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "bert", "type": "Any"}, {"lineNumber": 857, "col_offset": 20, "nodeName": "bert", "type": "Any"}, {"lineNumber": 906, "col_offset": 8, "nodeName": "bert", "type": "Any"}, {"lineNumber": 906, "col_offset": 20, "nodeName": "bert", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "units", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "layer_norm", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "transformer_cells", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "weight_type", "type": "str"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "encoding", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "position_weight", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "use_bert", "type": "bool"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "BERTEncoderCell", "type": "Any"}, {"lineNumber": 155, "col_offset": 48, "nodeName": "TransformerEncoderCell", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "states", "type": "Union[Any, List[Any]]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "states", "type": "Union[List[Any], Any]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "steps", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "positional_embed", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "_use_layer_norm_before_dropout", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "mask", "type": "None"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 232, "col_offset": 21, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "_output_all_encodings", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "_output_attention", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 418, "col_offset": 26, "nodeName": "_get_embed", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 418, "col_offset": 42, "nodeName": "word_embed", "type": "Any"}, {"lineNumber": 418, "col_offset": 54, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 418, "col_offset": 66, "nodeName": "embed_size", "type": "Any"}, {"lineNumber": 419, "col_offset": 42, "nodeName": "embed_initializer", "type": "Any"}, {"lineNumber": 419, "col_offset": 61, "nodeName": "embed_dropout", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 421, "col_offset": 32, "nodeName": "_get_embed", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 421, "col_offset": 48, "nodeName": "token_type_embed", "type": "Any"}, {"lineNumber": 421, "col_offset": 66, "nodeName": "token_type_vocab_size", "type": "Any"}, {"lineNumber": 422, "col_offset": 48, "nodeName": "embed_size", "type": "Any"}, {"lineNumber": 422, "col_offset": 60, "nodeName": "embed_initializer", "type": "Any"}, {"lineNumber": 422, "col_offset": 79, "nodeName": "embed_dropout", "type": "Any"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "pooler", "type": "Any"}, {"lineNumber": 427, "col_offset": 15, "nodeName": "_use_classifier", "type": "Any"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 456, "col_offset": 11, "nodeName": "embed", "type": "Any"}, {"lineNumber": 466, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 466, "col_offset": 26, "nodeName": "embed", "type": "Any"}, {"lineNumber": 466, "col_offset": 33, "nodeName": "Block", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "attention_out", "type": "Any"}, {"lineNumber": 489, "col_offset": 33, "nodeName": "_encode_sequence", "type": "Callable[..., Any]"}, {"lineNumber": 489, "col_offset": 55, "nodeName": "F", "type": "Any"}, {"lineNumber": 489, "col_offset": 58, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 489, "col_offset": 66, "nodeName": "token_types", "type": "Any"}, {"lineNumber": 489, "col_offset": 79, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 490, "col_offset": 23, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 492, "col_offset": 11, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 496, "col_offset": 21, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 501, "col_offset": 11, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "pooled_out", "type": "Any"}, {"lineNumber": 504, "col_offset": 15, "nodeName": "_use_classifier", "type": "Any"}, {"lineNumber": 507, "col_offset": 11, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 510, "col_offset": 12, "nodeName": "decoder_out", "type": "Any"}, {"lineNumber": 521, "col_offset": 25, "nodeName": "word_embed", "type": "Any"}, {"lineNumber": 521, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 522, "col_offset": 25, "nodeName": "token_type_embed", "type": "Any"}, {"lineNumber": 522, "col_offset": 47, "nodeName": "token_types", "type": "Any"}, {"lineNumber": 523, "col_offset": 20, "nodeName": "word_embedding", "type": "Any"}, {"lineNumber": 523, "col_offset": 37, "nodeName": "type_embedding", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 525, "col_offset": 17, "nodeName": "additional_outputs", "type": "Any"}, {"lineNumber": 525, "col_offset": 38, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 525, "col_offset": 51, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 525, "col_offset": 68, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 526, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 526, "col_offset": 24, "nodeName": "additional_outputs", "type": "Any"}, {"lineNumber": 533, "col_offset": 18, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 534, "col_offset": 15, "nodeName": "pooler", "type": "Any"}, {"lineNumber": 534, "col_offset": 27, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 552, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 553, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 554, "col_offset": 14, "nodeName": "masked_positions", "type": "Any"}, {"lineNumber": 555, "col_offset": 16, "nodeName": "masked_positions", "type": "Any"}, {"lineNumber": 558, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 558, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 559, "col_offset": 20, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 560, "col_offset": 27, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "Concat", "type": "Any"}, {"lineNumber": 561, "col_offset": 36, "nodeName": "batch_idx", "type": "Any"}, {"lineNumber": 561, "col_offset": 47, "nodeName": "masked_positions", "type": "Any"}, {"lineNumber": 562, "col_offset": 18, "nodeName": "gather_nd", "type": "Any"}, {"lineNumber": 562, "col_offset": 34, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 562, "col_offset": 44, "nodeName": "position_idx", "type": "Any"}, {"lineNumber": 563, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 564, "col_offset": 18, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 564, "col_offset": 31, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 599, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 601, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 605, "col_offset": 11, "nodeName": "models", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 605, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 608, "col_offset": 71, "nodeName": "mx", "type": "Any"}, {"lineNumber": 609, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 609, "col_offset": 37, "nodeName": "get_home_dir", "type": "Any"}, {"lineNumber": 648, "col_offset": 68, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 649, "col_offset": 46, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 649, "col_offset": 71, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 649, "col_offset": 87, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 650, "col_offset": 44, "nodeName": "use_pooler", "type": "Any"}, {"lineNumber": 650, "col_offset": 68, "nodeName": "use_decoder", "type": "Any"}, {"lineNumber": 651, "col_offset": 48, "nodeName": "use_classifier", "type": "Any"}, {"lineNumber": 651, "col_offset": 69, "nodeName": "root", "type": "Any"}, {"lineNumber": 651, "col_offset": 86, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 652, "col_offset": 44, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 652, "col_offset": 58, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 655, "col_offset": 72, "nodeName": "mx", "type": "Any"}, {"lineNumber": 657, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 657, "col_offset": 38, "nodeName": "get_home_dir", "type": "Any"}, {"lineNumber": 694, "col_offset": 69, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 695, "col_offset": 46, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 695, "col_offset": 71, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 696, "col_offset": 37, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 696, "col_offset": 53, "nodeName": "use_pooler", "type": "Any"}, {"lineNumber": 697, "col_offset": 45, "nodeName": "use_decoder", "type": "Any"}, {"lineNumber": 697, "col_offset": 73, "nodeName": "use_classifier", "type": "Any"}, {"lineNumber": 698, "col_offset": 38, "nodeName": "root", "type": "Any"}, {"lineNumber": 698, "col_offset": 55, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 698, "col_offset": 78, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 698, "col_offset": 92, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 702, "col_offset": 47, "nodeName": "mx", "type": "Any"}, {"lineNumber": 705, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 705, "col_offset": 44, "nodeName": "get_home_dir", "type": "Any"}, {"lineNumber": 748, "col_offset": 35, "nodeName": "model_name", "type": "None"}, {"lineNumber": 753, "col_offset": 4, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 763, "col_offset": 49, "nodeName": "output_attention", "type": "bool"}, {"lineNumber": 764, "col_offset": 53, "nodeName": "output_all_encodings", "type": "bool"}, {"lineNumber": 766, "col_offset": 43, "nodeName": "input_size", "type": "None"}, {"lineNumber": 767, "col_offset": 43, "nodeName": "seq_length", "type": "None"}, {"lineNumber": 768, "col_offset": 60, "nodeName": "BERTVocab", "type": "Any"}, {"lineNumber": 770, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 770, "col_offset": 39, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 776, "col_offset": 37, "nodeName": "use_pooler", "type": "bool"}, {"lineNumber": 776, "col_offset": 61, "nodeName": "use_decoder", "type": "bool"}, {"lineNumber": 777, "col_offset": 41, "nodeName": "use_classifier", "type": "bool"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "_load_pretrained_params", "type": "Any"}, {"lineNumber": 780, "col_offset": 32, "nodeName": "net", "type": "HybridBERTModel"}, {"lineNumber": 780, "col_offset": 37, "nodeName": "model_name", "type": "None"}, {"lineNumber": 780, "col_offset": 49, "nodeName": "dataset_name", "type": "None"}, {"lineNumber": 780, "col_offset": 63, "nodeName": "root", "type": "str"}, {"lineNumber": 780, "col_offset": 69, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 802, "col_offset": 8, "nodeName": "self", "type": "HybridBERTForQA"}, {"lineNumber": 804, "col_offset": 12, "nodeName": "span_classifier", "type": "Any"}, {"lineNumber": 825, "col_offset": 22, "nodeName": "bert", "type": "Any"}, {"lineNumber": 825, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 825, "col_offset": 40, "nodeName": "token_types", "type": "Any"}, {"lineNumber": 825, "col_offset": 53, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 826, "col_offset": 17, "nodeName": "span_classifier", "type": "Any"}, {"lineNumber": 826, "col_offset": 38, "nodeName": "bert_output", "type": "Any"}, {"lineNumber": 856, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "self", "type": "HybridBERTClassifier"}, {"lineNumber": 859, "col_offset": 12, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 860, "col_offset": 15, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 882, "col_offset": 11, "nodeName": "pooler_out", "type": "Any"}, {"lineNumber": 882, "col_offset": 24, "nodeName": "bert", "type": "Any"}, {"lineNumber": 882, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 882, "col_offset": 42, "nodeName": "token_types", "type": "Any"}, {"lineNumber": 882, "col_offset": 55, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 883, "col_offset": 15, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 883, "col_offset": 31, "nodeName": "pooler_out", "type": "Any"}, {"lineNumber": 905, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 906, "col_offset": 8, "nodeName": "self", "type": "HybridBERTRegression"}, {"lineNumber": 908, "col_offset": 12, "nodeName": "regression", "type": "Any"}, {"lineNumber": 909, "col_offset": 15, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 931, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 931, "col_offset": 11, "nodeName": "pooler_out", "type": "Any"}, {"lineNumber": 931, "col_offset": 24, "nodeName": "bert", "type": "Any"}, {"lineNumber": 931, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 931, "col_offset": 42, "nodeName": "token_types", "type": "Any"}, {"lineNumber": 931, "col_offset": 55, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 932, "col_offset": 15, "nodeName": "regression", "type": "Any"}, {"lineNumber": 932, "col_offset": 31, "nodeName": "pooler_out", "type": "Any"}, {"lineNumber": 108, "col_offset": 66, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 108, "col_offset": 81, "nodeName": "params", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "units", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "dropout_layer", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "_get_layer_norm", "type": "Any"}, {"lineNumber": 130, "col_offset": 46, "nodeName": "use_bert_encoder", "type": "bool"}, {"lineNumber": 130, "col_offset": 64, "nodeName": "units", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "_get_positional", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 56, "nodeName": "positional_weight", "type": "str"}, {"lineNumber": 131, "col_offset": 75, "nodeName": "max_length", "type": "Any"}, {"lineNumber": 131, "col_offset": 87, "nodeName": "units", "type": "Any"}, {"lineNumber": 132, "col_offset": 56, "nodeName": "weight_initializer", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "_position_encoding_init", "type": "Any"}, {"lineNumber": 142, "col_offset": 47, "nodeName": "max_length", "type": "Any"}, {"lineNumber": 142, "col_offset": 59, "nodeName": "units", "type": "Any"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "get_constant", "type": "Any"}, {"lineNumber": 143, "col_offset": 64, "nodeName": "encoding", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "weight_type", "type": "str"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "units", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 157, "col_offset": 56, "nodeName": "attention_cell", "type": "Any"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "weight_initializer", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 160, "col_offset": 50, "nodeName": "use_residual", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 161, "col_offset": 52, "nodeName": "output_attention", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "arange", "type": "Any"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "length", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "broadcast_lesser", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "broadcast_axes", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "states", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "steps", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "append", "type": "Union[Any, Callable]"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "steps", "type": "Any"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "states", "type": "Union[List[Any], Any]"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "steps", "type": "Any"}, {"lineNumber": 211, "col_offset": 50, "nodeName": "position_weight", "type": "Any"}, {"lineNumber": 211, "col_offset": 67, "nodeName": "_max_length", "type": "Any"}, {"lineNumber": 211, "col_offset": 85, "nodeName": "_units", "type": "Any"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "broadcast_add", "type": "Any"}, {"lineNumber": 212, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "layer_norm", "type": "Any"}, {"lineNumber": 221, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "states", "type": "Union[List[Any], Any]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "attention_weights", "type": "Any"}, {"lineNumber": 231, "col_offset": 41, "nodeName": "cell", "type": "Any"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 231, "col_offset": 54, "nodeName": "mask", "type": "Optional[Any]"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "SequenceMask", "type": "Any"}, {"lineNumber": 243, "col_offset": 37, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "all_encodings_outputs", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 42, "nodeName": "additional_outputs", "type": "List[Any]"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "additional_outputs", "type": "List[Any]"}, {"lineNumber": 317, "col_offset": 63, "nodeName": "attention_cell", "type": "Any"}, {"lineNumber": 318, "col_offset": 59, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 318, "col_offset": 77, "nodeName": "units", "type": "Any"}, {"lineNumber": 319, "col_offset": 60, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 319, "col_offset": 84, "nodeName": "max_length", "type": "Any"}, {"lineNumber": 320, "col_offset": 58, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 320, "col_offset": 76, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 320, "col_offset": 92, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 321, "col_offset": 61, "nodeName": "use_residual", "type": "Any"}, {"lineNumber": 322, "col_offset": 65, "nodeName": "output_attention", "type": "Any"}, {"lineNumber": 323, "col_offset": 69, "nodeName": "output_all_encodings", "type": "Any"}, {"lineNumber": 324, "col_offset": 67, "nodeName": "weight_initializer", "type": "Any"}, {"lineNumber": 325, "col_offset": 65, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 326, "col_offset": 55, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 326, "col_offset": 70, "nodeName": "params", "type": "Any"}, {"lineNumber": 332, "col_offset": 59, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 333, "col_offset": 59, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 411, "col_offset": 53, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 411, "col_offset": 68, "nodeName": "params", "type": "Any"}, {"lineNumber": 418, "col_offset": 26, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 421, "col_offset": 32, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 426, "col_offset": 26, "nodeName": "_get_pooler", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 426, "col_offset": 43, "nodeName": "units", "type": "Any"}, {"lineNumber": 427, "col_offset": 15, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 431, "col_offset": 23, "nodeName": "use_classifier", "type": "Any"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 434, "col_offset": 27, "nodeName": "_get_decoder", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 434, "col_offset": 45, "nodeName": "units", "type": "Any"}, {"lineNumber": 434, "col_offset": 52, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 438, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 439, "col_offset": 25, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 445, "col_offset": 22, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "embed_size", "type": "Any"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "embed", "type": "Any"}, {"lineNumber": 476, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 477, "col_offset": 21, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 489, "col_offset": 33, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 492, "col_offset": 11, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 493, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 493, "col_offset": 30, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 493, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 494, "col_offset": 21, "nodeName": "seq_out", "type": "Any"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 499, "col_offset": 27, "nodeName": "attention_out", "type": "Any"}, {"lineNumber": 502, "col_offset": 25, "nodeName": "_apply_pooling", "type": "Callable[[Any], Any]"}, {"lineNumber": 502, "col_offset": 45, "nodeName": "output", "type": "Any"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 503, "col_offset": 27, "nodeName": "pooled_out", "type": "Any"}, {"lineNumber": 504, "col_offset": 15, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "next_sentence_classifier_out", "type": "Any"}, {"lineNumber": 508, "col_offset": 19, "nodeName": "masked_positions", "type": "Any"}, {"lineNumber": 510, "col_offset": 26, "nodeName": "_decode", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 510, "col_offset": 39, "nodeName": "output", "type": "Any"}, {"lineNumber": 510, "col_offset": 47, "nodeName": "masked_positions", "type": "Any"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 511, "col_offset": 27, "nodeName": "decoder_out", "type": "Any"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 512, "col_offset": 21, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 512, "col_offset": 55, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 521, "col_offset": 25, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 522, "col_offset": 25, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 525, "col_offset": 38, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 534, "col_offset": 15, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 552, "col_offset": 21, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 553, "col_offset": 31, "nodeName": "masked_positions", "type": "Any"}, {"lineNumber": 558, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 558, "col_offset": 55, "nodeName": "num_masked_positions", "type": "Any"}, {"lineNumber": 558, "col_offset": 83, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 558, "col_offset": 94, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 559, "col_offset": 20, "nodeName": "batch_idx", "type": "Any"}, {"lineNumber": 560, "col_offset": 27, "nodeName": "masked_positions", "type": "Any"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "nd", "type": "Any"}, {"lineNumber": 562, "col_offset": 18, "nodeName": "nd", "type": "Any"}, {"lineNumber": 563, "col_offset": 18, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 563, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 563, "col_offset": 47, "nodeName": "num_masked_positions", "type": "Any"}, {"lineNumber": 564, "col_offset": 18, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 605, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 609, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 657, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 705, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 751, "col_offset": 58, "nodeName": "k", "type": "Any"}, {"lineNumber": 751, "col_offset": 63, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 755, "col_offset": 47, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 756, "col_offset": 43, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 757, "col_offset": 38, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 758, "col_offset": 44, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 759, "col_offset": 43, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 760, "col_offset": 42, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 761, "col_offset": 39, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 762, "col_offset": 40, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 765, "col_offset": 45, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 771, "col_offset": 48, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 772, "col_offset": 32, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 773, "col_offset": 37, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 774, "col_offset": 40, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 775, "col_offset": 37, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 779, "col_offset": 28, "nodeName": "use_pooler", "type": "bool"}, {"lineNumber": 779, "col_offset": 43, "nodeName": "use_decoder", "type": "bool"}, {"lineNumber": 779, "col_offset": 59, "nodeName": "use_classifier", "type": "bool"}, {"lineNumber": 781, "col_offset": 45, "nodeName": "ignore_extra", "type": "bool"}, {"lineNumber": 801, "col_offset": 53, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 801, "col_offset": 68, "nodeName": "params", "type": "Any"}, {"lineNumber": 803, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 804, "col_offset": 12, "nodeName": "self", "type": "HybridBERTForQA"}, {"lineNumber": 804, "col_offset": 35, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 825, "col_offset": 22, "nodeName": "self", "type": "HybridBERTForQA"}, {"lineNumber": 826, "col_offset": 17, "nodeName": "self", "type": "HybridBERTForQA"}, {"lineNumber": 856, "col_offset": 58, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 856, "col_offset": 73, "nodeName": "params", "type": "Any"}, {"lineNumber": 858, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 859, "col_offset": 12, "nodeName": "self", "type": "HybridBERTClassifier"}, {"lineNumber": 859, "col_offset": 30, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 862, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 882, "col_offset": 24, "nodeName": "self", "type": "HybridBERTClassifier"}, {"lineNumber": 883, "col_offset": 15, "nodeName": "self", "type": "HybridBERTClassifier"}, {"lineNumber": 905, "col_offset": 58, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 905, "col_offset": 73, "nodeName": "params", "type": "Any"}, {"lineNumber": 907, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 908, "col_offset": 12, "nodeName": "self", "type": "HybridBERTRegression"}, {"lineNumber": 908, "col_offset": 30, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 911, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 931, "col_offset": 24, "nodeName": "self", "type": "HybridBERTRegression"}, {"lineNumber": 932, "col_offset": 15, "nodeName": "self", "type": "HybridBERTRegression"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "HybridBaseTransformerEncoder", "type": "Type[HybridBaseTransformerEncoder]"}, {"lineNumber": 108, "col_offset": 44, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "_get_encoder_cell", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "use_bert_encoder", "type": "bool"}, {"lineNumber": 135, "col_offset": 64, "nodeName": "units", "type": "Any"}, {"lineNumber": 135, "col_offset": 71, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 135, "col_offset": 84, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "attention_cell", "type": "Any"}, {"lineNumber": 136, "col_offset": 62, "nodeName": "weight_initializer", "type": "Any"}, {"lineNumber": 136, "col_offset": 82, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "use_residual", "type": "Any"}, {"lineNumber": 137, "col_offset": 69, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 137, "col_offset": 77, "nodeName": "output_attention", "type": "Any"}, {"lineNumber": 137, "col_offset": 95, "nodeName": "i", "type": "int"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "cell", "type": "Any"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "get", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 162, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "F", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 196, "col_offset": 50, "nodeName": "mask", "type": "Any"}, {"lineNumber": 196, "col_offset": 78, "nodeName": "length", "type": "Any"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "mask", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "mask", "type": "Any"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "C_in", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "states", "type": "Union[Any, List[Any]]"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "F", "type": "Any"}, {"lineNumber": 211, "col_offset": 67, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 211, "col_offset": 85, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "F", "type": "Any"}, {"lineNumber": 212, "col_offset": 45, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 212, "col_offset": 59, "nodeName": "positional_embed", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "layer_norm", "type": "Any"}, {"lineNumber": 215, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "dropout_layer", "type": "Any"}, {"lineNumber": 216, "col_offset": 44, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "dropout_layer", "type": "Any"}, {"lineNumber": 218, "col_offset": 44, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "layer_norm", "type": "Any"}, {"lineNumber": 219, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 237, "col_offset": 45, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 240, "col_offset": 42, "nodeName": "attention_weights", "type": "Any"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "F", "type": "Any"}, {"lineNumber": 243, "col_offset": 62, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 317, "col_offset": 14, "nodeName": "HybridBERTEncoder", "type": "Type[HybridBERTEncoder]"}, {"lineNumber": 317, "col_offset": 33, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 411, "col_offset": 14, "nodeName": "HybridBERTModel", "type": "Type[HybridBERTModel]"}, {"lineNumber": 411, "col_offset": 31, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 426, "col_offset": 26, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 429, "col_offset": 34, "nodeName": "_get_classifier", "type": "Callable[[Any], Any]"}, {"lineNumber": 434, "col_offset": 27, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 434, "col_offset": 64, "nodeName": "word_embed", "type": "Any"}, {"lineNumber": 438, "col_offset": 13, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 439, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 439, "col_offset": 44, "nodeName": "prefix", "type": "str"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 445, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 445, "col_offset": 49, "nodeName": "prefix", "type": "str"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 446, "col_offset": 24, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 446, "col_offset": 33, "nodeName": "units", "type": "Any"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 447, "col_offset": 24, "nodeName": "GELU", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 448, "col_offset": 24, "nodeName": "BERTLayerNorm", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 449, "col_offset": 24, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 449, "col_offset": 33, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 450, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 459, "col_offset": 17, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 460, "col_offset": 24, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 464, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 476, "col_offset": 13, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 477, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 477, "col_offset": 36, "nodeName": "units", "type": "Any"}, {"lineNumber": 478, "col_offset": 37, "nodeName": "prefix", "type": "str"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 502, "col_offset": 25, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 505, "col_offset": 47, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 505, "col_offset": 63, "nodeName": "pooled_out", "type": "Any"}, {"lineNumber": 506, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 506, "col_offset": 31, "nodeName": "next_sentence_classifier_out", "type": "Any"}, {"lineNumber": 510, "col_offset": 26, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 512, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 512, "col_offset": 37, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 533, "col_offset": 18, "nodeName": "slice", "type": "Any"}, {"lineNumber": 558, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "mx", "type": "Any"}, {"lineNumber": 562, "col_offset": 18, "nodeName": "mx", "type": "Any"}, {"lineNumber": 563, "col_offset": 69, "nodeName": "shape", "type": "Any"}, {"lineNumber": 603, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 751, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 751, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 751, "col_offset": 35, "nodeName": "k", "type": "Any"}, {"lineNumber": 751, "col_offset": 40, "nodeName": "mutable_args", "type": "FrozenSet[str]"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 801, "col_offset": 14, "nodeName": "HybridBERTForQA", "type": "Type[HybridBERTForQA]"}, {"lineNumber": 801, "col_offset": 31, "nodeName": "self", "type": "HybridBERTForQA"}, {"lineNumber": 803, "col_offset": 13, "nodeName": "self", "type": "HybridBERTForQA"}, {"lineNumber": 804, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 856, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 856, "col_offset": 14, "nodeName": "HybridBERTClassifier", "type": "Type[HybridBERTClassifier]"}, {"lineNumber": 856, "col_offset": 36, "nodeName": "self", "type": "HybridBERTClassifier"}, {"lineNumber": 858, "col_offset": 13, "nodeName": "self", "type": "HybridBERTClassifier"}, {"lineNumber": 859, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 859, "col_offset": 57, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 861, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 862, "col_offset": 12, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 862, "col_offset": 32, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 905, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 905, "col_offset": 14, "nodeName": "HybridBERTRegression", "type": "Type[HybridBERTRegression]"}, {"lineNumber": 905, "col_offset": 36, "nodeName": "self", "type": "HybridBERTRegression"}, {"lineNumber": 907, "col_offset": 13, "nodeName": "self", "type": "HybridBERTRegression"}, {"lineNumber": 908, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 908, "col_offset": 57, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 910, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 911, "col_offset": 12, "nodeName": "regression", "type": "Any"}, {"lineNumber": 911, "col_offset": 32, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "transformer_cells", "type": "Any"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 149, "col_offset": 71, "nodeName": "position_weight", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "F", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "states", "type": "Any"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "math", "type": "module"}, {"lineNumber": 212, "col_offset": 45, "nodeName": "F", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "self", "type": "HybridBaseTransformerEncoder"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "SequenceMask", "type": "Any"}, {"lineNumber": 235, "col_offset": 45, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "all_encodings_outputs", "type": "List[Any]"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "additional_outputs", "type": "List[Any]"}, {"lineNumber": 429, "col_offset": 34, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 434, "col_offset": 64, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 446, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 448, "col_offset": 50, "nodeName": "units", "type": "Any"}, {"lineNumber": 449, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 450, "col_offset": 41, "nodeName": "values", "type": "Any"}, {"lineNumber": 459, "col_offset": 17, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 460, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 460, "col_offset": 51, "nodeName": "prefix", "type": "str"}, {"lineNumber": 461, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 462, "col_offset": 20, "nodeName": "add", "type": "Any"}, {"lineNumber": 505, "col_offset": 47, "nodeName": "self", "type": "HybridBERTModel"}, {"lineNumber": 506, "col_offset": 16, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 533, "col_offset": 18, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 563, "col_offset": 69, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 603, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 861, "col_offset": 16, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 861, "col_offset": 36, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 862, "col_offset": 12, "nodeName": "self", "type": "HybridBERTClassifier"}, {"lineNumber": 862, "col_offset": 32, "nodeName": "nn", "type": "Any"}, {"lineNumber": 862, "col_offset": 47, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 910, "col_offset": 16, "nodeName": "regression", "type": "Any"}, {"lineNumber": 910, "col_offset": 36, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 911, "col_offset": 12, "nodeName": "self", "type": "HybridBERTRegression"}, {"lineNumber": 911, "col_offset": 32, "nodeName": "nn", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "self", "type": "HybridBERTEncoder"}, {"lineNumber": 145, "col_offset": 72, "nodeName": "max_length", "type": "Any"}, {"lineNumber": 145, "col_offset": 84, "nodeName": "units", "type": "Any"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "F", "type": "Any"}, {"lineNumber": 235, "col_offset": 70, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 449, "col_offset": 67, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 461, "col_offset": 21, "nodeName": "embed", "type": "Any"}, {"lineNumber": 462, "col_offset": 20, "nodeName": "embed", "type": "Any"}, {"lineNumber": 462, "col_offset": 30, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 465, "col_offset": 24, "nodeName": "add", "type": "Any"}, {"lineNumber": 603, "col_offset": 34, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 861, "col_offset": 16, "nodeName": "self", "type": "HybridBERTClassifier"}, {"lineNumber": 861, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 861, "col_offset": 52, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 910, "col_offset": 16, "nodeName": "self", "type": "HybridBERTRegression"}, {"lineNumber": 910, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 910, "col_offset": 52, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 449, "col_offset": 67, "nodeName": "embed", "type": "Any"}, {"lineNumber": 450, "col_offset": 41, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 462, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 462, "col_offset": 53, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 462, "col_offset": 76, "nodeName": "embed_size", "type": "Any"}, {"lineNumber": 463, "col_offset": 62, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 465, "col_offset": 24, "nodeName": "embed", "type": "Any"}, {"lineNumber": 465, "col_offset": 34, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 603, "col_offset": 41, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 450, "col_offset": 41, "nodeName": "embed", "type": "Any"}, {"lineNumber": 465, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 465, "col_offset": 50, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 603, "col_offset": 41, "nodeName": "models", "type": "Dict[str, Callable[..., Any]]"}]