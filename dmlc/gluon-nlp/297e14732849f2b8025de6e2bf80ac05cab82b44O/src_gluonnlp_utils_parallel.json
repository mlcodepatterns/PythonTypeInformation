[{"lineNumber": 24, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_in_queue", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_out_queue", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_num_workers", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "num_workers", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_threads", "type": "List[threading.Thread]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "_parallizable", "type": "Any"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "parallizable", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_num_serial", "type": "Union[Any, int]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "arg", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "_threads", "type": "List[threading.Thread]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "_threads", "type": "List[threading.Thread]"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "_msg", "type": "str"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "msg", "type": "str"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "Queue", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "Queue", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 112, "col_offset": 42, "nodeName": "serial_init", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "num_workers", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "_in_queue", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "_out_queue", "type": "Any"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "_parallizable", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "num_workers", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "_num_serial", "type": "Union[Any, int]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "queue", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "queue", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "Thread", "type": "Type[threading.Thread]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "start", "type": "Callable[[], None]"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "_num_serial", "type": "Union[Any, int]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "forward_backward", "type": "Any"}, {"lineNumber": 133, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "put", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "put", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "_out_queue", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "is_alive", "type": "Callable[[], bool]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "join", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "_StopSignal", "type": "Type[Any]"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "forward_backward", "type": "Any"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "put", "type": "Any"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "out", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "threading", "type": "module"}, {"lineNumber": 124, "col_offset": 45, "nodeName": "_worker", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 59, "nodeName": "arg", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "_threads", "type": "List[threading.Thread]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "_threads", "type": "List[threading.Thread]"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "_parallizable", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "_out_queue", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "_in_queue", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "put", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "thread", "type": "threading.Thread"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "in_queue", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "Parallel", "type": "Type[Parallel]"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "out_queue", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "_in_queue", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "_StopSignal", "type": "Type[Any]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "self", "type": "Parallel"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "self", "type": "Parallel"}]