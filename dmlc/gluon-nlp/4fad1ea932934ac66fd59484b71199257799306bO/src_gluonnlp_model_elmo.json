[{"lineNumber": 41, "col_offset": 0, "nodeName": "_make_bos_eos", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "_add_sentence_boundary_token_ids", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 424, "col_offset": 0, "nodeName": "_load_pretrained_params", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 429, "col_offset": 0, "nodeName": "_get_elmo_model", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "Block", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "Block", "type": "Any"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "char_ids", "type": "List[int]"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "beginning_of_word_character", "type": "int"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "character", "type": "int"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "end_of_word_character", "type": "int"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "char_ids", "type": "List[int]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "inputs_shape", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "new_shape", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "inputs_with_boundary_tokens", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "max_word_length", "type": "int"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "beginning_of_sentence_character", "type": "int"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "end_of_sentence_character", "type": "int"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "beginning_of_word_character", "type": "int"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "end_of_word_character", "type": "int"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "padding_character", "type": "int"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "bos_token", "type": "str"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "eos_token", "type": "str"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 415, "col_offset": 0, "nodeName": "update", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "model_file", "type": "Any"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 431, "col_offset": 7, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 433, "col_offset": 11, "nodeName": "net", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "max_word_length", "type": "int"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "char_ids", "type": "List[int]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "char_ids", "type": "List[int]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "char_ids", "type": "List[int]"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "inputs_shape", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "new_shape", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "new_shape", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "sentence_begin_token", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "new_mask", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "inputs_with_boundary_tokens", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "new_mask", "type": "Any"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "_make_bos_eos", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "beginning_of_sentence_character", "type": "int"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "padding_character", "type": "int"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "beginning_of_word_character", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "end_of_word_character", "type": "int"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "max_word_length", "type": "int"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "_make_bos_eos", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "end_of_sentence_character", "type": "int"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "padding_character", "type": "int"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "beginning_of_word_character", "type": "int"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "end_of_word_character", "type": "int"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "max_word_length", "type": "int"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "_output_size", "type": "Any"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "_char_embed_size", "type": "Any"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "char_embed_size", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "_filters", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "filters", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "ngram_filter_sizes", "type": "List[Any]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "num_filters", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "_num_highway", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "num_highway", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "_conv_layer_activation", "type": "Any"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "conv_layer_activation", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "_max_chars_per_token", "type": "Any"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "max_chars_per_token", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "_output_size", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "character_embedding", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "token_embedding", "type": "Any"}, {"lineNumber": 249, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "_model", "type": "Any"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "_output_size", "type": "Any"}, {"lineNumber": 327, "col_offset": 28, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "_filters", "type": "Any"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "filters", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "_char_embed_size", "type": "Any"}, {"lineNumber": 329, "col_offset": 32, "nodeName": "char_embed_size", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "_num_highway", "type": "Any"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "num_highway", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "_conv_layer_activation", "type": "Any"}, {"lineNumber": 331, "col_offset": 38, "nodeName": "conv_layer_activation", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "_max_chars_per_token", "type": "Any"}, {"lineNumber": 332, "col_offset": 36, "nodeName": "max_chars_per_token", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "_input_size", "type": "Any"}, {"lineNumber": 333, "col_offset": 27, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "_hidden_size", "type": "Any"}, {"lineNumber": 334, "col_offset": 28, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "_proj_size", "type": "Any"}, {"lineNumber": 335, "col_offset": 26, "nodeName": "proj_size", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "_num_layers", "type": "Any"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "_cell_clip", "type": "Any"}, {"lineNumber": 337, "col_offset": 26, "nodeName": "cell_clip", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "_proj_clip", "type": "Any"}, {"lineNumber": 338, "col_offset": 26, "nodeName": "proj_clip", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "_skip_connection", "type": "Any"}, {"lineNumber": 339, "col_offset": 32, "nodeName": "skip_connection", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "type_representation", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "lstm_outputs", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "type_representation", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "layer_activations", "type": "Any"}, {"lineNumber": 415, "col_offset": 0, "nodeName": "_model_sha1", "type": "Any"}, {"lineNumber": 416, "col_offset": 5, "nodeName": "name", "type": "str"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "checksum", "type": "str"}, {"lineNumber": 425, "col_offset": 17, "nodeName": "get_model_file", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "load_parameters", "type": "Any"}, {"lineNumber": 426, "col_offset": 24, "nodeName": "model_file", "type": "Any"}, {"lineNumber": 430, "col_offset": 10, "nodeName": "model_cls", "type": "Any"}, {"lineNumber": 436, "col_offset": 79, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 437, "col_offset": 43, "nodeName": "join", "type": "Callable"}, {"lineNumber": 472, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 474, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 475, "col_offset": 11, "nodeName": "_get_elmo_model", "type": "Callable[..., Any]"}, {"lineNumber": 475, "col_offset": 27, "nodeName": "ELMoBiLM", "type": "Type[ELMoBiLM]"}, {"lineNumber": 475, "col_offset": 74, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 475, "col_offset": 88, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 476, "col_offset": 27, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 476, "col_offset": 32, "nodeName": "root", "type": "Any"}, {"lineNumber": 479, "col_offset": 79, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 480, "col_offset": 43, "nodeName": "join", "type": "Callable"}, {"lineNumber": 515, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 517, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 518, "col_offset": 11, "nodeName": "_get_elmo_model", "type": "Callable[..., Any]"}, {"lineNumber": 518, "col_offset": 27, "nodeName": "ELMoBiLM", "type": "Type[ELMoBiLM]"}, {"lineNumber": 518, "col_offset": 74, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 518, "col_offset": 88, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 519, "col_offset": 27, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 519, "col_offset": 32, "nodeName": "root", "type": "Any"}, {"lineNumber": 522, "col_offset": 79, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 523, "col_offset": 43, "nodeName": "join", "type": "Callable"}, {"lineNumber": 558, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 560, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "_get_elmo_model", "type": "Callable[..., Any]"}, {"lineNumber": 561, "col_offset": 27, "nodeName": "ELMoBiLM", "type": "Type[ELMoBiLM]"}, {"lineNumber": 561, "col_offset": 74, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 561, "col_offset": 88, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 562, "col_offset": 27, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 562, "col_offset": 32, "nodeName": "root", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "padding_character", "type": "int"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "inputs_shape", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "nd", "type": "Any"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "inputs_shape", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "inputs_with_boundary_tokens", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "inputs_with_boundary_tokens", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "j", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "sentence_end_token", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "inputs_with_boundary_tokens", "type": "Any"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "new_mask", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 180, "col_offset": 49, "nodeName": "array", "type": "Any"}, {"lineNumber": 183, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 190, "col_offset": 41, "nodeName": "_filters", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 233, "col_offset": 56, "nodeName": "_add_sentence_boundary_token_ids", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "_beginning_of_sentence_characters", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "_end_of_sentence_characters", "type": "Any"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "_char_embedding", "type": "Any"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 245, "col_offset": 43, "nodeName": "character_embedding", "type": "Any"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "_convolutions", "type": "Any"}, {"lineNumber": 246, "col_offset": 45, "nodeName": "character_embedding", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "_", "type": "Any"}, {"lineNumber": 249, "col_offset": 41, "nodeName": "character_ids_with_bos_eos", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "mask_with_bos_eos", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "_skip_connection", "type": "Any"}, {"lineNumber": 342, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "begin_state", "type": "Any"}, {"lineNumber": 363, "col_offset": 43, "nodeName": "func", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 399, "col_offset": 14, "nodeName": "type_representation", "type": "Any"}, {"lineNumber": 399, "col_offset": 36, "nodeName": "_elmo_char_encoder", "type": "ELMoCharacterEncoder"}, {"lineNumber": 399, "col_offset": 60, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 400, "col_offset": 30, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "lstm_outputs", "type": "Any"}, {"lineNumber": 401, "col_offset": 22, "nodeName": "states", "type": "Any"}, {"lineNumber": 401, "col_offset": 31, "nodeName": "_elmo_lstm", "type": "Any"}, {"lineNumber": 401, "col_offset": 47, "nodeName": "type_representation", "type": "Any"}, {"lineNumber": 401, "col_offset": 68, "nodeName": "states", "type": "Any"}, {"lineNumber": 401, "col_offset": 76, "nodeName": "mask", "type": "Any"}, {"lineNumber": 402, "col_offset": 23, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 403, "col_offset": 30, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 410, "col_offset": 33, "nodeName": "split", "type": "Any"}, {"lineNumber": 410, "col_offset": 45, "nodeName": "lstm_outputs", "type": "Any"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 412, "col_offset": 23, "nodeName": "states", "type": "Any"}, {"lineNumber": 412, "col_offset": 31, "nodeName": "mask", "type": "Any"}, {"lineNumber": 415, "col_offset": 0, "nodeName": "model_store", "type": "Any"}, {"lineNumber": 425, "col_offset": 32, "nodeName": "join", "type": "Callable"}, {"lineNumber": 425, "col_offset": 75, "nodeName": "root", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 426, "col_offset": 40, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 430, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "_load_pretrained_params", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 432, "col_offset": 32, "nodeName": "net", "type": "Any"}, {"lineNumber": 432, "col_offset": 37, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 432, "col_offset": 49, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 432, "col_offset": 63, "nodeName": "root", "type": "Any"}, {"lineNumber": 432, "col_offset": 69, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 437, "col_offset": 43, "nodeName": "path", "type": "module"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "predefined_args", "type": "Dict[str, Union[bool, int, str, List[List[int]], Any]]"}, {"lineNumber": 476, "col_offset": 40, "nodeName": "predefined_args", "type": "Dict[str, Union[bool, int, str, List[List[int]], Any]]"}, {"lineNumber": 480, "col_offset": 43, "nodeName": "path", "type": "module"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "predefined_args", "type": "Dict[str, Union[bool, int, str, List[List[int]], Any]]"}, {"lineNumber": 519, "col_offset": 40, "nodeName": "predefined_args", "type": "Dict[str, Union[bool, int, str, List[List[int]], Any]]"}, {"lineNumber": 523, "col_offset": 43, "nodeName": "path", "type": "module"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "predefined_args", "type": "Dict[str, Union[bool, int, str, List[List[int]], Any]]"}, {"lineNumber": 562, "col_offset": 40, "nodeName": "predefined_args", "type": "Dict[str, Union[bool, int, str, List[List[int]], Any]]"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "inputs_with_boundary_tokens", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "inputs_shape", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "inputs_with_boundary_tokens", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "j", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 69, "col_offset": 51, "nodeName": "sentence_begin_token", "type": "Any"}, {"lineNumber": 70, "col_offset": 60, "nodeName": "sentence_end_token", "type": "Any"}, {"lineNumber": 180, "col_offset": 49, "nodeName": "nd", "type": "Any"}, {"lineNumber": 183, "col_offset": 43, "nodeName": "nd", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "width", "type": "Any"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "num", "type": "Any"}, {"lineNumber": 190, "col_offset": 41, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "width", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "num", "type": "Any"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 199, "col_offset": 54, "nodeName": "_char_embed_size", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 200, "col_offset": 33, "nodeName": "ConvolutionalEncoder", "type": "Any"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 242, "col_offset": 51, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 243, "col_offset": 63, "nodeName": "_max_chars_per_token", "type": "Any"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "nd", "type": "Any"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 251, "col_offset": 34, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 251, "col_offset": 58, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 251, "col_offset": 70, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 344, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 345, "col_offset": 38, "nodeName": "ELMoCharacterEncoder", "type": "Type[ELMoCharacterEncoder]"}, {"lineNumber": 345, "col_offset": 59, "nodeName": "_output_size", "type": "Any"}, {"lineNumber": 346, "col_offset": 59, "nodeName": "_filters", "type": "Any"}, {"lineNumber": 347, "col_offset": 59, "nodeName": "_char_embed_size", "type": "Any"}, {"lineNumber": 348, "col_offset": 59, "nodeName": "_num_highway", "type": "Any"}, {"lineNumber": 349, "col_offset": 59, "nodeName": "_conv_layer_activation", "type": "Any"}, {"lineNumber": 350, "col_offset": 59, "nodeName": "_max_chars_per_token", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 351, "col_offset": 30, "nodeName": "BiLMEncoder", "type": "Any"}, {"lineNumber": 360, "col_offset": 19, "nodeName": "get_output_size", "type": "Callable[[], Any]"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "_elmo_lstm", "type": "Any"}, {"lineNumber": 363, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 399, "col_offset": 36, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 400, "col_offset": 30, "nodeName": "type_representation", "type": "Any"}, {"lineNumber": 401, "col_offset": 31, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 402, "col_offset": 23, "nodeName": "lstm_outputs", "type": "Any"}, {"lineNumber": 403, "col_offset": 30, "nodeName": "type_representation", "type": "Any"}, {"lineNumber": 410, "col_offset": 33, "nodeName": "nd", "type": "Any"}, {"lineNumber": 410, "col_offset": 59, "nodeName": "shape", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "checksum", "type": "str"}, {"lineNumber": 416, "col_offset": 34, "nodeName": "name", "type": "str"}, {"lineNumber": 425, "col_offset": 42, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 425, "col_offset": 54, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 437, "col_offset": 43, "nodeName": "os", "type": "module"}, {"lineNumber": 472, "col_offset": 16, "nodeName": "k", "type": "str"}, {"lineNumber": 472, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 472, "col_offset": 37, "nodeName": "k", "type": "str"}, {"lineNumber": 472, "col_offset": 42, "nodeName": "predefined_args", "type": "Dict[str, Union[bool, int, str, List[List[int]], Any]]"}, {"lineNumber": 480, "col_offset": 43, "nodeName": "os", "type": "module"}, {"lineNumber": 515, "col_offset": 16, "nodeName": "k", "type": "str"}, {"lineNumber": 515, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 515, "col_offset": 37, "nodeName": "k", "type": "str"}, {"lineNumber": 515, "col_offset": 42, "nodeName": "predefined_args", "type": "Dict[str, Union[bool, int, str, List[List[int]], Any]]"}, {"lineNumber": 523, "col_offset": 43, "nodeName": "os", "type": "module"}, {"lineNumber": 558, "col_offset": 16, "nodeName": "k", "type": "str"}, {"lineNumber": 558, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 558, "col_offset": 37, "nodeName": "k", "type": "str"}, {"lineNumber": 558, "col_offset": 42, "nodeName": "predefined_args", "type": "Dict[str, Union[bool, int, str, List[List[int]], Any]]"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "mask", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "inputs_with_boundary_tokens", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "inputs_with_boundary_tokens", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "sum", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "ELMoCharacterEncoder", "type": "Type[ELMoCharacterEncoder]"}, {"lineNumber": 176, "col_offset": 36, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 180, "col_offset": 49, "nodeName": "mx", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "beginning_of_sentence_characters", "type": "List[int]"}, {"lineNumber": 183, "col_offset": 43, "nodeName": "mx", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "end_of_sentence_characters", "type": "List[int]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "ngram_filter_sizes", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "num_filters", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 198, "col_offset": 54, "nodeName": "padding_character", "type": "int"}, {"lineNumber": 199, "col_offset": 54, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 200, "col_offset": 65, "nodeName": "_char_embed_size", "type": "Any"}, {"lineNumber": 203, "col_offset": 76, "nodeName": "conv_layer_activation", "type": "Any"}, {"lineNumber": 204, "col_offset": 66, "nodeName": "_num_highway", "type": "Any"}, {"lineNumber": 208, "col_offset": 66, "nodeName": "_output_size", "type": "Any"}, {"lineNumber": 242, "col_offset": 51, "nodeName": "character_ids_with_bos_eos", "type": "Any"}, {"lineNumber": 243, "col_offset": 63, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 251, "col_offset": 34, "nodeName": "token_embedding", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 324, "col_offset": 14, "nodeName": "ELMoBiLM", "type": "Type[ELMoBiLM]"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 344, "col_offset": 13, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 345, "col_offset": 59, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 346, "col_offset": 59, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 347, "col_offset": 59, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 348, "col_offset": 59, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 349, "col_offset": 59, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 350, "col_offset": 59, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 351, "col_offset": 47, "nodeName": "_model", "type": "Any"}, {"lineNumber": 352, "col_offset": 53, "nodeName": "_input_size", "type": "Any"}, {"lineNumber": 353, "col_offset": 54, "nodeName": "_hidden_size", "type": "Any"}, {"lineNumber": 354, "col_offset": 52, "nodeName": "_proj_size", "type": "Any"}, {"lineNumber": 355, "col_offset": 53, "nodeName": "_num_layers", "type": "Any"}, {"lineNumber": 356, "col_offset": 52, "nodeName": "_cell_clip", "type": "Any"}, {"lineNumber": 357, "col_offset": 52, "nodeName": "_proj_clip", "type": "Any"}, {"lineNumber": 360, "col_offset": 19, "nodeName": "_elmo_char_encoder", "type": "ELMoCharacterEncoder"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "concat", "type": "Any"}, {"lineNumber": 408, "col_offset": 14, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 410, "col_offset": 33, "nodeName": "mx", "type": "Any"}, {"lineNumber": 410, "col_offset": 59, "nodeName": "lstm_outputs", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 411, "col_offset": 26, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "ELMoCharacterVocab", "type": "Type[ELMoCharacterVocab]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "ELMoCharacterVocab", "type": "Type[ELMoCharacterVocab]"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 198, "col_offset": 54, "nodeName": "ELMoCharacterVocab", "type": "Type[ELMoCharacterVocab]"}, {"lineNumber": 200, "col_offset": 65, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 201, "col_offset": 66, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 201, "col_offset": 72, "nodeName": "num_filters", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 73, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 202, "col_offset": 79, "nodeName": "ngram_filter_sizes", "type": "List[Any]"}, {"lineNumber": 204, "col_offset": 66, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 205, "col_offset": 67, "nodeName": "HighwayBias", "type": "Any"}, {"lineNumber": 208, "col_offset": 66, "nodeName": "self", "type": "ELMoCharacterEncoder"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 351, "col_offset": 47, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 352, "col_offset": 53, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 353, "col_offset": 54, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 354, "col_offset": 52, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 355, "col_offset": 53, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 356, "col_offset": 52, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 357, "col_offset": 52, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 360, "col_offset": 19, "nodeName": "self", "type": "ELMoBiLM"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "nd", "type": "Any"}, {"lineNumber": 408, "col_offset": 14, "nodeName": "mask", "type": "Any"}, {"lineNumber": 411, "col_offset": 26, "nodeName": "layer_activations", "type": "Any"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "j", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "inputs_with_boundary_tokens", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 407, "col_offset": 27, "nodeName": "type_representation", "type": "Any"}, {"lineNumber": 407, "col_offset": 48, "nodeName": "type_representation", "type": "Any"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "j", "type": "Any"}]