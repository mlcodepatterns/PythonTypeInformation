[{"lineNumber": 38, "col_offset": 0, "nodeName": "test_clip_sequence", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "test_pad_sequence", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "test_spacy_tokenizer", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "test_sentencepiece_tokenizer", "type": "Callable[[], Any]"}, {"lineNumber": 141, "col_offset": 0, "nodeName": "test_sentencepiece_tokenizer_subword_regularization", "type": "Callable[[], Any]"}, {"lineNumber": 162, "col_offset": 0, "nodeName": "test_bertbasictokenizer", "type": "Callable[[], Any]"}, {"lineNumber": 204, "col_offset": 0, "nodeName": "test_berttokenizer", "type": "Callable[[], Any]"}, {"lineNumber": 233, "col_offset": 0, "nodeName": "test_bert_sentences_transform", "type": "Callable[[], Any]"}, {"lineNumber": 268, "col_offset": 0, "nodeName": "test_bert_sentencepiece_sentences_transform", "type": "Callable[[], Any]"}, {"lineNumber": 311, "col_offset": 0, "nodeName": "test_gpt2_transforms", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "length", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "clip", "type": "bool"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "url_format", "type": "str"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "url_format", "type": "str"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "vocab_tokens", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "text_a", "type": "str"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "text_b", "type": "str"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "vocab_tokens", "type": "List[str]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "bert_st", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "text_a_tokens", "type": "List[str]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "text_b_tokens", "type": "List[str]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "text_a_ids", "type": "Any"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "text_b_ids", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "cls_ids", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "sep_ids", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "pad_ids", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "concated_ids", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "valid_token_ids", "type": "numpy.ndarray"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "valid_type_ids", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "start", "type": "int"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "end", "type": "int"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "url", "type": "str"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "bert_tokenizer", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "max_len", "type": "int"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "processed", "type": "Any"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "subwords", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "indices", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "gt_gpt2_idx", "type": "List[int]"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "recovered_sentence", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "clip_seq", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "length", "type": "int"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "SacreMosesTokenizer", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "ret", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "SpacyTokenizer", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "ret", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "SacreMosesDetokenizer", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "ret", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "download", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "SentencepieceTokenizer", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "SentencepieceDetokenizer", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "detext", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "ret", "type": "Any"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "text", "type": "str"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "detext", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "download", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "SentencepieceTokenizer", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "SentencepieceDetokenizer", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "detext", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "text", "type": "str"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "detext", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "BERTBasicTokenizer", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "BERTBasicTokenizer", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "Vocab", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "BERTTokenizer", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "is_first_subword", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "Vocab", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "BERTTokenizer", "type": "Any"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "BERTVocab", "type": "Any"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "BERTTokenizer", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "BERTSentenceTransform", "type": "Any"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "token_ids", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "length", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "type_ids", "type": "Any"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "bert_st", "type": "Any"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 248, "col_offset": 17, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 250, "col_offset": 14, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 252, "col_offset": 14, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 254, "col_offset": 75, "nodeName": "pad_ids", "type": "Any"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 256, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "concated_ids", "type": "Any"}, {"lineNumber": 257, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "valid_type_ids", "type": "Any"}, {"lineNumber": 263, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "length", "type": "Any"}, {"lineNumber": 265, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "download", "type": "Any"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "url", "type": "str"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "from_sentencepiece", "type": "Any"}, {"lineNumber": 272, "col_offset": 46, "nodeName": "f", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "BERTSPTokenizer", "type": "Any"}, {"lineNumber": 273, "col_offset": 39, "nodeName": "f", "type": "Any"}, {"lineNumber": 273, "col_offset": 42, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "is_first_subword", "type": "Any"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "SimpleDataset", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "BERTSentenceTransform", "type": "Any"}, {"lineNumber": 279, "col_offset": 40, "nodeName": "bert_tokenizer", "type": "Any"}, {"lineNumber": 280, "col_offset": 40, "nodeName": "max_len", "type": "int"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "data_train", "type": "Any"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 308, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "GPT2BPETokenizer", "type": "Any"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "GPT2BPEDetokenizer", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "_load_vocab", "type": "Any"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "s", "type": "str"}, {"lineNumber": 318, "col_offset": 14, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 323, "col_offset": 13, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "indices", "type": "Any"}, {"lineNumber": 323, "col_offset": 33, "nodeName": "gt_gpt2_idx", "type": "List[int]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 325, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "subwords", "type": "Any"}, {"lineNumber": 325, "col_offset": 34, "nodeName": "gt_gpt2_subword", "type": "List[str]"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "recovered_sentence", "type": "Any"}, {"lineNumber": 329, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "ClipSequence", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "ret1", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "ret2", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "ret3", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "length", "type": "int"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "clip", "type": "bool"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "pad_width", "type": "List[Union[Tuple[int, Any], Tuple[int, int]]]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "pad_val", "type": "float"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "text", "type": "str"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "text", "type": "str"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "t", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "text", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "filename", "type": "str"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "join", "type": "Callable"}, {"lineNumber": 126, "col_offset": 71, "nodeName": "filename", "type": "str"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "t", "type": "Any"}, {"lineNumber": 127, "col_offset": 45, "nodeName": "join", "type": "Callable"}, {"lineNumber": 127, "col_offset": 75, "nodeName": "filename", "type": "str"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "text", "type": "str"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "ret", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "filename", "type": "str"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "join", "type": "Callable"}, {"lineNumber": 146, "col_offset": 71, "nodeName": "filename", "type": "str"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "t", "type": "Any"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "join", "type": "Callable"}, {"lineNumber": 148, "col_offset": 75, "nodeName": "filename", "type": "str"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "_is_whitespace", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "_is_whitespace", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "_is_whitespace", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "_is_whitespace", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "_is_whitespace", "type": "Any"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "_is_whitespace", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "_is_whitespace", "type": "Any"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "_is_control", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "_is_control", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "_is_control", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "_is_control", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "_is_control", "type": "Any"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "_is_punctuation", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "_is_punctuation", "type": "Any"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "_is_punctuation", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "_is_punctuation", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "_is_punctuation", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "_is_punctuation", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "count_tokens", "type": "Any"}, {"lineNumber": 209, "col_offset": 21, "nodeName": "vocab_tokens", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 212, "col_offset": 38, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "is_first_subword", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "count_tokens", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "vocab_tokens", "type": "List[str]"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 228, "col_offset": 38, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "count_tokens", "type": "Any"}, {"lineNumber": 238, "col_offset": 40, "nodeName": "vocab_tokens", "type": "List[str]"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 239, "col_offset": 38, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "t", "type": "Any"}, {"lineNumber": 243, "col_offset": 43, "nodeName": "text_a", "type": "str"}, {"lineNumber": 243, "col_offset": 51, "nodeName": "text_b", "type": "str"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "text_a_tokens", "type": "List[str]"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "text_b_tokens", "type": "List[str]"}, {"lineNumber": 254, "col_offset": 65, "nodeName": "sep_ids", "type": "Any"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 56, "nodeName": "int32", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "valid_token_ids", "type": "numpy.ndarray"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 43, "nodeName": "int32", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "text_a_tokens", "type": "List[str]"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "start", "type": "int"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "end", "type": "int"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "token_ids", "type": "Any"}, {"lineNumber": 263, "col_offset": 28, "nodeName": "valid_token_ids", "type": "numpy.ndarray"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "type_ids", "type": "Any"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "valid_type_ids", "type": "Any"}, {"lineNumber": 272, "col_offset": 17, "nodeName": "BERTVocab", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "t", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "bert_tokenizer", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "is_first_subword", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "transform", "type": "Any"}, {"lineNumber": 284, "col_offset": 46, "nodeName": "transform", "type": "Any"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "data_train", "type": "Any"}, {"lineNumber": 301, "col_offset": 23, "nodeName": "max_len", "type": "int"}, {"lineNumber": 306, "col_offset": 11, "nodeName": "asscalar", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "t", "type": "Any"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "subwords", "type": "Any"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 324, "col_offset": 22, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "t", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "length", "type": "int"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "clip_seq", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "ret2", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "clip_seq", "type": "Any"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "ret3", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "pad", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "pad_seq", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "url_format", "type": "str"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "join", "type": "Callable"}, {"lineNumber": 125, "col_offset": 77, "nodeName": "filename", "type": "str"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "path", "type": "module"}, {"lineNumber": 127, "col_offset": 45, "nodeName": "path", "type": "module"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 136, "col_offset": 41, "nodeName": "t", "type": "Any"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "ret", "type": "Any"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "url_format", "type": "str"}, {"lineNumber": 145, "col_offset": 47, "nodeName": "join", "type": "Callable"}, {"lineNumber": 145, "col_offset": 77, "nodeName": "filename", "type": "str"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "path", "type": "module"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "path", "type": "module"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "text", "type": "str"}, {"lineNumber": 151, "col_offset": 39, "nodeName": "_", "type": "int"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 157, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "ret", "type": "Any"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 60, "nodeName": "t", "type": "Any"}, {"lineNumber": 158, "col_offset": 65, "nodeName": "ret", "type": "Any"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "detext", "type": "Any"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 250, "col_offset": 26, "nodeName": "cls_token", "type": "Any"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "sep_token", "type": "Any"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "padding_token", "type": "Any"}, {"lineNumber": 254, "col_offset": 52, "nodeName": "text_b_ids", "type": "Any"}, {"lineNumber": 255, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 258, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 260, "col_offset": 39, "nodeName": "text_b_tokens", "type": "List[str]"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "vocab_tokens", "type": "List[str]"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "bert_tokenizer", "type": "Any"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "data_train_raw", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "convert_tokens_to_ids", "type": "Any"}, {"lineNumber": 297, "col_offset": 58, "nodeName": "tokens", "type": "List[str]"}, {"lineNumber": 298, "col_offset": 21, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 300, "col_offset": 18, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 301, "col_offset": 37, "nodeName": "token_ids", "type": "List[Any]"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "processed", "type": "Any"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 304, "col_offset": 40, "nodeName": "token_ids", "type": "List[Any]"}, {"lineNumber": 306, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 23, "nodeName": "processed", "type": "Any"}, {"lineNumber": 306, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 306, "col_offset": 44, "nodeName": "tokens", "type": "List[str]"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "processed", "type": "Any"}, {"lineNumber": 308, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 315, "col_offset": 53, "nodeName": "join", "type": "Callable"}, {"lineNumber": 328, "col_offset": 38, "nodeName": "idx_to_token", "type": "Any"}, {"lineNumber": 328, "col_offset": 64, "nodeName": "i", "type": "Any"}, {"lineNumber": 328, "col_offset": 69, "nodeName": "indices", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "ret1", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "min", "type": "Callable"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "length", "type": "int"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "ret1", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 59, "nodeName": "pad_width", "type": "List[Union[Tuple[int, Any], Tuple[int, int]]]"}, {"lineNumber": 61, "col_offset": 86, "nodeName": "pad_val", "type": "float"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "PadSequence", "type": "Any"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "additional_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "path", "type": "module"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "os", "type": "module"}, {"lineNumber": 127, "col_offset": 45, "nodeName": "os", "type": "module"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 145, "col_offset": 47, "nodeName": "path", "type": "module"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "os", "type": "module"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "os", "type": "module"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 49, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 159, "col_offset": 58, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 250, "col_offset": 26, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 254, "col_offset": 42, "nodeName": "sep_ids", "type": "Any"}, {"lineNumber": 255, "col_offset": 32, "nodeName": "pad_ids", "type": "Any"}, {"lineNumber": 260, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "text_a_tokens", "type": "List[str]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "bert_tokenizer", "type": "Any"}, {"lineNumber": 298, "col_offset": 32, "nodeName": "sep_token", "type": "Any"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "padding_token", "type": "Any"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 308, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 308, "col_offset": 46, "nodeName": "max_len", "type": "int"}, {"lineNumber": 315, "col_offset": 53, "nodeName": "path", "type": "module"}, {"lineNumber": 328, "col_offset": 38, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 328, "col_offset": 57, "nodeName": "i", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 53, "nodeName": "length", "type": "int"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "clip_seq", "type": "Any"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "length", "type": "int"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "length", "type": "int"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "length", "type": "int"}, {"lineNumber": 60, "col_offset": 68, "nodeName": "_", "type": "int"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "t", "type": "Any"}, {"lineNumber": 66, "col_offset": 47, "nodeName": "length", "type": "int"}, {"lineNumber": 66, "col_offset": 60, "nodeName": "clip", "type": "bool"}, {"lineNumber": 66, "col_offset": 74, "nodeName": "pad_val", "type": "float"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "gt_npy", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "ret_npy", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "ret_mx", "type": "Any"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 145, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 157, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 157, "col_offset": 59, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 64, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 159, "col_offset": 68, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 254, "col_offset": 19, "nodeName": "cls_ids", "type": "Any"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "text_a_ids", "type": "Any"}, {"lineNumber": 298, "col_offset": 32, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "bert_vocab", "type": "Any"}, {"lineNumber": 315, "col_offset": 53, "nodeName": "os", "type": "module"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "length", "type": "int"}, {"lineNumber": 60, "col_offset": 73, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "np_gt", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "length", "type": "int"}, {"lineNumber": 70, "col_offset": 56, "nodeName": "clip", "type": "bool"}, {"lineNumber": 70, "col_offset": 62, "nodeName": "pad_val", "type": "float"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "pad_seq", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "ret_npy", "type": "Any"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "gt_npy", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "ret_mx", "type": "Any"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "gt_npy", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "ret_l", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "nd", "type": "Any"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 79, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "random", "type": "Any"}, {"lineNumber": 69, "col_offset": 74, "nodeName": "additional_shape", "type": "Union[Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "additional_shape", "type": "Union[Tuple[()], Tuple[int, int], Tuple[int]]"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "ret_l", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "gt_npy", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "mx", "type": "Any"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 79, "nodeName": "data", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 59, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "pad_seq", "type": "Any"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "pad_seq", "type": "Any"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "array", "type": "Any"}, {"lineNumber": 72, "col_offset": 53, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 76, "col_offset": 53, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "nd", "type": "Any"}, {"lineNumber": 76, "col_offset": 53, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "mx", "type": "Any"}]