[{"lineNumber": 33, "col_offset": 7, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "mask", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 57, "col_offset": 7, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "mask", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "mask", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 93, "col_offset": 7, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 97, "col_offset": 7, "nodeName": "mask", "type": "Any"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "ConvolutionalEncoder", "type": "Type[gluonnlp.model.convolutional_encoder.ConvolutionalEncoder]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "ConvolutionalEncoder", "type": "Type[gluonnlp.model.convolutional_encoder.ConvolutionalEncoder]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "ConvolutionalEncoder", "type": "Type[gluonnlp.model.convolutional_encoder.ConvolutionalEncoder]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 10, "nodeName": "output", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "ConvolutionalEncoder", "type": "Type[gluonnlp.model.convolutional_encoder.ConvolutionalEncoder]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "model", "type": "module"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "nd", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "model", "type": "module"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "model", "type": "module"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "nd", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "model", "type": "module"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "nd", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "nd", "type": "Any"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "nd", "type": "Any"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "array", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "nd", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "nd", "type": "Any"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "nd", "type": "Any"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "mx", "type": "Any"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "nd", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "mx", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "mx", "type": "Any"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "mx", "type": "Any"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "mx", "type": "Any"}]