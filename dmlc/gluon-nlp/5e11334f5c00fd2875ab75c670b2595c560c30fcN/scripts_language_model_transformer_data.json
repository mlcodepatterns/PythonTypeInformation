[{"lineNumber": 28, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "_spiece_prefix", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_sentencepiece_path", "type": "str"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "sentencepiece_path", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_lower", "type": "bool"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "lower", "type": "bool"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_remove_space", "type": "bool"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "remove_space", "type": "bool"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_keep_accents", "type": "bool"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "keep_accents", "type": "bool"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_sentencepiece", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "_remove_space", "type": "bool"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "outputs", "type": "str"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "_lower", "type": "bool"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "pieces", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "new_pieces", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "piece", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "pieces", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "new_pieces", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "outputs", "type": "str"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "outputs", "type": "str"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "sample", "type": "str"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "_keep_accents", "type": "bool"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "outputs", "type": "str"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "outputs", "type": "str"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "outputs", "type": "str"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "_sentencepiece", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "_sentencepiece", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "_sentencepiece", "type": "Any"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "outputs", "type": "str"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "normalize", "type": "Callable[[str, str], str]"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "outputs", "type": "str"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "SentencepieceTokenizer", "type": "Any"}, {"lineNumber": 94, "col_offset": 66, "nodeName": "_sentencepiece_path", "type": "str"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "cur_pieces", "type": "Any"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "unicodedata", "type": "module"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "c", "type": "str"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "outputs", "type": "str"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 94, "col_offset": 66, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 99, "col_offset": 55, "nodeName": "isdigit", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "_sentencepiece", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "cur_pieces", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "piece", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "outputs", "type": "str"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "c", "type": "str"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "outputs", "type": "str"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "piece", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "piece", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 100, "col_offset": 49, "nodeName": "replace", "type": "Any"}, {"lineNumber": 100, "col_offset": 68, "nodeName": "_spiece_prefix", "type": "str"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "_spiece_prefix", "type": "str"}, {"lineNumber": 101, "col_offset": 75, "nodeName": "_spiece_prefix", "type": "str"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "cur_pieces", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "cur_pieces", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "piece", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "new_pieces", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "new_pieces", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 99, "col_offset": 55, "nodeName": "piece", "type": "Any"}, {"lineNumber": 100, "col_offset": 68, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "piece", "type": "Any"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 101, "col_offset": 75, "nodeName": "self", "type": "XLNetTokenizer"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "cur_pieces", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "cur_pieces", "type": "Any"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "sample", "type": "str"}, {"lineNumber": 89, "col_offset": 57, "nodeName": "combining", "type": "Callable[[str], int]"}, {"lineNumber": 89, "col_offset": 79, "nodeName": "c", "type": "str"}, {"lineNumber": 100, "col_offset": 49, "nodeName": "piece", "type": "Any"}, {"lineNumber": 101, "col_offset": 55, "nodeName": "cur_pieces", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "cur_pieces", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "cur_pieces", "type": "Any"}, {"lineNumber": 89, "col_offset": 57, "nodeName": "unicodedata", "type": "module"}]