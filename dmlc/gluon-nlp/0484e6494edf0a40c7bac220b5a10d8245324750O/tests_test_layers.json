[{"lineNumber": 18, "col_offset": 0, "nodeName": "test_multi_head_dense", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "test_sinusoidal_positional_embedding", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "test_positional_embedding", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "test_get_activation", "type": "Callable[[], Any]"}, {"lineNumber": 253, "col_offset": 0, "nodeName": "test_get_norm_layer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "set_np", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "parallel_num", "type": "Union[int, Tuple[int, int], Tuple[int, int, int]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "units", "type": "int"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "pos_embed", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "pos_embed", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "embed", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "estimated_param_num", "type": "int"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "target", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "embed_layer", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "layer_with_shared_proj", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "layer_with_shared_embed", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "layer_with_shared_proj_embed", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "target", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "embed_weights", "type": "Dict[int, Any]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "embed_grads", "type": "Dict[int, Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "proj_weights", "type": "Dict[int, Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "proj_grads", "type": "Dict[int, Any]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "embed", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "relative_positions1", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "relative_positions2", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "relative_positions", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "buckets", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 246, "col_offset": 7, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "out_of_bound_cnt", "type": "Any"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "npx", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "in_data", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "out_data", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "weight_data", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "bias_data", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "gt_data", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "gt_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "gt_data", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "half_dim", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "emb", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "emb", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "emb", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "emb", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "emb", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "PositionalEmbedding", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "_embed", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "SinusoidalPositionalEmbedding", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "PositionalEmbedding", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "_embed", "type": "Any"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "LearnedPositionalEmbedding", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "act", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "AdaptiveEmbedding", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 97, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "cutoffs", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 7, "nodeName": "div_val", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "total_param_num", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "estimated_param_num", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "total_param_num", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "total_param_num", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "estimated_param_num", "type": "Any"}, {"lineNumber": 109, "col_offset": 10, "nodeName": "embed", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "waitall", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "ProjectedAdaptiveLogSoftmaxWithLoss", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "normal", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "randint", "type": "Any"}, {"lineNumber": 132, "col_offset": 37, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 133, "col_offset": 10, "nodeName": "layer", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "target", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "waitall", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "AdaptiveEmbedding", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "ProjectedAdaptiveLogSoftmaxWithLoss", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "share_parameters", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "ProjectedAdaptiveLogSoftmaxWithLoss", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "share_parameters", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "ProjectedAdaptiveLogSoftmaxWithLoss", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "share_parameters", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "normal", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "randint", "type": "Any"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 50, "nodeName": "shape", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "BucketPositionalEmbedding", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "randint", "type": "Any"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "randint", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 238, "col_offset": 14, "nodeName": "relative_position_bucket", "type": "Any"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "mx", "type": "Any"}, {"lineNumber": 238, "col_offset": 43, "nodeName": "relative_positions", "type": "Any"}, {"lineNumber": 240, "col_offset": 10, "nodeName": "embed", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "relative_positions", "type": "Any"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "num_buckets", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "cnt", "type": "Any"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 255, "col_offset": 9, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "norm_layer", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "data_in", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "out_np", "type": "Any"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "mx", "type": "Any"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "MultiHeadDense", "type": "Any"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "num_heads", "type": "Union[int, Tuple[int, int], Tuple[int, int, int]]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "layer", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "in_data", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "num_heads", "type": "Tuple[Union[int, Tuple[int, int], Tuple[int, int, int]]]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "num_heads", "type": "Tuple[int, ...]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "moveaxis", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "gt_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "gt_data", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "out_data", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "units", "type": "int"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "exp", "type": "Any"}, {"lineNumber": 49, "col_offset": 68, "nodeName": "emb", "type": "Any"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "emb", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "pos_embed", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "in_data", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "gt_out", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "pos_embed", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "pos_embed", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "get_activation", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "act_type", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "act", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 91, "col_offset": 64, "nodeName": "embed_size", "type": "Any"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "units", "type": "Any"}, {"lineNumber": 92, "col_offset": 51, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 92, "col_offset": 68, "nodeName": "div_val", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "embed", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "embed", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "estimated_param_num", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "estimated_param_num", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "randint", "type": "Any"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "npx", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "units", "type": "Any"}, {"lineNumber": 126, "col_offset": 59, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 126, "col_offset": 79, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 127, "col_offset": 59, "nodeName": "embed_size", "type": "Any"}, {"lineNumber": 127, "col_offset": 80, "nodeName": "in_units", "type": "Any"}, {"lineNumber": 128, "col_offset": 56, "nodeName": "div_val", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "npx", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 138, "col_offset": 67, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "in_units", "type": "Any"}, {"lineNumber": 139, "col_offset": 63, "nodeName": "embed_size", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "div_val", "type": "Any"}, {"lineNumber": 142, "col_offset": 55, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 143, "col_offset": 52, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 144, "col_offset": 55, "nodeName": "embed_size", "type": "Any"}, {"lineNumber": 145, "col_offset": 53, "nodeName": "in_units", "type": "Any"}, {"lineNumber": 146, "col_offset": 52, "nodeName": "div_val", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "layer_with_shared_proj", "type": "Any"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 149, "col_offset": 55, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 150, "col_offset": 52, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 151, "col_offset": 55, "nodeName": "embed_size", "type": "Any"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "in_units", "type": "Any"}, {"lineNumber": 153, "col_offset": 52, "nodeName": "div_val", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "layer_with_shared_embed", "type": "Any"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 156, "col_offset": 55, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 157, "col_offset": 52, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "embed_size", "type": "Any"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "in_units", "type": "Any"}, {"lineNumber": 160, "col_offset": 52, "nodeName": "div_val", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "layer_with_shared_proj_embed", "type": "Any"}, {"lineNumber": 161, "col_offset": 50, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "embed_layer", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "embed_layer", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "layer_with_shared_proj", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "layer_with_shared_proj", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "layer_with_shared_embed", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "layer_with_shared_embed", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "layer_with_shared_proj_embed", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "layer_with_shared_proj_embed", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "record", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 176, "col_offset": 50, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 232, "col_offset": 44, "nodeName": "units", "type": "Any"}, {"lineNumber": 232, "col_offset": 65, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 233, "col_offset": 50, "nodeName": "num_buckets", "type": "Any"}, {"lineNumber": 233, "col_offset": 76, "nodeName": "max_distance", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "embed", "type": "Any"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 235, "col_offset": 79, "nodeName": "int32", "type": "Any"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 236, "col_offset": 73, "nodeName": "int32", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "np", "type": "Any"}, {"lineNumber": 237, "col_offset": 44, "nodeName": "relative_positions1", "type": "Any"}, {"lineNumber": 237, "col_offset": 65, "nodeName": "relative_positions2", "type": "Any"}, {"lineNumber": 238, "col_offset": 77, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 239, "col_offset": 51, "nodeName": "num_buckets", "type": "Any"}, {"lineNumber": 239, "col_offset": 77, "nodeName": "max_distance", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "cnt", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 249, "col_offset": 7, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "get_norm_layer", "type": "Any"}, {"lineNumber": 258, "col_offset": 14, "nodeName": "HybridSequential", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "norm_layer", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "normal", "type": "Any"}, {"lineNumber": 265, "col_offset": 14, "nodeName": "net", "type": "Any"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "data_in", "type": "Any"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "num_heads", "type": "Union[int, Tuple[int, int], Tuple[int, int, int]]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "num_heads", "type": "Union[int, Tuple[int, int], Tuple[int, int, int]]"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "num_heads", "type": "Union[int, Tuple[int, int], Tuple[int, int, int]]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "out", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "gt_data", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "_verify", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "parallel_num", "type": "Union[int, Tuple[int, int], Tuple[int, int, int]]"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "hybridize", "type": "bool"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "log", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "half_dim", "type": "int"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "units", "type": "int"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "SinusoidalPositionalEmbedding", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "array", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "pos_embed", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "in_data", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "_gt_sinusoidal_embedding", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "gt_out", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "act", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "normal", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 102, "col_offset": 68, "nodeName": "units", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "embed_size", "type": "Any"}, {"lineNumber": 105, "col_offset": 56, "nodeName": "embed_size", "type": "Any"}, {"lineNumber": 105, "col_offset": 69, "nodeName": "units", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "embed_layer", "type": "Any"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "embed_layer", "type": "Any"}, {"lineNumber": 161, "col_offset": 50, "nodeName": "embed_layer", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "np", "type": "Any"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "embed_weights", "type": "Dict[int, Any]"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "embed_grads", "type": "Dict[int, Any]"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "k", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "k", "type": "Any"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 205, "col_offset": 42, "nodeName": "k", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 216, "col_offset": 42, "nodeName": "k", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "np", "type": "Any"}, {"lineNumber": 235, "col_offset": 79, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "np", "type": "Any"}, {"lineNumber": 236, "col_offset": 73, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "mx", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "buckets", "type": "Any"}, {"lineNumber": 249, "col_offset": 7, "nodeName": "out_of_bound_cnt", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 256, "col_offset": 50, "nodeName": "normalization", "type": "Any"}, {"lineNumber": 258, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "out", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "layer", "type": "Any"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "mx", "type": "Any"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 26, "col_offset": 44, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "num_heads", "type": "Union[Tuple[int, ...], Tuple[Union[int, Tuple[int, int], Tuple[int, int, int]]]]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 34, "col_offset": 58, "nodeName": "bias_data", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "prod", "type": "Any"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "num_heads", "type": "Union[Tuple[int, ...], Tuple[Union[int, Tuple[int, int], Tuple[int, int, int]]]]"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "num_heads", "type": "Union[Tuple[int, ...], Tuple[Union[int, Tuple[int, int], Tuple[int, int, int]]]]"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "arange", "type": "Any"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "half_dim", "type": "int"}, {"lineNumber": 48, "col_offset": 62, "nodeName": "emb", "type": "Any"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "astype", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "sin", "type": "Any"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "emb", "type": "Any"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "cos", "type": "Any"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "emb", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "emb", "type": "Any"}, {"lineNumber": 57, "col_offset": 60, "nodeName": "units", "type": "int"}, {"lineNumber": 57, "col_offset": 73, "nodeName": "float32", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "pos_embed", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "hybridize", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "np", "type": "Any"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "int32", "type": "Any"}, {"lineNumber": 63, "col_offset": 46, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 63, "col_offset": 71, "nodeName": "units", "type": "int"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 100, "col_offset": 49, "nodeName": "cutoffs", "type": "Union[List[Any], Any]"}, {"lineNumber": 100, "col_offset": 58, "nodeName": "cutoffs", "type": "Union[List[Any], Any]"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "prod", "type": "Any"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 103, "col_offset": 52, "nodeName": "p", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "prod", "type": "Any"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 106, "col_offset": 52, "nodeName": "p", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "mx", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "embed_layer", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "proj_weights", "type": "Dict[int, Any]"}, {"lineNumber": 189, "col_offset": 35, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "proj_grads", "type": "Dict[int, Any]"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "layer_with_shared_proj", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "raises", "type": "Any"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "k", "type": "Any"}, {"lineNumber": 198, "col_offset": 49, "nodeName": "k", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "layer_with_shared_embed", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 207, "col_offset": 51, "nodeName": "embed_weights", "type": "Dict[int, Any]"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 208, "col_offset": 51, "nodeName": "embed_grads", "type": "Dict[int, Any]"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "k", "type": "Any"}, {"lineNumber": 209, "col_offset": 49, "nodeName": "k", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "layer_with_shared_proj_embed", "type": "Any"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 218, "col_offset": 51, "nodeName": "embed_weights", "type": "Dict[int, Any]"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 219, "col_offset": 51, "nodeName": "embed_grads", "type": "Dict[int, Any]"}, {"lineNumber": 220, "col_offset": 30, "nodeName": "k", "type": "Any"}, {"lineNumber": 220, "col_offset": 49, "nodeName": "k", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "mx", "type": "Any"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "mx", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 258, "col_offset": 14, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "np", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "weight", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "bias", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "dot", "type": "Any"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "T", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "np_data", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 57, "col_offset": 73, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "init", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "pos_embed", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "mx", "type": "Any"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 46, "nodeName": "in_data", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "out", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "np", "type": "Any"}, {"lineNumber": 100, "col_offset": 69, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 101, "col_offset": 53, "nodeName": "embed_size", "type": "Any"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "embed_size", "type": "Any"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 103, "col_offset": 57, "nodeName": "values", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 106, "col_offset": 57, "nodeName": "values", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "embed_layer", "type": "Any"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "target", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 197, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 197, "col_offset": 55, "nodeName": "embed_weights", "type": "Dict[int, Any]"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 200, "col_offset": 51, "nodeName": "proj_weights", "type": "Dict[int, Any]"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 201, "col_offset": 51, "nodeName": "proj_grads", "type": "Dict[int, Any]"}, {"lineNumber": 207, "col_offset": 65, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 208, "col_offset": 63, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "raises", "type": "Any"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 218, "col_offset": 65, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 219, "col_offset": 63, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 222, "col_offset": 51, "nodeName": "proj_weights", "type": "Dict[int, Any]"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 223, "col_offset": 51, "nodeName": "proj_grads", "type": "Dict[int, Any]"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "np", "type": "Any"}, {"lineNumber": 248, "col_offset": 31, "nodeName": "relative_positions", "type": "Any"}, {"lineNumber": 248, "col_offset": 52, "nodeName": "max_distance", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "std", "type": "Any"}, {"lineNumber": 258, "col_offset": 14, "nodeName": "mx", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "mx", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "layer", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "layer", "type": "Any"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "weight_data", "type": "Any"}, {"lineNumber": 48, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 53, "col_offset": 68, "nodeName": "np_data", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "mx", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 101, "col_offset": 66, "nodeName": "div_val", "type": "Any"}, {"lineNumber": 101, "col_offset": 77, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 52, "nodeName": "div_val", "type": "Any"}, {"lineNumber": 102, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "embed_layer", "type": "Any"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "target", "type": "Any"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "grad", "type": "Any"}, {"lineNumber": 197, "col_offset": 69, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 200, "col_offset": 64, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 201, "col_offset": 62, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 212, "col_offset": 55, "nodeName": "proj_weights", "type": "Dict[int, Any]"}, {"lineNumber": 222, "col_offset": 64, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 223, "col_offset": 62, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "buckets", "type": "Any"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "norm", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "mx", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "buckets", "type": "Any"}, {"lineNumber": 247, "col_offset": 60, "nodeName": "num_buckets", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 57, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 106, "col_offset": 57, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "v", "type": "Any"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "v", "type": "Any"}, {"lineNumber": 189, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "grad", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 212, "col_offset": 68, "nodeName": "arr_id", "type": "int"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 244, "col_offset": 46, "nodeName": "std", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "buckets", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "in_data", "type": "Any"}, {"lineNumber": 103, "col_offset": 57, "nodeName": "embed", "type": "Any"}, {"lineNumber": 106, "col_offset": 57, "nodeName": "embed", "type": "Any"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 189, "col_offset": 35, "nodeName": "v", "type": "Any"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "np", "type": "Any"}, {"lineNumber": 247, "col_offset": 33, "nodeName": "relative_positions", "type": "Any"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 32, "nodeName": "v", "type": "Any"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "mx", "type": "Any"}, {"lineNumber": 244, "col_offset": 46, "nodeName": "out", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "relative_positions", "type": "Any"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "max_distance", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "v", "type": "Any"}, {"lineNumber": 244, "col_offset": 50, "nodeName": "buckets", "type": "Any"}, {"lineNumber": 244, "col_offset": 61, "nodeName": "i", "type": "int"}]