[{"lineNumber": 30, "col_offset": 0, "nodeName": "_list_bcast_where", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "_get_cell_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "_nested_sequence_last", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "Block", "type": "Any"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "Block", "type": "Any"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "cell_type", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "cell_type", "type": "Any"}, {"lineNumber": 89, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "attention_cell", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "attention_cell", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 134, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "F", "type": "Any"}, {"lineNumber": 172, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 217, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 239, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "cell_type", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "LSTMCell", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "attention_cell", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "attention_cell", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "AttentionCell", "type": "Type[gluonnlp.model.attention_cell.AttentionCell]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "attention_cell", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "Symbol", "type": "Any"}, {"lineNumber": 134, "col_offset": 43, "nodeName": "NDArray", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "sym", "type": "Any"}, {"lineNumber": 135, "col_offset": 62, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "SequenceLast", "type": "Any"}, {"lineNumber": 139, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 169, "col_offset": 52, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 169, "col_offset": 60, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 169, "col_offset": 74, "nodeName": "states", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 236, "col_offset": 52, "nodeName": "step_input", "type": "Any"}, {"lineNumber": 236, "col_offset": 64, "nodeName": "states", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "new_val", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "old_val", "type": "Any"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "new_val_l", "type": "Any"}, {"lineNumber": 45, "col_offset": 51, "nodeName": "old_val_l", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "cell_type", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "GRUCell", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "DotProductAttentionCell", "type": "Type[gluonnlp.model.attention_cell.DotProductAttentionCell]"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "attention_cell", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "sym", "type": "Any"}, {"lineNumber": 134, "col_offset": 43, "nodeName": "nd", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 135, "col_offset": 42, "nodeName": "Symbol", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 135, "col_offset": 62, "nodeName": "mx", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "F", "type": "Any"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "stack", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "cell_type", "type": "Any"}, {"lineNumber": 91, "col_offset": 49, "nodeName": "units", "type": "Any"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 92, "col_offset": 70, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "DotProductAttentionCell", "type": "Type[gluonnlp.model.attention_cell.DotProductAttentionCell]"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "attention_cell", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "mx", "type": "Any"}, {"lineNumber": 134, "col_offset": 43, "nodeName": "mx", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 135, "col_offset": 42, "nodeName": "sym", "type": "Any"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "F", "type": "Any"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "Seq2SeqEncoder", "type": "Type[Seq2SeqEncoder]"}, {"lineNumber": 169, "col_offset": 37, "nodeName": "self", "type": "Seq2SeqEncoder"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "Seq2SeqDecoder", "type": "Type[Seq2SeqDecoder]"}, {"lineNumber": 236, "col_offset": 37, "nodeName": "self", "type": "Seq2SeqDecoder"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "RNNCell", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "cell_type", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "units", "type": "Any"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 95, "col_offset": 70, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "DotProductAttentionCell", "type": "Type[gluonnlp.model.attention_cell.DotProductAttentionCell]"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "attention_cell", "type": "Any"}, {"lineNumber": 135, "col_offset": 42, "nodeName": "mx", "type": "Any"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "_nested_sequence_last", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 71, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "RNNCell", "type": "Any"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "units", "type": "Any"}, {"lineNumber": 98, "col_offset": 52, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 98, "col_offset": 70, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "DotProductAttentionCell", "type": "Type[gluonnlp.model.attention_cell.DotProductAttentionCell]"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "attention_cell", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 100, "col_offset": 49, "nodeName": "units", "type": "Any"}, {"lineNumber": 100, "col_offset": 79, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 101, "col_offset": 51, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "MLPAttentionCell", "type": "Type[gluonnlp.model.attention_cell.MLPAttentionCell]"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "attention_cell", "type": "Any"}, {"lineNumber": 142, "col_offset": 46, "nodeName": "ele", "type": "Any"}, {"lineNumber": 142, "col_offset": 57, "nodeName": "ele", "type": "Any"}, {"lineNumber": 142, "col_offset": 64, "nodeName": "data", "type": "Any"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "units", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "MLPAttentionCell", "type": "Type[gluonnlp.model.attention_cell.MLPAttentionCell]"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "attention_cell", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "base_cell", "type": "gluonnlp.model.attention_cell.DotProductAttentionCell"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 142, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "units", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "DotProductAttentionCell", "type": "Type[gluonnlp.model.attention_cell.DotProductAttentionCell]"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "MultiHeadAttentionCell", "type": "Type[gluonnlp.model.attention_cell.MultiHeadAttentionCell]"}, {"lineNumber": 107, "col_offset": 55, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 107, "col_offset": 71, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "base_cell", "type": "gluonnlp.model.attention_cell.DotProductAttentionCell"}, {"lineNumber": 108, "col_offset": 75, "nodeName": "units", "type": "Any"}, {"lineNumber": 108, "col_offset": 91, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 109, "col_offset": 52, "nodeName": "units", "type": "Any"}, {"lineNumber": 109, "col_offset": 71, "nodeName": "units", "type": "Any"}, {"lineNumber": 109, "col_offset": 88, "nodeName": "num_heads", "type": "Any"}]