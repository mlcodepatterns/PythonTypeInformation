[{"lineNumber": 33, "col_offset": 0, "nodeName": "test_clip_sequence", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "test_pad_sequence", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "test_spacy_tokenizer", "type": "Callable[[], Any]"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "test_sentencepiece_tokenizer", "type": "Callable[[], Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "test_sentencepiece_tokenizer_subword_regularization", "type": "Callable[[], Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "length", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "clip", "type": "bool"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "url_format", "type": "str"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "url_format", "type": "str"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "clip_seq", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "length", "type": "int"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "SacreMosesTokenizer", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "ret", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "SpacyTokenizer", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "ret", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "SacreMosesDetokenizer", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "ret", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "download", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "SentencepieceTokenizer", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "SentencepieceDetokenizer", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "detext", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "ret", "type": "Any"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "text", "type": "str"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "detext", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "download", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "SentencepieceTokenizer", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "SentencepieceDetokenizer", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "detext", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "text", "type": "str"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "detext", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "ClipSequence", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "ret1", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "ret2", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "ret3", "type": "Any"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "length", "type": "int"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "clip", "type": "bool"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "pad_width", "type": "List[Union[Tuple[int, Any], Tuple[int, int]]]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "pad_val", "type": "float"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "text", "type": "str"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "text", "type": "str"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "t", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "text", "type": "List[str]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "filename", "type": "str"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "join", "type": "Callable"}, {"lineNumber": 120, "col_offset": 71, "nodeName": "filename", "type": "str"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "t", "type": "Any"}, {"lineNumber": 121, "col_offset": 45, "nodeName": "join", "type": "Callable"}, {"lineNumber": 121, "col_offset": 75, "nodeName": "filename", "type": "str"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "text", "type": "str"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "ret", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "filename", "type": "str"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "join", "type": "Callable"}, {"lineNumber": 139, "col_offset": 71, "nodeName": "filename", "type": "str"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "t", "type": "Any"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "join", "type": "Callable"}, {"lineNumber": 141, "col_offset": 75, "nodeName": "filename", "type": "str"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "t", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "length", "type": "int"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "clip_seq", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "ret2", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "clip_seq", "type": "Any"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "ret3", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "pad", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "pad_seq", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "url_format", "type": "str"}, {"lineNumber": 119, "col_offset": 47, "nodeName": "join", "type": "Callable"}, {"lineNumber": 119, "col_offset": 77, "nodeName": "filename", "type": "str"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "path", "type": "module"}, {"lineNumber": 121, "col_offset": 45, "nodeName": "path", "type": "module"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "t", "type": "Any"}, {"lineNumber": 130, "col_offset": 46, "nodeName": "ret", "type": "Any"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "url_format", "type": "str"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "join", "type": "Callable"}, {"lineNumber": 138, "col_offset": 77, "nodeName": "filename", "type": "str"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "path", "type": "module"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "path", "type": "module"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "text", "type": "str"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "_", "type": "int"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "ret", "type": "Any"}, {"lineNumber": 151, "col_offset": 48, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 60, "nodeName": "t", "type": "Any"}, {"lineNumber": 151, "col_offset": 65, "nodeName": "ret", "type": "Any"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "detext", "type": "Any"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 37, "col_offset": 47, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "ret1", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "min", "type": "Callable"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 39, "col_offset": 48, "nodeName": "length", "type": "int"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "ret1", "type": "Any"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 59, "nodeName": "pad_width", "type": "List[Union[Tuple[int, Any], Tuple[int, int]]]"}, {"lineNumber": 56, "col_offset": 86, "nodeName": "pad_val", "type": "float"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "PadSequence", "type": "Any"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "additional_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 119, "col_offset": 47, "nodeName": "path", "type": "module"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "os", "type": "module"}, {"lineNumber": 121, "col_offset": 45, "nodeName": "os", "type": "module"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "path", "type": "module"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "os", "type": "module"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "os", "type": "module"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 49, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "detokenizer", "type": "Any"}, {"lineNumber": 152, "col_offset": 58, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "length", "type": "int"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "clip_seq", "type": "Any"}, {"lineNumber": 42, "col_offset": 43, "nodeName": "length", "type": "int"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "length", "type": "int"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "length", "type": "int"}, {"lineNumber": 55, "col_offset": 68, "nodeName": "_", "type": "int"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "t", "type": "Any"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "length", "type": "int"}, {"lineNumber": 61, "col_offset": 60, "nodeName": "clip", "type": "bool"}, {"lineNumber": 61, "col_offset": 74, "nodeName": "pad_val", "type": "float"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "gt_npy", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "ret_npy", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "ret_mx", "type": "Any"}, {"lineNumber": 119, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 150, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 59, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 64, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 68, "nodeName": "reg_ret", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "length", "type": "int"}, {"lineNumber": 55, "col_offset": 73, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "np_gt", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "length", "type": "int"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "clip", "type": "bool"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "pad_val", "type": "float"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "pad_seq", "type": "Any"}, {"lineNumber": 66, "col_offset": 42, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "ret_npy", "type": "Any"}, {"lineNumber": 68, "col_offset": 49, "nodeName": "gt_npy", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "ret_mx", "type": "Any"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "gt_npy", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "ret_l", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "nd", "type": "Any"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 55, "col_offset": 79, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "random", "type": "Any"}, {"lineNumber": 64, "col_offset": 74, "nodeName": "additional_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "additional_shape", "type": "Union[Tuple[()], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "ret_l", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 51, "nodeName": "gt_npy", "type": "Any"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "mx", "type": "Any"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 55, "col_offset": 79, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 59, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "pad_seq", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "pad_seq", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "array", "type": "Any"}, {"lineNumber": 67, "col_offset": 53, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 71, "col_offset": 53, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "nd", "type": "Any"}, {"lineNumber": 71, "col_offset": 53, "nodeName": "dat_npy", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "mx", "type": "Any"}]