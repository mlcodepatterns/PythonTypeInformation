[{"lineNumber": 6, "col_offset": 0, "nodeName": "base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "albert_base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "albert_large_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "albert_xlarge_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "albert_xxlarge_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "electra_base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "electra_large_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "electra_small_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "mobilebert_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "roberta_large_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "uncased_bert_base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 116, "col_offset": 0, "nodeName": "uncased_bert_large_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 124, "col_offset": 0, "nodeName": "gluon_en_cased_bert_base_v1_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "gen_command", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 7, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "model_name", "type": "str"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "version", "type": "float"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "num_accumulated", "type": "int"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "epochs", "type": "int"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "lr", "type": "float"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "warmup_ratio", "type": "float"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "wd", "type": "float"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "max_grad_norm", "type": "float"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "max_seq_length", "type": "int"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "layerwise_decay", "type": "int"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "dtype", "type": "str"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "model_name", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "num_accumulated", "type": "int"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "model_name", "type": "str"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "num_accumulated", "type": "int"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "max_grad_norm", "type": "float"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "model_name", "type": "str"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "model_name", "type": "str"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "num_accumulated", "type": "int"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "lr", "type": "float"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "epochs", "type": "int"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "layerwise_decay", "type": "float"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "wd", "type": "int"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "model_name", "type": "str"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "num_accumulated", "type": "int"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "lr", "type": "float"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "max_grad_norm", "type": "int"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "layerwise_decay", "type": "float"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "model_name", "type": "str"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "num_accumulated", "type": "int"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "lr", "type": "float"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "epochs", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "layerwise_decay", "type": "float"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "model_name", "type": "str"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "num_accumulated", "type": "int"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "lr", "type": "float"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "epochs", "type": "int"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "max_seq_length", "type": "int"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "model_name", "type": "str"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "num_accumulated", "type": "int"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "epochs", "type": "int"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "lr", "type": "float"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "warmup_ratio", "type": "float"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "wd", "type": "float"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "model_name", "type": "str"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "num_accumulated", "type": "int"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "lr", "type": "float"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "model_name", "type": "str"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "num_accumulated", "type": "int"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "model_name", "type": "str"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 143, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 7, "col_offset": 10, "nodeName": "CfgNode", "type": "Any"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "albert_xlarge_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "electra_base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 74, "col_offset": 10, "nodeName": "electra_base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 117, "col_offset": 10, "nodeName": "uncased_bert_base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "uncased_bert_base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "in_f", "type": "TextIO"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "albert_base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "albert_large_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 56, "nodeName": "albert_xlarge_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 75, "nodeName": "albert_xxlarge_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "electra_base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "electra_large_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 58, "nodeName": "electra_small_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 77, "nodeName": "mobilebert_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "roberta_large_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "uncased_bert_base_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 63, "nodeName": "uncased_bert_large_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "gluon_en_cased_bert_base_v1_cfg", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "prefix", "type": "str"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 136, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "template_path", "type": "str"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "out_f", "type": "TextIO"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "dat", "type": "str"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "updated_dat", "type": "str"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "__name__", "type": "str"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "gen_command", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "out_path", "type": "str"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "read", "type": "Callable"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "replace_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 60, "nodeName": "dat", "type": "str"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "updated_dat", "type": "str"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "cfg_func", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "cfg_func", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "in_f", "type": "TextIO"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "re", "type": "module"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "out_f", "type": "TextIO"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "groups", "type": "Any"}, {"lineNumber": 148, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "match", "type": "Any"}]