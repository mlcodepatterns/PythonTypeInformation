[{"lineNumber": 26, "col_offset": 0, "nodeName": "test_conv_encoder_nonhighway_forward", "type": "Callable[[], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "test_conv_encoder_nohighway_forward_largeinputs", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "test_conv_encoder_highway_forward", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "test_conv_encoder_highway_default_forward", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "ConvolutionalEncoder", "type": "Type[gluonnlp.model.convolutional_encoder.ConvolutionalEncoder]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "ConvolutionalEncoder", "type": "Type[gluonnlp.model.convolutional_encoder.ConvolutionalEncoder]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "ConvolutionalEncoder", "type": "Type[gluonnlp.model.convolutional_encoder.ConvolutionalEncoder]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "output", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "ConvolutionalEncoder", "type": "Type[gluonnlp.model.convolutional_encoder.ConvolutionalEncoder]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 10, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "nd", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "nd", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "encoder", "type": "gluonnlp.model.convolutional_encoder.ConvolutionalEncoder"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "nd", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "nd", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "array", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "mx", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "nd", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "mx", "type": "Any"}]