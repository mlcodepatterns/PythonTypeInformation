[{"lineNumber": 30, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "vocab_path", "type": "Any"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "tmp_file_path", "type": "Any"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "gluon_vocab_path", "type": "Any"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "tf_checkpoint_file", "type": "Any"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "tf_tensors", "type": "Any"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "tf_names", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "tf_names", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "mx_tensors", "type": "Dict[Any, Any]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "source_name", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "tf_names", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "reserved_token_idx_map", "type": "Any"}, {"lineNumber": 123, "col_offset": 0, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "ones", "type": "Any"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "out", "type": "Any"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "params", "type": "Any"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "loaded_params", "type": "Dict[Any, bool]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "mx_tensors", "type": "Dict[Any, Any]"}, {"lineNumber": 176, "col_offset": 0, "nodeName": "gluon_param_path", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "setLevel", "type": "Callable[[Union[int, str, unicode]], None]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "tf_checkpoint_dir", "type": "Any"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 45, "col_offset": 7, "nodeName": "reserved_token_idx_map", "type": "Any"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "convert_vocab", "type": "Any"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "vocab_path", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "out_dir", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "f", "type": "file"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "hash_full", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "hash_short", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "get_hash", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "tmp_file_path", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "out_dir", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "f", "type": "file"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "tf_checkpoint_dir", "type": "Any"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "tf_checkpoint_file", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "read_tf_checkpoint", "type": "Any"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "tf_checkpoint_file", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "NAME_MAP", "type": "List[Tuple[str, str]]"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "target", "type": "Any"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "mx_tensors", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "mx_tensors", "type": "Dict[Any, Any]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "mx_tensors", "type": "Dict[Any, Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "source_idx", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "dst_idx", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "source", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "dst", "type": "Any"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "dst", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "source", "type": "Any"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "bert_hparams", "type": "Any"}, {"lineNumber": 126, "col_offset": 10, "nodeName": "BERTEncoder", "type": "Any"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "BERTModel", "type": "Any"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 146, "col_offset": 0, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "ones", "type": "Any"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "bert", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "_collect_params_with_prefix", "type": "Any"}, {"lineNumber": 167, "col_offset": 0, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 0, "nodeName": "save_parameters", "type": "Any"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "tmp_file_path", "type": "Any"}, {"lineNumber": 175, "col_offset": 0, "nodeName": "hash_full", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "hash_short", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "get_hash", "type": "Any"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "tmp_file_path", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "out_dir", "type": "Any"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 45, "nodeName": "gluon_param_path", "type": "Any"}, {"lineNumber": 177, "col_offset": 63, "nodeName": "hash_full", "type": "Any"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "save_parameters", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "gluon_param_path", "type": "Any"}, {"lineNumber": 179, "col_offset": 0, "nodeName": "waitall", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "argparse", "type": "module"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "debug", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "DEBUG", "type": "int"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "INFO", "type": "int"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 49, "col_offset": 5, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 49, "col_offset": 10, "nodeName": "tmp_file_path", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "hash_short", "type": "Any"}, {"lineNumber": 53, "col_offset": 5, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "gluon_vocab_path", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 54, "nodeName": "gluon_vocab_path", "type": "Any"}, {"lineNumber": 55, "col_offset": 72, "nodeName": "hash_full", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "keys", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "source", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "source_t", "type": "Any"}, {"lineNumber": 96, "col_offset": 48, "nodeName": "T", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "target", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "source", "type": "Any"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "source_name", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "old", "type": "str"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "new", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "source_name", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "source_t", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "mx_tensors", "type": "Dict[Any, Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 115, "col_offset": 10, "nodeName": "copy", "type": "Any"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 118, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "tf_tensors", "type": "Any"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "mx_tensors", "type": "Dict[Any, Any]"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 146, "col_offset": 0, "nodeName": "bert", "type": "Any"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "nd", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "array", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "bert", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 167, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 168, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "loaded_params", "type": "Dict[Any, bool]"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "mx_tensors", "type": "Dict[Any, Any]"}, {"lineNumber": 170, "col_offset": 7, "nodeName": "name", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "loaded_params", "type": "Dict[Any, bool]"}, {"lineNumber": 174, "col_offset": 0, "nodeName": "bert", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "hash_short", "type": "Any"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "bert", "type": "Any"}, {"lineNumber": 179, "col_offset": 0, "nodeName": "nd", "type": "Any"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "logging", "type": "module"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "logging", "type": "module"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "f", "type": "file"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "to_json", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "f", "type": "file"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "to_json", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "tf_tensors", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "tf_tensors", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "replace", "type": "Any"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "old", "type": "str"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "new", "type": "str"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "shape", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 104, "col_offset": 68, "nodeName": "target", "type": "Any"}, {"lineNumber": 104, "col_offset": 82, "nodeName": "source_t", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 59, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 105, "col_offset": 72, "nodeName": "shape", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "target", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "predefined_args", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "mx", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "nd", "type": "Any"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "array", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "set_data", "type": "Any"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "arr", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "loaded_params", "type": "Dict[Any, bool]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 179, "col_offset": 0, "nodeName": "mx", "type": "Any"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "tf_tensors", "type": "Any"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "source_name", "type": "Any"}, {"lineNumber": 96, "col_offset": 48, "nodeName": "tf_tensors", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "target_name", "type": "Any"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "source_t", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "source", "type": "Any"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 104, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 105, "col_offset": 72, "nodeName": "target", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 115, "col_offset": 10, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "source_idx", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "dst_idx", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "init", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "mx", "type": "Any"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "nd", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "mx_tensors", "type": "Dict[Any, Any]"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "mx_tensors", "type": "Dict[Any, Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 96, "col_offset": 59, "nodeName": "source_name", "type": "Any"}, {"lineNumber": 104, "col_offset": 46, "nodeName": "source", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "source_idx", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "dst_idx", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "mx", "type": "Any"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "mx", "type": "Any"}, {"lineNumber": 156, "col_offset": 37, "nodeName": "name", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 68, "nodeName": "name", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 165, "col_offset": 51, "nodeName": "shape", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 165, "col_offset": 51, "nodeName": "arr", "type": "Any"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 165, "col_offset": 38, "nodeName": "name", "type": "Any"}]