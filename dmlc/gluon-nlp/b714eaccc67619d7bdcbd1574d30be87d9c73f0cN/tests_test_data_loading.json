[{"lineNumber": 16, "col_offset": 0, "nodeName": "prepare_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "prepare_bucket_sampler", "type": "Callable[..., Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "set_np", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "npx", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "NumpyDataset", "type": "Any"}, {"lineNumber": 21, "col_offset": 14, "nodeName": "transform", "type": "Any"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "FixedBucketSampler", "type": "Any"}, {"lineNumber": 22, "col_offset": 33, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "root", "type": "nothing"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "num_files", "type": "int"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "split_sampler", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "dataset_params", "type": "Dict[str, bool]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "sampler_params", "type": "Dict[str, int]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "all_data", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "num_dataset_workers", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "num_dataset_workers", "type": "int"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "mx", "type": "Any"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "filename", "type": "Any"}, {"lineNumber": 17, "col_offset": 50, "nodeName": "allow_pickle", "type": "Any"}, {"lineNumber": 21, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 23, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 24, "col_offset": 45, "nodeName": "num_buckets", "type": "Any"}, {"lineNumber": 26, "col_offset": 41, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "num_files", "type": "int"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "root", "type": "nothing"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "SplitSampler", "type": "Any"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "num_files", "type": "int"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "load", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "num_files", "type": "int"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "num_batch_workers", "type": "int"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "SplitSampler", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "num_batch_workers", "type": "int"}, {"lineNumber": 21, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 21, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "root", "type": "nothing"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "all_data", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "DatasetLoader", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "dataloader", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "DatasetLoader", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "dataloader", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 39, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "load", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "join", "type": "Callable"}, {"lineNumber": 52, "col_offset": 56, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "split_sampler", "type": "Any"}, {"lineNumber": 54, "col_offset": 54, "nodeName": "prepare_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 58, "nodeName": "dataset_params", "type": "Dict[str, bool]"}, {"lineNumber": 56, "col_offset": 60, "nodeName": "prepare_bucket_sampler", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 64, "nodeName": "sampler_params", "type": "Dict[str, int]"}, {"lineNumber": 58, "col_offset": 63, "nodeName": "num_dataset_workers", "type": "int"}, {"lineNumber": 59, "col_offset": 61, "nodeName": "num_batch_workers", "type": "int"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "join", "type": "Callable"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "data", "type": "Any"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "split_sampler", "type": "Any"}, {"lineNumber": 74, "col_offset": 54, "nodeName": "prepare_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 58, "nodeName": "dataset_params", "type": "Dict[str, bool]"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "prepare_bucket_sampler", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 64, "nodeName": "sampler_params", "type": "Dict[str, int]"}, {"lineNumber": 78, "col_offset": 63, "nodeName": "num_dataset_workers", "type": "int"}, {"lineNumber": 79, "col_offset": 61, "nodeName": "num_batch_workers", "type": "int"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "join", "type": "Callable"}, {"lineNumber": 49, "col_offset": 60, "nodeName": "data", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "path", "type": "module"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 63, "col_offset": 53, "nodeName": "all_data", "type": "Any"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "path", "type": "module"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "X", "type": "Any"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "path", "type": "module"}, {"lineNumber": 49, "col_offset": 66, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 49, "col_offset": 87, "nodeName": "i", "type": "int"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "os", "type": "module"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "os", "type": "module"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 63, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 63, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 62, "nodeName": "i", "type": "int"}]