[{"lineNumber": 8, "col_offset": 0, "nodeName": "test_pad", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "test_stack_batchify", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "test_pad_wrap_batchify", "type": "Callable[[], Any]"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "padded", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "batchify_fn", "type": "gluonnlp.data.batchify.Stack"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "ndim", "type": "int"}, {"lineNumber": 9, "col_offset": 13, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 10, "col_offset": 11, "nodeName": "padded", "type": "Any"}, {"lineNumber": 13, "col_offset": 18, "nodeName": "Stack", "type": "Type[gluonnlp.data.batchify.Stack]"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 14, "col_offset": 28, "nodeName": "int32", "type": "Any"}, {"lineNumber": 14, "col_offset": 38, "nodeName": "int64", "type": "Any"}, {"lineNumber": 14, "col_offset": 48, "nodeName": "float16", "type": "Any"}, {"lineNumber": 14, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 14, "col_offset": 72, "nodeName": "float64", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "dat", "type": "List[Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "batchify_out", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "npy_out", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "slices_data", "type": "List[slice]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "axis", "type": "int"}, {"lineNumber": 13, "col_offset": 18, "nodeName": "batchify", "type": "module"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 72, "nodeName": "np", "type": "module"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "dat", "type": "List[Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "batchify_out", "type": "Any"}, {"lineNumber": 18, "col_offset": 38, "nodeName": "npy_out", "type": "numpy.ndarray"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "original_arr", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "slices_data", "type": "List[slice]"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 27, "col_offset": 56, "nodeName": "original_arr", "type": "Any"}, {"lineNumber": 28, "col_offset": 42, "nodeName": "pad_length", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "slices_pad_val", "type": "List[slice]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "pad_val_in_arr", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "ndim", "type": "int"}, {"lineNumber": 9, "col_offset": 13, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 15, "col_offset": 55, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 15, "col_offset": 66, "nodeName": "_", "type": "int"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "batchify_out", "type": "Any"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "npy_out", "type": "numpy.ndarray"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "_", "type": "int"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "pad_axis", "type": "int"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "padded_arr", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "slices_pad_val", "type": "List[slice]"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "padded_arr", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "pad_val_in_arr", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "ndim", "type": "int"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "length_min", "type": "int"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "length_max", "type": "int"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "pad_val", "type": "int"}, {"lineNumber": 15, "col_offset": 71, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "batchify_fn", "type": "gluonnlp.data.batchify.Stack"}, {"lineNumber": 16, "col_offset": 35, "nodeName": "dat", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 44, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 25, "col_offset": 50, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "original_arr", "type": "Any"}, {"lineNumber": 26, "col_offset": 57, "nodeName": "axis", "type": "int"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "original_arr", "type": "Any"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "pad_axis", "type": "int"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 29, "col_offset": 46, "nodeName": "_", "type": "int"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "axis", "type": "int"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "astype", "type": "Any"}, {"lineNumber": 32, "col_offset": 92, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 9, "col_offset": 13, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "randint", "type": "Any"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "slices_data", "type": "List[slice]"}, {"lineNumber": 29, "col_offset": 51, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 29, "col_offset": 57, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "original_arr", "type": "Any"}, {"lineNumber": 30, "col_offset": 60, "nodeName": "pad_axis", "type": "int"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 31, "col_offset": 46, "nodeName": "slices_pad_val", "type": "List[slice]"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "int32", "type": "Any"}, {"lineNumber": 38, "col_offset": 54, "nodeName": "int64", "type": "Any"}, {"lineNumber": 38, "col_offset": 64, "nodeName": "float16", "type": "Any"}, {"lineNumber": 38, "col_offset": 76, "nodeName": "float32", "type": "Any"}, {"lineNumber": 38, "col_offset": 88, "nodeName": "float64", "type": "Any"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "shapes", "type": "List[List[Any]]"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "batchify_fn", "type": "gluonnlp.data.batchify.Pad"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "TOTAL_ELE_NUM", "type": "int"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "pad_index", "type": "List[int]"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 32, "col_offset": 76, "nodeName": "pad_val", "type": "int"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 76, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 88, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "Pad", "type": "Type[gluonnlp.data.batchify.Pad]"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "batchify_fn", "type": "gluonnlp.data.batchify.Pad"}, {"lineNumber": 46, "col_offset": 63, "nodeName": "random_data_npy", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "batch_data_use_mx", "type": "Any"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "valid_length_use_mx", "type": "Any"}, {"lineNumber": 47, "col_offset": 65, "nodeName": "batchify_fn", "type": "gluonnlp.data.batchify.Pad"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 50, "col_offset": 78, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 51, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 51, "col_offset": 82, "nodeName": "int32", "type": "Any"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "pad_length", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "j", "type": "int"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "pad_index", "type": "List[int]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "batchify_fn", "type": "List[gluonnlp.data.batchify.Pad]"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "j", "type": "int"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "batchify_fn", "type": "gluonnlp.data.batchify.Tuple"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "ret_use_npy", "type": "Tuple[Any, ...]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "ret_use_mx", "type": "Tuple[Any, ...]"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 32, "col_offset": 58, "nodeName": "pad_val_in_arr", "type": "Any"}, {"lineNumber": 40, "col_offset": 63, "nodeName": "_", "type": "int"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "shapes", "type": "List[List[Any]]"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "randint", "type": "Any"}, {"lineNumber": 42, "col_offset": 64, "nodeName": "length_min", "type": "int"}, {"lineNumber": 42, "col_offset": 76, "nodeName": "length_max", "type": "int"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "shapes", "type": "List[List[Any]]"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "batchify", "type": "module"}, {"lineNumber": 45, "col_offset": 56, "nodeName": "axis", "type": "int"}, {"lineNumber": 45, "col_offset": 70, "nodeName": "pad_val", "type": "int"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 48, "col_offset": 69, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 49, "col_offset": 71, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "batch_data_use_mx", "type": "Any"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 51, "col_offset": 53, "nodeName": "valid_length_use_mx", "type": "Any"}, {"lineNumber": 51, "col_offset": 82, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "max", "type": "Callable"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "_verify_padded_arr", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 82, "nodeName": "axis", "type": "int"}, {"lineNumber": 57, "col_offset": 88, "nodeName": "pad_val", "type": "int"}, {"lineNumber": 57, "col_offset": 97, "nodeName": "pad_length", "type": "Any"}, {"lineNumber": 57, "col_offset": 109, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "TOTAL_ELE_NUM", "type": "int"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "Tuple", "type": "Type[gluonnlp.data.batchify.Tuple]"}, {"lineNumber": 74, "col_offset": 57, "nodeName": "batchify_fn", "type": "List[gluonnlp.data.batchify.Pad]"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "batchify_fn", "type": "gluonnlp.data.batchify.Tuple"}, {"lineNumber": 75, "col_offset": 54, "nodeName": "random_data_npy", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "batchify_fn", "type": "gluonnlp.data.batchify.Tuple"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 77, "col_offset": 43, "nodeName": "TOTAL_ELE_NUM", "type": "int"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "j", "type": "int"}, {"lineNumber": 9, "col_offset": 13, "nodeName": "Pad", "type": "Type[gluonnlp.data.batchify.Pad]"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "_", "type": "int"}, {"lineNumber": 40, "col_offset": 68, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 40, "col_offset": 74, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "shapes", "type": "List[List[Any]]"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "axis", "type": "int"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "random", "type": "Any"}, {"lineNumber": 47, "col_offset": 78, "nodeName": "array", "type": "Any"}, {"lineNumber": 47, "col_offset": 90, "nodeName": "ele", "type": "Any"}, {"lineNumber": 47, "col_offset": 112, "nodeName": "ele", "type": "Any"}, {"lineNumber": 47, "col_offset": 119, "nodeName": "random_data_npy", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "batch_data_use_mx", "type": "Any"}, {"lineNumber": 48, "col_offset": 69, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "valid_length_use_mx", "type": "Any"}, {"lineNumber": 49, "col_offset": 71, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 57, "col_offset": 62, "nodeName": "random_data_npy", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 42, "nodeName": "_", "type": "int"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 67, "col_offset": 88, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "j", "type": "int"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "pad_index", "type": "List[int]"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "batchify", "type": "module"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "pad_index", "type": "List[int]"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "TOTAL_ELE_NUM", "type": "int"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "pad_length", "type": "Any"}, {"lineNumber": 9, "col_offset": 13, "nodeName": "batchify", "type": "module"}, {"lineNumber": 9, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 9, "col_offset": 56, "nodeName": "arange", "type": "Any"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "ndim", "type": "int"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 78, "nodeName": "nd", "type": "Any"}, {"lineNumber": 47, "col_offset": 101, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 55, "nodeName": "shapes", "type": "List[List[Any]]"}, {"lineNumber": 55, "col_offset": 65, "nodeName": "axis", "type": "int"}, {"lineNumber": 56, "col_offset": 45, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 61, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 70, "nodeName": "shapes", "type": "List[List[Any]]"}, {"lineNumber": 57, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 57, "col_offset": 78, "nodeName": "i", "type": "int"}, {"lineNumber": 61, "col_offset": 68, "nodeName": "_", "type": "int"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 62, "col_offset": 53, "nodeName": "TOTAL_ELE_NUM", "type": "int"}, {"lineNumber": 65, "col_offset": 57, "nodeName": "randint", "type": "Any"}, {"lineNumber": 65, "col_offset": 75, "nodeName": "length_min", "type": "int"}, {"lineNumber": 65, "col_offset": 87, "nodeName": "length_max", "type": "int"}, {"lineNumber": 67, "col_offset": 93, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 67, "col_offset": 99, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "append", "type": "Callable"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "append", "type": "Callable"}, {"lineNumber": 76, "col_offset": 54, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 76, "col_offset": 128, "nodeName": "ele", "type": "Tuple[Any, ...]"}, {"lineNumber": 76, "col_offset": 135, "nodeName": "random_data_npy", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 79, "col_offset": 70, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 79, "col_offset": 96, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 80, "col_offset": 70, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 80, "col_offset": 96, "nodeName": "int32", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 87, "col_offset": 67, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 87, "col_offset": 90, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "j", "type": "int"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "pad_index", "type": "List[int]"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "max", "type": "Callable"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "_verify_padded_arr", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 93, "nodeName": "axis", "type": "int"}, {"lineNumber": 98, "col_offset": 99, "nodeName": "pad_val", "type": "int"}, {"lineNumber": 98, "col_offset": 108, "nodeName": "pad_length", "type": "Any"}, {"lineNumber": 98, "col_offset": 120, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 9, "col_offset": 39, "nodeName": "nd", "type": "Any"}, {"lineNumber": 9, "col_offset": 56, "nodeName": "nd", "type": "Any"}, {"lineNumber": 47, "col_offset": 78, "nodeName": "mx", "type": "Any"}, {"lineNumber": 55, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 56, "col_offset": 51, "nodeName": "axis", "type": "int"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "_", "type": "int"}, {"lineNumber": 61, "col_offset": 73, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "axis", "type": "int"}, {"lineNumber": 65, "col_offset": 57, "nodeName": "random", "type": "Any"}, {"lineNumber": 67, "col_offset": 57, "nodeName": "j", "type": "int"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "batchify_fn", "type": "List[gluonnlp.data.batchify.Pad]"}, {"lineNumber": 71, "col_offset": 55, "nodeName": "Pad", "type": "Type[gluonnlp.data.batchify.Pad]"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "batchify_fn", "type": "List[gluonnlp.data.batchify.Pad]"}, {"lineNumber": 73, "col_offset": 55, "nodeName": "Stack", "type": "Type[gluonnlp.data.batchify.Stack]"}, {"lineNumber": 80, "col_offset": 96, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 82, "col_offset": 52, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 83, "col_offset": 52, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 85, "col_offset": 71, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 88, "col_offset": 78, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 96, "col_offset": 53, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 98, "col_offset": 55, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 9, "col_offset": 39, "nodeName": "mx", "type": "Any"}, {"lineNumber": 9, "col_offset": 56, "nodeName": "mx", "type": "Any"}, {"lineNumber": 61, "col_offset": 51, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 61, "col_offset": 57, "nodeName": "ndim", "type": "int"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "shapes", "type": "List[List[Any]]"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 65, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 62, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 67, "col_offset": 68, "nodeName": "TOTAL_ELE_NUM", "type": "int"}, {"lineNumber": 71, "col_offset": 55, "nodeName": "batchify", "type": "module"}, {"lineNumber": 71, "col_offset": 73, "nodeName": "axis", "type": "int"}, {"lineNumber": 71, "col_offset": 87, "nodeName": "pad_val", "type": "int"}, {"lineNumber": 73, "col_offset": 55, "nodeName": "batchify", "type": "module"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "array", "type": "Any"}, {"lineNumber": 76, "col_offset": 97, "nodeName": "i", "type": "int"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "ret_use_npy", "type": "Tuple[Any, ...]"}, {"lineNumber": 87, "col_offset": 67, "nodeName": "ret_use_mx", "type": "Tuple[Any, ...]"}, {"lineNumber": 92, "col_offset": 67, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 93, "col_offset": 67, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 97, "col_offset": 53, "nodeName": "shape", "type": "Any"}, {"lineNumber": 97, "col_offset": 76, "nodeName": "ele", "type": "Tuple[Any, ...]"}, {"lineNumber": 97, "col_offset": 83, "nodeName": "random_data_npy", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 98, "col_offset": 66, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 70, "nodeName": "random_data_npy", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 98, "col_offset": 89, "nodeName": "j", "type": "int"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "j", "type": "int"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "nd", "type": "Any"}, {"lineNumber": 76, "col_offset": 72, "nodeName": "ele", "type": "Tuple[Any, ...]"}, {"lineNumber": 76, "col_offset": 86, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 76, "col_offset": 102, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 76, "col_offset": 108, "nodeName": "TOTAL_ELE_NUM", "type": "int"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "ret_use_npy", "type": "Tuple[Any, ...]"}, {"lineNumber": 79, "col_offset": 70, "nodeName": "ret_use_mx", "type": "Tuple[Any, ...]"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "ret_use_npy", "type": "Tuple[Any, ...]"}, {"lineNumber": 80, "col_offset": 70, "nodeName": "ret_use_mx", "type": "Tuple[Any, ...]"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "ret_use_npy", "type": "Tuple[Any, ...]"}, {"lineNumber": 87, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 87, "col_offset": 78, "nodeName": "i", "type": "int"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "ret_use_npy", "type": "Tuple[Any, ...]"}, {"lineNumber": 88, "col_offset": 78, "nodeName": "ret_use_mx", "type": "Tuple[Any, ...]"}, {"lineNumber": 94, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 94, "col_offset": 80, "nodeName": "axis", "type": "int"}, {"lineNumber": 96, "col_offset": 53, "nodeName": "ret_use_npy", "type": "Tuple[Any, ...]"}, {"lineNumber": 97, "col_offset": 66, "nodeName": "axis", "type": "int"}, {"lineNumber": 98, "col_offset": 86, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "mx", "type": "Any"}, {"lineNumber": 76, "col_offset": 76, "nodeName": "i", "type": "int"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 79, "col_offset": 81, "nodeName": "i", "type": "int"}, {"lineNumber": 80, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 80, "col_offset": 81, "nodeName": "i", "type": "int"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "ret_use_npy", "type": "Tuple[Any, ...]"}, {"lineNumber": 82, "col_offset": 52, "nodeName": "ret_use_mx", "type": "Tuple[Any, ...]"}, {"lineNumber": 83, "col_offset": 52, "nodeName": "ret_use_npy", "type": "Tuple[Any, ...]"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "ret_use_mx", "type": "Tuple[Any, ...]"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 88, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 88, "col_offset": 89, "nodeName": "i", "type": "int"}, {"lineNumber": 94, "col_offset": 67, "nodeName": "shapes", "type": "List[List[Any]]"}, {"lineNumber": 94, "col_offset": 77, "nodeName": "i", "type": "int"}, {"lineNumber": 96, "col_offset": 65, "nodeName": "j", "type": "int"}, {"lineNumber": 97, "col_offset": 53, "nodeName": "ele", "type": "Tuple[Any, ...]"}, {"lineNumber": 81, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 82, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 83, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 84, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 92, "col_offset": 67, "nodeName": "ret_use_npy", "type": "Tuple[Any, ...]"}, {"lineNumber": 93, "col_offset": 67, "nodeName": "ret_use_npy", "type": "Tuple[Any, ...]"}, {"lineNumber": 94, "col_offset": 74, "nodeName": "j", "type": "int"}, {"lineNumber": 97, "col_offset": 57, "nodeName": "j", "type": "int"}, {"lineNumber": 92, "col_offset": 79, "nodeName": "j", "type": "int"}, {"lineNumber": 93, "col_offset": 79, "nodeName": "j", "type": "int"}]