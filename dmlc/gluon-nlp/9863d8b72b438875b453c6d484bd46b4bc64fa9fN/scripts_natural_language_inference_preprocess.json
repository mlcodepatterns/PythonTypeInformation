[{"lineNumber": 27, "col_offset": 0, "nodeName": "parse_args", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "read_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "examples", "type": "List[Tuple[Any, Any, str]]"}, {"lineNumber": 59, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "tree_str", "type": "str"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "leaves", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "fin", "type": "file"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "cols", "type": "Dict[str, str]"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "fout", "type": "file"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "examples", "type": "List[Tuple[Any, Any, str]]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "parse_args", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "input", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "fin", "type": "file"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "s1", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "label", "type": "str"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "output", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "s1", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "s2", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "l", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "nltk", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "csv", "type": "module"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "read_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "read_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "cols", "type": "Dict[str, str]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "label", "type": "str"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "cols", "type": "Dict[str, str]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "cols", "type": "Dict[str, str]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "fout", "type": "file"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 56, "col_offset": 73, "nodeName": "l", "type": "str"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "examples", "type": "List[Tuple[Any, Any, str]]"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "s1", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "s2", "type": "Any"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "label", "type": "str"}, {"lineNumber": 56, "col_offset": 45, "nodeName": "join", "type": "Callable"}, {"lineNumber": 56, "col_offset": 54, "nodeName": "s1", "type": "Any"}, {"lineNumber": 56, "col_offset": 59, "nodeName": "join", "type": "Callable"}, {"lineNumber": 56, "col_offset": 68, "nodeName": "s2", "type": "Any"}]