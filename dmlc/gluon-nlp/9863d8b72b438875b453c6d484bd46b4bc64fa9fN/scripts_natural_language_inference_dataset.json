[{"lineNumber": 33, "col_offset": 0, "nodeName": "read_dataset", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "build_vocab", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "prepare_data_loader", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "LABEL_TO_IDX", "type": "Dict[str, int]"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "examples", "type": "List[List[str]]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "batchify_fn", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "data_lengths", "type": "List[int]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "data_loader", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 7, "nodeName": "max_num_examples", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "examples", "type": "List[List[str]]"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "SimpleDataset", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "transform", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "count_tokens", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "Vocab", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "counter", "type": "Any"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "transform", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "FixedBucketSampler", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 38, "col_offset": 46, "nodeName": "path", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "line", "type": "str"}, {"lineNumber": 40, "col_offset": 7, "nodeName": "args", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "examples", "type": "List[List[str]]"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "data", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "data", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "w", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "btf", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "Pad", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "Pad", "type": "Any"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "Stack", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "max", "type": "Callable"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "d", "type": "Any"}, {"lineNumber": 70, "col_offset": 55, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 71, "col_offset": 56, "nodeName": "data_lengths", "type": "List[int]"}, {"lineNumber": 72, "col_offset": 59, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 75, "col_offset": 54, "nodeName": "batch_sampler", "type": "Any"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "batchify_fn", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 39, "col_offset": 53, "nodeName": "open", "type": "Callable"}, {"lineNumber": 39, "col_offset": 58, "nodeName": "path", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "max_num_examples", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 43, "col_offset": 77, "nodeName": "e", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 82, "nodeName": "examples", "type": "List[List[str]]"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "label", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "e", "type": "Any"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 55, "col_offset": 60, "nodeName": "s", "type": "Any"}, {"lineNumber": 55, "col_offset": 75, "nodeName": "w", "type": "Any"}, {"lineNumber": 55, "col_offset": 80, "nodeName": "s", "type": "Any"}, {"lineNumber": 65, "col_offset": 77, "nodeName": "label", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "btf", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "btf", "type": "Any"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "btf", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 72, "col_offset": 59, "nodeName": "args", "type": "Any"}, {"lineNumber": 73, "col_offset": 61, "nodeName": "test", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "e", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "e", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 53, "nodeName": "LABEL_TO_IDX", "type": "Dict[str, int]"}, {"lineNumber": 55, "col_offset": 65, "nodeName": "e", "type": "Any"}, {"lineNumber": 65, "col_offset": 55, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 65, "col_offset": 61, "nodeName": "s1", "type": "Any"}, {"lineNumber": 65, "col_offset": 66, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 65, "col_offset": 72, "nodeName": "s2", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "d", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "d", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "split", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "split", "type": "Any"}, {"lineNumber": 43, "col_offset": 66, "nodeName": "e", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "s1", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "s2", "type": "Any"}]