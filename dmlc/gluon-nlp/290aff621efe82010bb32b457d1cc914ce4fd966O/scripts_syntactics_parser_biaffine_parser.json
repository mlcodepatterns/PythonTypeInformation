[{"lineNumber": 31, "col_offset": 21, "nodeName": "Block", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "_vocab", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "word_embs", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "tag_embs", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "f_lstm", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "b_lstm", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "dropout_lstm_input", "type": "Any"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "dropout_lstm_input", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "dropout_lstm_hidden", "type": "Any"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "dropout_lstm_hidden", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "mlp_size", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "mlp_dep_W", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "mlp_head_W", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "mlp_dep_b", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "mlp_head_b", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "mlp_arc_size", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "mlp_arc_size", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "mlp_rel_size", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "mlp_rel_size", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "dropout_mlp", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "dropout_mlp", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "arc_W", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "softmax_loss", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "is_train", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "num_tokens", "type": "int"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "unked_words", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "word_embs", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "pret_word_embs", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "tag_embs", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "emb_inputs", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "top_recur", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "W_arc", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "flat_arc_logits", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "arc_preds", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "W_rel", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "flat_rel_logits", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "_target_mat", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "partial_rel_logits", "type": "Any"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "is_train", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "outputs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "outputs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 313, "col_offset": 11, "nodeName": "pret_word_embs", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "arg_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "word_embs", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "word_embs", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "embedding_from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "embedding_from_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "mlp_arc_size", "type": "Any"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "mlp_rel_size", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "orthonormal_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "mlp_size", "type": "Any"}, {"lineNumber": 106, "col_offset": 64, "nodeName": "debug", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "parameter_from_numpy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 64, "nodeName": "W", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "parameter_from_numpy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 66, "nodeName": "W", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "parameter_init", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "parameter_init", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "parameter_init", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "parameter_init", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "SoftmaxCrossEntropyLoss", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "get", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "get", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 200, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "is_train", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "mask_1D", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "mask_1D_tensor", "type": "Any"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "where", "type": "Any"}, {"lineNumber": 207, "col_offset": 73, "nodeName": "word_inputs", "type": "Any"}, {"lineNumber": 207, "col_offset": 86, "nodeName": "UNK", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "word_embs", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "word_embs", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "tag_embs", "type": "Any"}, {"lineNumber": 214, "col_offset": 21, "nodeName": "concat", "type": "Any"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "word_embs", "type": "Any"}, {"lineNumber": 214, "col_offset": 42, "nodeName": "tag_embs", "type": "Any"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "biLSTM", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "f_lstm", "type": "Any"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "b_lstm", "type": "Any"}, {"lineNumber": 216, "col_offset": 53, "nodeName": "emb_inputs", "type": "Any"}, {"lineNumber": 216, "col_offset": 65, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "W_dep", "type": "Any"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "b_dep", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "W_head", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "b_head", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "dep", "type": "Any"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "head", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "dep", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "head", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "dep_arc", "type": "Any"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "dep_rel", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "head_arc", "type": "Any"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "head_rel", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 230, "col_offset": 21, "nodeName": "bilinear", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 30, "nodeName": "dep_arc", "type": "Any"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "W_arc", "type": "Any"}, {"lineNumber": 230, "col_offset": 46, "nodeName": "head_arc", "type": "Any"}, {"lineNumber": 230, "col_offset": 56, "nodeName": "mlp_arc_size", "type": "Any"}, {"lineNumber": 230, "col_offset": 75, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 230, "col_offset": 84, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "reshape_fortran", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 234, "col_offset": 42, "nodeName": "arc_logits", "type": "Any"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "is_train", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "correct", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "arc_correct", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "arc_accuracy", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "targets_1D", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "losses", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "arc_loss", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "is_train", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "bilinear", "type": "Callable[..., Any]"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "dep_rel", "type": "Any"}, {"lineNumber": 254, "col_offset": 39, "nodeName": "W_rel", "type": "Any"}, {"lineNumber": 254, "col_offset": 46, "nodeName": "head_rel", "type": "Any"}, {"lineNumber": 254, "col_offset": 56, "nodeName": "mlp_rel_size", "type": "Any"}, {"lineNumber": 254, "col_offset": 75, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 254, "col_offset": 84, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 258, "col_offset": 26, "nodeName": "reshape_fortran", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 258, "col_offset": 42, "nodeName": "rel_logits", "type": "Any"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "_target_vec", "type": "Any"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "pick", "type": "Any"}, {"lineNumber": 265, "col_offset": 37, "nodeName": "flat_rel_logits", "type": "Any"}, {"lineNumber": 265, "col_offset": 54, "nodeName": "T", "type": "Any"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "is_train", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "rel_preds", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "targets_1D", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "rel_correct", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "rel_accuracy", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "losses", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "rel_loss", "type": "Any"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "is_train", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "is_train", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "correct", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "overall_accuracy", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "msk", "type": "Any"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "arc_prob", "type": "Any"}, {"lineNumber": 291, "col_offset": 27, "nodeName": "rel_prob", "type": "Any"}, {"lineNumber": 291, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 291, "col_offset": 63, "nodeName": "arc_probs", "type": "Any"}, {"lineNumber": 291, "col_offset": 74, "nodeName": "rel_probs", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "arc_pred", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "rel_prob", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "rel_pred", "type": "Any"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "arc_targets", "type": "Any"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "_collect_params_with_prefix", "type": "Any"}, {"lineNumber": 313, "col_offset": 11, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "filename", "type": "Any"}, {"lineNumber": 316, "col_offset": 31, "nodeName": "arg_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "save_parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 29, "nodeName": "save_path", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "load_parameters", "type": "Any"}, {"lineNumber": 336, "col_offset": 29, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "apply_weight_drop", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "word_embs", "type": "Any"}, {"lineNumber": 80, "col_offset": 51, "nodeName": "dropout_dim", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "trainable", "type": "bool"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "get_word_embs", "type": "Any"}, {"lineNumber": 86, "col_offset": 66, "nodeName": "word_dims", "type": "Any"}, {"lineNumber": 88, "col_offset": 71, "nodeName": "has_pret_embs", "type": "Any"}, {"lineNumber": 89, "col_offset": 45, "nodeName": "get_tag_embs", "type": "Any"}, {"lineNumber": 89, "col_offset": 64, "nodeName": "tag_dims", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "f_lstm", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "orthonormal_VanillaLSTMBuilder", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 80, "nodeName": "lstm_hiddens", "type": "Any"}, {"lineNumber": 93, "col_offset": 94, "nodeName": "dropout_lstm_input", "type": "Any"}, {"lineNumber": 94, "col_offset": 55, "nodeName": "dropout_lstm_hidden", "type": "Any"}, {"lineNumber": 94, "col_offset": 76, "nodeName": "debug", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "b_lstm", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "orthonormal_VanillaLSTMBuilder", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 80, "nodeName": "lstm_hiddens", "type": "Any"}, {"lineNumber": 95, "col_offset": 94, "nodeName": "dropout_lstm_input", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "dropout_lstm_hidden", "type": "Any"}, {"lineNumber": 96, "col_offset": 76, "nodeName": "debug", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "lstm_layers", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 106, "col_offset": 50, "nodeName": "lstm_hiddens", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 109, "col_offset": 59, "nodeName": "mlp_size", "type": "Any"}, {"lineNumber": 109, "col_offset": 71, "nodeName": "Zero", "type": "Any"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 110, "col_offset": 61, "nodeName": "mlp_size", "type": "Any"}, {"lineNumber": 110, "col_offset": 73, "nodeName": "Zero", "type": "Any"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 115, "col_offset": 51, "nodeName": "mlp_arc_size", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "shape", "type": "Tuple[Any]"}, {"lineNumber": 157, "col_offset": 52, "nodeName": "init", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "word_inputs", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "word_inputs", "type": "Any"}, {"lineNumber": 200, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "mask", "type": "Any"}, {"lineNumber": 203, "col_offset": 23, "nodeName": "arc_targets", "type": "Any"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "flatten_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 36, "nodeName": "mask", "type": "Any"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "array", "type": "Any"}, {"lineNumber": 205, "col_offset": 38, "nodeName": "mask_1D", "type": "Any"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "word_inputs", "type": "Any"}, {"lineNumber": 207, "col_offset": 45, "nodeName": "words_in_train", "type": "Any"}, {"lineNumber": 207, "col_offset": 86, "nodeName": "_vocab", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 208, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 208, "col_offset": 44, "nodeName": "unked_words", "type": "Any"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "word_embs", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "array", "type": "Any"}, {"lineNumber": 211, "col_offset": 42, "nodeName": "tag_inputs", "type": "Any"}, {"lineNumber": 214, "col_offset": 21, "nodeName": "nd", "type": "Any"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 218, "col_offset": 36, "nodeName": "top_recur", "type": "Any"}, {"lineNumber": 218, "col_offset": 59, "nodeName": "dropout_mlp", "type": "Any"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 220, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 221, "col_offset": 49, "nodeName": "data", "type": "Any"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "leaky_relu", "type": "Callable[[Any], Any]"}, {"lineNumber": 222, "col_offset": 68, "nodeName": "leaky_relu", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 223, "col_offset": 72, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 225, "col_offset": 33, "nodeName": "dep", "type": "Any"}, {"lineNumber": 225, "col_offset": 55, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 225, "col_offset": 68, "nodeName": "head", "type": "Any"}, {"lineNumber": 226, "col_offset": 27, "nodeName": "dep", "type": "Any"}, {"lineNumber": 226, "col_offset": 52, "nodeName": "dep", "type": "Any"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "head", "type": "Any"}, {"lineNumber": 227, "col_offset": 55, "nodeName": "head", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "arc_W", "type": "Any"}, {"lineNumber": 230, "col_offset": 56, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 234, "col_offset": 55, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "arc_logits", "type": "Any"}, {"lineNumber": 240, "col_offset": 23, "nodeName": "arc_targets", "type": "Any"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "equal", "type": "Any"}, {"lineNumber": 241, "col_offset": 52, "nodeName": "arc_targets", "type": "Any"}, {"lineNumber": 242, "col_offset": 55, "nodeName": "mask", "type": "Any"}, {"lineNumber": 243, "col_offset": 49, "nodeName": "num_tokens", "type": "int"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "flatten_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 39, "nodeName": "arc_targets", "type": "Any"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "softmax_loss", "type": "Any"}, {"lineNumber": 245, "col_offset": 39, "nodeName": "flat_arc_logits", "type": "Any"}, {"lineNumber": 246, "col_offset": 57, "nodeName": "num_tokens", "type": "int"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "rel_W", "type": "Any"}, {"lineNumber": 254, "col_offset": 56, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 255, "col_offset": 42, "nodeName": "rel_size", "type": "Any"}, {"lineNumber": 258, "col_offset": 55, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 258, "col_offset": 64, "nodeName": "rel_size", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 262, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 263, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "nd", "type": "Any"}, {"lineNumber": 265, "col_offset": 54, "nodeName": "_target_mat", "type": "Any"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "arc_targets", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "flatten_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "rel_targets", "type": "Any"}, {"lineNumber": 271, "col_offset": 89, "nodeName": "mask_1D", "type": "Any"}, {"lineNumber": 272, "col_offset": 49, "nodeName": "num_tokens", "type": "int"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "softmax_loss", "type": "Any"}, {"lineNumber": 273, "col_offset": 39, "nodeName": "partial_rel_logits", "type": "Any"}, {"lineNumber": 274, "col_offset": 57, "nodeName": "num_tokens", "type": "int"}, {"lineNumber": 277, "col_offset": 24, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "arc_targets", "type": "Any"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "arc_loss", "type": "Any"}, {"lineNumber": 282, "col_offset": 30, "nodeName": "rel_loss", "type": "Any"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "rel_correct", "type": "Any"}, {"lineNumber": 284, "col_offset": 49, "nodeName": "num_tokens", "type": "int"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "arc_accuracy", "type": "Any"}, {"lineNumber": 287, "col_offset": 33, "nodeName": "rel_accuracy", "type": "Any"}, {"lineNumber": 287, "col_offset": 47, "nodeName": "overall_accuracy", "type": "Any"}, {"lineNumber": 287, "col_offset": 65, "nodeName": "loss", "type": "Any"}, {"lineNumber": 291, "col_offset": 43, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 291, "col_offset": 56, "nodeName": "mask", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "msk", "type": "Any"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "arc_argmax", "type": "Callable[..., Any]"}, {"lineNumber": 295, "col_offset": 34, "nodeName": "arc_prob", "type": "Any"}, {"lineNumber": 295, "col_offset": 44, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 295, "col_offset": 54, "nodeName": "msk", "type": "Any"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "rel_prob", "type": "Any"}, {"lineNumber": 297, "col_offset": 23, "nodeName": "rel_argmax", "type": "Callable[..., Any]"}, {"lineNumber": 297, "col_offset": 34, "nodeName": "rel_prob", "type": "Any"}, {"lineNumber": 297, "col_offset": 44, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "arc_accuracy", "type": "Any"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "rel_accuracy", "type": "Any"}, {"lineNumber": 301, "col_offset": 47, "nodeName": "overall_accuracy", "type": "Any"}, {"lineNumber": 301, "col_offset": 65, "nodeName": "outputs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "_reduce", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "ndarray", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "BiaffineParser", "type": "Type[BiaffineParser]"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "shape", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 88, "col_offset": 71, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 89, "col_offset": 45, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 93, "col_offset": 58, "nodeName": "word_dims", "type": "Any"}, {"lineNumber": 93, "col_offset": 70, "nodeName": "tag_dims", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 95, "col_offset": 58, "nodeName": "word_dims", "type": "Any"}, {"lineNumber": 95, "col_offset": 70, "nodeName": "tag_dims", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "f_lstm", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "orthonormal_VanillaLSTMBuilder", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 80, "nodeName": "lstm_hiddens", "type": "Any"}, {"lineNumber": 98, "col_offset": 94, "nodeName": "dropout_lstm_input", "type": "Any"}, {"lineNumber": 99, "col_offset": 59, "nodeName": "dropout_lstm_hidden", "type": "Any"}, {"lineNumber": 99, "col_offset": 80, "nodeName": "debug", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "b_lstm", "type": "Any"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "orthonormal_VanillaLSTMBuilder", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 80, "nodeName": "lstm_hiddens", "type": "Any"}, {"lineNumber": 100, "col_offset": 94, "nodeName": "dropout_lstm_input", "type": "Any"}, {"lineNumber": 101, "col_offset": 59, "nodeName": "dropout_lstm_hidden", "type": "Any"}, {"lineNumber": 101, "col_offset": 80, "nodeName": "debug", "type": "Any"}, {"lineNumber": 109, "col_offset": 71, "nodeName": "init", "type": "Any"}, {"lineNumber": 110, "col_offset": 73, "nodeName": "init", "type": "Any"}, {"lineNumber": 115, "col_offset": 65, "nodeName": "mlp_arc_size", "type": "Any"}, {"lineNumber": 115, "col_offset": 89, "nodeName": "Zero", "type": "Any"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "rel_size", "type": "Any"}, {"lineNumber": 116, "col_offset": 88, "nodeName": "mlp_rel_size", "type": "Any"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "Zero", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "array", "type": "Any"}, {"lineNumber": 137, "col_offset": 58, "nodeName": "Constant", "type": "Any"}, {"lineNumber": 137, "col_offset": 75, "nodeName": "array", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "greater", "type": "Any"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "word_inputs", "type": "Any"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "ROOT", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "nd", "type": "Any"}, {"lineNumber": 207, "col_offset": 45, "nodeName": "_vocab", "type": "Any"}, {"lineNumber": 207, "col_offset": 86, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 208, "col_offset": 35, "nodeName": "nd", "type": "Any"}, {"lineNumber": 210, "col_offset": 36, "nodeName": "pret_word_embs", "type": "Any"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "nd", "type": "Any"}, {"lineNumber": 217, "col_offset": 64, "nodeName": "is_train", "type": "Any"}, {"lineNumber": 217, "col_offset": 37, "nodeName": "dropout_lstm_input", "type": "Any"}, {"lineNumber": 218, "col_offset": 59, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "mlp_dep_W", "type": "Any"}, {"lineNumber": 220, "col_offset": 46, "nodeName": "mlp_dep_b", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "mlp_head_W", "type": "Any"}, {"lineNumber": 221, "col_offset": 49, "nodeName": "mlp_head_b", "type": "Any"}, {"lineNumber": 222, "col_offset": 60, "nodeName": "b_dep", "type": "Any"}, {"lineNumber": 222, "col_offset": 109, "nodeName": "b_head", "type": "Any"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 223, "col_offset": 36, "nodeName": "dep", "type": "Any"}, {"lineNumber": 223, "col_offset": 53, "nodeName": "dropout_mlp", "type": "Any"}, {"lineNumber": 223, "col_offset": 72, "nodeName": "nd", "type": "Any"}, {"lineNumber": 223, "col_offset": 88, "nodeName": "head", "type": "Any"}, {"lineNumber": 224, "col_offset": 89, "nodeName": "dropout_mlp", "type": "Any"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "nd", "type": "Any"}, {"lineNumber": 225, "col_offset": 55, "nodeName": "nd", "type": "Any"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "mlp_arc_size", "type": "Any"}, {"lineNumber": 226, "col_offset": 56, "nodeName": "mlp_arc_size", "type": "Any"}, {"lineNumber": 227, "col_offset": 35, "nodeName": "mlp_arc_size", "type": "Any"}, {"lineNumber": 227, "col_offset": 60, "nodeName": "mlp_arc_size", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 234, "col_offset": 64, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 234, "col_offset": 74, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 31, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "astype", "type": "Any"}, {"lineNumber": 242, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 243, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "arc_correct", "type": "Any"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 245, "col_offset": 56, "nodeName": "array", "type": "Any"}, {"lineNumber": 245, "col_offset": 65, "nodeName": "targets_1D", "type": "Any"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 255, "col_offset": 42, "nodeName": "_vocab", "type": "Any"}, {"lineNumber": 258, "col_offset": 64, "nodeName": "_vocab", "type": "Any"}, {"lineNumber": 258, "col_offset": 86, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 258, "col_offset": 96, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "array", "type": "Any"}, {"lineNumber": 263, "col_offset": 36, "nodeName": "nd", "type": "Any"}, {"lineNumber": 263, "col_offset": 48, "nodeName": "rel_size", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "partial_rel_logits", "type": "Any"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "astype", "type": "Any"}, {"lineNumber": 271, "col_offset": 75, "nodeName": "float32", "type": "Any"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 272, "col_offset": 34, "nodeName": "rel_correct", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 273, "col_offset": 59, "nodeName": "array", "type": "Any"}, {"lineNumber": 273, "col_offset": 68, "nodeName": "targets_1D", "type": "Any"}, {"lineNumber": 274, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 277, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 37, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 283, "col_offset": 36, "nodeName": "flatten_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "arc_correct", "type": "Any"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 284, "col_offset": 38, "nodeName": "correct", "type": "Any"}, {"lineNumber": 291, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 294, "col_offset": 34, "nodeName": "msk", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "outputs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "val", "type": "Any"}, {"lineNumber": 315, "col_offset": 43, "nodeName": "key", "type": "Any"}, {"lineNumber": 315, "col_offset": 48, "nodeName": "val", "type": "Any"}, {"lineNumber": 315, "col_offset": 55, "nodeName": "items", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "_we", "type": "Any"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "_we", "type": "Any"}, {"lineNumber": 79, "col_offset": 84, "nodeName": "Constant", "type": "Any"}, {"lineNumber": 79, "col_offset": 101, "nodeName": "_we", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 98, "col_offset": 66, "nodeName": "lstm_hiddens", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 100, "col_offset": 66, "nodeName": "lstm_hiddens", "type": "Any"}, {"lineNumber": 109, "col_offset": 71, "nodeName": "mx", "type": "Any"}, {"lineNumber": 110, "col_offset": 73, "nodeName": "mx", "type": "Any"}, {"lineNumber": 115, "col_offset": 89, "nodeName": "init", "type": "Any"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 116, "col_offset": 69, "nodeName": "mlp_rel_size", "type": "Any"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "init", "type": "Any"}, {"lineNumber": 137, "col_offset": 58, "nodeName": "init", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "_vocab", "type": "Any"}, {"lineNumber": 207, "col_offset": 45, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 210, "col_offset": 36, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 210, "col_offset": 56, "nodeName": "array", "type": "Any"}, {"lineNumber": 210, "col_offset": 65, "nodeName": "word_inputs", "type": "Any"}, {"lineNumber": 217, "col_offset": 37, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 220, "col_offset": 46, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 221, "col_offset": 49, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 222, "col_offset": 31, "nodeName": "dot", "type": "Any"}, {"lineNumber": 222, "col_offset": 38, "nodeName": "top_recur", "type": "Any"}, {"lineNumber": 222, "col_offset": 49, "nodeName": "T", "type": "Any"}, {"lineNumber": 222, "col_offset": 79, "nodeName": "dot", "type": "Any"}, {"lineNumber": 222, "col_offset": 86, "nodeName": "top_recur", "type": "Any"}, {"lineNumber": 222, "col_offset": 97, "nodeName": "T", "type": "Any"}, {"lineNumber": 223, "col_offset": 53, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 224, "col_offset": 89, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 226, "col_offset": 56, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 227, "col_offset": 35, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 227, "col_offset": 60, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 241, "col_offset": 31, "nodeName": "arc_preds", "type": "Any"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "correct", "type": "Any"}, {"lineNumber": 242, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 243, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 56, "nodeName": "nd", "type": "Any"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "nd", "type": "Any"}, {"lineNumber": 246, "col_offset": 30, "nodeName": "losses", "type": "Any"}, {"lineNumber": 246, "col_offset": 39, "nodeName": "mask_1D_tensor", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 250, "col_offset": 75, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 250, "col_offset": 84, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 250, "col_offset": 93, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 255, "col_offset": 42, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 258, "col_offset": 64, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "nd", "type": "Any"}, {"lineNumber": 261, "col_offset": 45, "nodeName": "is_train", "type": "Any"}, {"lineNumber": 261, "col_offset": 31, "nodeName": "targets_1D", "type": "Any"}, {"lineNumber": 263, "col_offset": 48, "nodeName": "_vocab", "type": "Any"}, {"lineNumber": 271, "col_offset": 75, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 59, "nodeName": "nd", "type": "Any"}, {"lineNumber": 274, "col_offset": 23, "nodeName": "nd", "type": "Any"}, {"lineNumber": 274, "col_offset": 30, "nodeName": "losses", "type": "Any"}, {"lineNumber": 274, "col_offset": 39, "nodeName": "mask_1D_tensor", "type": "Any"}, {"lineNumber": 277, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 48, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 278, "col_offset": 49, "nodeName": "rel_size", "type": "Any"}, {"lineNumber": 278, "col_offset": 71, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 278, "col_offset": 80, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 278, "col_offset": 89, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 58, "nodeName": "arc_pred", "type": "Any"}, {"lineNumber": 298, "col_offset": 28, "nodeName": "arc_pred", "type": "Any"}, {"lineNumber": 298, "col_offset": 50, "nodeName": "rel_pred", "type": "Any"}, {"lineNumber": 315, "col_offset": 55, "nodeName": "params", "type": "Any"}, {"lineNumber": 79, "col_offset": 84, "nodeName": "init", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 115, "col_offset": 89, "nodeName": "mx", "type": "Any"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "mx", "type": "Any"}, {"lineNumber": 137, "col_offset": 58, "nodeName": "mx", "type": "Any"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 210, "col_offset": 56, "nodeName": "nd", "type": "Any"}, {"lineNumber": 222, "col_offset": 31, "nodeName": "nd", "type": "Any"}, {"lineNumber": 222, "col_offset": 49, "nodeName": "W_dep", "type": "Any"}, {"lineNumber": 222, "col_offset": 79, "nodeName": "nd", "type": "Any"}, {"lineNumber": 222, "col_offset": 97, "nodeName": "W_head", "type": "Any"}, {"lineNumber": 261, "col_offset": 59, "nodeName": "flatten_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 263, "col_offset": 48, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "equal", "type": "Any"}, {"lineNumber": 271, "col_offset": 56, "nodeName": "targets_1D", "type": "Any"}, {"lineNumber": 278, "col_offset": 49, "nodeName": "_vocab", "type": "Any"}, {"lineNumber": 296, "col_offset": 32, "nodeName": "arange", "type": "Any"}, {"lineNumber": 298, "col_offset": 39, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 298, "col_offset": 61, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 79, "col_offset": 84, "nodeName": "mx", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "word_embs", "type": "Any"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 250, "col_offset": 38, "nodeName": "flat_arc_logits", "type": "Any"}, {"lineNumber": 261, "col_offset": 73, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 35, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 277, "col_offset": 48, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 278, "col_offset": 49, "nodeName": "self", "type": "BiaffineParser"}, {"lineNumber": 296, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 296, "col_offset": 46, "nodeName": "arc_pred", "type": "Any"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "nd", "type": "Any"}, {"lineNumber": 261, "col_offset": 73, "nodeName": "arc_preds", "type": "Any"}, {"lineNumber": 271, "col_offset": 35, "nodeName": "rel_preds", "type": "Any"}, {"lineNumber": 277, "col_offset": 48, "nodeName": "nd", "type": "Any"}, {"lineNumber": 277, "col_offset": 59, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 277, "col_offset": 59, "nodeName": "flat_rel_logits", "type": "Any"}]