[{"lineNumber": 16, "col_offset": 0, "nodeName": "parse_args", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "bleu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "calculate_self_bleu4", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "calculate_zipf_coefficient", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "calculate_repetition", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "calculate_metrics", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "bleu_scores", "type": "List[nothing]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "bleu_scores", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "cnt", "type": "Counter[nothing]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "sample_ids", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "xs", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "ys", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "max_n", "type": "int"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "n_repeated_examples", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "sample_ids", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "pattern", "type": "str"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "samples", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "samples", "type": "List[str]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "sample_ids", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "sample_strs", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "self_bleu4", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "zipf_coefficient", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "repetition", "type": "float"}, {"lineNumber": 107, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "sentence_bleu", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "Pool", "type": "Type[multiprocessing.pool.Pool]"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "num_bleu_samples", "type": "Any"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "arange", "type": "Any"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 58, "col_offset": 7, "nodeName": "_", "type": "Any"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "r", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "_", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "linregress", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "r", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "rev", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "last_n_repeats", "type": "List[int]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "max_repeated_n", "type": "int"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "n_repeated_examples", "type": "int"}, {"lineNumber": 83, "col_offset": 46, "nodeName": "of", "type": "TextIO"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "samples", "type": "str"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "samples", "type": "List[str]"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 90, "col_offset": 7, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "_", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "get_pretrained_gpt2", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "encode", "type": "Any"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "samples", "type": "List[str]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "eos_id", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "encode", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "samples", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "calculate_self_bleu4", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "sample_strs", "type": "Any"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "num_bleu_samples", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "calculate_zipf_coefficient", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "sample_ids", "type": "Any"}, {"lineNumber": 99, "col_offset": 62, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "calculate_repetition", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 38, "nodeName": "sample_ids", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "parse_args", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "calculate_metrics", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 19, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 20, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 21, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "bleu_scores", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "update", "type": "Callable[[Iterable[Any]], None]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "stats", "type": "Any"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "log", "type": "Any"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "xs", "type": "Any"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "log", "type": "Any"}, {"lineNumber": 58, "col_offset": 56, "nodeName": "ys", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "n_repeat", "type": "int"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "n_repeat", "type": "int"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "max", "type": "Callable"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "n_repeated_examples", "type": "int"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "sample_ids", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "file", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "read", "type": "Callable"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "split", "type": "Callable"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "pattern", "type": "str"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "samples", "type": "str"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "samples", "type": "List[str]"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "sample_ids", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "pop", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "self_bleu4", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "zipf_coefficient", "type": "Any"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "repetition", "type": "float"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "sample_strs", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "cpu_count", "type": "Callable[[], Optional[int]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "imap_unordered", "type": "Callable"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "num_bleu_samples", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "cnt", "type": "Counter[nothing]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "min", "type": "Callable"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "_", "type": "int"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "max_n", "type": "int"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "n_repeat", "type": "int"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "last_n_repeats", "type": "List[int]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "max_n", "type": "int"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "of", "type": "TextIO"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "re", "type": "module"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "sample_ids", "type": "Any"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "i", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "sample_strs", "type": "Any"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "sample_strs", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "bleu", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "sample_strs", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "sample", "type": "Callable"}, {"lineNumber": 42, "col_offset": 51, "nodeName": "num_bleu_samples", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "cnt", "type": "Counter[nothing]"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "values", "type": "Callable"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "neg", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 58, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 62, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "max_n", "type": "int"}, {"lineNumber": 72, "col_offset": 57, "nodeName": "n", "type": "int"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "last_n_repeats", "type": "List[int]"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "i", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "cnt", "type": "Counter[nothing]"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "operator", "type": "module"}, {"lineNumber": 57, "col_offset": 62, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "rev", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "rev", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "n", "type": "int"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "max_repeated_n", "type": "int"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "max_repeated_n", "type": "int"}, {"lineNumber": 77, "col_offset": 76, "nodeName": "last_n_repeats", "type": "List[int]"}, {"lineNumber": 28, "col_offset": 49, "nodeName": "i", "type": "Any"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "sample_strs", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "rev", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 57, "nodeName": "n", "type": "int"}, {"lineNumber": 77, "col_offset": 91, "nodeName": "max_repeated_n", "type": "int"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "n", "type": "int"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "n_repeat", "type": "int"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "n", "type": "int"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "n_repeat", "type": "int"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "n_repeat", "type": "int"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "n_repeat", "type": "int"}]