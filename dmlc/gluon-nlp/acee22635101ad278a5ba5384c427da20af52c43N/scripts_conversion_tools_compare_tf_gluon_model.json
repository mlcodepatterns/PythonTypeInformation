[{"lineNumber": 60, "col_offset": 0, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "tf_bert_repo_dir", "type": "Any"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "tf_model_dir", "type": "Any"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "vocab_file", "type": "Any"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "bert_config_file", "type": "Any"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "init_checkpoint", "type": "Any"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "do_lower_case", "type": "bool"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "max_length", "type": "int"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "layer_indexes", "type": "List[int]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "examples", "type": "Any"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "is_per_host", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "PER_HOST_V2", "type": "Any"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "tensorflow_all_out", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "tf_outputs", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 3, "nodeName": "gluon_parameter_file", "type": "Any"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 170, "col_offset": 0, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "trans", "type": "Any"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "expanduser", "type": "Callable"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "expanduser", "type": "Callable"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "tf_bert_repo_dir", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "expanduser", "type": "Callable"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "tf_model_dir", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "tf_model_dir", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "tf_model_dir", "type": "Any"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "tf_config_name", "type": "Any"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "tf_model_dir", "type": "Any"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "tf_model_prefix", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "cased", "type": "Any"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "tf_bert_repo_dir", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "from_json_file", "type": "Any"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "bert_config_file", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "FullTokenizer", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "read_examples", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "convert_examples_to_features", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "InputPipelineConfig", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "RunConfig", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "model_fn_builder", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "TPUEstimator", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "input_fn_builder", "type": "Any"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "predict", "type": "Any"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "input_fn", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "output_json", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "tensorflow_all_out_features", "type": "List[Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "all_layers", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "tensorflow_out_features", "type": "Any"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "all_layers", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "tensorflow_all_out_features", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 3, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "gluon_vocab_file", "type": "Any"}, {"lineNumber": 168, "col_offset": 6, "nodeName": "bert", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "BERTTokenizer", "type": "Any"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "vocabulary", "type": "Any"}, {"lineNumber": 170, "col_offset": 10, "nodeName": "TSVDataset", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "BERTSentenceTransform", "type": "Any"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 172, "col_offset": 50, "nodeName": "max_length", "type": "int"}, {"lineNumber": 173, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "trans", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "i", "type": "int"}, {"lineNumber": 179, "col_offset": 7, "nodeName": "seq", "type": "Any"}, {"lineNumber": 179, "col_offset": 14, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "bert_dataloader", "type": "Any"}, {"lineNumber": 180, "col_offset": 40, "nodeName": "seq", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "length", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "path", "type": "List[Any]"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "argparse", "type": "module"}, {"lineNumber": 33, "col_offset": 49, "nodeName": "ArgumentDefaultsHelpFormatter", "type": "Type[argparse.ArgumentDefaultsHelpFormatter]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 43, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 55, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "path", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "BertConfig", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "tokenization", "type": "Any"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "vocab_file", "type": "Any"}, {"lineNumber": 86, "col_offset": 76, "nodeName": "do_lower_case", "type": "bool"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "examples", "type": "Any"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "max_length", "type": "int"}, {"lineNumber": 90, "col_offset": 56, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "tpu", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "tpu", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "init_checkpoint", "type": "Any"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "layer_indexes", "type": "List[int]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "tpu", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "model_fn", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "run_config", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "features", "type": "Any"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "max_length", "type": "int"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "OrderedDict", "type": "Any"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "j", "type": "int"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "layer_index", "type": "int"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "layer_indexes", "type": "List[int]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "layer_output", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "layer_index", "type": "int"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "layer_output", "type": "Any"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "OrderedDict", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "tensorflow_out_features", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "tensorflow_out_features", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "output_json", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "output_json", "type": "Any"}, {"lineNumber": 133, "col_offset": 78, "nodeName": "t", "type": "int"}, {"lineNumber": 133, "col_offset": 83, "nodeName": "layer_indexes", "type": "List[int]"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "f", "type": "file"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "vocabulary", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "get_model", "type": "Any"}, {"lineNumber": 144, "col_offset": 43, "nodeName": "gluon_model", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "gluon_vocab_file", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "get_model", "type": "Any"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "gluon_model", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 169, "col_offset": 53, "nodeName": "do_lower_case", "type": "bool"}, {"lineNumber": 170, "col_offset": 10, "nodeName": "data", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 173, "col_offset": 10, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "type_ids", "type": "Any"}, {"lineNumber": 181, "col_offset": 10, "nodeName": "bert", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "type_ids", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "asscalar", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "a", "type": "Any"}, {"lineNumber": 188, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 28, "col_offset": 48, "nodeName": "__file__", "type": "str"}, {"lineNumber": 28, "col_offset": 58, "nodeName": "pardir", "type": "str"}, {"lineNumber": 28, "col_offset": 69, "nodeName": "pardir", "type": "str"}, {"lineNumber": 33, "col_offset": 49, "nodeName": "argparse", "type": "module"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "split", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "modeling", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "TPUConfig", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "collections", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "result", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "OrderedDict", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "collections", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "tensorflow_all_out_features", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "tensorflow_all_out", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "gluon_vocab_file", "type": "Any"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "from_json", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "model", "type": "Any"}, {"lineNumber": 144, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 146, "col_offset": 49, "nodeName": "vocabulary", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "load_parameters", "type": "Any"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "gluon_parameter_file", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "model", "type": "Any"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 162, "col_offset": 56, "nodeName": "gluon_dataset", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 170, "col_offset": 10, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 170, "col_offset": 58, "nodeName": "Splitter", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "gluon", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "tf_outputs", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "length", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "test_utils", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 28, "col_offset": 58, "nodeName": "os", "type": "module"}, {"lineNumber": 28, "col_offset": 69, "nodeName": "os", "type": "module"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "gluon_model", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "tpu", "type": "Any"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "is_per_host", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "collections", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "all_layers", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 61, "nodeName": "t", "type": "int"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "Vocab", "type": "Any"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 147, "col_offset": 58, "nodeName": "gluon_parameter_file", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "bert", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "bert", "type": "Any"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "bert", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "load_parameters", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "gluon_parameter_file", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 162, "col_offset": 56, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 163, "col_offset": 58, "nodeName": "gluon_parameter_file", "type": "Any"}, {"lineNumber": 170, "col_offset": 58, "nodeName": "data", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "mx", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "valid_length", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "std", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "mx", "type": "Any"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "j", "type": "int"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "f", "type": "file"}, {"lineNumber": 147, "col_offset": 58, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "bert", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "bert", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 163, "col_offset": 58, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 170, "col_offset": 58, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "length", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "a", "type": "Any"}, {"lineNumber": 187, "col_offset": 37, "nodeName": "b", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "tensorflow_all_out", "type": "List[Any]"}]