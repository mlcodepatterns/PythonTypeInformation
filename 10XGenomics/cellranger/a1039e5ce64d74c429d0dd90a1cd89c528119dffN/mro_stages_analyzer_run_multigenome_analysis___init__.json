[{"lineNumber": 25, "col_offset": 0, "nodeName": "split", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "main", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "join", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "__MRO__", "type": "str"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "mem_gb", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "mem_gb", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "chunks", "type": "List[Dict[str, int]]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "raw_matrix", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "filtered_matrix", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "chunk_out", "type": "Any"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "skip", "type": "Any"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "get_mem_gb_from_matrix_h5", "type": "Any"}, {"lineNumber": 29, "col_offset": 51, "nodeName": "raw_matrices_h5", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "get_mem_gb_from_matrix_h5", "type": "Any"}, {"lineNumber": 30, "col_offset": 52, "nodeName": "filtered_matrices_h5", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "chunks", "type": "List[Dict[str, int]]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "load_h5_file", "type": "Any"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "raw_matrices_h5", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "load_h5_file", "type": "Any"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "filtered_matrices_h5", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "MultiGenomeAnalysis", "type": "Any"}, {"lineNumber": 40, "col_offset": 50, "nodeName": "raw_matrix", "type": "Any"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "filtered_matrix", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "run_all", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "save_summary_json", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "multi_genome_summary", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "save_gem_class_json", "type": "Any"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "multi_genome_json", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "save_gem_class_csv", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "multi_genome_csv", "type": "Any"}, {"lineNumber": 47, "col_offset": 7, "nodeName": "skip", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "chunk_outs", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "copy", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "multi_genome_summary", "type": "Any"}, {"lineNumber": 51, "col_offset": 47, "nodeName": "multi_genome_summary", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "copytree", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "multi_genome_csv", "type": "Any"}, {"lineNumber": 52, "col_offset": 47, "nodeName": "multi_genome_csv", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "copytree", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "multi_genome_json", "type": "Any"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "multi_genome_json", "type": "Any"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "args", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "is_multi_genome", "type": "Any"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "CountMatrix", "type": "Any"}, {"lineNumber": 29, "col_offset": 51, "nodeName": "args", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "CountMatrix", "type": "Any"}, {"lineNumber": 30, "col_offset": 52, "nodeName": "args", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "CountMatrix", "type": "Any"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "args", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "CountMatrix", "type": "Any"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "cr_mg_analysis", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "outs", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "outs", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "analysis", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "outs", "type": "Any"}, {"lineNumber": 47, "col_offset": 7, "nodeName": "args", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "is_multi_genome", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "cr_io", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "chunk_out", "type": "Any"}, {"lineNumber": 51, "col_offset": 47, "nodeName": "outs", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "cr_io", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "chunk_out", "type": "Any"}, {"lineNumber": 52, "col_offset": 47, "nodeName": "outs", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "cr_io", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "chunk_out", "type": "Any"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "outs", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "args", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "args", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "math", "type": "module"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "max", "type": "Callable"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "MIN_MEM_GB", "type": "Any"}, {"lineNumber": 33, "col_offset": 63, "nodeName": "mem_gb", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "h5_constants", "type": "Any"}]