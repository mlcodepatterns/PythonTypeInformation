[{"lineNumber": 9, "col_offset": 0, "nodeName": "get_library_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "get_gem_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "get_library_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "assign_library_ids", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "gg", "type": "Union[Any, int]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "sd_libs", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "ids", "type": "collections.OrderedDict[Tuple[int, Any], List[Union[Any, str]]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "sd", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "sample_defs", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "id2libs", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 10, "col_offset": 45, "nodeName": "DEFAULT_LIBRARY_TYPE", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "gg", "type": "Union[Any, int]"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "gem_group", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "lib_type", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "lib", "type": "Tuple[int, Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "default_id", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "lib_id", "type": "Union[Any, str]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "lib", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "lib_ids", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "lib", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "lib_ids", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "lib_id", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "libs", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 10, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 10, "col_offset": 45, "nodeName": "lib_constants", "type": "Any"}, {"lineNumber": 23, "col_offset": 9, "nodeName": "sample_def", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "sample_def", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "get_gem_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "sd", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "get_library_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "sd", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "gem_group", "type": "int"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "lib_type", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "lib", "type": "Tuple[int, Any]"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "lib", "type": "Tuple[int, Any]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "ids", "type": "collections.OrderedDict[Tuple[int, Any], List[Union[Any, str]]]"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "default_id", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "lib_id", "type": "Union[Any, str]"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "ids", "type": "collections.OrderedDict[Tuple[int, Any], List[Union[Any, str]]]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "ids", "type": "collections.OrderedDict[Tuple[int, Any], List[Union[Any, str]]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "lib", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "id2libs", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "lib_list", "type": "str"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "lib", "type": "Tuple[int, Any]"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "sd_libs", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 10, "col_offset": 11, "nodeName": "sample_def", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "sd_libs", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "ids", "type": "collections.OrderedDict[Tuple[int, Any], List[Union[Any, str]]]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "ids", "type": "collections.OrderedDict[Tuple[int, Any], List[Union[Any, str]]]"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "get", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "lib_id", "type": "Union[Any, str]"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "lib_id", "type": "Union[Any, str]"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "lib_ids", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "lib_ids", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "libs", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "libs", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "ids", "type": "collections.OrderedDict[Tuple[int, Any], List[Union[Any, str]]]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "lib", "type": "Tuple[int, Any]"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "sd", "type": "Any"}, {"lineNumber": 62, "col_offset": 110, "nodeName": "lib_id", "type": "Union[Any, str]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "ids", "type": "collections.OrderedDict[Tuple[int, Any], List[Union[Any, str]]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "id2libs", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "map", "type": "Callable"}, {"lineNumber": 80, "col_offset": 86, "nodeName": "libs", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "lib", "type": "Tuple[int, Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "lib", "type": "Tuple[int, Any]"}, {"lineNumber": 81, "col_offset": 105, "nodeName": "lib_id", "type": "Any"}, {"lineNumber": 81, "col_offset": 113, "nodeName": "lib_list", "type": "str"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "lib", "type": "Any"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "lib", "type": "Any"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "join", "type": "Callable"}, {"lineNumber": 70, "col_offset": 56, "nodeName": "lib_ids", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "lib_ids", "type": "Any"}]