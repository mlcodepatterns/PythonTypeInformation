[{"lineNumber": 25, "col_offset": 0, "nodeName": "crnn_model", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "X", "type": "Any"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "y", "type": "Any"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "splitter", "type": "seglearn.split.TemporalKFold"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "width", "type": "int"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "feed", "type": "seglearn.transform.Segment"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "est", "type": "Any"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "pipe", "type": "seglearn.pipe.SegPipe"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "par_grid", "type": "Dict[str, Union[List[str], List[float], List[int]]]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "clf", "type": "Any"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "stds", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[Any, Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 40, "col_offset": 7, "nodeName": "load_watch", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "make_ts_data", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "TemporalKFold", "type": "Type[seglearn.split.TemporalKFold]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "ys", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "cv", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "split", "type": "Callable[[Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "y", "type": "Any"}, {"lineNumber": 50, "col_offset": 7, "nodeName": "Segment", "type": "Type[seglearn.transform.Segment]"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "KerasClassifier", "type": "Any"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "SegPipe", "type": "Type[seglearn.pipe.SegPipe]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "feed", "type": "seglearn.transform.Segment"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "est", "type": "Any"}, {"lineNumber": 70, "col_offset": 6, "nodeName": "GridSearchCV", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "pipe", "type": "seglearn.pipe.SegPipe"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "par_grid", "type": "Dict[str, Union[List[str], List[float], List[int]]]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "fit", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "ys", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "cv_results_", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "cv_results_", "type": "Any"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "plot", "type": "Any"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "scores", "type": "Any"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "title", "type": "Any"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "xlabel", "type": "Any"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "ylabel", "type": "Any"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "fill_between", "type": "Any"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "show", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "width", "type": "Any"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "n_vars", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "splitter", "type": "seglearn.split.TemporalKFold"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "width", "type": "int"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "crnn_model", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "cv", "type": "Any"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "clf", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "clf", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "clf", "type": "Any"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "par_grid", "type": "Dict[str, Union[List[str], List[float], List[int]]]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "par_grid", "type": "Dict[str, Union[List[str], List[float], List[int]]]"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "scores", "type": "Any"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "stds", "type": "Any"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "scores", "type": "Any"}, {"lineNumber": 79, "col_offset": 62, "nodeName": "stds", "type": "Any"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "conv_filters", "type": "Any"}, {"lineNumber": 28, "col_offset": 55, "nodeName": "conv_kernel_size", "type": "Any"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "input_shape", "type": "Tuple[Any, Any]"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "conv_filters", "type": "Any"}, {"lineNumber": 30, "col_offset": 55, "nodeName": "conv_kernel_size", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "lstm_units", "type": "Any"}]