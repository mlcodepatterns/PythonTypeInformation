[{"lineNumber": 44, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "X", "type": "Any"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "y", "type": "Any"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "width", "type": "int"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "feed", "type": "seglearn.transform.Segment"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "est", "type": "Any"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "pipe", "type": "seglearn.pipe.SegPipe"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "score", "type": "Any"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "img", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[Any, Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 44, "col_offset": 7, "nodeName": "load_watch", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "make_ts_data", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 50, "col_offset": 7, "nodeName": "Segment", "type": "Type[seglearn.transform.Segment]"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "KerasClassifier", "type": "Any"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "SegPipe", "type": "Type[seglearn.pipe.SegPipe]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "feed", "type": "seglearn.transform.Segment"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "est", "type": "Any"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "train_test_split", "type": "Any"}, {"lineNumber": 55, "col_offset": 52, "nodeName": "X", "type": "Any"}, {"lineNumber": 55, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "score", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "N_train", "type": "int"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "N_test", "type": "int"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "score", "type": "Any"}, {"lineNumber": 67, "col_offset": 6, "nodeName": "imread", "type": "Any"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "imshow", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "img", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "width", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "n_vars", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "width", "type": "int"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "crnn_model", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "pipe", "type": "seglearn.pipe.SegPipe"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "pipe", "type": "seglearn.pipe.SegPipe"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "pipe", "type": "seglearn.pipe.SegPipe"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "pipe", "type": "seglearn.pipe.SegPipe"}, {"lineNumber": 67, "col_offset": 6, "nodeName": "mpimg", "type": "Any"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "conv_filters", "type": "Any"}, {"lineNumber": 30, "col_offset": 55, "nodeName": "conv_kernel_size", "type": "Any"}, {"lineNumber": 31, "col_offset": 69, "nodeName": "input_shape", "type": "Tuple[Any, Any]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "conv_filters", "type": "Any"}, {"lineNumber": 32, "col_offset": 55, "nodeName": "conv_kernel_size", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "lstm_units", "type": "Any"}]