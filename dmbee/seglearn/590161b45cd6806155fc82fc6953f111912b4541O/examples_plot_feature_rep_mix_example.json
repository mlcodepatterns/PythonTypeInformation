[{"lineNumber": 23, "col_offset": 0, "nodeName": "X", "type": "List[numpy.ndarray]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "y", "type": "List[numpy.ndarray]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "segment", "type": "seglearn.transform.SegmentXY"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "union", "type": "seglearn.transform.FeatureRepMix"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "X", "type": "Any"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "df", "type": "Any"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "SegmentXY", "type": "Type[seglearn.transform.SegmentXY]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "X", "type": "Any"}, {"lineNumber": 28, "col_offset": 3, "nodeName": "y", "type": "Any"}, {"lineNumber": 28, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "X", "type": "List[numpy.ndarray]"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "y", "type": "List[numpy.ndarray]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "y", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "FeatureRepMix", "type": "Type[seglearn.transform.FeatureRepMix]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 5, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 23, "col_offset": 5, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 25, "col_offset": 5, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "segment", "type": "seglearn.transform.SegmentXY"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "union", "type": "seglearn.transform.FeatureRepMix"}, {"lineNumber": 44, "col_offset": 5, "nodeName": "pd", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "f_labels", "type": "Optional[List[Any]]"}, {"lineNumber": 23, "col_offset": 5, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 5, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "union", "type": "seglearn.transform.FeatureRepMix"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "FeatureRep", "type": "Type[seglearn.transform.FeatureRep]"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "FeatureRep", "type": "Type[seglearn.transform.FeatureRep]"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "FeatureRep", "type": "Type[seglearn.transform.FeatureRep]"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "FeatureRep", "type": "Type[seglearn.transform.FeatureRep]"}, {"lineNumber": 38, "col_offset": 49, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "FeatureRep", "type": "Type[seglearn.transform.FeatureRep]"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "minimum", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "minimum", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "minimum", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "maximum", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "maximum", "type": "Callable[[Any], Any]"}]