[{"lineNumber": 29, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "X", "type": "Any"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "y", "type": "Any"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "truncator", "type": "seglearn.transform.PadTrunc"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "pipe", "type": "seglearn.pipe.SegPipe"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "score", "type": "Any"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "img", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "load_watch", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "PadTrunc", "type": "Type[seglearn.transform.PadTrunc]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "SegPipe", "type": "Type[seglearn.pipe.SegPipe]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "train_test_split", "type": "Any"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "X", "type": "Any"}, {"lineNumber": 46, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "score", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "N_train", "type": "int"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "N_test", "type": "int"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "score", "type": "Any"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "imread", "type": "Any"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "imshow", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "img", "type": "Any"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "truncator", "type": "seglearn.transform.PadTrunc"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "pipe", "type": "seglearn.pipe.SegPipe"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "pipe", "type": "seglearn.pipe.SegPipe"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "pipe", "type": "seglearn.pipe.SegPipe"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "pipe", "type": "seglearn.pipe.SegPipe"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "mpimg", "type": "Any"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "plt", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "FeatureRep", "type": "Type[seglearn.transform.FeatureRep]"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "StandardScaler", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "LinearSVC", "type": "Any"}]