[{"lineNumber": 1, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "set_bloomberg_com_api", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "set_bloomberg_open_api", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "flush_cache", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "set_intraday_code", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "get_loader", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "harvest_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "get_time_series_cached", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "create_time_series_hash_key", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "download_intraday_tick", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "download_daily", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "create_category_key", "type": "Callable[..., Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "create_cache_file_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "_time_series_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 326, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "time_series_filter", "type": "pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "time_series_io", "type": "pythalesians.market.loaders.timeseriesio.TimeSeriesIO"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "_bbg_default_api", "type": "str"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "bbg_default_api", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "_intraday_code", "type": "int"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_bbg_default_api", "type": "str"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "_bbg_default_api", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_time_series_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "_intraday_code", "type": "Any"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "code", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "loader", "type": "None"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "loader", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "loader", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "create_tickers", "type": "bool"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "create_tickers", "type": "bool"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "tsf", "type": "pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "fname", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "data_frame_agg", "type": "None"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "ticker_cycle", "type": "int"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "data_frame_agg", "type": "Optional[Any]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "fname", "type": "Any"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "category", "type": "str"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "cut", "type": "str"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "source", "type": "Any"}, {"lineNumber": 313, "col_offset": 17, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "freq", "type": "Any"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "freq", "type": "Any"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "key", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 37, "col_offset": 48, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "TimeSeriesFilter", "type": "Type[pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "TimeSeriesIO", "type": "Type[pythalesians.market.loaders.timeseriesio.TimeSeriesIO]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "source", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "get_loader", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "create_tickers", "type": "bool"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "freq", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "cache_algo", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "cache_algo", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "TimeSeriesFilter", "type": "Type[pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter]"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "cache_algo", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "freq", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "ticker", "type": "None"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "create_time_series_hash_key", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 49, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 191, "col_offset": 70, "nodeName": "ticker", "type": "Optional[Any]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "fname", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "_time_series_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "data_frame", "type": "nothing"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "tsf", "type": "pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "create_cache_file_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 243, "col_offset": 49, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "load_ticker", "type": "Any"}, {"lineNumber": 286, "col_offset": 44, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 288, "col_offset": 14, "nodeName": "create_category_key", "type": "Callable[..., Any]"}, {"lineNumber": 288, "col_offset": 39, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 289, "col_offset": 16, "nodeName": "create_cache_file_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 289, "col_offset": 44, "nodeName": "key", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "_time_series_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 311, "col_offset": 19, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 311, "col_offset": 53, "nodeName": "category", "type": "Any"}, {"lineNumber": 311, "col_offset": 64, "nodeName": "category", "type": "Any"}, {"lineNumber": 313, "col_offset": 17, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 316, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 316, "col_offset": 19, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 316, "col_offset": 48, "nodeName": "cut", "type": "Any"}, {"lineNumber": 316, "col_offset": 54, "nodeName": "cut", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 318, "col_offset": 33, "nodeName": "key", "type": "Any"}, {"lineNumber": 319, "col_offset": 14, "nodeName": "key", "type": "Any"}, {"lineNumber": 324, "col_offset": 59, "nodeName": "filename", "type": "Any"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "_bbg_default_api", "type": "str"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "loader", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "source", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "loader", "type": "pythalesians.market.loaders.lowlevel.quandl.loaderquandl.LoaderQuandl"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "get_tickers_list_for_category", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "category", "type": "Any"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "source", "type": "Any"}, {"lineNumber": 140, "col_offset": 70, "nodeName": "freq", "type": "Any"}, {"lineNumber": 140, "col_offset": 96, "nodeName": "cut", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "download_intraday_tick", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 144, "col_offset": 57, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 144, "col_offset": 78, "nodeName": "loader", "type": "Any"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "download_daily", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 147, "col_offset": 51, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 147, "col_offset": 72, "nodeName": "loader", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "_time_series_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "TimeSeriesFilter", "type": "Type[pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter]"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "filter_time_series", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 198, "col_offset": 63, "nodeName": "data_frame", "type": "nothing"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "create_category_key", "type": "Callable[..., Any]"}, {"lineNumber": 220, "col_offset": 37, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 220, "col_offset": 58, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 242, "col_offset": 41, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 242, "col_offset": 51, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "vendor_tickers", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "ticker_cycle", "type": "int"}, {"lineNumber": 251, "col_offset": 32, "nodeName": "load_ticker", "type": "Any"}, {"lineNumber": 251, "col_offset": 51, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "loader", "type": "Any"}, {"lineNumber": 288, "col_offset": 14, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 289, "col_offset": 16, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 290, "col_offset": 32, "nodeName": "fname", "type": "Any"}, {"lineNumber": 311, "col_offset": 64, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 316, "col_offset": 54, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 318, "col_offset": 96, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 319, "col_offset": 65, "nodeName": "cut", "type": "Union[str, Any]"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "folder_time_series_data", "type": "str"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "LoggerManager", "type": "Type[pythalesians.util.loggermanager.LoggerManager]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "LoaderBBGCOM", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "_bbg_default_api", "type": "str"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "loader", "type": "pythalesians.market.loaders.lowlevel.bbg.loaderbbgopen.LoaderBBGOpen"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "LoaderQuandl", "type": "Type[pythalesians.market.loaders.lowlevel.quandl.loaderquandl.LoaderQuandl]"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "source", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "loader", "type": "pythalesians.market.loaders.lowlevel.brokers.loaderdukascopy.LoaderDukasCopy"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "create_tickers", "type": "bool"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "config", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 140, "col_offset": 70, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 140, "col_offset": 96, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "loader", "type": "Any"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "kill_session", "type": "Any"}, {"lineNumber": 153, "col_offset": 60, "nodeName": "kill_session", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "category", "type": "Any"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "filter_time_series", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 168, "col_offset": 67, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 194, "col_offset": 49, "nodeName": "fname", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "tsf", "type": "pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 242, "col_offset": 41, "nodeName": "copy", "type": "module"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "ticker_cycle", "type": "int"}, {"lineNumber": 251, "col_offset": 32, "nodeName": "loader", "type": "Any"}, {"lineNumber": 255, "col_offset": 19, "nodeName": "empty", "type": "Any"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "name", "type": "str"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "LoaderBBGOpen", "type": "Type[pythalesians.market.loaders.lowlevel.bbg.loaderbbgopen.LoaderBBGOpen]"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "LoaderDukasCopy", "type": "Type[pythalesians.market.loaders.lowlevel.brokers.loaderdukascopy.LoaderDukasCopy]"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "source", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "loader", "type": "pythalesians.market.loaders.lowlevel.pandasweb.loaderpandasweb.LoaderPandasWeb"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "create_tickers", "type": "bool"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 153, "col_offset": 60, "nodeName": "loader", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "tsf", "type": "pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter"}, {"lineNumber": 246, "col_offset": 61, "nodeName": "vendor_tickers", "type": "List[Any]"}, {"lineNumber": 255, "col_offset": 19, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "index", "type": "Any"}, {"lineNumber": 257, "col_offset": 40, "nodeName": "astype", "type": "Any"}, {"lineNumber": 260, "col_offset": 23, "nodeName": "data_frame_agg", "type": "None"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 318, "col_offset": 84, "nodeName": "cut", "type": "Union[str, Any]"}, {"lineNumber": 319, "col_offset": 52, "nodeName": "freq", "type": "Any"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "LoaderPandasWeb", "type": "Type[pythalesians.market.loaders.lowlevel.pandasweb.loaderpandasweb.LoaderPandasWeb]"}, {"lineNumber": 246, "col_offset": 61, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 246, "col_offset": 96, "nodeName": "ticker_cycle", "type": "int"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 257, "col_offset": 40, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 318, "col_offset": 71, "nodeName": "freq", "type": "Any"}, {"lineNumber": 319, "col_offset": 37, "nodeName": "source", "type": "Any"}, {"lineNumber": 319, "col_offset": 20, "nodeName": "category", "type": "Union[Any, str]"}, {"lineNumber": 318, "col_offset": 56, "nodeName": "source", "type": "Any"}, {"lineNumber": 318, "col_offset": 39, "nodeName": "category", "type": "Union[Any, str]"}]