[{"lineNumber": 1, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "LoaderTemplate", "type": "Type[pythalesians.market.loaders.lowlevel.loadertemplate.LoaderTemplate]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "load_ticker", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "kill_session", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "get_tick", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "download_tick", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "fetch_file", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "fetch_tick", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "write_tick", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "chunks", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "retrieve_df", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "hour_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "parse_tick_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "chunks", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "get_daily_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "tick_name", "type": "str"}, {"lineNumber": 334, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "time_series_request_vendor", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "data_frame", "type": "None"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "df_list", "type": "List[nothing]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "tick", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "dukascopy_write_temp_tick_disk", "type": "bool"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "tick_request", "type": "None"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "data_file", "type": "file"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "divisor", "type": "int"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 224, "col_offset": 10, "nodeName": "delta_t", "type": "Any"}, {"lineNumber": 226, "col_offset": 10, "nodeName": "delta_hours", "type": "Any"}, {"lineNumber": 228, "col_offset": 14, "nodeName": "n", "type": "int"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "chunks_list", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "parsed_list", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "date", "type": "List[Any]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "chunks_list", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 56, "col_offset": 48, "nodeName": "__name__", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "setLevel", "type": "Callable[[Union[int, str, unicode]], None]"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "WARNING", "type": "int"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "construct_vendor_time_series_request", "type": "Callable"}, {"lineNumber": 76, "col_offset": 79, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "freq", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "freq", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "download_tick", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "time_series_request_vendor", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "returned_fields", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "columns", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "returned_tickers", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "fields", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "tickers", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "ticker_combined", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "columns", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "ticker_combined", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "fetch_tick", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "out_path", "type": "str"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "out_path", "type": "str"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "content", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "n", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "date", "type": "Any"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "tuple", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "parse_tick_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 205, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 205, "col_offset": 49, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "drop", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "divisor", "type": "int"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 218, "col_offset": 34, "nodeName": "divisor", "type": "int"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "divisor", "type": "int"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "end_date", "type": "Any"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "start_date", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "chunks", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 236, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "d", "type": "Tuple[Any, ...]"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "date", "type": "List[Any]"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "parsed_list", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "n", "type": "Any"}, {"lineNumber": 254, "col_offset": 18, "nodeName": "n", "type": "int"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "logging", "type": "module"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "get_tick", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 91, "col_offset": 60, "nodeName": "time_series_request_vendor", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "translate_from_vendor_field", "type": "Callable[[Any, Any], List[Any]]"}, {"lineNumber": 112, "col_offset": 54, "nodeName": "returned_fields", "type": "Any"}, {"lineNumber": 112, "col_offset": 71, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "translate_from_vendor_ticker", "type": "Callable"}, {"lineNumber": 113, "col_offset": 56, "nodeName": "returned_tickers", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 74, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 130, "col_offset": 70, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "df_list", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "hour", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "tick_name", "type": "str"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "dukascopy_base_url", "type": "str"}, {"lineNumber": 160, "col_offset": 64, "nodeName": "tick_path", "type": "str"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 163, "col_offset": 76, "nodeName": "tick_path", "type": "str"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "write_tick", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "tick", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "out_path", "type": "str"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "retrieve_df", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 59, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 172, "col_offset": 67, "nodeName": "time", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "tick_request", "type": "requests.models.Response"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "data_file", "type": "file"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "data_file", "type": "file"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "list", "type": "Any"}, {"lineNumber": 202, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "pandas", "type": "Any"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "tuple", "type": "Any"}, {"lineNumber": 207, "col_offset": 100, "nodeName": "date", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "df", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "df", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "days", "type": "Any"}, {"lineNumber": 226, "col_offset": 50, "nodeName": "seconds", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 228, "col_offset": 30, "nodeName": "delta_hours", "type": "Any"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "unpack", "type": "Callable[[Union[str, unicode], Union[array.array[int], str, bytearray, buffer, memoryview, mmap.mmap]], Tuple[Any, ...]]"}, {"lineNumber": 242, "col_offset": 40, "nodeName": "row", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "d", "type": "Tuple[Any, ...]"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "list", "type": "Any"}, {"lineNumber": 256, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "LoaderTemplate", "type": "Type[pythalesians.market.loaders.lowlevel.loadertemplate.LoaderTemplate]"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "LoggerManager", "type": "Type[pythalesians.util.loggermanager.LoggerManager]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "tz_localize", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 109, "col_offset": 74, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 78, "nodeName": "returned_fields", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "fields", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "hour_range", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "start_date", "type": "Any"}, {"lineNumber": 134, "col_offset": 66, "nodeName": "finish_date", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "pandas", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "time", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "rjust", "type": "Callable[..., str]"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "rjust", "type": "Callable[..., str]"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "rjust", "type": "Callable[..., str]"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "rjust", "type": "Callable[..., str]"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "temp_pythalesians_folder", "type": "str"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 165, "col_offset": 34, "nodeName": "out_path", "type": "str"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 172, "col_offset": 36, "nodeName": "decompress", "type": "Any"}, {"lineNumber": 172, "col_offset": 52, "nodeName": "tick", "type": "Any"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 183, "col_offset": 44, "nodeName": "tick_url", "type": "str"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 202, "col_offset": 39, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 202, "col_offset": 59, "nodeName": "n", "type": "Union[Any, int]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "delta_t", "type": "Any"}, {"lineNumber": 226, "col_offset": 50, "nodeName": "delta_t", "type": "Any"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "start_date", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "struct", "type": "module"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "date", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "parsed_list", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 256, "col_offset": 39, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 256, "col_offset": 59, "nodeName": "n", "type": "Union[int, Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "ticker_combined", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 134, "col_offset": 66, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 150, "col_offset": 69, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 150, "col_offset": 73, "nodeName": "time", "type": "Any"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 36, "nodeName": "lzma", "type": "Any"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "requests", "type": "module"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "n", "type": "Union[Any, int]"}, {"lineNumber": 202, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 202, "col_offset": 52, "nodeName": "list", "type": "Any"}, {"lineNumber": 229, "col_offset": 33, "nodeName": "timedelta", "type": "Type[datetime.timedelta]"}, {"lineNumber": 229, "col_offset": 58, "nodeName": "n", "type": "int"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "timedelta", "type": "Type[datetime.timedelta]"}, {"lineNumber": 256, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 256, "col_offset": 27, "nodeName": "n", "type": "Union[int, Any]"}, {"lineNumber": 256, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 256, "col_offset": 52, "nodeName": "list", "type": "Any"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "time_series_request_vendor", "type": "Any"}, {"lineNumber": 118, "col_offset": 58, "nodeName": "fields", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "year", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "month", "type": "Any"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "day", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "hour", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 166, "col_offset": 54, "nodeName": "out_path", "type": "str"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 167, "col_offset": 48, "nodeName": "out_path", "type": "str"}, {"lineNumber": 243, "col_offset": 50, "nodeName": "d", "type": "Tuple[Any, ...]"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "tickers", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "time", "type": "Any"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "time", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "time", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "time", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 118, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "os", "type": "module"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "os", "type": "module"}]