[{"lineNumber": 1, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "LoaderTemplate", "type": "Type[pythalesians.market.loaders.lowlevel.loadertemplate.LoaderTemplate]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "load_ticker", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "kill_session", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "get_tick", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "download_tick", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "fetch_file", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "fetch_tick", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "write_tick", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "chunks", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "retrieve_df", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "hour_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "get_daily_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "tick_name", "type": "str"}, {"lineNumber": 305, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "dc", "type": "LoaderDukasCopy"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "time_series_request_vendor", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "data_frame", "type": "None"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "df_list", "type": "List[nothing]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "tick", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "dukascopy_write_temp_tick_disk", "type": "bool"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "tick_request", "type": "None"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "data_file", "type": "file"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "divisor", "type": "int"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 223, "col_offset": 10, "nodeName": "delta_t", "type": "Any"}, {"lineNumber": 225, "col_offset": 10, "nodeName": "delta_hours", "type": "Any"}, {"lineNumber": 226, "col_offset": 14, "nodeName": "n", "type": "int"}, {"lineNumber": 309, "col_offset": 9, "nodeName": "LoaderDukasCopy", "type": "Type[LoaderDukasCopy]"}, {"lineNumber": 311, "col_offset": 26, "nodeName": "TimeSeriesRequest", "type": "Type[pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "load_ticker", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "time_series_request", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "__name__", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "setLevel", "type": "Callable[[Union[int, str, unicode]], None]"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "WARNING", "type": "int"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "construct_vendor_time_series_request", "type": "Callable"}, {"lineNumber": 79, "col_offset": 79, "nodeName": "time_series_request", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "freq", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "freq", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "download_tick", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "time_series_request_vendor", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "returned_fields", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "columns", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "returned_tickers", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "fields", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "tickers", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "ticker_combined", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "columns", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "ticker_combined", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "fetch_tick", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "out_path", "type": "str"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "out_path", "type": "str"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "content", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "n", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "date", "type": "Any"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "tuple", "type": "Any"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "parse_tick_data", "type": "Any"}, {"lineNumber": 204, "col_offset": 93, "nodeName": "data", "type": "Any"}, {"lineNumber": 204, "col_offset": 99, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "drop", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "divisor", "type": "int"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 217, "col_offset": 34, "nodeName": "divisor", "type": "int"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "divisor", "type": "int"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "end_date", "type": "Any"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "start_date", "type": "Any"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "dc", "type": "LoaderDukasCopy"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "logging", "type": "module"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "time_series_request", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "time_series_request", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "get_tick", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "time_series_request", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 94, "col_offset": 60, "nodeName": "time_series_request_vendor", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "translate_from_vendor_field", "type": "Callable[[Any, Any], List[Any]]"}, {"lineNumber": 115, "col_offset": 54, "nodeName": "returned_fields", "type": "Any"}, {"lineNumber": 115, "col_offset": 71, "nodeName": "time_series_request", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "translate_from_vendor_ticker", "type": "Callable"}, {"lineNumber": 116, "col_offset": 56, "nodeName": "returned_tickers", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 74, "nodeName": "time_series_request", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "time_series_request", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 133, "col_offset": 70, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "df_list", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "hour", "type": "Any"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "tick_name", "type": "str"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "dukascopy_base_url", "type": "str"}, {"lineNumber": 159, "col_offset": 64, "nodeName": "tick_path", "type": "str"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 162, "col_offset": 76, "nodeName": "tick_path", "type": "str"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "write_tick", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "tick", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "out_path", "type": "str"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "retrieve_df", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 171, "col_offset": 59, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 171, "col_offset": 67, "nodeName": "time", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "tick_request", "type": "requests.models.Response"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "data_file", "type": "file"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "data_file", "type": "file"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "list", "type": "Any"}, {"lineNumber": 201, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "parserows", "type": "module"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "pandas", "type": "Any"}, {"lineNumber": 206, "col_offset": 37, "nodeName": "tuple", "type": "Any"}, {"lineNumber": 206, "col_offset": 100, "nodeName": "date", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "df", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "df", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "days", "type": "Any"}, {"lineNumber": 225, "col_offset": 50, "nodeName": "seconds", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 226, "col_offset": 30, "nodeName": "delta_hours", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "LoaderTemplate", "type": "Type[pythalesians.market.loaders.lowlevel.loadertemplate.LoaderTemplate]"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "LoggerManager", "type": "Type[pythalesians.util.loggermanager.LoggerManager]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "tz_localize", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 112, "col_offset": 74, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 78, "nodeName": "returned_fields", "type": "Any"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "fields", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "hour_range", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "start_date", "type": "Any"}, {"lineNumber": 137, "col_offset": 67, "nodeName": "finish_date", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "pandas", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "time", "type": "Any"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "rjust", "type": "Callable[..., str]"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "rjust", "type": "Callable[..., str]"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "rjust", "type": "Callable[..., str]"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "rjust", "type": "Callable[..., str]"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "temp_pythalesians_folder", "type": "str"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "out_path", "type": "str"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "decompress", "type": "Any"}, {"lineNumber": 171, "col_offset": 52, "nodeName": "tick", "type": "Any"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 182, "col_offset": 44, "nodeName": "tick_url", "type": "str"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 201, "col_offset": 39, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 201, "col_offset": 59, "nodeName": "n", "type": "Union[int, Any]"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "brokers", "type": "module"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "delta_t", "type": "Any"}, {"lineNumber": 225, "col_offset": 50, "nodeName": "delta_t", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "start_date", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "data_frame", "type": "Any"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "ticker_combined", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "time_series_request", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 137, "col_offset": 67, "nodeName": "time_series_request", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "self", "type": "LoaderDukasCopy"}, {"lineNumber": 149, "col_offset": 69, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 149, "col_offset": 73, "nodeName": "time", "type": "Any"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "lzma", "type": "Any"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "requests", "type": "module"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 201, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "n", "type": "Union[int, Any]"}, {"lineNumber": 201, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 201, "col_offset": 52, "nodeName": "list", "type": "Any"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "lowlevel", "type": "module"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "timedelta", "type": "Type[datetime.timedelta]"}, {"lineNumber": 227, "col_offset": 58, "nodeName": "n", "type": "int"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "time_series_request_vendor", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 121, "col_offset": 58, "nodeName": "fields", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "year", "type": "Any"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "month", "type": "Any"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "day", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "hour", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 165, "col_offset": 38, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 165, "col_offset": 54, "nodeName": "out_path", "type": "str"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 166, "col_offset": 48, "nodeName": "out_path", "type": "str"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "loaders", "type": "module"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "tickers", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "time", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "time", "type": "Any"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "time", "type": "Any"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "time", "type": "Any"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 165, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "market", "type": "module"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 165, "col_offset": 38, "nodeName": "os", "type": "module"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "pythalesians", "type": "module"}]