[{"lineNumber": 1, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "StrategyTemplate", "type": "Type[pythalesians.backtest.popular.strategytemplate.StrategyTemplate]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "fill_backtest_request", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "fill_assets", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "construct_signal", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "construct_strategy_benchmark", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "tsfactory", "type": "pythalesians.market.loaders.lighttimeseriesfactory.LightTimeSeriesFactory"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "DUMP_CSV", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "DUMP_PATH", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "FINAL_STRATEGY", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "SCALE_FACTOR", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "DEFAULT_PLOT_ENGINE", "type": "str"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "start_date", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "finish_date", "type": "datetime.datetime"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "spot_tc_bp", "type": "float"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "ann_factor", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "plot_start", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "calc_stats", "type": "bool"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "write_csv", "type": "bool"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "plot_interim", "type": "bool"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "include_benchmark", "type": "bool"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "signal_vol_adjust", "type": "bool"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "signal_vol_target", "type": "float"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "signal_vol_max_leverage", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "signal_vol_periods", "type": "int"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "signal_vol_obs_in_year", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "signal_vol_rebalance_freq", "type": "str"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "signal_vol_resample_freq", "type": "None"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "portfolio_vol_adjust", "type": "bool"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "portfolio_vol_target", "type": "float"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "portfolio_vol_max_leverage", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "portfolio_vol_periods", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "portfolio_vol_obs_in_year", "type": "int"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "portfolio_vol_rebalance_freq", "type": "str"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "portfolio_vol_resample_freq", "type": "None"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "sma_period", "type": "int"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "basket_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "full_bkt", "type": "List[str]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "asset_df", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "spot_df", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "asset_df", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "spot_df2", "type": "None"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "tech_ind", "type": "pythalesians.timeseries.techind.techindicator.TechIndicator"}, {"lineNumber": 148, "col_offset": 63, "nodeName": "signal_df", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "signal_df", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "columns", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "ta", "type": "pythalesians.backtest.stratanalysis.tradeanalysis.TradeAnalysis"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "parameter_type", "type": "str"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "tc", "type": "List[Union[int, float]]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "tradeanalysis", "type": "pythalesians.backtest.stratanalysis.tradeanalysis.TradeAnalysis"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "StrategyFXCTA_Example"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 39, "col_offset": 48, "nodeName": "__name__", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "StrategyFXCTA_Example"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "LightTimeSeriesFactory", "type": "Type[pythalesians.market.loaders.lighttimeseriesfactory.LightTimeSeriesFactory]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "StrategyFXCTA_Example"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "StrategyFXCTA_Example"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "StrategyFXCTA_Example"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "StrategyFXCTA_Example"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "StrategyFXCTA_Example"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "BacktestRequest", "type": "Type[pythalesians.market.requests.backtestrequest.BacktestRequest]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "utcnow", "type": "Callable"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "tech_params", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "basket_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "fill_backtest_request", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "TimeSeriesRequest", "type": "Type[pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest]"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "harvest_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 54, "nodeName": "time_series_request", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "asset_df", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "asset_df", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "spot_df", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "spot_df2", "type": "None"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "basket_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "TechIndicator", "type": "Type[pythalesians.timeseries.techind.techindicator.TechIndicator]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "create_tech_ind", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "spot_df", "type": "Any"}, {"lineNumber": 148, "col_offset": 49, "nodeName": "tech_params", "type": "Any"}, {"lineNumber": 148, "col_offset": 75, "nodeName": "get_signal", "type": "Callable[[], Any]"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "TimeSeriesRequest", "type": "Type[pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest]"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "harvest_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 48, "nodeName": "tsr_indices", "type": "pythalesians.market.requests.timeseriesrequest.TimeSeriesRequest"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "StrategyFXCTA_Example", "type": "Type[StrategyFXCTA_Example]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "construct_strategy", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "plot_strategy_pnl", "type": "Callable[[], None]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "plot_strategy_leverage", "type": "Callable[[], None]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "plot_strategy_group_pnl_trades", "type": "Callable[[], None]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "plot_strategy_group_benchmark_pnl", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "plot_strategy_group_leverage", "type": "Callable[[], None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "plot_strategy_group_benchmark_annualised_pnl", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "StrategyFXCTA_Example", "type": "Type[StrategyFXCTA_Example]"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "TradeAnalysis", "type": "Type[pythalesians.backtest.stratanalysis.tradeanalysis.TradeAnalysis]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "run_arbitrary_sensitivity", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 37, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "run_tc_shock", "type": "Callable[..., Any]"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "run_day_of_month_analysis", "type": "Callable[[Any], Any]"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "StrategyFXCTA_Example", "type": "Type[StrategyFXCTA_Example]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "construct_strategy", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "TradeAnalysis", "type": "Type[pythalesians.backtest.stratanalysis.tradeanalysis.TradeAnalysis]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "run_strategy_returns_stats", "type": "Callable[[Any], None]"}, {"lineNumber": 231, "col_offset": 49, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "full_bkt", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "basket_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "self", "type": "StrategyFXCTA_Example"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "start_date", "type": "str"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "finish_date", "type": "datetime.datetime"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "full_bkt", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "vendor_tickers", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "tsfactory", "type": "pythalesians.market.loaders.lighttimeseriesfactory.LightTimeSeriesFactory"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "tech_ind", "type": "pythalesians.timeseries.techind.techindicator.TechIndicator"}, {"lineNumber": 148, "col_offset": 75, "nodeName": "tech_ind", "type": "pythalesians.timeseries.techind.techindicator.TechIndicator"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "tsfactory", "type": "pythalesians.market.loaders.lighttimeseriesfactory.LightTimeSeriesFactory"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 169, "col_offset": 47, "nodeName": "columns", "type": "List[Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "ta", "type": "pythalesians.backtest.stratanalysis.tradeanalysis.TradeAnalysis"}, {"lineNumber": 213, "col_offset": 52, "nodeName": "parameter_list", "type": "List[Dict[str, bool]]"}, {"lineNumber": 214, "col_offset": 60, "nodeName": "pretty_portfolio_names", "type": "List[str]"}, {"lineNumber": 215, "col_offset": 52, "nodeName": "parameter_type", "type": "str"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "ta", "type": "pythalesians.backtest.stratanalysis.tradeanalysis.TradeAnalysis"}, {"lineNumber": 219, "col_offset": 39, "nodeName": "tc", "type": "List[Union[int, float]]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "ta", "type": "pythalesians.backtest.stratanalysis.tradeanalysis.TradeAnalysis"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "strategy", "type": "StrategyFXCTA_Example"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "tradeanalysis", "type": "pythalesians.backtest.stratanalysis.tradeanalysis.TradeAnalysis"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "StrategyTemplate", "type": "Type[pythalesians.backtest.popular.strategytemplate.StrategyTemplate]"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "self", "type": "StrategyFXCTA_Example"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "LoggerManager", "type": "Type[pythalesians.util.loggermanager.LoggerManager]"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "strftime", "type": "Callable[[Union[str, unicode]], str]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "datetime", "type": "module"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "full_bkt", "type": "List[str]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "StrategyFXCTA_Example"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "br", "type": "pythalesians.market.requests.backtestrequest.BacktestRequest"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "self", "type": "StrategyFXCTA_Example"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "pandas", "type": "Any"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "utcnow", "type": "Callable"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "self", "type": "StrategyFXCTA_Example"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "split", "type": "Any"}, {"lineNumber": 169, "col_offset": 47, "nodeName": "df", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "full_bkt", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "today", "type": "Callable"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 131, "col_offset": 63, "nodeName": "strptime", "type": "Any"}, {"lineNumber": 131, "col_offset": 88, "nodeName": "x", "type": "Any"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "datetime", "type": "module"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "date", "type": "Type[datetime.date]"}, {"lineNumber": 131, "col_offset": 63, "nodeName": "datetime", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "datetime", "type": "module"}, {"lineNumber": 131, "col_offset": 63, "nodeName": "pandas", "type": "Any"}]