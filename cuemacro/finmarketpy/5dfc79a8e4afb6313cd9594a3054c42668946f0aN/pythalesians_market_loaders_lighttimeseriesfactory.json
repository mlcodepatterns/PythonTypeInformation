[{"lineNumber": 1, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "set_bloomberg_com_api", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "set_bloomberg_open_api", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "flush_cache", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "set_intraday_code", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "get_loader", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "harvest_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "get_time_series_cached", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "create_time_series_hash_key", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "download_intraday_tick", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "fetch_single_time_series", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "fetch_group_time_series", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "download_daily", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "create_category_key", "type": "Callable[..., Any]"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "create_cache_file_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "_time_series_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 466, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "time_series_filter", "type": "pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "time_series_io", "type": "pythalesians.market.loaders.timeseriesio.TimeSeriesIO"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "_bbg_default_api", "type": "str"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "bbg_default_api", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "_intraday_code", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "_bbg_default_api", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "_bbg_default_api", "type": "str"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_time_series_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_intraday_code", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "code", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "loader", "type": "None"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "loader", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "loader", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "create_tickers", "type": "bool"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "create_tickers", "type": "bool"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "tsf", "type": "pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "fname", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "data_frame_agg", "type": "None"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "time_series_calcs", "type": "pythalesians.timeseries.calcs.timeseriescalcs.TimeSeriesCalcs"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "ticker_cycle", "type": "int"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "data_frame_group", "type": "List[Any]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "data_frame_agg", "type": "None"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "time_series_calcs", "type": "pythalesians.timeseries.calcs.timeseriescalcs.TimeSeriesCalcs"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "thread_no", "type": "int"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "data_frame_group", "type": "Any"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "fname", "type": "Any"}, {"lineNumber": 429, "col_offset": 41, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 431, "col_offset": 15, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "category", "type": "str"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "cut", "type": "str"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "environment", "type": "Any"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "environment", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "source", "type": "Any"}, {"lineNumber": 453, "col_offset": 17, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "freq", "type": "Any"}, {"lineNumber": 454, "col_offset": 15, "nodeName": "freq", "type": "Any"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "key", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "__name__", "type": "str"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "TimeSeriesFilter", "type": "Type[pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "TimeSeriesIO", "type": "Type[pythalesians.market.loaders.timeseriesio.TimeSeriesIO]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "source", "type": "Any"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "get_loader", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "create_tickers", "type": "bool"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "freq", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "cache_algo", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "cache_algo", "type": "Any"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "TimeSeriesFilter", "type": "Type[pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter]"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "cache_algo", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "freq", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "ticker", "type": "None"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "create_time_series_hash_key", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 197, "col_offset": 70, "nodeName": "ticker", "type": "Optional[Any]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "fname", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "_time_series_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "data_frame", "type": "nothing"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "tsf", "type": "pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "create_cache_file_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "TimeSeriesCalcs", "type": "Type[pythalesians.timeseries.calcs.timeseriescalcs.TimeSeriesCalcs]"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 286, "col_offset": 19, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "time_series_request_list", "type": "List[Any]"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 304, "col_offset": 28, "nodeName": "load_ticker", "type": "Any"}, {"lineNumber": 304, "col_offset": 89, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 306, "col_offset": 11, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "TimeSeriesCalcs", "type": "Type[pythalesians.timeseries.calcs.timeseriescalcs.TimeSeriesCalcs]"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "time_series_factory_thread_technique", "type": "str"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "time_series_factory_thread_no", "type": "Dict[str, int]"}, {"lineNumber": 337, "col_offset": 11, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 337, "col_offset": 54, "nodeName": "time_series_factory_thread_no", "type": "Dict[str, int]"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "thread_no", "type": "int"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "Pool", "type": "Any"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "thread_no", "type": "int"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "map_async", "type": "Any"}, {"lineNumber": 343, "col_offset": 32, "nodeName": "fetch_single_time_series", "type": "Callable[[Any], Any]"}, {"lineNumber": 343, "col_offset": 63, "nodeName": "time_series_request_list", "type": "List[Any]"}, {"lineNumber": 344, "col_offset": 27, "nodeName": "get", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "join", "type": "Any"}, {"lineNumber": 373, "col_offset": 11, "nodeName": "data_frame_group", "type": "Any"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "data_frame_group", "type": "List[Any]"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "time_series_request_list", "type": "List[Any]"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "group_size", "type": "int"}, {"lineNumber": 415, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 427, "col_offset": 14, "nodeName": "create_category_key", "type": "Callable[..., Any]"}, {"lineNumber": 427, "col_offset": 39, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "create_cache_file_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 428, "col_offset": 44, "nodeName": "key", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "_time_series_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 450, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 450, "col_offset": 19, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 450, "col_offset": 53, "nodeName": "category", "type": "Any"}, {"lineNumber": 450, "col_offset": 64, "nodeName": "category", "type": "Any"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 453, "col_offset": 17, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 454, "col_offset": 15, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 456, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 456, "col_offset": 48, "nodeName": "cut", "type": "Any"}, {"lineNumber": 456, "col_offset": 54, "nodeName": "cut", "type": "Any"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 458, "col_offset": 33, "nodeName": "key", "type": "Any"}, {"lineNumber": 459, "col_offset": 14, "nodeName": "key", "type": "Any"}, {"lineNumber": 464, "col_offset": 59, "nodeName": "filename", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "_bbg_default_api", "type": "str"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "loader", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "source", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "loader", "type": "pythalesians.market.loaders.lowlevel.quandl.loaderquandl.LoaderQuandl"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "get_tickers_list_for_category", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "category", "type": "Any"}, {"lineNumber": 142, "col_offset": 42, "nodeName": "source", "type": "Any"}, {"lineNumber": 142, "col_offset": 70, "nodeName": "freq", "type": "Any"}, {"lineNumber": 142, "col_offset": 96, "nodeName": "cut", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "download_intraday_tick", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 57, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 146, "col_offset": 78, "nodeName": "loader", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "download_daily", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 51, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 149, "col_offset": 72, "nodeName": "loader", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "_time_series_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "TimeSeriesFilter", "type": "Type[pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter]"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "filter_time_series", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 42, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 204, "col_offset": 63, "nodeName": "data_frame", "type": "nothing"}, {"lineNumber": 223, "col_offset": 21, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 225, "col_offset": 43, "nodeName": "create_category_key", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 68, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 225, "col_offset": 89, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 253, "col_offset": 53, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "data_frame_group", "type": "List[Any]"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 293, "col_offset": 53, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "fetch_group_time_series", "type": "Callable[[Any], Any]"}, {"lineNumber": 301, "col_offset": 48, "nodeName": "time_series_request_list", "type": "List[Any]"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "empty", "type": "Any"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 338, "col_offset": 24, "nodeName": "time_series_factory_thread_no", "type": "Dict[str, int]"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "pool", "type": "Any"}, {"lineNumber": 343, "col_offset": 32, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 344, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 374, "col_offset": 32, "nodeName": "i", "type": "Any"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "data_frame_group", "type": "List[Any]"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "time_series_factory_thread_no", "type": "Dict[str, int]"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "load_ticker", "type": "Any"}, {"lineNumber": 406, "col_offset": 48, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "group_size", "type": "int"}, {"lineNumber": 412, "col_offset": 32, "nodeName": "group_size", "type": "int"}, {"lineNumber": 415, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 415, "col_offset": 64, "nodeName": "group_size", "type": "int"}, {"lineNumber": 416, "col_offset": 16, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "fetch_group_time_series", "type": "Callable[[Any], Any]"}, {"lineNumber": 425, "col_offset": 58, "nodeName": "time_series_request_list", "type": "List[Any]"}, {"lineNumber": 427, "col_offset": 14, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 429, "col_offset": 32, "nodeName": "fname", "type": "Any"}, {"lineNumber": 450, "col_offset": 64, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 456, "col_offset": 54, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 458, "col_offset": 116, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 459, "col_offset": 85, "nodeName": "cut", "type": "Union[str, Any]"}, {"lineNumber": 464, "col_offset": 15, "nodeName": "folder_time_series_data", "type": "str"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "LoggerManager", "type": "Type[pythalesians.util.loggermanager.LoggerManager]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "LoaderBBGCOM", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "_bbg_default_api", "type": "str"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "loader", "type": "pythalesians.market.loaders.lowlevel.bbg.loaderbbgopen.LoaderBBGOpen"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "LoaderQuandl", "type": "Type[pythalesians.market.loaders.lowlevel.quandl.loaderquandl.LoaderQuandl]"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "source", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "loader", "type": "pythalesians.market.loaders.lowlevel.brokers.loaderdukascopy.LoaderDukasCopy"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "create_tickers", "type": "bool"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "config", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 142, "col_offset": 42, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 142, "col_offset": 70, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 142, "col_offset": 96, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 166, "col_offset": 31, "nodeName": "category", "type": "Any"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "filter_time_series", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 170, "col_offset": 67, "nodeName": "data_frame_agg", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 200, "col_offset": 49, "nodeName": "fname", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "tsf", "type": "pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter"}, {"lineNumber": 225, "col_offset": 43, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 250, "col_offset": 52, "nodeName": "time_series_factory_thread_no", "type": "Dict[str, int]"}, {"lineNumber": 252, "col_offset": 45, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 252, "col_offset": 55, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 255, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 255, "col_offset": 27, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "vendor_tickers", "type": "Union[Any, List[Any]]"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "ticker_cycle", "type": "int"}, {"lineNumber": 261, "col_offset": 36, "nodeName": "load_ticker", "type": "Any"}, {"lineNumber": 261, "col_offset": 55, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 284, "col_offset": 33, "nodeName": "pandas_outer_join", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 69, "nodeName": "data_frame_group", "type": "List[Any]"}, {"lineNumber": 292, "col_offset": 45, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 292, "col_offset": 55, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 295, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 295, "col_offset": 27, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "vendor_tickers", "type": "Any"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "ticker_cycle", "type": "int"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 304, "col_offset": 28, "nodeName": "get_loader", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 44, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "index", "type": "Any"}, {"lineNumber": 312, "col_offset": 20, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 315, "col_offset": 19, "nodeName": "freq", "type": "Any"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 337, "col_offset": 11, "nodeName": "time_series_request_list", "type": "List[Any]"}, {"lineNumber": 337, "col_offset": 54, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 338, "col_offset": 66, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 374, "col_offset": 38, "nodeName": "i", "type": "Any"}, {"lineNumber": 374, "col_offset": 43, "nodeName": "data_frame_group", "type": "Any"}, {"lineNumber": 377, "col_offset": 33, "nodeName": "pandas_outer_join", "type": "Callable[[Any], Any]"}, {"lineNumber": 377, "col_offset": 69, "nodeName": "data_frame_group", "type": "List[Any]"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "loader", "type": "Any"}, {"lineNumber": 415, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 415, "col_offset": 34, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 416, "col_offset": 45, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 416, "col_offset": 55, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 417, "col_offset": 53, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 419, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 419, "col_offset": 27, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 423, "col_offset": 48, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "LoaderBBGOpen", "type": "Type[pythalesians.market.loaders.lowlevel.bbg.loaderbbgopen.LoaderBBGOpen]"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "LoaderDukasCopy", "type": "Type[pythalesians.market.loaders.lowlevel.brokers.loaderdukascopy.LoaderDukasCopy]"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "source", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "loader", "type": "pythalesians.market.loaders.lowlevel.pandasweb.loaderpandasweb.LoaderPandasWeb"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "create_tickers", "type": "bool"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 166, "col_offset": 31, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "tsf", "type": "pythalesians.timeseries.calcs.timeseriesfilter.TimeSeriesFilter"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 252, "col_offset": 45, "nodeName": "copy", "type": "module"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "ticker_cycle", "type": "int"}, {"lineNumber": 261, "col_offset": 36, "nodeName": "loader", "type": "Any"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "empty", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "name", "type": "str"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 284, "col_offset": 33, "nodeName": "time_series_calcs", "type": "pythalesians.timeseries.calcs.timeseriescalcs.TimeSeriesCalcs"}, {"lineNumber": 292, "col_offset": 45, "nodeName": "copy", "type": "module"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "time_series_request_single", "type": "Any"}, {"lineNumber": 297, "col_offset": 35, "nodeName": "ticker_cycle", "type": "int"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "time_series_request_list", "type": "List[Any]"}, {"lineNumber": 304, "col_offset": 28, "nodeName": "self", "type": "LightTimeSeriesFactory"}, {"lineNumber": 304, "col_offset": 44, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 312, "col_offset": 40, "nodeName": "astype", "type": "Any"}, {"lineNumber": 315, "col_offset": 19, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 316, "col_offset": 40, "nodeName": "resample", "type": "Any"}, {"lineNumber": 338, "col_offset": 24, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 374, "col_offset": 63, "nodeName": "i", "type": "Any"}, {"lineNumber": 377, "col_offset": 33, "nodeName": "time_series_calcs", "type": "pythalesians.timeseries.calcs.timeseriescalcs.TimeSeriesCalcs"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 415, "col_offset": 34, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 416, "col_offset": 45, "nodeName": "copy", "type": "module"}, {"lineNumber": 417, "col_offset": 53, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 417, "col_offset": 81, "nodeName": "i", "type": "int"}, {"lineNumber": 421, "col_offset": 24, "nodeName": "vendor_tickers", "type": "Any"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "time_series_request_list", "type": "List[Any]"}, {"lineNumber": 458, "col_offset": 104, "nodeName": "cut", "type": "Union[str, Any]"}, {"lineNumber": 459, "col_offset": 72, "nodeName": "freq", "type": "Any"}, {"lineNumber": 464, "col_offset": 15, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "LoaderPandasWeb", "type": "Type[pythalesians.market.loaders.lowlevel.pandasweb.loaderpandasweb.LoaderPandasWeb]"}, {"lineNumber": 250, "col_offset": 52, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 256, "col_offset": 65, "nodeName": "vendor_tickers", "type": "List[Any]"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "index", "type": "Any"}, {"lineNumber": 267, "col_offset": 44, "nodeName": "astype", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 269, "col_offset": 48, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 296, "col_offset": 65, "nodeName": "vendor_tickers", "type": "List[Any]"}, {"lineNumber": 312, "col_offset": 40, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 316, "col_offset": 40, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 338, "col_offset": 66, "nodeName": "time_series_request_list", "type": "List[Any]"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 410, "col_offset": 33, "nodeName": "tickers", "type": "Any"}, {"lineNumber": 410, "col_offset": 64, "nodeName": "time_series_factory_thread_no", "type": "Dict[str, int]"}, {"lineNumber": 417, "col_offset": 83, "nodeName": "i", "type": "int"}, {"lineNumber": 417, "col_offset": 87, "nodeName": "group_size", "type": "int"}, {"lineNumber": 421, "col_offset": 24, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 421, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 256, "col_offset": 65, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 256, "col_offset": 100, "nodeName": "ticker_cycle", "type": "int"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 267, "col_offset": 44, "nodeName": "data_frame_single", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "data_frame_group", "type": "List[Any]"}, {"lineNumber": 296, "col_offset": 65, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 296, "col_offset": 100, "nodeName": "ticker_cycle", "type": "int"}, {"lineNumber": 410, "col_offset": 33, "nodeName": "time_series_request", "type": "Any"}, {"lineNumber": 421, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 421, "col_offset": 65, "nodeName": "group_size", "type": "int"}, {"lineNumber": 458, "col_offset": 91, "nodeName": "freq", "type": "Any"}, {"lineNumber": 459, "col_offset": 57, "nodeName": "source", "type": "Any"}, {"lineNumber": 410, "col_offset": 64, "nodeName": "Constants", "type": "Type[pythalesians.util.constants.Constants]"}, {"lineNumber": 458, "col_offset": 76, "nodeName": "source", "type": "Any"}, {"lineNumber": 459, "col_offset": 40, "nodeName": "category", "type": "Union[str, Any]"}, {"lineNumber": 459, "col_offset": 20, "nodeName": "environment", "type": "Any"}, {"lineNumber": 458, "col_offset": 59, "nodeName": "category", "type": "Union[str, Any]"}, {"lineNumber": 458, "col_offset": 39, "nodeName": "environment", "type": "Any"}]