[{"lineNumber": 12, "col_offset": 0, "nodeName": "merge_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "merge_rows", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "row_to_probe_coverage", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "fmt_cdt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "fmt_gct", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "fmt_jtv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "fmt_multi", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "fmt_vcf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "export_nexus_basic", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "export_seg", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 0, "nodeName": "create_chrom_ids", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "ProbeInfo", "type": "Type[namedtuple_ProbeInfo_label_chrom_start_end_gene]"}, {"lineNumber": 157, "col_offset": 0, "nodeName": "EXPORT_FORMATS", "type": "Dict[str, Union[Callable[[Any], Any], Callable[[Any, Any], Any]]]"}, {"lineNumber": 10, "col_offset": 12, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "handles", "type": "List[TextIO]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "datastreams", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "fname", "type": "Any"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "filenames", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "rows", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "handle", "type": "TextIO"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "handles", "type": "List[TextIO]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "probe_info", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "combined_row", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "combined_row", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "label", "type": "str"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "probe_info", "type": "namedtuple_ProbeInfo_label_chrom_start_end_gene"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "outheader", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "header2", "type": "List[str]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "outrows", "type": "List[Union[List[str], List[Any]]]"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "NotImplemented", "type": "NotImplementedType"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "outheader", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "outrows", "type": "List[List[Any]]"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "NotImplemented", "type": "NotImplementedType"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "NotImplemented", "type": "NotImplementedType"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "outheader", "type": "List[str]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "outrows", "type": "List[List[Any]]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "outrows", "type": "List[Union[Tuple[Any, int, Any, Any, Any], Tuple[Any, int, Any, Any, Any, Any]]]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "chrom_ids", "type": "None"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "fname", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "sample_fnames", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "mapping", "type": "collections.OrderedDict[Any, int]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "curr_idx", "type": "int"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "chromosome", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "mapping", "type": "collections.OrderedDict[Any, int]"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "fmt_cdt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "fmt_jtv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "export_nexus_basic", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "export_seg", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 12, "nodeName": "collections", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "handle", "type": "TextIO"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "zip", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "probe_infos", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "coverages", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "zip", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "check_unique", "type": "Any"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "probe_infos", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "start", "type": "Any"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "end", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "gene", "type": "Any"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "coverage", "type": "Any"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "row", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "ProbeInfo", "type": "Type[namedtuple_ProbeInfo_label_chrom_start_end_gene]"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "label", "type": "str"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 56, "col_offset": 63, "nodeName": "gene", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "probe_info", "type": "namedtuple_ProbeInfo_label_chrom_start_end_gene"}, {"lineNumber": 64, "col_offset": 53, "nodeName": "sample_ids", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "header2", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "row", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "rows", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "outrow", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "outheader", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "outrows", "type": "List[Union[List[str], List[Any]]]"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "sample_ids", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "outheader", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "outrows", "type": "List[List[Any]]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "read", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "sample_fname", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "outheader", "type": "List[str]"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "outrows", "type": "List[List[Any]]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "segments", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "outheader", "type": "List[str]"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "outrows", "type": "List[Union[Tuple[Any, int, Any, Any, Any], Tuple[Any, int, Any, Any, Any, Any]]]"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "segments", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "fname", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "handle", "type": "TextIO"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "parse_tsv", "type": "Any"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "handle", "type": "TextIO"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "datastreams", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "core", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "probe_info", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "coverages", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "start", "type": "Any"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "end", "type": "Any"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "gene", "type": "Any"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 56, "col_offset": 45, "nodeName": "start", "type": "Any"}, {"lineNumber": 56, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "end", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "coverage", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "header2", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "probe", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "values", "type": "Any"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "label", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "outrow", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "row", "type": "Any"}, {"lineNumber": 85, "col_offset": 61, "nodeName": "rows", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "CNA", "type": "Any"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "row", "type": "Any"}, {"lineNumber": 108, "col_offset": 59, "nodeName": "data", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "read", "type": "Any"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "fname", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "chrom_ids", "type": "None"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "chrom_ids", "type": "collections.OrderedDict[Any, int]"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "fields", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "outheader", "type": "List[str]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "outheader", "type": "List[str]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "collections", "type": "module"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "mapping", "type": "collections.OrderedDict[Any, int]"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "curr_idx", "type": "int"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "curr_idx", "type": "int"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "handles", "type": "List[TextIO]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "core", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "datastreams", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "merge_rows", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "rows", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "handle", "type": "TextIO"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "map", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "row_to_probe_coverage", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 61, "nodeName": "rows", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "i", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "row", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "row", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "probe", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "outrow", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "outrows", "type": "List[Union[List[str], List[Any]]]"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "label", "type": "Any"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "row", "type": "Any"}, {"lineNumber": 108, "col_offset": 59, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "CNA", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "create_chrom_ids", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 41, "nodeName": "segments", "type": "Any"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "outrows", "type": "List[Union[Tuple[Any, int, Any, Any, Any], Tuple[Any, int, Any, Any, Any, Any]]]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "mapping", "type": "collections.OrderedDict[Any, int]"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "range", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "row2label", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "row", "type": "Any"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "row", "type": "Any"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "row2out", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "row", "type": "Any"}, {"lineNumber": 142, "col_offset": 40, "nodeName": "row", "type": "Any"}, {"lineNumber": 142, "col_offset": 47, "nodeName": "segments", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "sample_ids", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "row", "type": "Any"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "segments", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "segments", "type": "Any"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "chrom_ids", "type": "collections.OrderedDict[Any, int]"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "row", "type": "Any"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "row", "type": "Any"}, {"lineNumber": 135, "col_offset": 50, "nodeName": "row", "type": "Any"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "row", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "segments", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "chrom_ids", "type": "collections.OrderedDict[Any, int]"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "row", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "row", "type": "Any"}, {"lineNumber": 141, "col_offset": 50, "nodeName": "row", "type": "Any"}, {"lineNumber": 134, "col_offset": 54, "nodeName": "row", "type": "Any"}, {"lineNumber": 140, "col_offset": 54, "nodeName": "row", "type": "Any"}]