[{"lineNumber": 35, "col_offset": 0, "nodeName": "write_row", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "access_regions", "type": "Generator[Any, Any, None]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "ex_fname", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "exclude", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "row", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "basicConfig", "type": "Callable"}, {"lineNumber": 19, "col_offset": 5, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "get_regions", "type": "Callable[[Any], Generator[Any, Any, None]]"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "fa_fname", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "access_regions", "type": "Generator[Any, Any, None]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "join_regions", "type": "Callable[[Any, Any], Generator[Tuple[Any, Any, Any], Any, None]]"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "access_regions", "type": "Generator[Any, Any, None]"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "min_gap_size", "type": "Any"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 14, "col_offset": 26, "nodeName": "INFO", "type": "int"}, {"lineNumber": 19, "col_offset": 5, "nodeName": "argparse", "type": "module"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 22, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 30, "col_offset": 53, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "write", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "flush", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "access", "type": "module"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "exclude_regions", "type": "Callable[[Any, Any], Generator[Any, Any, None]]"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "ex_fname", "type": "Any"}, {"lineNumber": 41, "col_offset": 54, "nodeName": "access_regions", "type": "Generator[Any, Any, None]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "access", "type": "module"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "write_row", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 14, "col_offset": 26, "nodeName": "logging", "type": "module"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "FileType", "type": "Type[argparse.FileType]"}, {"lineNumber": 30, "col_offset": 53, "nodeName": "sys", "type": "module"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "access", "type": "module"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "row", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "argparse", "type": "module"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "run_start", "type": "Any"}, {"lineNumber": 36, "col_offset": 58, "nodeName": "run_end", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}]