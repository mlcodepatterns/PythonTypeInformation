[{"lineNumber": 17, "col_offset": 0, "nodeName": "aggregate_rsem", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "prev_row_count", "type": "None"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "sample_cols", "type": "Dict[Any, Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "length_cols", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "length_colname", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "fname", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "fnames", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "sample_counts", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "sample_counts", "type": "Any"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "output", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "gene_info", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "all_data", "type": "Any"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "output", "type": "Any"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "cnr_dir", "type": "Any"}, {"lineNumber": 97, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "sample_cols", "type": "Dict[Any, Any]"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "Series", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "sample_counts", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "tx_lengths", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "sample_counts", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "tx_lengths", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "aggregate_rsem", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 47, "nodeName": "rsem_results", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "filter_probes", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "sample_counts", "type": "Any"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "load_gene_info", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "gene_resource", "type": "Any"}, {"lineNumber": 70, "col_offset": 55, "nodeName": "correlations", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "align_gene_info_to_samples", "type": "Callable[[Any, Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "gene_info", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "sample_counts", "type": "Any"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "tx_lengths", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "concat", "type": "Any"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "cnr", "type": "cnvlib.cnary.CopyNumArray"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "cnrs", "type": "Generator[cnvlib.cnary.CopyNumArray, Any, None]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "basicConfig", "type": "Callable"}, {"lineNumber": 101, "col_offset": 9, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "prev_row_count", "type": "None"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "prev_row_count", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "sample_cols", "type": "Dict[Any, Any]"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "fillna", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "pd", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "mean", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "index", "type": "Any"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "rsem_results", "type": "Any"}, {"lineNumber": 58, "col_offset": 47, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "rna", "type": "module"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "correlations", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "rna", "type": "module"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 70, "col_offset": 55, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "rna", "type": "module"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "gene_info", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "sample_depths_log2", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "attach_gene_info_to_cnr", "type": "Callable[..., Generator[cnvlib.cnary.CopyNumArray, Any, None]]"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "sample_counts", "type": "Any"}, {"lineNumber": 88, "col_offset": 58, "nodeName": "sample_depths_log2", "type": "Any"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "gene_info", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "outfname", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "cnr", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "INFO", "type": "int"}, {"lineNumber": 101, "col_offset": 9, "nodeName": "argparse", "type": "module"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "d", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "before", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 47, "col_offset": 53, "nodeName": "fname", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "expected_count", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "length_cols", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "d", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "sample_counts", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "sample_counts", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "sample_counts", "type": "Any"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "all_data", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "all_data", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "describe", "type": "Any"}, {"lineNumber": 84, "col_offset": 40, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "rna", "type": "module"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "cnr_dir", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "correct_cnr", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "cnr", "type": "cnvlib.cnary.CopyNumArray"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "write", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "cnr", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "outfname", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "logging", "type": "module"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "read_table", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "fname", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "rna", "type": "module"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "d", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "length_colname", "type": "str"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "length_cols", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "all_data", "type": "Any"}, {"lineNumber": 84, "col_offset": 40, "nodeName": "sys", "type": "module"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "rna", "type": "module"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "tabio", "type": "module"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "cnr", "type": "cnvlib.cnary.CopyNumArray"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "length_colname", "type": "str"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "before", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "rna", "type": "module"}]