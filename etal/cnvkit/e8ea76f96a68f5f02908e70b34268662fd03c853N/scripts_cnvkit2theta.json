[{"lineNumber": 20, "col_offset": 0, "nodeName": "calculate_theta_fields", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "segment_size", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "tumor_count", "type": "int"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "ref_count", "type": "int"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "row_id", "type": "str"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "tumor_segs", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "ref_vals", "type": "Any"}, {"lineNumber": 88, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "read_depth", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "read_count", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "logratio2count", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "logratio2count", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "row_id", "type": "str"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "chrom_id", "type": "int"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "tumor_count", "type": "int"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "ref_count", "type": "int"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "read", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "tumor_cns", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "read", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "reference", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "outfile", "type": "TextIO"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "dwriter", "type": "csv.DictWriter"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "prev_chrom", "type": "None"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "chrom_id", "type": "int"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "seg", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "seg", "type": "Any"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "expect_depth", "type": "Any"}, {"lineNumber": 42, "col_offset": 49, "nodeName": "read_length", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "seg", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "mean", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "chrom_id", "type": "int"}, {"lineNumber": 50, "col_offset": 40, "nodeName": "chrom_id", "type": "int"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "seg", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "seg", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "cnvlib", "type": "module"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "cnvlib", "type": "module"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "output", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "DictWriter", "type": "Type[csv.DictWriter]"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "outfile", "type": "TextIO"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "writeheader", "type": "Callable[[], None]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "seg", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "ref_rows", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "by_segment", "type": "Any"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "tumor_segs", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "fields", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "argparse", "type": "module"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 102, "col_offset": 9, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "log2_ratio", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "segment_size", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "read_depth", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "round", "type": "Callable"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "read_count", "type": "Any"}, {"lineNumber": 49, "col_offset": 50, "nodeName": "seg", "type": "Any"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "seg", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "tumor_segs", "type": "Any"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "csv", "type": "module"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "dwriter", "type": "csv.DictWriter"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "ref_vals", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "prev_chrom", "type": "None"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "chrom_id", "type": "int"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "prev_chrom", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "calculate_theta_fields", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "seg", "type": "Any"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "ref_rows", "type": "Any"}, {"lineNumber": 82, "col_offset": 59, "nodeName": "chrom_id", "type": "int"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "coverage", "type": "Any"}, {"lineNumber": 83, "col_offset": 59, "nodeName": "read_length", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "writerow", "type": "Callable[[Mapping[str, Any]], Any]"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "fields", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "sys", "type": "module"}, {"lineNumber": 102, "col_offset": 9, "nodeName": "AP", "type": "argparse.ArgumentParser"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "ref_rows", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "seg", "type": "Any"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "seg", "type": "Any"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 83, "col_offset": 59, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "dwriter", "type": "csv.DictWriter"}]