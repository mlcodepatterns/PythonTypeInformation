[{"lineNumber": 12, "col_offset": 0, "nodeName": "load_adjust_coverages", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "match_ref_to_probes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "center_by_window", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "make_edge_sorter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "edge_loss", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 200, "col_offset": 0, "nodeName": "edge_gain", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 0, "nodeName": "apply_weights", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "missing_keys", "type": "Set[Any]"}, {"lineNumber": 25, "col_offset": 7, "nodeName": "missing_keys", "type": "Set[Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "ok_cvg_indices", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 7, "nodeName": "fix_gc", "type": "Any"}, {"lineNumber": 46, "col_offset": 7, "nodeName": "fix_edge", "type": "Any"}, {"lineNumber": 50, "col_offset": 7, "nodeName": "fix_rmask", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "ref_lookup", "type": "Dict[Any, Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "ref_matched_rows", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "adj_pset", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "shuffle_order", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "biases", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "biases", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "adj_pset", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "chrom_tile_starts", "type": "Dict[Any, Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "chrom_tile_ends", "type": "Dict[Any, Any]"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "sorter_edge", "type": "Callable[[Any], Any]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "gain", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "sizes", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "pset", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "pset", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "pset", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "difference", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "match_ref_to_probes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 30, "col_offset": 38, "nodeName": "ref_pset", "type": "Any"}, {"lineNumber": 30, "col_offset": 48, "nodeName": "pset", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "echo", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "pset", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "center_all", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "center_all", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "apply_weights", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "pset", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "as_rows", "type": "Any"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "ref_matched_rows", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "copy", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 85, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "sort_key", "type": "Any"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "sort_key", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "sort", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "rolling_median", "type": "Any"}, {"lineNumber": 90, "col_offset": 56, "nodeName": "fraction", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "adj_pset", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "sort", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "rows", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "by_chromosome", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "margin_start", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "margin_end", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "tile_starts", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "tile_ends", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "gaps_left", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "gaps_right", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "left_idx", "type": "int"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "gain", "type": "int"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "gaps_left", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "gaps_right", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 193, "col_offset": 7, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 215, "col_offset": 32, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 233, "col_offset": 14, "nodeName": "sizes", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "any", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "flat_cvgs", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "any", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "variances", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "invvars", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 248, "col_offset": 14, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "weights", "type": "Any"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "add_columns", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "drop_extra_columns", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "pset", "type": "Any"}, {"lineNumber": 24, "col_offset": 49, "nodeName": "labels", "type": "Any"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "mask_bad_probes", "type": "Any"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "ok_cvg_indices", "type": "Any"}, {"lineNumber": 34, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 34, "col_offset": 51, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "pset", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "ok_cvg_indices", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "ok_cvg_indices", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "pset", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "pset", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "echo", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "center_by_window", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "pset", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "pset", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "pset", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "pset", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "zip", "type": "Any"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "ref_pset", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "label", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "ref_pset", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "pset", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "adj_pset", "type": "Any"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "sort_key", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "adj_pset", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "sort_key", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "smoothing", "type": "Any"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "adj_pset", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "adj_pset", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "target_probes", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "chrom_tile_starts", "type": "Dict[Any, Any]"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "rows", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "chrom_tile_ends", "type": "Dict[Any, Any]"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "rows", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "tgt_end", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "chrom_tile_starts", "type": "Dict[Any, Any]"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "chrom_tile_ends", "type": "Dict[Any, Any]"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "tgt_end", "type": "Any"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "edge_loss", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 123, "col_offset": 38, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "max", "type": "Callable"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "zip", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "gain", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "gain", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "gain", "type": "Union[int, Any]"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "loss", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "get_edge", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 69, "nodeName": "margin", "type": "Any"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 215, "col_offset": 7, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "max", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "echo", "type": "Any"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "expect_flat_cvg", "type": "Any"}, {"lineNumber": 238, "col_offset": 41, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "echo", "type": "Any"}, {"lineNumber": 248, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 249, "col_offset": 36, "nodeName": "weights", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "pset", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 24, "col_offset": 49, "nodeName": "ref_pset", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "reference", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "echo", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "center_by_window", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "pset", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "echo", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "make_edge_sorter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "pset", "type": "Any"}, {"lineNumber": 49, "col_offset": 55, "nodeName": "INSERT_SIZE", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "echo", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "center_by_window", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "pset", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "echo", "type": "Any"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "labels", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "ref_lookup", "type": "Dict[Any, Any]"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "labels", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "shuffle_order", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "tile_starts", "type": "Any"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "tile_ends", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "tile_end", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "margin_start", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "tile_start", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "margin_end", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "margin_start", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "tile_end", "type": "Any"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "edge_gain", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "edge_gain", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 30, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "row", "type": "Any"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "row", "type": "Any"}, {"lineNumber": 173, "col_offset": 57, "nodeName": "row", "type": "Any"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 213, "col_offset": 27, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 218, "col_offset": 38, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "sizes", "type": "Any"}, {"lineNumber": 234, "col_offset": 55, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "core", "type": "Any"}, {"lineNumber": 240, "col_offset": 32, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "variances", "type": "Any"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "weights", "type": "Any"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "invvars", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "labels", "type": "Any"}, {"lineNumber": 27, "col_offset": 47, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 43, "col_offset": 46, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 49, "col_offset": 55, "nodeName": "params", "type": "Any"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "ref_pset", "type": "Any"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "label", "type": "Any"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "probes", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "bisect_left", "type": "Callable[..., int]"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "tile_ends", "type": "Any"}, {"lineNumber": 129, "col_offset": 56, "nodeName": "margin_start", "type": "Any"}, {"lineNumber": 130, "col_offset": 54, "nodeName": "left_idx", "type": "int"}, {"lineNumber": 131, "col_offset": 52, "nodeName": "left_idx", "type": "int"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "tile_start", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "tile_end", "type": "Any"}, {"lineNumber": 138, "col_offset": 55, "nodeName": "tgt_end", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "tgt_end", "type": "Any"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "tile_start", "type": "Any"}, {"lineNumber": 145, "col_offset": 42, "nodeName": "margin_end", "type": "Any"}, {"lineNumber": 161, "col_offset": 56, "nodeName": "min", "type": "Callable"}, {"lineNumber": 161, "col_offset": 60, "nodeName": "gaps_left", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 56, "nodeName": "min", "type": "Callable"}, {"lineNumber": 163, "col_offset": 60, "nodeName": "gaps_right", "type": "List[Any]"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 195, "col_offset": 32, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 217, "col_offset": 46, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "abs", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 245, "col_offset": 37, "nodeName": "max", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "pset", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "missing_keys", "type": "Set[Any]"}, {"lineNumber": 27, "col_offset": 47, "nodeName": "pset", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "bisect", "type": "module"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "gaps_left", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "tile_end", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 217, "col_offset": 18, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "mod", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 239, "col_offset": 57, "nodeName": "flat_cvgs", "type": "Any"}, {"lineNumber": 245, "col_offset": 37, "nodeName": "variances", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "gaps_right", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "tile_start", "type": "Any"}, {"lineNumber": 147, "col_offset": 47, "nodeName": "tgt_end", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "tile_start", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "tile_end", "type": "Any"}, {"lineNumber": 148, "col_offset": 56, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "gaps_left", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "tile_start", "type": "Any"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "tgt_end", "type": "Any"}, {"lineNumber": 151, "col_offset": 43, "nodeName": "tile_end", "type": "Any"}, {"lineNumber": 151, "col_offset": 54, "nodeName": "tgt_end", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "echo", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "gaps_right", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "tile_start", "type": "Any"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "tile_end", "type": "Any"}, {"lineNumber": 157, "col_offset": 53, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 157, "col_offset": 64, "nodeName": "tgt_end", "type": "Any"}]