[{"lineNumber": 152, "col_offset": 0, "nodeName": "linecount", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "test_basic", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_center_all", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_drop_extra_columns", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_guess_xx", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "test_residuals", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "test_smooth_log2", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "test_fix_edge", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "test_read", "type": "Callable[[Any], Any]"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "basicConfig", "type": "Callable"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "filterwarnings", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "unittest", "type": "module"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "i", "type": "int"}, {"lineNumber": 160, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 6, "col_offset": 26, "nodeName": "ERROR", "type": "int"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "warnings", "type": "module"}, {"lineNumber": 11, "col_offset": 43, "nodeName": "ImportWarning", "type": "Type[ImportWarning]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "cna", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "same", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "orig", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "cna", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "chr1", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "orig_chr1_cvg", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "chr1plus2", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "method", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "cna", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "cleaned", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "segments", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "regions", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "grouping_arg", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "insert_size", "type": "int"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "gain", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "gain", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "variants", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "handle", "type": "file"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 6, "col_offset": 26, "nodeName": "logging", "type": "module"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "cna", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "same", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "cna", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "cna", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "cna", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "cna", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "cna", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "cna", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "in_range", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "center_all", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "median", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "orig_chr1_cvg", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "copy", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "chr1plus2", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "center_all", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 58, "col_offset": 61, "nodeName": "orig_chr1_cvg", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "cp", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "cna", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "drop_extra_columns", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "cleaned", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "guess", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "drop_extra_columns", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "segments", "type": "Any"}, {"lineNumber": 94, "col_offset": 45, "nodeName": "regions", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "resid", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "orig_vals", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "signal", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "edge_losses", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 44, "nodeName": "insert_size", "type": "int"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "edge_gains", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 124, "col_offset": 53, "nodeName": "insert_size", "type": "int"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "loss", "type": "Any"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "gain", "type": "Any"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "filename", "type": "str"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "_line", "type": "str"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "handle", "type": "file"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "cnvlib", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "cnvlib", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "cna", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "cnvlib", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "cna", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "same", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "cnvlib", "type": "module"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "cna", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "median", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "chr1", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "chr1", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "chr1", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "chr1plus2", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "median", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "center_all", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "method", "type": "str"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "cnvlib", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "cna", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "guess_xx", "type": "Any"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "ref_is_m", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "guess", "type": "Any"}, {"lineNumber": 86, "col_offset": 36, "nodeName": "sample_is_f", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "cnvlib", "type": "module"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "cnvlib", "type": "module"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "residuals", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "grouping_arg", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "fname", "type": "str"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "copy", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "smooth_log2", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "fix", "type": "module"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "fix", "type": "module"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "OtherTests"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "OtherTests"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "edge_losses", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "insert_size", "type": "int"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "OtherTests"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "edge_losses", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 60, "nodeName": "insert_size", "type": "int"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "tabio", "type": "module"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "VATests"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "variants", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "linecount", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "cna", "type": "Any"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "same", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "chr1", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 41, "nodeName": "chr1plus2", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "chr1", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "cp", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "GenomicArray", "type": "Type[skgenome.gary.GenomicArray]"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "mean", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "percentile", "type": "Any"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "resid", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "std", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "cnvlib", "type": "module"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "all", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "min", "type": "Any"}, {"lineNumber": 109, "col_offset": 50, "nodeName": "min", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "max", "type": "Any"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "max", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "fix", "type": "module"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "edge_gains", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 131, "col_offset": 54, "nodeName": "insert_size", "type": "int"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "fix", "type": "module"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "edge_gains", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 43, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 56, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 135, "col_offset": 66, "nodeName": "insert_size", "type": "int"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "orig_chr1_cvg", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "fname", "type": "Any"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "fname", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "guess", "type": "Any"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "sample_is_f", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "segments", "type": "Any"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "resid", "type": "Any"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "resid", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "log2", "type": "Any"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "signal", "type": "Any"}, {"lineNumber": 109, "col_offset": 50, "nodeName": "log2", "type": "Any"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "signal", "type": "Any"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "log2", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "fix", "type": "module"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "fix", "type": "module"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "median", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "cleaned", "type": "Any"}, {"lineNumber": 71, "col_offset": 44, "nodeName": "cna", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "cnvlib", "type": "module"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "orig_vals", "type": "Any"}, {"lineNumber": 108, "col_offset": 42, "nodeName": "values", "type": "Any"}, {"lineNumber": 109, "col_offset": 50, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 108, "col_offset": 42, "nodeName": "log2", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "cp", "type": "Any"}, {"lineNumber": 108, "col_offset": 42, "nodeName": "cnarr", "type": "Any"}]