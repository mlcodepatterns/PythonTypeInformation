[{"lineNumber": 20, "col_offset": 0, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "read_auto", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "read_cna", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "write", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "dframe", "type": "Any"}, {"lineNumber": 129, "col_offset": 7, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 45, "col_offset": 7, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "READERS", "type": "Dict[str, Union[Tuple[Callable[[Any], Any], Any], Tuple[Any, Any]]]"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "meta", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "dframe", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "dframe", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "sniff_region_format", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "infile", "type": "Any"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "infile", "type": "Any"}, {"lineNumber": 88, "col_offset": 7, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "fmt", "type": "str"}, {"lineNumber": 90, "col_offset": 7, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "infile", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "infile", "type": "Any"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "read_auto", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "GA", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "read_bed", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "GA", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "read_bed3", "type": "Any"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "GA", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "read_bed4", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "GA", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "read_bed6", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "GA", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "read_interval", "type": "Any"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "GA", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "read_picard_hs", "type": "Any"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "CNA", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "read_seg", "type": "Any"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "CNA", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "read_tab", "type": "Any"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "GA", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "read_text", "type": "Any"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "GA", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "read_vcf", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "VA", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "formatter", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "show_header", "type": "bool"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "WRITERS", "type": "Dict[str, Tuple[Any, bool]]"}, {"lineNumber": 123, "col_offset": 7, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "formatter", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 126, "col_offset": 70, "nodeName": "handle", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "write_bed", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "write_interval", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "write_picard_hs", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "write_seg", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "write_tab", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "write_text", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "write_vcf", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 57, "col_offset": 7, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "reader", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "suggest_into", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "READERS", "type": "Dict[str, Union[Tuple[Callable[[Any], Any], Any], Tuple[Any, Any]]]"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "reader", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "infile", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "suggest_into", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "GA", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "dframe", "type": "List[nothing]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "into", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "suggest_into", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "ngfrills", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "seek", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "CNA", "type": "Any"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 99, "col_offset": 60, "nodeName": "meta", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "bedio", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "bedio", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "bedio", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "bedio", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "picard", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "picard", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "seg", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "tab", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "textcoord", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "vcfio", "type": "Any"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "garr", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "garr", "type": "Any"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "safe_write", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "handle", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "basestring", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "outfname", "type": "Any"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 49, "nodeName": "outfname", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "bedio", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "picard", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "picard", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "seg", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "tab", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "textcoord", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "vcfio", "type": "Any"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "infile", "type": "Any"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "basestring", "type": "Any"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "infile", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "infile", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "basestring", "type": "Any"}, {"lineNumber": 80, "col_offset": 50, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 80, "col_offset": 58, "nodeName": "infile", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "infile", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "infile", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "ngfrills", "type": "Any"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "dframe", "type": "Any"}, {"lineNumber": 127, "col_offset": 37, "nodeName": "show_header", "type": "bool"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "outfname", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "gene", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 139, "col_offset": 59, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 63, "nodeName": "dframe", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "fbase", "type": "Any"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "infile", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "sys", "type": "module"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "core", "type": "Any"}, {"lineNumber": 133, "col_offset": 58, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 134, "col_offset": 60, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 133, "col_offset": 58, "nodeName": "sys", "type": "module"}, {"lineNumber": 134, "col_offset": 60, "nodeName": "sys", "type": "module"}]