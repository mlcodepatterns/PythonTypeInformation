[{"lineNumber": 13, "col_offset": 0, "nodeName": "load_adjust_coverages", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "mask_bad_probes", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "match_ref_to_probes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "center_by_window", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "make_edge_sorter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 203, "col_offset": 0, "nodeName": "edge_loss", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 225, "col_offset": 0, "nodeName": "edge_gain", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 247, "col_offset": 0, "nodeName": "apply_weights", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "ok_cvg_indices", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "pset", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "fix_gc", "type": "Any"}, {"lineNumber": 40, "col_offset": 7, "nodeName": "fix_edge", "type": "Any"}, {"lineNumber": 44, "col_offset": 7, "nodeName": "fix_rmask", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "mask", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "probes_labeled", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "ref_labeled", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "num_missing", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "shuffle_order", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "order", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "biases", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "biases", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "fixarr", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "fixarr", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "chrom_tile_starts", "type": "Dict[Any, Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "chrom_tile_ends", "type": "Dict[Any, Any]"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "sorter_edge", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "gain", "type": "Any"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "gain", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "sizes", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "pset", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "pset", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "pset", "type": "Any"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "match_ref_to_probes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 38, "nodeName": "ref_pset", "type": "Any"}, {"lineNumber": 24, "col_offset": 48, "nodeName": "pset", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "echo", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "pset", "type": "Any"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "center_all", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "pset", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "center_all", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "apply_weights", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "pset", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "probes", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "set_index", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "set_index", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "dupes", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "reindex", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "sum", "type": "Any"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "num_missing", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "as_dataframe", "type": "Any"}, {"lineNumber": 101, "col_offset": 9, "nodeName": "reset_index", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "index", "type": "Any"}, {"lineNumber": 103, "col_offset": 9, "nodeName": "reindex", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "shuffle_order", "type": "Any"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "sort_key", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "sort_key", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "argsort", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "sort_key", "type": "Any"}, {"lineNumber": 113, "col_offset": 9, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "rolling_median", "type": "Any"}, {"lineNumber": 114, "col_offset": 50, "nodeName": "fraction", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "as_dataframe", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "df", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "sort", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "rows", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "by_chromosome", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "margin_start", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "margin_end", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "tile_starts", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "tile_ends", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "gaps_left", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "gaps_right", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "left_idx", "type": "int"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "gain", "type": "int"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "gaps_left", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "gaps_right", "type": "List[Any]"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 218, "col_offset": 7, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 240, "col_offset": 32, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 258, "col_offset": 14, "nodeName": "sizes", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "any", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "flat_cvgs", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "any", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "variances", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "invvars", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 273, "col_offset": 14, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "weights", "type": "Any"}, {"lineNumber": 273, "col_offset": 34, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "add_columns", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "drop_extra_columns", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "pset", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "mask_bad_probes", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "ok_cvg_indices", "type": "Any"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 28, "col_offset": 51, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "ok_cvg_indices", "type": "Any"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "ok_cvg_indices", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "pset", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "pset", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "echo", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "center_by_window", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "pset", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "pset", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "pset", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "pset", "type": "Any"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "MIN_REF_COVERAGE", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "MAX_REF_SPREAD", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "MAX_REPEAT_FRACTION", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "labels", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "labels", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "probes_labeled", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "ref_labeled", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "duplicated", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "ref_labeled", "type": "Any"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "index", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "ref_pset", "type": "Any"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "reset_index", "type": "Any"}, {"lineNumber": 101, "col_offset": 9, "nodeName": "data", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "df", "type": "Any"}, {"lineNumber": 103, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "Series", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "sort_key", "type": "Any"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "sort_key", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "sort_key", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "order", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "smoothing", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "df", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "fixarr", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "target_probes", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "chrom_tile_starts", "type": "Dict[Any, Any]"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "rows", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "chrom_tile_ends", "type": "Dict[Any, Any]"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "rows", "type": "Any"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "tgt_end", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "chrom_tile_starts", "type": "Dict[Any, Any]"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "chrom_tile_ends", "type": "Dict[Any, Any]"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "tgt_end", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "edge_loss", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "max", "type": "Callable"}, {"lineNumber": 155, "col_offset": 38, "nodeName": "zip", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "gain", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "gain", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "gain", "type": "Union[Any, int]"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "loss", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "get_edge", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 198, "col_offset": 69, "nodeName": "margin", "type": "Any"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 239, "col_offset": 33, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 240, "col_offset": 7, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 240, "col_offset": 21, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "max", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "echo", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "expect_flat_cvg", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "echo", "type": "Any"}, {"lineNumber": 273, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "weights", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "pset", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "echo", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "center_by_window", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "pset", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "echo", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "make_edge_sorter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "pset", "type": "Any"}, {"lineNumber": 43, "col_offset": 55, "nodeName": "INSERT_SIZE", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "echo", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "center_by_window", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "pset", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "echo", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "probes", "type": "Any"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "probes", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "probes", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "probes", "type": "Any"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "probes", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "ref_pset", "type": "Any"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "ref_pset", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "index", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "dupes", "type": "Any"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "probes_labeled", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "isnull", "type": "Any"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "start", "type": "Any"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 101, "col_offset": 9, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "pd", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "shuffle_order", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "apply", "type": "Any"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "sort_key", "type": "Any"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "tile_starts", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "tile_ends", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "tile_end", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "margin_start", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "tile_start", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "margin_end", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "margin_start", "type": "Any"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "tile_end", "type": "Any"}, {"lineNumber": 167, "col_offset": 43, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "edge_gain", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "edge_gain", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 188, "col_offset": 43, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "row", "type": "Any"}, {"lineNumber": 198, "col_offset": 43, "nodeName": "row", "type": "Any"}, {"lineNumber": 198, "col_offset": 57, "nodeName": "row", "type": "Any"}, {"lineNumber": 221, "col_offset": 38, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 238, "col_offset": 13, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 243, "col_offset": 38, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "sizes", "type": "Any"}, {"lineNumber": 259, "col_offset": 49, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 265, "col_offset": 32, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "variances", "type": "Any"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "weights", "type": "Any"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "invvars", "type": "Any"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 43, "col_offset": 55, "nodeName": "params", "type": "Any"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "dset", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "pd", "type": "Any"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "num_missing", "type": "Any"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "df", "type": "Any"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "sort_key", "type": "Any"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "bisect_left", "type": "Callable[..., int]"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "tile_ends", "type": "Any"}, {"lineNumber": 154, "col_offset": 56, "nodeName": "margin_start", "type": "Any"}, {"lineNumber": 155, "col_offset": 54, "nodeName": "left_idx", "type": "int"}, {"lineNumber": 156, "col_offset": 52, "nodeName": "left_idx", "type": "int"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "tile_start", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "tile_end", "type": "Any"}, {"lineNumber": 163, "col_offset": 55, "nodeName": "tgt_end", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "tgt_end", "type": "Any"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "tile_start", "type": "Any"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "margin_end", "type": "Any"}, {"lineNumber": 186, "col_offset": 56, "nodeName": "min", "type": "Callable"}, {"lineNumber": 186, "col_offset": 60, "nodeName": "gaps_left", "type": "List[Any]"}, {"lineNumber": 188, "col_offset": 56, "nodeName": "min", "type": "Callable"}, {"lineNumber": 188, "col_offset": 60, "nodeName": "gaps_right", "type": "List[Any]"}, {"lineNumber": 220, "col_offset": 18, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 220, "col_offset": 32, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 242, "col_offset": 46, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "abs", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "max", "type": "Any"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "join", "type": "Callable"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "probes", "type": "Any"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "bisect", "type": "module"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "gaps_left", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 169, "col_offset": 45, "nodeName": "tile_end", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "insert_size", "type": "Any"}, {"lineNumber": 242, "col_offset": 32, "nodeName": "target_size", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "mod", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 264, "col_offset": 54, "nodeName": "flat_cvgs", "type": "Any"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "variances", "type": "Any"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "map", "type": "Callable"}, {"lineNumber": 82, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "gaps_right", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "tile_start", "type": "Any"}, {"lineNumber": 172, "col_offset": 47, "nodeName": "tgt_end", "type": "Any"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "tile_start", "type": "Any"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "tile_end", "type": "Any"}, {"lineNumber": 173, "col_offset": 56, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 22, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 264, "col_offset": 32, "nodeName": "ref_matched", "type": "Any"}, {"lineNumber": 82, "col_offset": 60, "nodeName": "index", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "gaps_left", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "tile_start", "type": "Any"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "tgt_end", "type": "Any"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "tile_end", "type": "Any"}, {"lineNumber": 176, "col_offset": 54, "nodeName": "tgt_end", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "echo", "type": "Any"}, {"lineNumber": 82, "col_offset": 60, "nodeName": "dset", "type": "Any"}, {"lineNumber": 82, "col_offset": 71, "nodeName": "dupes", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "gaps_right", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "tile_start", "type": "Any"}, {"lineNumber": 182, "col_offset": 43, "nodeName": "tile_end", "type": "Any"}, {"lineNumber": 182, "col_offset": 53, "nodeName": "tgt_start", "type": "Any"}, {"lineNumber": 182, "col_offset": 64, "nodeName": "tgt_end", "type": "Any"}]