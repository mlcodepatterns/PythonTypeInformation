[{"lineNumber": 503, "col_offset": 0, "nodeName": "linecount", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "test_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "test_basic", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_center_all", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_drop_extra_columns", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_guess_xx", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "test_residuals", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test_access", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "test_antitarget", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "test_autobin", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "test_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "test_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "test_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "test_call_filter", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "test_call_sex", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "test_coverage", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "test_export_bed_vcf", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "test_export_cdt_jtv", "type": "Callable[[Any], Any]"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "test_export_nexus", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "test_export_seg", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "test_export_theta", "type": "Callable[[Any], Any]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "test_fix", "type": "Callable[[Any], Any]"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "test_gainloss", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "test_import_theta", "type": "Callable[[Any], Any]"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "test_metrics", "type": "Callable[[Any], Any]"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "test_reference", "type": "Callable[[Any], Any]"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "test_segment", "type": "Callable[[Any], Any]"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "test_segment_parallel", "type": "Callable[[Any], Any]"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "test_segmetrics", "type": "Callable[[Any], Any]"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "test_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 473, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "test_fix_edge", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 473, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "i", "type": "int"}, {"lineNumber": 511, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "cna", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "same", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "orig", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "cna", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "chr1", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "orig_chr1_cvg", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "chr1plus2", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "method", "type": "str"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "cna", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "cleaned", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "segments", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "regions", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "grouping_arg", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "fasta", "type": "str"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "excludes", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "baits", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "access", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "bam_fname", "type": "str"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "target_bed", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "access_bed", "type": "str"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "accessible", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "method", "type": "str"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "target_bed", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "fasta", "type": "str"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "bam", "type": "str"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "annot", "type": "str"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "refarr", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "tgt_regions", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "refarr", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "tgt_regions", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "anti_regions", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "cns", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "probes", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "segs", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "rows", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "tr_cns", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "cl_cns", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "segments", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "variants", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "bed", "type": "str"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "bam", "type": "str"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "by_count", "type": "bool"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "fnames", "type": "List[str]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "sample_ids", "type": "List[Any]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "nrows", "type": "int"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "cnr", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "table_nb", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "table_ogt", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "seg_rows", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "segarr", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "len_seg_auto", "type": "int"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "table_theta", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "ref", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "table_theta", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "ref", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "is_bg", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "tgt_bins", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "log2", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "anti_bins", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "log2", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "blank_bins", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "cnr", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "cnr", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "probes", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "rows", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "segs", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "rows", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "cns", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "theta_fname", "type": "str"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "new_cns", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "segments", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 384, "col_offset": 19, "nodeName": "values", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "nlines", "type": "int"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "ref", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "ref", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "nlines", "type": "int"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "ref", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "ref", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "segments", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "varr", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "segments", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "psegments", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "ssegments", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "segarr", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "annot_fname", "type": "str"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "insert_size", "type": "int"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "gain", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "gain", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 505, "col_offset": 27, "nodeName": "handle", "type": "file"}, {"lineNumber": 512, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "cna", "type": "Any"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "same", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "cna", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "cna", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "cna", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "cna", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "cna", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "cna", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "in_range", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "center_all", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "median", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "orig_chr1_cvg", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "copy", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "chr1plus2", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "center_all", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 56, "col_offset": 61, "nodeName": "orig_chr1_cvg", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "cp", "type": "Any"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "cna", "type": "Any"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "drop_extra_columns", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "cleaned", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "guess", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "drop_extra_columns", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "segments", "type": "Any"}, {"lineNumber": 92, "col_offset": 45, "nodeName": "regions", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "resid", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "acc", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "read_auto", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "read_auto", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "target_bed", "type": "str"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "filter", "type": "Any"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "batch_make_reference", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "fasta", "type": "str"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "annot", "type": "str"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "ref_fname", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "ref_fname", "type": "Any"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "tgt_bed_fname", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 51, "nodeName": "batch_make_reference", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "target_bed", "type": "str"}, {"lineNumber": 158, "col_offset": 43, "nodeName": "fasta", "type": "str"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "ref_fname", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "ref_fname", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "tgt_bed_fname", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "anti_bed_fname", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "batch_run_sample", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], None]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "bam", "type": "str"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "tgt_bed_fname", "type": "Any"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "anti_bed_fname", "type": "Any"}, {"lineNumber": 167, "col_offset": 48, "nodeName": "ref_fname", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "do_breaks", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "probes", "type": "Any"}, {"lineNumber": 176, "col_offset": 42, "nodeName": "segs", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "do_call", "type": "Callable[..., Any]"}, {"lineNumber": 183, "col_offset": 37, "nodeName": "tr_cns", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "do_call", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "tr_cns", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 17, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "do_call", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "cl_cns", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "do_call", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 37, "nodeName": "cl_cns", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "do_call", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 35, "nodeName": "cl_cns", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "colname", "type": "str"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "cns", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "chr1_idx", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "chrx_idx", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "chry_idx", "type": "Any"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "min_mapq", "type": "int"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "cns", "type": "Any"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "show", "type": "str"}, {"lineNumber": 300, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "fmt_key", "type": "str"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "header2", "type": "int"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "table", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "formatter", "type": "Callable[..., Any]"}, {"lineNumber": 311, "col_offset": 14, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "export_nexus_basic", "type": "Callable[[Any], Any]"}, {"lineNumber": 312, "col_offset": 45, "nodeName": "cnr", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "load_het_snps", "type": "Callable[..., Any]"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "export_nexus_ogt", "type": "Callable[..., Any]"}, {"lineNumber": 316, "col_offset": 44, "nodeName": "cnr", "type": "Any"}, {"lineNumber": 316, "col_offset": 49, "nodeName": "varr", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "export_seg", "type": "Callable[..., Any]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "export_seg", "type": "Callable[..., Any]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "export_theta", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 331, "col_offset": 42, "nodeName": "segarr", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 332, "col_offset": 43, "nodeName": "len_seg_auto", "type": "int"}, {"lineNumber": 333, "col_offset": 14, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "export_theta", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 334, "col_offset": 42, "nodeName": "segarr", "type": "Any"}, {"lineNumber": 334, "col_offset": 50, "nodeName": "ref", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 43, "nodeName": "len_seg_auto", "type": "int"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "load_het_snps", "type": "Callable[..., Any]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "tumor_snps", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "normal_snps", "type": "Any"}, {"lineNumber": 338, "col_offset": 34, "nodeName": "export_theta_snps", "type": "Callable[[Any], Generator[Any, Any, None]]"}, {"lineNumber": 338, "col_offset": 59, "nodeName": "varr", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 347, "col_offset": 14, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 349, "col_offset": 19, "nodeName": "ref", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "tgt_bins", "type": "Any"}, {"lineNumber": 351, "col_offset": 20, "nodeName": "ref", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "anti_bins", "type": "Any"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "CopyNumArray", "type": "Any"}, {"lineNumber": 355, "col_offset": 14, "nodeName": "do_fix", "type": "Callable[..., Any]"}, {"lineNumber": 355, "col_offset": 30, "nodeName": "tgt_bins", "type": "Any"}, {"lineNumber": 355, "col_offset": 40, "nodeName": "anti_bins", "type": "Any"}, {"lineNumber": 355, "col_offset": 51, "nodeName": "ref", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 358, "col_offset": 14, "nodeName": "do_fix", "type": "Callable[..., Any]"}, {"lineNumber": 358, "col_offset": 30, "nodeName": "tgt_bins", "type": "Any"}, {"lineNumber": 358, "col_offset": 40, "nodeName": "blank_bins", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "do_gainloss", "type": "Callable[..., Any]"}, {"lineNumber": 364, "col_offset": 36, "nodeName": "probes", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "do_gainloss", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 36, "nodeName": "probes", "type": "Any"}, {"lineNumber": 367, "col_offset": 44, "nodeName": "segs", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 372, "col_offset": 14, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 374, "col_offset": 23, "nodeName": "do_import_theta", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 374, "col_offset": 48, "nodeName": "cns", "type": "Any"}, {"lineNumber": 374, "col_offset": 53, "nodeName": "theta_fname", "type": "str"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 380, "col_offset": 19, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 381, "col_offset": 17, "nodeName": "do_metrics", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 36, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 381, "col_offset": 43, "nodeName": "segments", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 383, "col_offset": 17, "nodeName": "loc", "type": "Any"}, {"lineNumber": 391, "col_offset": 14, "nodeName": "do_reference", "type": "Callable[..., Any]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 392, "col_offset": 35, "nodeName": "nlines", "type": "int"}, {"lineNumber": 393, "col_offset": 14, "nodeName": "do_reference", "type": "Callable[..., Any]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 35, "nodeName": "nlines", "type": "int"}, {"lineNumber": 396, "col_offset": 17, "nodeName": "linecount", "type": "Callable[[Any], Any]"}, {"lineNumber": 397, "col_offset": 14, "nodeName": "do_reference_flat", "type": "Callable[..., Any]"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 399, "col_offset": 35, "nodeName": "nlines", "type": "int"}, {"lineNumber": 400, "col_offset": 14, "nodeName": "do_reference_flat", "type": "Callable[..., Any]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 35, "nodeName": "nlines", "type": "int"}, {"lineNumber": 403, "col_offset": 14, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "antitargets", "type": "Any"}, {"lineNumber": 404, "col_offset": 31, "nodeName": "reference2regions", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 404, "col_offset": 59, "nodeName": "ref", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 413, "col_offset": 19, "nodeName": "do_segmentation", "type": "Callable[..., Any]"}, {"lineNumber": 413, "col_offset": 48, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 415, "col_offset": 19, "nodeName": "do_segmentation", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 48, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 19, "nodeName": "do_segmentation", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 48, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "do_segmentation", "type": "Callable[..., Any]"}, {"lineNumber": 425, "col_offset": 49, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 426, "col_offset": 20, "nodeName": "do_segmentation", "type": "Callable[..., Any]"}, {"lineNumber": 426, "col_offset": 49, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 427, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 427, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 432, "col_offset": 16, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 433, "col_offset": 17, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "sensible_segs_mask", "type": "Any"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "means", "type": "Any"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "los", "type": "Any"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "his", "type": "Any"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "baits", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "bait_len", "type": "int"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "r1", "type": "Any"}, {"lineNumber": 481, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 482, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "edge_losses", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 483, "col_offset": 31, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 483, "col_offset": 44, "nodeName": "insert_size", "type": "int"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "edge_gains", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 484, "col_offset": 30, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 484, "col_offset": 43, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 484, "col_offset": 53, "nodeName": "insert_size", "type": "int"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 486, "col_offset": 31, "nodeName": "loss", "type": "Any"}, {"lineNumber": 486, "col_offset": 37, "nodeName": "gain", "type": "Any"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 505, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 505, "col_offset": 14, "nodeName": "filename", "type": "str"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "_line", "type": "str"}, {"lineNumber": 506, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 506, "col_offset": 34, "nodeName": "handle", "type": "file"}, {"lineNumber": 508, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 512, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "tabio", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "tabio", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "cna", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "tabio", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "cna", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "same", "type": "Any"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "tabio", "type": "module"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "cna", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "median", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "chr1", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "chr1", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "chr1", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "chr1plus2", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "median", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "center_all", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "method", "type": "str"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "tabio", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "cna", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "guess_xx", "type": "Any"}, {"lineNumber": 83, "col_offset": 51, "nodeName": "ref_is_m", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "guess", "type": "Any"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "sample_is_f", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "tabio", "type": "module"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "tabio", "type": "module"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "residuals", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "grouping_arg", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "do_access", "type": "Any"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "fasta", "type": "str"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "min_gap_size", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "expect_nrows", "type": "int"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "do_access", "type": "Any"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "fasta", "type": "str"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "excludes", "type": "List[str]"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "min_gap_size", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "tabio", "type": "module"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "tabio", "type": "module"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "tabio", "type": "module"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "do_autobin", "type": "Callable[..., Tuple[Tuple[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "bam_fname", "type": "str"}, {"lineNumber": 136, "col_offset": 57, "nodeName": "method", "type": "str"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "cov", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "bs", "type": "Any"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "batch", "type": "module"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "bam", "type": "str"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "tabio", "type": "module"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "tabio", "type": "module"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "refarr", "type": "Any"}, {"lineNumber": 155, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "tgt_regions", "type": "Any"}, {"lineNumber": 157, "col_offset": 51, "nodeName": "batch", "type": "module"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "bam", "type": "str"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "tabio", "type": "module"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "tabio", "type": "module"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "tabio", "type": "module"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "refarr", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "batch", "type": "module"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "tabio", "type": "module"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "cns", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "tabio", "type": "module"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "tabio", "type": "module"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "commands", "type": "module"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "rows", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "tabio", "type": "module"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "commands", "type": "module"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "tr_cns", "type": "Any"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 185, "col_offset": 42, "nodeName": "tr_thresh", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "commands", "type": "module"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "tr_cns", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 189, "col_offset": 42, "nodeName": "tr_clonal", "type": "Any"}, {"lineNumber": 190, "col_offset": 17, "nodeName": "tabio", "type": "module"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "commands", "type": "module"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "cl_cns", "type": "Any"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "cl_thresh", "type": "Any"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "commands", "type": "module"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "cl_cns", "type": "Any"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "cl_clonal", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "commands", "type": "module"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "cl_cns", "type": "Any"}, {"lineNumber": 202, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 202, "col_offset": 42, "nodeName": "cl_none", "type": "Any"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "cnvlib", "type": "module"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "tabio", "type": "module"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "do_call", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "segments", "type": "Any"}, {"lineNumber": 211, "col_offset": 48, "nodeName": "variants", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 230, "col_offset": 33, "nodeName": "fname", "type": "Any"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "chromosome", "type": "Any"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "chromosome", "type": "Any"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "chromosome", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "do_call", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 42, "nodeName": "cns", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "test_chrom_means", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "cns_thresh", "type": "Any"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "do_call", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 41, "nodeName": "cns", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "test_chrom_means", "type": "Callable[[Any], Any]"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "cns_clone", "type": "Any"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "do_call", "type": "Callable[..., Any]"}, {"lineNumber": 257, "col_offset": 39, "nodeName": "cns", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "test_chrom_means", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 29, "nodeName": "cns_p99", "type": "Any"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "nprocs", "type": "int"}, {"lineNumber": 283, "col_offset": 18, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "_vheader", "type": "str"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "vcf_body", "type": "Any"}, {"lineNumber": 294, "col_offset": 33, "nodeName": "export_vcf", "type": "Callable[..., Tuple[str, Any]]"}, {"lineNumber": 294, "col_offset": 51, "nodeName": "cns", "type": "Any"}, {"lineNumber": 294, "col_offset": 56, "nodeName": "ploidy", "type": "int"}, {"lineNumber": 294, "col_offset": 70, "nodeName": "is_f", "type": "bool"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 300, "col_offset": 26, "nodeName": "map", "type": "Callable"}, {"lineNumber": 300, "col_offset": 30, "nodeName": "fbase", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 42, "nodeName": "fnames", "type": "List[str]"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "linecount", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "merge_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 41, "nodeName": "fnames", "type": "List[str]"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "EXPORT_FORMATS", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "_oh", "type": "Any"}, {"lineNumber": 306, "col_offset": 17, "nodeName": "outrows", "type": "Any"}, {"lineNumber": 306, "col_offset": 27, "nodeName": "formatter", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 37, "nodeName": "sample_ids", "type": "List[Any]"}, {"lineNumber": 306, "col_offset": 49, "nodeName": "table", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 14, "nodeName": "tabio", "type": "module"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "export", "type": "module"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 313, "col_offset": 29, "nodeName": "table_nb", "type": "Any"}, {"lineNumber": 313, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 313, "col_offset": 44, "nodeName": "cnr", "type": "Any"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "commands", "type": "module"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "export", "type": "module"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "table_ogt", "type": "Any"}, {"lineNumber": 317, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 317, "col_offset": 45, "nodeName": "cnr", "type": "Any"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "export", "type": "module"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "seg_rows", "type": "Any"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "export", "type": "module"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 325, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 325, "col_offset": 31, "nodeName": "seg2_rows", "type": "Any"}, {"lineNumber": 325, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 325, "col_offset": 47, "nodeName": "seg_rows", "type": "Any"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "tabio", "type": "module"}, {"lineNumber": 330, "col_offset": 27, "nodeName": "autosomes", "type": "Any"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "export", "type": "module"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 332, "col_offset": 29, "nodeName": "table_theta", "type": "Any"}, {"lineNumber": 333, "col_offset": 14, "nodeName": "tabio", "type": "module"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "export", "type": "module"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 335, "col_offset": 29, "nodeName": "table_theta", "type": "Any"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "commands", "type": "module"}, {"lineNumber": 338, "col_offset": 34, "nodeName": "export", "type": "module"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 339, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "tumor_snps", "type": "Any"}, {"lineNumber": 339, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 339, "col_offset": 45, "nodeName": "varr", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 340, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 340, "col_offset": 31, "nodeName": "tumor_snps", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "normal_snps", "type": "Any"}, {"lineNumber": 341, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 341, "col_offset": 46, "nodeName": "varr", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 342, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 342, "col_offset": 31, "nodeName": "normal_snps", "type": "Any"}, {"lineNumber": 347, "col_offset": 14, "nodeName": "tabio", "type": "module"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "ref", "type": "Any"}, {"lineNumber": 350, "col_offset": 25, "nodeName": "randn", "type": "Any"}, {"lineNumber": 351, "col_offset": 24, "nodeName": "is_bg", "type": "Any"}, {"lineNumber": 352, "col_offset": 26, "nodeName": "randn", "type": "Any"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "cnary", "type": "module"}, {"lineNumber": 355, "col_offset": 14, "nodeName": "commands", "type": "module"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 358, "col_offset": 14, "nodeName": "commands", "type": "module"}, {"lineNumber": 358, "col_offset": 52, "nodeName": "ref", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "tabio", "type": "module"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "commands", "type": "module"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 365, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "rows", "type": "Any"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "tabio", "type": "module"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "commands", "type": "module"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 368, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 368, "col_offset": 31, "nodeName": "rows", "type": "Any"}, {"lineNumber": 372, "col_offset": 14, "nodeName": "tabio", "type": "module"}, {"lineNumber": 374, "col_offset": 23, "nodeName": "commands", "type": "module"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "tabio", "type": "module"}, {"lineNumber": 380, "col_offset": 19, "nodeName": "tabio", "type": "module"}, {"lineNumber": 381, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 383, "col_offset": 17, "nodeName": "result", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 385, "col_offset": 31, "nodeName": "val", "type": "Any"}, {"lineNumber": 390, "col_offset": 17, "nodeName": "linecount", "type": "Callable[[Any], Any]"}, {"lineNumber": 391, "col_offset": 14, "nodeName": "commands", "type": "module"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 392, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 392, "col_offset": 29, "nodeName": "ref", "type": "Any"}, {"lineNumber": 393, "col_offset": 14, "nodeName": "commands", "type": "module"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 394, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 394, "col_offset": 29, "nodeName": "ref", "type": "Any"}, {"lineNumber": 397, "col_offset": 14, "nodeName": "commands", "type": "module"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 399, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 399, "col_offset": 29, "nodeName": "ref", "type": "Any"}, {"lineNumber": 400, "col_offset": 14, "nodeName": "commands", "type": "module"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 401, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 401, "col_offset": 29, "nodeName": "ref", "type": "Any"}, {"lineNumber": 403, "col_offset": 14, "nodeName": "cnvlib", "type": "module"}, {"lineNumber": 404, "col_offset": 31, "nodeName": "reference", "type": "module"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 405, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 405, "col_offset": 31, "nodeName": "antitargets", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 406, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "antitargets", "type": "Any"}, {"lineNumber": 406, "col_offset": 44, "nodeName": "sum", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 407, "col_offset": 29, "nodeName": "targets", "type": "Any"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "tabio", "type": "module"}, {"lineNumber": 413, "col_offset": 19, "nodeName": "segmentation", "type": "module"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 414, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 414, "col_offset": 31, "nodeName": "segments", "type": "Any"}, {"lineNumber": 415, "col_offset": 19, "nodeName": "segmentation", "type": "module"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 417, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 417, "col_offset": 31, "nodeName": "segments", "type": "Any"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "tabio", "type": "module"}, {"lineNumber": 419, "col_offset": 19, "nodeName": "segmentation", "type": "module"}, {"lineNumber": 419, "col_offset": 72, "nodeName": "varr", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 420, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "segments", "type": "Any"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "tabio", "type": "module"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "segmentation", "type": "module"}, {"lineNumber": 426, "col_offset": 20, "nodeName": "segmentation", "type": "module"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 427, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 427, "col_offset": 47, "nodeName": "data", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 428, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 428, "col_offset": 29, "nodeName": "meta", "type": "Any"}, {"lineNumber": 428, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 428, "col_offset": 50, "nodeName": "meta", "type": "Any"}, {"lineNumber": 432, "col_offset": 16, "nodeName": "tabio", "type": "module"}, {"lineNumber": 433, "col_offset": 17, "nodeName": "tabio", "type": "module"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "lo", "type": "Any"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "hi", "type": "Any"}, {"lineNumber": 438, "col_offset": 21, "nodeName": "_segmetric_interval", "type": "Callable[[Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 438, "col_offset": 50, "nodeName": "segarr", "type": "Any"}, {"lineNumber": 438, "col_offset": 58, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 438, "col_offset": 65, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 442, "col_offset": 20, "nodeName": "segarr", "type": "Any"}, {"lineNumber": 443, "col_offset": 18, "nodeName": "lo", "type": "Any"}, {"lineNumber": 444, "col_offset": 18, "nodeName": "hi", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 453, "col_offset": 20, "nodeName": "read_auto", "type": "Callable[[Any], Any]"}, {"lineNumber": 453, "col_offset": 36, "nodeName": "bait_fname", "type": "str"}, {"lineNumber": 454, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 454, "col_offset": 27, "nodeName": "baits", "type": "Any"}, {"lineNumber": 456, "col_offset": 17, "nodeName": "do_target", "type": "Callable[..., Any]"}, {"lineNumber": 456, "col_offset": 36, "nodeName": "baits", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 457, "col_offset": 38, "nodeName": "bait_len", "type": "int"}, {"lineNumber": 458, "col_offset": 18, "nodeName": "do_target", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 37, "nodeName": "baits", "type": "Any"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 462, "col_offset": 17, "nodeName": "do_target", "type": "Callable[..., Any]"}, {"lineNumber": 462, "col_offset": 36, "nodeName": "baits", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "do_target", "type": "Callable[..., Any]"}, {"lineNumber": 465, "col_offset": 37, "nodeName": "baits", "type": "Any"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 41, "nodeName": "bait_len", "type": "int"}, {"lineNumber": 481, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "fix", "type": "module"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "fix", "type": "module"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "self", "type": "OtherTests"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "self", "type": "OtherTests"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "edge_losses", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 490, "col_offset": 28, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 490, "col_offset": 41, "nodeName": "insert_size", "type": "int"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "self", "type": "OtherTests"}, {"lineNumber": 494, "col_offset": 31, "nodeName": "edge_losses", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 494, "col_offset": 47, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 494, "col_offset": 60, "nodeName": "insert_size", "type": "int"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "linecount", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "cna", "type": "Any"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "same", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "chr1", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "chr1plus2", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "chr1", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "cp", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "GenomicArray", "type": "Type[skgenome.gary.GenomicArray]"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "cnarr", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "mean", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "percentile", "type": "Any"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "resid", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "CNATests"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "std", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "commands", "type": "module"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "acc", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "commands", "type": "module"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "do_antitarget", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 54, "nodeName": "baits", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "do_antitarget", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 54, "nodeName": "baits", "type": "Any"}, {"lineNumber": 123, "col_offset": 61, "nodeName": "access", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "do_antitarget", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 54, "nodeName": "baits", "type": "Any"}, {"lineNumber": 124, "col_offset": 61, "nodeName": "access", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "do_antitarget", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 54, "nodeName": "baits", "type": "Any"}, {"lineNumber": 125, "col_offset": 61, "nodeName": "access", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "read", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "access_bed", "type": "str"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "autobin", "type": "module"}, {"lineNumber": 137, "col_offset": 54, "nodeName": "targets", "type": "Any"}, {"lineNumber": 138, "col_offset": 53, "nodeName": "accessible", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "tgt_regions", "type": "Any"}, {"lineNumber": 164, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 164, "col_offset": 61, "nodeName": "anti_regions", "type": "Any"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "log2", "type": "Any"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "commands", "type": "module"}, {"lineNumber": 213, "col_offset": 69, "nodeName": "filters", "type": "List[str]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "result", "type": "Any"}, {"lineNumber": 214, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 214, "col_offset": 50, "nodeName": "segments", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 215, "col_offset": 68, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 215, "col_offset": 72, "nodeName": "result", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "colname", "type": "str"}, {"lineNumber": 217, "col_offset": 39, "nodeName": "result", "type": "Any"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "tabio", "type": "module"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "cns", "type": "Any"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "cns", "type": "Any"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "cns", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "chr1_cn", "type": "Any"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "chr1_expect", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "chrx_cn", "type": "Any"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 239, "col_offset": 39, "nodeName": "chrx_expect", "type": "Any"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "sample_is_f", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "commands", "type": "module"}, {"lineNumber": 248, "col_offset": 51, "nodeName": "ref_is_m", "type": "Any"}, {"lineNumber": 249, "col_offset": 50, "nodeName": "sample_is_f", "type": "Any"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "commands", "type": "module"}, {"lineNumber": 253, "col_offset": 50, "nodeName": "ref_is_m", "type": "Any"}, {"lineNumber": 254, "col_offset": 49, "nodeName": "sample_is_f", "type": "Any"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "commands", "type": "module"}, {"lineNumber": 258, "col_offset": 48, "nodeName": "ref_is_m", "type": "Any"}, {"lineNumber": 259, "col_offset": 47, "nodeName": "sample_is_f", "type": "Any"}, {"lineNumber": 283, "col_offset": 18, "nodeName": "tabio", "type": "module"}, {"lineNumber": 283, "col_offset": 46, "nodeName": "fname", "type": "str"}, {"lineNumber": 286, "col_offset": 26, "nodeName": "export_bed", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 286, "col_offset": 44, "nodeName": "cns", "type": "Any"}, {"lineNumber": 286, "col_offset": 49, "nodeName": "ploidy", "type": "int"}, {"lineNumber": 286, "col_offset": 63, "nodeName": "is_f", "type": "bool"}, {"lineNumber": 287, "col_offset": 44, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 287, "col_offset": 59, "nodeName": "show", "type": "str"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "show", "type": "str"}, {"lineNumber": 294, "col_offset": 33, "nodeName": "export", "type": "module"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 300, "col_offset": 30, "nodeName": "core", "type": "module"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "fnames", "type": "List[str]"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "export", "type": "module"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "export", "type": "module"}, {"lineNumber": 305, "col_offset": 46, "nodeName": "fmt_key", "type": "str"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 307, "col_offset": 49, "nodeName": "nrows", "type": "int"}, {"lineNumber": 307, "col_offset": 57, "nodeName": "header2", "type": "int"}, {"lineNumber": 330, "col_offset": 27, "nodeName": "segarr", "type": "Any"}, {"lineNumber": 349, "col_offset": 24, "nodeName": "is_bg", "type": "Any"}, {"lineNumber": 350, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 350, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 350, "col_offset": 45, "nodeName": "tgt_bins", "type": "Any"}, {"lineNumber": 352, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 352, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 352, "col_offset": 46, "nodeName": "anti_bins", "type": "Any"}, {"lineNumber": 356, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 356, "col_offset": 32, "nodeName": "cnr", "type": "Any"}, {"lineNumber": 356, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 356, "col_offset": 44, "nodeName": "ref", "type": "Any"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 359, "col_offset": 32, "nodeName": "cnr", "type": "Any"}, {"lineNumber": 359, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 359, "col_offset": 44, "nodeName": "tgt_bins", "type": "Any"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 407, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 407, "col_offset": 43, "nodeName": "ref", "type": "Any"}, {"lineNumber": 407, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 407, "col_offset": 54, "nodeName": "antitargets", "type": "Any"}, {"lineNumber": 427, "col_offset": 25, "nodeName": "psegments", "type": "Any"}, {"lineNumber": 427, "col_offset": 47, "nodeName": "ssegments", "type": "Any"}, {"lineNumber": 428, "col_offset": 29, "nodeName": "psegments", "type": "Any"}, {"lineNumber": 428, "col_offset": 50, "nodeName": "ssegments", "type": "Any"}, {"lineNumber": 435, "col_offset": 22, "nodeName": "confidence_interval_bootstrap", "type": "Callable[..., Any]"}, {"lineNumber": 435, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 436, "col_offset": 22, "nodeName": "prediction_interval", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 436, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 438, "col_offset": 21, "nodeName": "commands", "type": "module"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 439, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 439, "col_offset": 33, "nodeName": "lo", "type": "Any"}, {"lineNumber": 439, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 439, "col_offset": 42, "nodeName": "segarr", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 440, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 440, "col_offset": 33, "nodeName": "hi", "type": "Any"}, {"lineNumber": 440, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 440, "col_offset": 42, "nodeName": "segarr", "type": "Any"}, {"lineNumber": 441, "col_offset": 34, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 443, "col_offset": 21, "nodeName": "sensible_segs_mask", "type": "Any"}, {"lineNumber": 444, "col_offset": 21, "nodeName": "sensible_segs_mask", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 445, "col_offset": 29, "nodeName": "all", "type": "Any"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 446, "col_offset": 29, "nodeName": "all", "type": "Any"}, {"lineNumber": 453, "col_offset": 20, "nodeName": "tabio", "type": "module"}, {"lineNumber": 456, "col_offset": 17, "nodeName": "commands", "type": "module"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 457, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 457, "col_offset": 33, "nodeName": "r1", "type": "Any"}, {"lineNumber": 458, "col_offset": 18, "nodeName": "commands", "type": "module"}, {"lineNumber": 459, "col_offset": 46, "nodeName": "annot_fname", "type": "str"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 460, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 460, "col_offset": 33, "nodeName": "r1a", "type": "Any"}, {"lineNumber": 460, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 460, "col_offset": 43, "nodeName": "r1", "type": "Any"}, {"lineNumber": 462, "col_offset": 17, "nodeName": "commands", "type": "module"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 464, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 464, "col_offset": 35, "nodeName": "r2", "type": "Any"}, {"lineNumber": 464, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 464, "col_offset": 44, "nodeName": "r1", "type": "Any"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "commands", "type": "module"}, {"lineNumber": 466, "col_offset": 60, "nodeName": "annot_fname", "type": "str"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 467, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 467, "col_offset": 33, "nodeName": "r2a", "type": "Any"}, {"lineNumber": 467, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 467, "col_offset": 43, "nodeName": "r2", "type": "Any"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 469, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 469, "col_offset": 33, "nodeName": "baits", "type": "Any"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "fix", "type": "module"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "edge_gains", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 491, "col_offset": 31, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 491, "col_offset": 44, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 491, "col_offset": 54, "nodeName": "insert_size", "type": "int"}, {"lineNumber": 494, "col_offset": 31, "nodeName": "fix", "type": "module"}, {"lineNumber": 495, "col_offset": 28, "nodeName": "edge_gains", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 495, "col_offset": 43, "nodeName": "target_size", "type": "numpy.ndarray"}, {"lineNumber": 495, "col_offset": 56, "nodeName": "gap_size", "type": "Any"}, {"lineNumber": 495, "col_offset": 66, "nodeName": "insert_size", "type": "int"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "orig_chr1_cvg", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "read_cna", "type": "Any"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "fname", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "fname", "type": "Any"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "guess", "type": "Any"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "sample_is_f", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "segments", "type": "Any"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "resid", "type": "Any"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "resid", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "commands", "type": "module"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "commands", "type": "module"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "commands", "type": "module"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "commands", "type": "module"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "tabio", "type": "module"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "unique", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 235, "col_offset": 42, "nodeName": "mean", "type": "Any"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "mean", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 238, "col_offset": 42, "nodeName": "mean", "type": "Any"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 240, "col_offset": 39, "nodeName": "mean", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 37, "nodeName": "chry_cn", "type": "Any"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 243, "col_offset": 43, "nodeName": "chry_expect", "type": "Any"}, {"lineNumber": 270, "col_offset": 26, "nodeName": "do_coverage", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 47, "nodeName": "bed", "type": "str"}, {"lineNumber": 270, "col_offset": 52, "nodeName": "bam", "type": "str"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 26, "nodeName": "export", "type": "module"}, {"lineNumber": 287, "col_offset": 44, "nodeName": "cns", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 295, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 295, "col_offset": 65, "nodeName": "cns", "type": "Any"}, {"lineNumber": 307, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 307, "col_offset": 38, "nodeName": "outrows", "type": "Any"}, {"lineNumber": 350, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 358, "col_offset": 57, "nodeName": "is_bg", "type": "Any"}, {"lineNumber": 375, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 375, "col_offset": 36, "nodeName": "new_cns", "type": "Any"}, {"lineNumber": 375, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 375, "col_offset": 52, "nodeName": "cns", "type": "Any"}, {"lineNumber": 383, "col_offset": 31, "nodeName": "columns", "type": "Any"}, {"lineNumber": 435, "col_offset": 22, "nodeName": "metrics", "type": "module"}, {"lineNumber": 436, "col_offset": 22, "nodeName": "metrics", "type": "module"}, {"lineNumber": 441, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 45, "nodeName": "segarr", "type": "Any"}, {"lineNumber": 442, "col_offset": 27, "nodeName": "sensible_segs_mask", "type": "Any"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "fix", "type": "module"}, {"lineNumber": 495, "col_offset": 28, "nodeName": "fix", "type": "module"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "median", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "cleaned", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "cna", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "tabio", "type": "module"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "chromosome", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 242, "col_offset": 46, "nodeName": "mean", "type": "Any"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 244, "col_offset": 43, "nodeName": "mean", "type": "Any"}, {"lineNumber": 270, "col_offset": 26, "nodeName": "commands", "type": "module"}, {"lineNumber": 271, "col_offset": 56, "nodeName": "by_count", "type": "bool"}, {"lineNumber": 272, "col_offset": 56, "nodeName": "min_mapq", "type": "int"}, {"lineNumber": 273, "col_offset": 57, "nodeName": "nprocs", "type": "int"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 274, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 274, "col_offset": 41, "nodeName": "cna", "type": "Any"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 275, "col_offset": 37, "nodeName": "any", "type": "Any"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 276, "col_offset": 39, "nodeName": "nunique", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 289, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 289, "col_offset": 41, "nodeName": "tbl_bed", "type": "Any"}, {"lineNumber": 289, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 289, "col_offset": 55, "nodeName": "cns", "type": "Any"}, {"lineNumber": 290, "col_offset": 36, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 290, "col_offset": 51, "nodeName": "fname", "type": "str"}, {"lineNumber": 290, "col_offset": 58, "nodeName": "ploidy", "type": "int"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "self", "type": "CommandTests"}, {"lineNumber": 292, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 292, "col_offset": 40, "nodeName": "tbl_bed", "type": "Any"}, {"lineNumber": 292, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 292, "col_offset": 54, "nodeName": "cns", "type": "Any"}, {"lineNumber": 295, "col_offset": 36, "nodeName": "splitlines", "type": "Any"}, {"lineNumber": 383, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 406, "col_offset": 44, "nodeName": "ref", "type": "Any"}, {"lineNumber": 445, "col_offset": 29, "nodeName": "los", "type": "Any"}, {"lineNumber": 445, "col_offset": 35, "nodeName": "means", "type": "Any"}, {"lineNumber": 446, "col_offset": 29, "nodeName": "means", "type": "Any"}, {"lineNumber": 446, "col_offset": 37, "nodeName": "his", "type": "Any"}, {"lineNumber": 192, "col_offset": 48, "nodeName": "arange", "type": "Any"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "segments", "type": "Any"}, {"lineNumber": 276, "col_offset": 39, "nodeName": "log2", "type": "Any"}, {"lineNumber": 295, "col_offset": 36, "nodeName": "vcf_body", "type": "Any"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "cp", "type": "Any"}, {"lineNumber": 192, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 235, "col_offset": 42, "nodeName": "segments", "type": "Any"}, {"lineNumber": 235, "col_offset": 57, "nodeName": "chr1_idx", "type": "Any"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "segments", "type": "Any"}, {"lineNumber": 237, "col_offset": 56, "nodeName": "chr1_idx", "type": "Any"}, {"lineNumber": 238, "col_offset": 42, "nodeName": "segments", "type": "Any"}, {"lineNumber": 238, "col_offset": 57, "nodeName": "chrx_idx", "type": "Any"}, {"lineNumber": 240, "col_offset": 39, "nodeName": "segments", "type": "Any"}, {"lineNumber": 240, "col_offset": 56, "nodeName": "chrx_idx", "type": "Any"}, {"lineNumber": 275, "col_offset": 37, "nodeName": "log2", "type": "Any"}, {"lineNumber": 276, "col_offset": 39, "nodeName": "cna", "type": "Any"}, {"lineNumber": 242, "col_offset": 46, "nodeName": "segments", "type": "Any"}, {"lineNumber": 242, "col_offset": 61, "nodeName": "chry_idx", "type": "Any"}, {"lineNumber": 244, "col_offset": 43, "nodeName": "segments", "type": "Any"}, {"lineNumber": 244, "col_offset": 60, "nodeName": "chry_idx", "type": "Any"}, {"lineNumber": 275, "col_offset": 37, "nodeName": "cna", "type": "Any"}]