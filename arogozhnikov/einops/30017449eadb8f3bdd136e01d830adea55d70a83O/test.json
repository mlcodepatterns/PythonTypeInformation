[{"lineNumber": 15, "col_offset": 0, "nodeName": "run", "type": "Callable[..., Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "have_cuda", "type": "bool"}, {"lineNumber": 28, "col_offset": 3, "nodeName": "have_cuda", "type": "bool"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "dependencies", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "return_code1", "type": "int"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "return_code2", "type": "int"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "cmd", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "p", "type": "subprocess.Popen[bytes]"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "returncode", "type": "int"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "output", "type": "bytes"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_", "type": "bytes"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "communicate", "type": "Callable"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "output", "type": "bytes"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "return_code", "type": "int"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "run", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "run", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 54, "nodeName": "cmd", "type": "str"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "Popen", "type": "Type[subprocess.Popen[Any]]"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "cmd", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "communicate", "type": "Callable"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "p", "type": "subprocess.Popen[bytes]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "run", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "return_code", "type": "int"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "run", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "run", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "return_code1", "type": "int"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "return_code2", "type": "int"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 17, "col_offset": 39, "nodeName": "cmd", "type": "str"}, {"lineNumber": 17, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 17, "col_offset": 10, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "p", "type": "subprocess.Popen[bytes]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "Popen", "type": "Type[subprocess.Popen[Any]]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 55, "col_offset": 86, "nodeName": "have_cuda", "type": "bool"}, {"lineNumber": 58, "col_offset": 86, "nodeName": "have_cuda", "type": "bool"}, {"lineNumber": 17, "col_offset": 10, "nodeName": "cmd", "type": "str"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "parent", "type": "pathlib.Path"}, {"lineNumber": 18, "col_offset": 58, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 18, "col_offset": 72, "nodeName": "env", "type": "Dict[nothing, nothing]"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 24, "col_offset": 56, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 48, "col_offset": 65, "nodeName": "join", "type": "Callable"}, {"lineNumber": 48, "col_offset": 74, "nodeName": "dependencies", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 58, "nodeName": "os", "type": "module"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 18, "col_offset": 32, "nodeName": "__file__", "type": "str"}]