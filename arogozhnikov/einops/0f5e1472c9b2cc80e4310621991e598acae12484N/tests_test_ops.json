[{"lineNumber": 41, "col_offset": 0, "nodeName": "test_collapsed_ellipsis_errors_out", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "test_ellipsis_ops_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "check_op_against_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "test_ellipsis_ops_imperative", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "test_rearrange_consistency_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 156, "col_offset": 0, "nodeName": "test_rearrange_permutations_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "test_reduction_imperatives", "type": "Callable[[], Any]"}, {"lineNumber": 216, "col_offset": 0, "nodeName": "test_reduction_symbolic", "type": "Callable[[], Any]"}, {"lineNumber": 268, "col_offset": 0, "nodeName": "test_reduction_stress_imperatives", "type": "Callable[[], Any]"}, {"lineNumber": 298, "col_offset": 0, "nodeName": "test_reduction_with_callable_imperatives", "type": "Callable[[], Any]"}, {"lineNumber": 351, "col_offset": 0, "nodeName": "test_enumerating_directions", "type": "Callable[[], Any]"}, {"lineNumber": 368, "col_offset": 0, "nodeName": "test_concatenations_and_stacking", "type": "Callable[[], Any]"}, {"lineNumber": 390, "col_offset": 0, "nodeName": "test_gradients_imperatives", "type": "Callable[[], Any]"}, {"lineNumber": 417, "col_offset": 0, "nodeName": "test_tiling_imperatives", "type": "Callable[[], Any]"}, {"lineNumber": 434, "col_offset": 0, "nodeName": "test_tiling_symbolic", "type": "Callable[[], Any]"}, {"lineNumber": 468, "col_offset": 0, "nodeName": "check_reversion", "type": "Callable[..., Any]"}, {"lineNumber": 479, "col_offset": 0, "nodeName": "test_repeat_numpy", "type": "Callable[[], Any]"}, {"lineNumber": 488, "col_offset": 0, "nodeName": "test_repeat_imperatives", "type": "Callable[[], Any]"}, {"lineNumber": 501, "col_offset": 0, "nodeName": "test_repeat_symbolic", "type": "Callable[[], Any]"}, {"lineNumber": 527, "col_offset": 0, "nodeName": "test_anonymous_axes", "type": "Callable[[], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "imp_op_backends", "type": "Any"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "sym_op_backends", "type": "Any"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "identity_patterns", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "equivalent_rearrange_patterns", "type": "List[Tuple[str, str]]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "equivalent_reduction_patterns", "type": "List[Tuple[str, str]]"}, {"lineNumber": 454, "col_offset": 0, "nodeName": "repeat_test_cases", "type": "List[Union[Tuple[str, Dict[nothing, nothing]], Tuple[str, Dict[Any, Any]]]]"}, {"lineNumber": 515, "col_offset": 0, "nodeName": "test_cases_repeat_anonymous", "type": "List[Union[Tuple[str, Dict[nothing, nothing]], Tuple[str, Dict[Any, Any]]]]"}, {"lineNumber": 10, "col_offset": 18, "nodeName": "collect_test_backends", "type": "Any"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "collect_test_backends", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "pattern", "type": "str"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "identity_patterns", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "equivalent_rearrange_patterns", "type": "List[Tuple[str, str]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "reduction", "type": "str"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "all_rearrange_patterns", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "pattern_pairs", "type": "Tuple[str, str]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "equivalent_rearrange_patterns", "type": "List[Tuple[str, str]]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "numpy_result", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "check_equal", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "p_none_dimension", "type": "float"}, {"lineNumber": 91, "col_offset": 7, "nodeName": "is_symbolic", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "is_symbolic", "type": "bool"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "result1", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "result2", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "sizes", "type": "Dict[str, int]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "temp", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "backend", "type": "Any"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "imp_op_backends", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "backend", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "sym_op_backends", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "backend", "type": "Any"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "imp_op_backends", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "x_numpy", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "x_numpy", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "backend2callback", "type": "Dict[str, Callable[[Any, Any], Any]]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "backend", "type": "Any"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "imp_op_backends", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "backend", "type": "Any"}, {"lineNumber": 352, "col_offset": 19, "nodeName": "imp_op_backends", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "backend", "type": "Any"}, {"lineNumber": 369, "col_offset": 19, "nodeName": "imp_op_backends", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "reduction", "type": "str"}, {"lineNumber": 392, "col_offset": 21, "nodeName": "_reductions", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "backend", "type": "Any"}, {"lineNumber": 418, "col_offset": 19, "nodeName": "imp_op_backends", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "backend", "type": "Any"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "sym_op_backends", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "reduce_pattern", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "repeated", "type": "Any"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "reduced_min", "type": "Any"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "reduced_max", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 484, "col_offset": 36, "nodeName": "repeat_test_cases", "type": "List[Union[Tuple[str, Dict[nothing, nothing]], Tuple[str, Dict[Any, Any]]]]"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "backend", "type": "Any"}, {"lineNumber": 490, "col_offset": 19, "nodeName": "imp_op_backends", "type": "Any"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "backend", "type": "Any"}, {"lineNumber": 504, "col_offset": 19, "nodeName": "sym_op_backends", "type": "Any"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 529, "col_offset": 36, "nodeName": "test_cases_repeat_anonymous", "type": "List[Union[Tuple[str, Dict[nothing, nothing]], Tuple[str, Dict[Any, Any]]]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 55, "col_offset": 60, "nodeName": "pattern", "type": "str"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "pattern1", "type": "str"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "pattern2", "type": "str"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "equivalent_reduction_patterns", "type": "List[Tuple[str, str]]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "operation", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "check_equal", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "p_none_dimension", "type": "int"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "symbol_shape", "type": "List[Optional[Any]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "result_symbol", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "backend_result", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "backend_result", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "backend_result", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "check_equal", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "numpy_result", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "backend_result", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "backend", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "result", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "result1", "type": "Any"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "result2", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "result", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "temp", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "result", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "x2", "type": "Any"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "left_expression", "type": "str"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "right_expression", "type": "str"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "expression", "type": "str"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "pick", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "left_expression", "type": "str"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "right_expression", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "expression", "type": "str"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "expected_result", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "reduction", "type": "str"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "_reductions", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "reduction", "type": "str"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "_reductions", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "reduction", "type": "str"}, {"lineNumber": 299, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "minused", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "framework_name", "type": "str"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "framework_name", "type": "str"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "framework_name", "type": "str"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "framework_name", "type": "str"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "framework_name", "type": "str"}, {"lineNumber": 327, "col_offset": 37, "nodeName": "logsumexp_torch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 328, "col_offset": 39, "nodeName": "logsumexp_chainer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 329, "col_offset": 42, "nodeName": "logsumexp_tf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "logsumexp_keras", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 331, "col_offset": 37, "nodeName": "logsumexp_numpy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "backend_callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "x_backend", "type": "Any"}, {"lineNumber": 341, "col_offset": 34, "nodeName": "equivalent_reduction_patterns", "type": "List[Tuple[str, str]]"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "shape", "type": "Union[List[nothing], List[int]]"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "n_arrays", "type": "int"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "results", "type": "Dict[Any, Any]"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "backend", "type": "Any"}, {"lineNumber": 395, "col_offset": 23, "nodeName": "imp_op_backends", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "test_cases", "type": "List[Tuple[int, int, int, int, int]]"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "repeats", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 426, "col_offset": 23, "nodeName": "test_cases", "type": "List[Tuple[int, int, int, int, int]]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "test_cases", "type": "List[Tuple[int, int, int, int, int]]"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "repeats", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 443, "col_offset": 23, "nodeName": "test_cases", "type": "List[Tuple[int, int, int, int, int]]"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "left", "type": "Any"}, {"lineNumber": 470, "col_offset": 10, "nodeName": "right", "type": "Any"}, {"lineNumber": 470, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 471, "col_offset": 36, "nodeName": "left", "type": "Any"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 472, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 472, "col_offset": 25, "nodeName": "repeat_pattern", "type": "Any"}, {"lineNumber": 473, "col_offset": 18, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 473, "col_offset": 25, "nodeName": "repeated", "type": "Any"}, {"lineNumber": 473, "col_offset": 35, "nodeName": "reduce_pattern", "type": "Any"}, {"lineNumber": 474, "col_offset": 18, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 474, "col_offset": 25, "nodeName": "repeated", "type": "Any"}, {"lineNumber": 474, "col_offset": 35, "nodeName": "reduce_pattern", "type": "Any"}, {"lineNumber": 475, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 475, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 475, "col_offset": 32, "nodeName": "reduced_min", "type": "Any"}, {"lineNumber": 476, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 476, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 476, "col_offset": 32, "nodeName": "reduced_max", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 482, "col_offset": 9, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 483, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 483, "col_offset": 38, "nodeName": "x1", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "pattern", "type": "str"}, {"lineNumber": 484, "col_offset": 17, "nodeName": "axis_dimensions", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 493, "col_offset": 40, "nodeName": "repeat_test_cases", "type": "List[Union[Tuple[str, Dict[nothing, nothing]], Tuple[str, Dict[Any, Any]]]]"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 507, "col_offset": 40, "nodeName": "repeat_test_cases", "type": "List[Union[Tuple[str, Dict[nothing, nothing]], Tuple[str, Dict[Any, Any]]]]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "pattern", "type": "str"}, {"lineNumber": 529, "col_offset": 17, "nodeName": "axis_dimensions", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "EinopsError", "type": "Type[einops.EinopsError]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "EinopsError", "type": "Type[einops.EinopsError]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "pattern1", "type": "str"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "pattern2", "type": "str"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "identity_patterns", "type": "List[str]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "pattern_pairs", "type": "Tuple[str, str]"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "backend", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "create_symbol", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "operation", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "eval_symbol", "type": "Any"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "result_symbol", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "operation", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "backend_result", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "collect_test_backends", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "pattern", "type": "str"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "reduction", "type": "str"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "pattern", "type": "str"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 146, "col_offset": 60, "nodeName": "sizes", "type": "Dict[str, int]"}, {"lineNumber": 147, "col_offset": 65, "nodeName": "sizes", "type": "Dict[str, int]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "x2", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "result", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "x2", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "result", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 163, "col_offset": 48, "nodeName": "right_expression", "type": "str"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "expression", "type": "str"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "randint", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 174, "col_offset": 48, "nodeName": "right_expression", "type": "str"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 175, "col_offset": 34, "nodeName": "expression", "type": "str"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "input", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "original_axis", "type": "int"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "result_axis", "type": "Any"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 178, "col_offset": 52, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "expected_result", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "result", "type": "Any"}, {"lineNumber": 181, "col_offset": 41, "nodeName": "expected_result", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "test_cases", "type": "List[List[Any]]"}, {"lineNumber": 210, "col_offset": 58, "nodeName": "test_cases", "type": "List[List[Any]]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 38, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "test_cases", "type": "List[List[Any]]"}, {"lineNumber": 241, "col_offset": 64, "nodeName": "test_cases", "type": "List[List[Any]]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 47, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "_reductions", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "dtype", "type": "str"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "coincide", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "x_numpy", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "logsumexp", "type": "Any"}, {"lineNumber": 303, "col_offset": 27, "nodeName": "tuple_of_axes", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "reduce_logsumexp", "type": "Any"}, {"lineNumber": 307, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 307, "col_offset": 38, "nodeName": "tuple_of_axes", "type": "Any"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "logsumexp", "type": "Any"}, {"lineNumber": 311, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 311, "col_offset": 46, "nodeName": "tuple_of_axes", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "logsumexp", "type": "Any"}, {"lineNumber": 315, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 315, "col_offset": 30, "nodeName": "tuple_of_axes", "type": "Any"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "max", "type": "Any"}, {"lineNumber": 319, "col_offset": 24, "nodeName": "tuple_of_axes", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "exp", "type": "Any"}, {"lineNumber": 321, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 323, "col_offset": 30, "nodeName": "minused", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "TorchBackend", "type": "Type[einops._backends.TorchBackend]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "ChainerBackend", "type": "Type[einops._backends.ChainerBackend]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "TensorflowBackend", "type": "Type[einops._backends.TensorflowBackend]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "KerasBackend", "type": "Type[einops._backends.KerasBackend]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "NumpyBackend", "type": "Type[einops._backends.NumpyBackend]"}, {"lineNumber": 335, "col_offset": 11, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 335, "col_offset": 41, "nodeName": "backend2callback", "type": "Dict[str, Callable[[Any, Any], Any]]"}, {"lineNumber": 338, "col_offset": 27, "nodeName": "backend2callback", "type": "Dict[str, Callable[[Any, Any], Any]]"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 340, "col_offset": 39, "nodeName": "x_numpy", "type": "Any"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "pattern1", "type": "str"}, {"lineNumber": 341, "col_offset": 22, "nodeName": "pattern2", "type": "str"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "output_numpy", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "output_backend", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 353, "col_offset": 40, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "axes1", "type": "List[nothing]"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "axes2", "type": "List[nothing]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "shapes", "type": "List[Union[List[nothing], List[int]]]"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "shape", "type": "Union[List[nothing], List[int]]"}, {"lineNumber": 373, "col_offset": 25, "nodeName": "shapes", "type": "List[Union[List[nothing], List[int]]]"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "y0", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "y1", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "y2", "type": "Any"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "y3", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "y4", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 409, "col_offset": 46, "nodeName": "grad", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "name1", "type": "Any"}, {"lineNumber": 412, "col_offset": 19, "nodeName": "grad1", "type": "Any"}, {"lineNumber": 412, "col_offset": 28, "nodeName": "items", "type": "Callable"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 35, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "converted", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "repeated", "type": "Any"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 436, "col_offset": 35, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 437, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "sym", "type": "Any"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "sym", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 456, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 457, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 458, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 459, "col_offset": 39, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 460, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 461, "col_offset": 37, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 462, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 463, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 464, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 470, "col_offset": 18, "nodeName": "repeat_pattern", "type": "Any"}, {"lineNumber": 471, "col_offset": 21, "nodeName": "right", "type": "Any"}, {"lineNumber": 472, "col_offset": 63, "nodeName": "sizes", "type": "Dict[str, Any]"}, {"lineNumber": 473, "col_offset": 70, "nodeName": "sizes", "type": "Dict[str, Any]"}, {"lineNumber": 474, "col_offset": 70, "nodeName": "sizes", "type": "Dict[str, Any]"}, {"lineNumber": 475, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 476, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 483, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 483, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "check_reversion", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 485, "col_offset": 27, "nodeName": "pattern", "type": "str"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 491, "col_offset": 35, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "pattern", "type": "str"}, {"lineNumber": 493, "col_offset": 21, "nodeName": "axis_dimensions", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "converted", "type": "Any"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "repeated", "type": "Any"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 505, "col_offset": 35, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "pattern", "type": "str"}, {"lineNumber": 507, "col_offset": 21, "nodeName": "axis_dimensions", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 510, "col_offset": 12, "nodeName": "sym", "type": "Any"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 517, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 518, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 519, "col_offset": 37, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 520, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 521, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 522, "col_offset": 45, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "check_reversion", "type": "Callable[..., Any]"}, {"lineNumber": 530, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 530, "col_offset": 27, "nodeName": "pattern", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "pattern", "type": "str"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "pattern1", "type": "str"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 67, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 70, "nodeName": "pattern2", "type": "str"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "all_rearrange_patterns", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 92, "col_offset": 85, "nodeName": "d", "type": "Any"}, {"lineNumber": 92, "col_offset": 90, "nodeName": "shape", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "backend", "type": "Any"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "symbol_shape", "type": "List[Optional[Any]]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "backend", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 97, "col_offset": 54, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "backend", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 107, "col_offset": 54, "nodeName": "is_symbolic", "type": "bool"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "identity_patterns", "type": "List[str]"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "pattern", "type": "nothing"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "result", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "arange", "type": "Any"}, {"lineNumber": 159, "col_offset": 56, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "left_expression", "type": "str"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 166, "col_offset": 52, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 170, "col_offset": 56, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "left_expression", "type": "str"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 179, "col_offset": 65, "nodeName": "result_axis", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "backend", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "reduction", "type": "str"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "pattern", "type": "str"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "axes_lengths", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 210, "col_offset": 39, "nodeName": "expected_result", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 218, "col_offset": 38, "nodeName": "backend", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "input", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "pattern", "type": "str"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "axes_lengths", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 241, "col_offset": 39, "nodeName": "expected_numpy_result", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "shapes", "type": "List[Any]"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "shapes", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 47, "nodeName": "backend", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "reduction", "type": "str"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "dtype", "type": "str"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "coincide", "type": "Any"}, {"lineNumber": 276, "col_offset": 27, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "skipped", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "left", "type": "str"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "right", "type": "str"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "pattern", "type": "str"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "result1", "type": "Any"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "result2", "type": "Any"}, {"lineNumber": 299, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "functions", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "max", "type": "Any"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "tuple_of_axes", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 322, "col_offset": 30, "nodeName": "tuple_of_axes", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "log", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 335, "col_offset": 11, "nodeName": "backend", "type": "Any"}, {"lineNumber": 338, "col_offset": 44, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 55, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 342, "col_offset": 79, "nodeName": "pattern1", "type": "str"}, {"lineNumber": 342, "col_offset": 89, "nodeName": "pattern2", "type": "str"}, {"lineNumber": 343, "col_offset": 27, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 343, "col_offset": 34, "nodeName": "x_numpy", "type": "Any"}, {"lineNumber": 343, "col_offset": 43, "nodeName": "pattern1", "type": "str"}, {"lineNumber": 344, "col_offset": 29, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 344, "col_offset": 36, "nodeName": "x_backend", "type": "Any"}, {"lineNumber": 344, "col_offset": 47, "nodeName": "pattern1", "type": "str"}, {"lineNumber": 345, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "output_numpy", "type": "Any"}, {"lineNumber": 353, "col_offset": 40, "nodeName": "backend", "type": "Any"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 358, "col_offset": 56, "nodeName": "shape", "type": "Union[List[nothing], List[int]]"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "_enumerate_directions", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 359, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 360, "col_offset": 20, "nodeName": "_enumerate_directions", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 362, "col_offset": 16, "nodeName": "ax1", "type": "nothing"}, {"lineNumber": 362, "col_offset": 21, "nodeName": "ax2", "type": "nothing"}, {"lineNumber": 362, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 362, "col_offset": 32, "nodeName": "axes1", "type": "List[nothing]"}, {"lineNumber": 362, "col_offset": 39, "nodeName": "axes2", "type": "List[nothing]"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "ax2", "type": "Any"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "backend", "type": "Any"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "arrays1", "type": "List[Any]"}, {"lineNumber": 378, "col_offset": 16, "nodeName": "arrays2", "type": "List[Any]"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "result0", "type": "numpy.ndarray"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "result1", "type": "Any"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "result2", "type": "Any"}, {"lineNumber": 385, "col_offset": 16, "nodeName": "result1", "type": "Any"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "result2", "type": "Any"}, {"lineNumber": 396, "col_offset": 17, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 396, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 399, "col_offset": 26, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 401, "col_offset": 17, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 401, "col_offset": 24, "nodeName": "y0", "type": "Any"}, {"lineNumber": 402, "col_offset": 17, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 402, "col_offset": 24, "nodeName": "y1", "type": "Any"}, {"lineNumber": 403, "col_offset": 17, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 403, "col_offset": 24, "nodeName": "y2", "type": "Any"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 404, "col_offset": 24, "nodeName": "y3", "type": "Any"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 408, "col_offset": 19, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 408, "col_offset": 36, "nodeName": "grad", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "results", "type": "Dict[Any, Any]"}, {"lineNumber": 411, "col_offset": 41, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 412, "col_offset": 28, "nodeName": "results", "type": "Dict[Any, Any]"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "name2", "type": "Any"}, {"lineNumber": 413, "col_offset": 23, "nodeName": "grad2", "type": "Any"}, {"lineNumber": 413, "col_offset": 32, "nodeName": "items", "type": "Callable"}, {"lineNumber": 419, "col_offset": 35, "nodeName": "backend", "type": "Any"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "tile", "type": "Any"}, {"lineNumber": 427, "col_offset": 34, "nodeName": "input", "type": "Any"}, {"lineNumber": 427, "col_offset": 41, "nodeName": "repeats", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 428, "col_offset": 24, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 428, "col_offset": 43, "nodeName": "input", "type": "Any"}, {"lineNumber": 429, "col_offset": 23, "nodeName": "tile", "type": "Any"}, {"lineNumber": 429, "col_offset": 36, "nodeName": "converted", "type": "Any"}, {"lineNumber": 429, "col_offset": 47, "nodeName": "repeats", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 430, "col_offset": 21, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 430, "col_offset": 38, "nodeName": "repeated", "type": "Any"}, {"lineNumber": 431, "col_offset": 19, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 431, "col_offset": 37, "nodeName": "result", "type": "Any"}, {"lineNumber": 431, "col_offset": 45, "nodeName": "expected", "type": "Any"}, {"lineNumber": 436, "col_offset": 35, "nodeName": "backend", "type": "Any"}, {"lineNumber": 444, "col_offset": 23, "nodeName": "tile", "type": "Any"}, {"lineNumber": 444, "col_offset": 34, "nodeName": "input", "type": "Any"}, {"lineNumber": 444, "col_offset": 41, "nodeName": "repeats", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 445, "col_offset": 18, "nodeName": "create_symbol", "type": "Any"}, {"lineNumber": 445, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 446, "col_offset": 21, "nodeName": "eval_symbol", "type": "Any"}, {"lineNumber": 447, "col_offset": 19, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 447, "col_offset": 37, "nodeName": "result", "type": "Any"}, {"lineNumber": 447, "col_offset": 45, "nodeName": "expected", "type": "Any"}, {"lineNumber": 449, "col_offset": 18, "nodeName": "create_symbol", "type": "Any"}, {"lineNumber": 450, "col_offset": 21, "nodeName": "eval_symbol", "type": "Any"}, {"lineNumber": 451, "col_offset": 19, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 451, "col_offset": 37, "nodeName": "result", "type": "Any"}, {"lineNumber": 451, "col_offset": 45, "nodeName": "expected", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 485, "col_offset": 38, "nodeName": "axis_dimensions", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 491, "col_offset": 35, "nodeName": "backend", "type": "Any"}, {"lineNumber": 494, "col_offset": 23, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 494, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 494, "col_offset": 33, "nodeName": "pattern", "type": "str"}, {"lineNumber": 495, "col_offset": 24, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 495, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 496, "col_offset": 23, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 496, "col_offset": 30, "nodeName": "converted", "type": "Any"}, {"lineNumber": 496, "col_offset": 41, "nodeName": "pattern", "type": "str"}, {"lineNumber": 497, "col_offset": 21, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 497, "col_offset": 38, "nodeName": "repeated", "type": "Any"}, {"lineNumber": 498, "col_offset": 19, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 498, "col_offset": 37, "nodeName": "result", "type": "Any"}, {"lineNumber": 498, "col_offset": 45, "nodeName": "expected", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 505, "col_offset": 35, "nodeName": "backend", "type": "Any"}, {"lineNumber": 508, "col_offset": 23, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 508, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 508, "col_offset": 33, "nodeName": "pattern", "type": "str"}, {"lineNumber": 510, "col_offset": 18, "nodeName": "create_symbol", "type": "Any"}, {"lineNumber": 510, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 511, "col_offset": 21, "nodeName": "eval_symbol", "type": "Any"}, {"lineNumber": 512, "col_offset": 19, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 512, "col_offset": 37, "nodeName": "result", "type": "Any"}, {"lineNumber": 512, "col_offset": 45, "nodeName": "expected", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 530, "col_offset": 38, "nodeName": "axis_dimensions", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "pattern1", "type": "str"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "pattern2", "type": "str"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "axes_lengths", "type": "Any"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "axes_lengths", "type": "Any"}, {"lineNumber": 92, "col_offset": 54, "nodeName": "p_none_dimension", "type": "Union[float, int]"}, {"lineNumber": 92, "col_offset": 90, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 95, "col_offset": 62, "nodeName": "symbol", "type": "Any"}, {"lineNumber": 95, "col_offset": 70, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "backend", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 108, "col_offset": 47, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "check_op_against_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "backend", "type": "Any"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "pattern", "type": "str"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "prod", "type": "Any"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "setdiff1d", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 38, "nodeName": "result", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "numpy", "type": "module"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 161, "col_offset": 55, "nodeName": "axis", "type": "int"}, {"lineNumber": 162, "col_offset": 56, "nodeName": "axis", "type": "Any"}, {"lineNumber": 162, "col_offset": 64, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "input", "type": "Any"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "result", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 172, "col_offset": 55, "nodeName": "axis", "type": "int"}, {"lineNumber": 173, "col_offset": 56, "nodeName": "axis", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "input", "type": "Any"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "input", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 66, "nodeName": "pattern", "type": "str"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 212, "col_offset": 42, "nodeName": "result", "type": "Any"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "result", "type": "Any"}, {"lineNumber": 213, "col_offset": 46, "nodeName": "expected_result", "type": "Any"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "mean", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "input", "type": "Any"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "sym", "type": "Any"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "result_sym", "type": "Any"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "result", "type": "Any"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "shape", "type": "List[None]"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "_axes_lengths", "type": "Dict[Any, Any]"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "sym", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "result_sym", "type": "Any"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "result", "type": "Any"}, {"lineNumber": 276, "col_offset": 27, "nodeName": "numpy", "type": "module"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "randint", "type": "Any"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 279, "col_offset": 55, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 283, "col_offset": 40, "nodeName": "right", "type": "str"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 284, "col_offset": 80, "nodeName": "shape", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "reduction", "type": "str"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 287, "col_offset": 36, "nodeName": "pattern", "type": "str"}, {"lineNumber": 288, "col_offset": 26, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 288, "col_offset": 38, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "skipped", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "result2", "type": "Any"}, {"lineNumber": 291, "col_offset": 23, "nodeName": "coincide", "type": "Any"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "result1", "type": "Any"}, {"lineNumber": 291, "col_offset": 41, "nodeName": "result2", "type": "Any"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "check_op_against_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "backend", "type": "Any"}, {"lineNumber": 295, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 295, "col_offset": 51, "nodeName": "pattern", "type": "str"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "chainer", "type": "Any"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 338, "col_offset": 44, "nodeName": "backend", "type": "Any"}, {"lineNumber": 342, "col_offset": 55, "nodeName": "backend", "type": "Any"}, {"lineNumber": 343, "col_offset": 63, "nodeName": "logsumexp_numpy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 344, "col_offset": 67, "nodeName": "backend_callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 345, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 347, "col_offset": 33, "nodeName": "output_backend", "type": "Any"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 360, "col_offset": 42, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 360, "col_offset": 61, "nodeName": "x", "type": "Any"}, {"lineNumber": 361, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "axes1", "type": "List[nothing]"}, {"lineNumber": 361, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 361, "col_offset": 37, "nodeName": "axes2", "type": "List[nothing]"}, {"lineNumber": 361, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 361, "col_offset": 51, "nodeName": "shape", "type": "Union[List[nothing], List[int]]"}, {"lineNumber": 363, "col_offset": 22, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 363, "col_offset": 39, "nodeName": "ax2", "type": "nothing"}, {"lineNumber": 364, "col_offset": 23, "nodeName": "shape", "type": "nothing"}, {"lineNumber": 364, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 365, "col_offset": 38, "nodeName": "ax1", "type": "nothing"}, {"lineNumber": 365, "col_offset": 43, "nodeName": "ax2", "type": "Any"}, {"lineNumber": 379, "col_offset": 26, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 379, "col_offset": 40, "nodeName": "arrays1", "type": "List[Any]"}, {"lineNumber": 380, "col_offset": 26, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 380, "col_offset": 36, "nodeName": "arrays1", "type": "List[Any]"}, {"lineNumber": 381, "col_offset": 26, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 36, "nodeName": "arrays2", "type": "List[Any]"}, {"lineNumber": 382, "col_offset": 23, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 382, "col_offset": 41, "nodeName": "result0", "type": "numpy.ndarray"}, {"lineNumber": 382, "col_offset": 50, "nodeName": "result1", "type": "Any"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 383, "col_offset": 41, "nodeName": "result1", "type": "Any"}, {"lineNumber": 385, "col_offset": 26, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 385, "col_offset": 36, "nodeName": "arrays1", "type": "List[Any]"}, {"lineNumber": 386, "col_offset": 26, "nodeName": "rearrange", "type": "Callable[..., Any]"}, {"lineNumber": 386, "col_offset": 36, "nodeName": "arrays2", "type": "List[Any]"}, {"lineNumber": 387, "col_offset": 23, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 387, "col_offset": 41, "nodeName": "result1", "type": "Any"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 396, "col_offset": 17, "nodeName": "backend", "type": "Any"}, {"lineNumber": 397, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 397, "col_offset": 27, "nodeName": "y0", "type": "Any"}, {"lineNumber": 399, "col_offset": 26, "nodeName": "backend", "type": "Any"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "set_recording", "type": "Any"}, {"lineNumber": 401, "col_offset": 54, "nodeName": "reduction", "type": "str"}, {"lineNumber": 402, "col_offset": 52, "nodeName": "reduction", "type": "str"}, {"lineNumber": 403, "col_offset": 56, "nodeName": "reduction", "type": "str"}, {"lineNumber": 404, "col_offset": 49, "nodeName": "reduction", "type": "str"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "backend", "type": "Any"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "set_recording", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "y4", "type": "Any"}, {"lineNumber": 408, "col_offset": 19, "nodeName": "backend", "type": "Any"}, {"lineNumber": 408, "col_offset": 36, "nodeName": "y0", "type": "Any"}, {"lineNumber": 409, "col_offset": 20, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 411, "col_offset": 41, "nodeName": "results", "type": "Dict[Any, Any]"}, {"lineNumber": 413, "col_offset": 32, "nodeName": "results", "type": "Dict[Any, Any]"}, {"lineNumber": 414, "col_offset": 23, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 414, "col_offset": 38, "nodeName": "grad1", "type": "Any"}, {"lineNumber": 414, "col_offset": 45, "nodeName": "grad2", "type": "Any"}, {"lineNumber": 414, "col_offset": 54, "nodeName": "name1", "type": "Any"}, {"lineNumber": 414, "col_offset": 61, "nodeName": "name2", "type": "Any"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 428, "col_offset": 24, "nodeName": "backend", "type": "Any"}, {"lineNumber": 429, "col_offset": 23, "nodeName": "backend", "type": "Any"}, {"lineNumber": 430, "col_offset": 21, "nodeName": "backend", "type": "Any"}, {"lineNumber": 431, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 437, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 444, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 445, "col_offset": 18, "nodeName": "backend", "type": "Any"}, {"lineNumber": 445, "col_offset": 40, "nodeName": "input", "type": "Any"}, {"lineNumber": 446, "col_offset": 21, "nodeName": "backend", "type": "Any"}, {"lineNumber": 446, "col_offset": 41, "nodeName": "tile", "type": "Any"}, {"lineNumber": 446, "col_offset": 54, "nodeName": "sym", "type": "Any"}, {"lineNumber": 446, "col_offset": 59, "nodeName": "repeats", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 447, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 449, "col_offset": 18, "nodeName": "backend", "type": "Any"}, {"lineNumber": 450, "col_offset": 21, "nodeName": "backend", "type": "Any"}, {"lineNumber": 450, "col_offset": 41, "nodeName": "tile", "type": "Any"}, {"lineNumber": 450, "col_offset": 54, "nodeName": "sym", "type": "Any"}, {"lineNumber": 450, "col_offset": 59, "nodeName": "repeats", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 451, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 494, "col_offset": 64, "nodeName": "axis_dimensions", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 495, "col_offset": 24, "nodeName": "backend", "type": "Any"}, {"lineNumber": 496, "col_offset": 72, "nodeName": "axis_dimensions", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 497, "col_offset": 21, "nodeName": "backend", "type": "Any"}, {"lineNumber": 498, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 508, "col_offset": 64, "nodeName": "axis_dimensions", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 510, "col_offset": 18, "nodeName": "backend", "type": "Any"}, {"lineNumber": 510, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 511, "col_offset": 21, "nodeName": "backend", "type": "Any"}, {"lineNumber": 511, "col_offset": 41, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 511, "col_offset": 48, "nodeName": "sym", "type": "Any"}, {"lineNumber": 511, "col_offset": 53, "nodeName": "pattern", "type": "str"}, {"lineNumber": 512, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 62, "col_offset": 67, "nodeName": "reduction", "type": "str"}, {"lineNumber": 63, "col_offset": 67, "nodeName": "reduction", "type": "str"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 110, "col_offset": 74, "nodeName": "is_symbolic", "type": "bool"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "itertools", "type": "module"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "equivalent_reduction_patterns", "type": "List[Tuple[str, str]]"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "check_op_against_numpy", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 43, "nodeName": "backend", "type": "Any"}, {"lineNumber": 114, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "pattern", "type": "nothing"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 161, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 161, "col_offset": 45, "nodeName": "axis", "type": "int"}, {"lineNumber": 161, "col_offset": 63, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 161, "col_offset": 69, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 162, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 162, "col_offset": 46, "nodeName": "axis", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 172, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 172, "col_offset": 45, "nodeName": "axis", "type": "int"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 173, "col_offset": 46, "nodeName": "axis", "type": "Any"}, {"lineNumber": 173, "col_offset": 64, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "input", "type": "Any"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "original_axis", "type": "int"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "mean", "type": "Any"}, {"lineNumber": 197, "col_offset": 44, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 206, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 207, "col_offset": 45, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 211, "col_offset": 85, "nodeName": "reduction", "type": "str"}, {"lineNumber": 211, "col_offset": 98, "nodeName": "axes_lengths", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "backend", "type": "Any"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 228, "col_offset": 42, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 238, "col_offset": 45, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "input", "type": "Any"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "backend", "type": "Any"}, {"lineNumber": 245, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 247, "col_offset": 26, "nodeName": "create_symbol", "type": "Any"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "shape", "type": "Any"}, {"lineNumber": 248, "col_offset": 33, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 248, "col_offset": 40, "nodeName": "sym", "type": "Any"}, {"lineNumber": 248, "col_offset": 45, "nodeName": "pattern", "type": "str"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "eval_symbol", "type": "Any"}, {"lineNumber": 249, "col_offset": 49, "nodeName": "result_sym", "type": "Any"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 250, "col_offset": 42, "nodeName": "result", "type": "Any"}, {"lineNumber": 250, "col_offset": 50, "nodeName": "expected_numpy_result", "type": "Any"}, {"lineNumber": 254, "col_offset": 39, "nodeName": "axes_lengths", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "axis", "type": "Any"}, {"lineNumber": 255, "col_offset": 30, "nodeName": "length", "type": "Any"}, {"lineNumber": 255, "col_offset": 40, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 255, "col_offset": 53, "nodeName": "shape", "type": "Any"}, {"lineNumber": 262, "col_offset": 26, "nodeName": "create_symbol", "type": "Any"}, {"lineNumber": 262, "col_offset": 48, "nodeName": "shape", "type": "List[None]"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "reduce", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 40, "nodeName": "sym", "type": "Any"}, {"lineNumber": 263, "col_offset": 45, "nodeName": "pattern", "type": "str"}, {"lineNumber": 264, "col_offset": 29, "nodeName": "eval_symbol", "type": "Any"}, {"lineNumber": 264, "col_offset": 49, "nodeName": "result_sym", "type": "Any"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 265, "col_offset": 42, "nodeName": "result", "type": "Any"}, {"lineNumber": 265, "col_offset": 50, "nodeName": "expected_numpy_result", "type": "Any"}, {"lineNumber": 277, "col_offset": 48, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 278, "col_offset": 56, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "reduction", "type": "str"}, {"lineNumber": 280, "col_offset": 61, "nodeName": "randint", "type": "Any"}, {"lineNumber": 283, "col_offset": 26, "nodeName": "left", "type": "str"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 287, "col_offset": 55, "nodeName": "reduction", "type": "str"}, {"lineNumber": 288, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 292, "col_offset": 46, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 295, "col_offset": 70, "nodeName": "reduction", "type": "str"}, {"lineNumber": 299, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "backend", "type": "Any"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "backend", "type": "Any"}, {"lineNumber": 355, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 355, "col_offset": 65, "nodeName": "shape", "type": "Union[List[nothing], List[int]]"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 360, "col_offset": 42, "nodeName": "backend", "type": "Any"}, {"lineNumber": 363, "col_offset": 22, "nodeName": "backend", "type": "Any"}, {"lineNumber": 364, "col_offset": 23, "nodeName": "ax1", "type": "nothing"}, {"lineNumber": 364, "col_offset": 36, "nodeName": "ax2", "type": "Any"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 374, "col_offset": 19, "nodeName": "framework_name", "type": "Any"}, {"lineNumber": 377, "col_offset": 27, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 377, "col_offset": 74, "nodeName": "shape", "type": "Union[List[nothing], List[int]]"}, {"lineNumber": 377, "col_offset": 85, "nodeName": "i", "type": "int"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 378, "col_offset": 46, "nodeName": "array", "type": "Any"}, {"lineNumber": 378, "col_offset": 57, "nodeName": "array", "type": "Any"}, {"lineNumber": 378, "col_offset": 66, "nodeName": "arrays1", "type": "List[Any]"}, {"lineNumber": 379, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 382, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 383, "col_offset": 50, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 383, "col_offset": 67, "nodeName": "result2", "type": "Any"}, {"lineNumber": 387, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 387, "col_offset": 50, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 387, "col_offset": 67, "nodeName": "result2", "type": "Any"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 409, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 414, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 437, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 446, "col_offset": 41, "nodeName": "backend", "type": "Any"}, {"lineNumber": 446, "col_offset": 71, "nodeName": "sym", "type": "Any"}, {"lineNumber": 446, "col_offset": 76, "nodeName": "input", "type": "Any"}, {"lineNumber": 449, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 449, "col_offset": 53, "nodeName": "shape", "type": "Any"}, {"lineNumber": 450, "col_offset": 41, "nodeName": "backend", "type": "Any"}, {"lineNumber": 450, "col_offset": 71, "nodeName": "sym", "type": "Any"}, {"lineNumber": 450, "col_offset": 76, "nodeName": "input", "type": "Any"}, {"lineNumber": 511, "col_offset": 84, "nodeName": "axis_dimensions", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 511, "col_offset": 104, "nodeName": "sym", "type": "Any"}, {"lineNumber": 511, "col_offset": 109, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "itertools", "type": "module"}, {"lineNumber": 108, "col_offset": 69, "nodeName": "equivalent_rearrange_patterns", "type": "List[Tuple[str, str]]"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "reduction", "type": "str"}, {"lineNumber": 115, "col_offset": 76, "nodeName": "is_symbolic", "type": "bool"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "pick", "type": "Any"}, {"lineNumber": 167, "col_offset": 48, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 172, "col_offset": 63, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 172, "col_offset": 69, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 194, "col_offset": 32, "nodeName": "reduction", "type": "str"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "reduction", "type": "str"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "reduction", "type": "str"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "backend", "type": "Any"}, {"lineNumber": 211, "col_offset": 51, "nodeName": "copy", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "astype", "type": "Any"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "reduction", "type": "str"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 227, "col_offset": 32, "nodeName": "reduction", "type": "str"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "reduction", "type": "str"}, {"lineNumber": 245, "col_offset": 20, "nodeName": "shapes", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 26, "nodeName": "backend", "type": "Any"}, {"lineNumber": 248, "col_offset": 64, "nodeName": "reduction", "type": "str"}, {"lineNumber": 248, "col_offset": 77, "nodeName": "axes_lengths", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "backend", "type": "Any"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "numpy", "type": "module"}, {"lineNumber": 255, "col_offset": 53, "nodeName": "input", "type": "Any"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "axis", "type": "Any"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "pattern", "type": "str"}, {"lineNumber": 259, "col_offset": 50, "nodeName": "length", "type": "Any"}, {"lineNumber": 262, "col_offset": 26, "nodeName": "backend", "type": "Any"}, {"lineNumber": 263, "col_offset": 64, "nodeName": "reduction", "type": "str"}, {"lineNumber": 263, "col_offset": 77, "nodeName": "_axes_lengths", "type": "Dict[Any, Any]"}, {"lineNumber": 264, "col_offset": 29, "nodeName": "backend", "type": "Any"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "numpy", "type": "module"}, {"lineNumber": 277, "col_offset": 48, "nodeName": "backend", "type": "Any"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "numpy", "type": "module"}, {"lineNumber": 280, "col_offset": 61, "nodeName": "random", "type": "Any"}, {"lineNumber": 280, "col_offset": 82, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 281, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 282, "col_offset": 50, "nodeName": "i", "type": "Any"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 290, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 290, "col_offset": 38, "nodeName": "result2", "type": "Any"}, {"lineNumber": 290, "col_offset": 47, "nodeName": "reduction", "type": "str"}, {"lineNumber": 292, "col_offset": 46, "nodeName": "backend", "type": "Any"}, {"lineNumber": 299, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 358, "col_offset": 29, "nodeName": "prod", "type": "Any"}, {"lineNumber": 358, "col_offset": 40, "nodeName": "shape", "type": "Union[List[nothing], List[int]]"}, {"lineNumber": 374, "col_offset": 19, "nodeName": "backend", "type": "Any"}, {"lineNumber": 374, "col_offset": 65, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 374, "col_offset": 69, "nodeName": "shape", "type": "Union[List[nothing], List[int]]"}, {"lineNumber": 377, "col_offset": 90, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 377, "col_offset": 96, "nodeName": "n_arrays", "type": "int"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "backend", "type": "Any"}, {"lineNumber": 383, "col_offset": 50, "nodeName": "backend", "type": "Any"}, {"lineNumber": 387, "col_offset": 50, "nodeName": "backend", "type": "Any"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "mx", "type": "Any"}, {"lineNumber": 449, "col_offset": 53, "nodeName": "input", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 167, "col_offset": 54, "nodeName": "pick", "type": "Any"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "astype", "type": "Any"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 206, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 211, "col_offset": 51, "nodeName": "input", "type": "Any"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "input", "type": "Any"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 245, "col_offset": 44, "nodeName": "_", "type": "Any"}, {"lineNumber": 245, "col_offset": 49, "nodeName": "shape", "type": "Any"}, {"lineNumber": 249, "col_offset": 63, "nodeName": "sym", "type": "Any"}, {"lineNumber": 249, "col_offset": 68, "nodeName": "input", "type": "Any"}, {"lineNumber": 258, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "_axes_lengths", "type": "Dict[Any, Any]"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 261, "col_offset": 41, "nodeName": "length", "type": "Any"}, {"lineNumber": 264, "col_offset": 63, "nodeName": "sym", "type": "Any"}, {"lineNumber": 264, "col_offset": 68, "nodeName": "input", "type": "Any"}, {"lineNumber": 280, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 281, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 281, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 281, "col_offset": 54, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 281, "col_offset": 60, "nodeName": "n_axes", "type": "int"}, {"lineNumber": 282, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 282, "col_offset": 43, "nodeName": "i", "type": "Any"}, {"lineNumber": 282, "col_offset": 55, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "numpy", "type": "module"}, {"lineNumber": 284, "col_offset": 65, "nodeName": "dtype", "type": "str"}, {"lineNumber": 290, "col_offset": 63, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 358, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 377, "col_offset": 27, "nodeName": "arange", "type": "Any"}, {"lineNumber": 377, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "backend", "type": "Any"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "backend", "type": "Any"}, {"lineNumber": 167, "col_offset": 59, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "input", "type": "Any"}, {"lineNumber": 245, "col_offset": 49, "nodeName": "input", "type": "Any"}, {"lineNumber": 258, "col_offset": 28, "nodeName": "shape", "type": "List[None]"}, {"lineNumber": 259, "col_offset": 42, "nodeName": "axis", "type": "Any"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "shape", "type": "List[None]"}, {"lineNumber": 282, "col_offset": 67, "nodeName": "skipped", "type": "Any"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "prod", "type": "Any"}, {"lineNumber": 284, "col_offset": 51, "nodeName": "shape", "type": "Any"}, {"lineNumber": 290, "col_offset": 69, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 290, "col_offset": 75, "nodeName": "skipped", "type": "Any"}, {"lineNumber": 377, "col_offset": 27, "nodeName": "numpy", "type": "module"}, {"lineNumber": 377, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 377, "col_offset": 47, "nodeName": "prod", "type": "Any"}, {"lineNumber": 377, "col_offset": 58, "nodeName": "shape", "type": "Union[List[nothing], List[int]]"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 200, "col_offset": 32, "nodeName": "reduction", "type": "str"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "reduction", "type": "str"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 204, "col_offset": 32, "nodeName": "reduction", "type": "str"}, {"lineNumber": 206, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "reduction", "type": "str"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 231, "col_offset": 32, "nodeName": "reduction", "type": "str"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 233, "col_offset": 32, "nodeName": "reduction", "type": "str"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 235, "col_offset": 32, "nodeName": "reduction", "type": "str"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "reduction", "type": "str"}, {"lineNumber": 377, "col_offset": 47, "nodeName": "numpy", "type": "module"}]