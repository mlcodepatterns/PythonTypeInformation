[{"lineNumber": 16, "col_offset": 0, "nodeName": "parse_arguments", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "mergeLoops", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 0, "nodeName": "readFile", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 2, "col_offset": 0, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 3, "col_offset": 0, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 8, "col_offset": 6, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 8, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "parserRequired", "type": "argparse._ArgumentGroup"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "parserOpt", "type": "argparse._ArgumentGroup"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "hic", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "target_regions_intervaltree_x", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "target_regions_intervaltree_y", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "result_list_index", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "dict_x", "type": "Dict[Any, Tuple[Any, Any]]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "dict_y", "type": "Dict[Any, Tuple[Any, Any]]"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "result_list_index", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "lowest_resolution", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "lowestResolution", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "files", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "inputFiles", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "outfile_name", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "outFileName", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "dataframe", "type": "None"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "file", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "files", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "dataframe_bedtool", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "tuples_x", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "tuples_y", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "result_dataframe", "type": "Any"}, {"lineNumber": 2, "col_offset": 0, "nodeName": "warnings", "type": "module"}, {"lineNumber": 2, "col_offset": 48, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 3, "col_offset": 0, "nodeName": "warnings", "type": "module"}, {"lineNumber": 3, "col_offset": 48, "nodeName": "PendingDeprecationWarning", "type": "Type[PendingDeprecationWarning]"}, {"lineNumber": 8, "col_offset": 6, "nodeName": "logging", "type": "module"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "hiCMatrix", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "loop", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "dict_of_interest_x", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "list_of_interest", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "x_interval", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "y_interval", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "max_index", "type": "int"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "max_distance", "type": "int"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "all_id_list", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "list_of_interest", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "x_interval", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "y_interval", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "chromosome_x", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "chromosome_y", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "target_regions_intervaltree_x", "type": "Any"}, {"lineNumber": 120, "col_offset": 73, "nodeName": "target_regions_intervaltree_y", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "dict_x", "type": "Dict[Any, Tuple[Any, Any]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "dict_x", "type": "None"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "dict_x", "type": "Dict[nothing, nothing]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "dict_y", "type": "None"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "dict_y", "type": "Dict[nothing, nothing]"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "pFile", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "args", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "from_dataframe", "type": "Any"}, {"lineNumber": 161, "col_offset": 47, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "to_dataframe", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "drop_duplicates", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "mergeLoops", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "lowest_resolution", "type": "Any"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "tuples_x", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 171, "col_offset": 48, "nodeName": "tuples_y", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "outfile_name", "type": "Any"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "RawDescriptionHelpFormatter", "type": "Type[argparse.RawDescriptionHelpFormatter]"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "parserRequired", "type": "argparse._ArgumentGroup"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "parserRequired", "type": "argparse._ArgumentGroup"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "parserRequired", "type": "argparse._ArgumentGroup"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "parserOpt", "type": "argparse._ArgumentGroup"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "parserOpt", "type": "argparse._ArgumentGroup"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "hm", "type": "Any"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "intervalListToIntervalTree", "type": "Any"}, {"lineNumber": 66, "col_offset": 67, "nodeName": "pTupleX", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "intervalListToIntervalTree", "type": "Any"}, {"lineNumber": 67, "col_offset": 67, "nodeName": "pTupleY", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "pDataFrame", "type": "Any"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "target_regions_intervaltree_x", "type": "Any"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "target_regions_intervaltree_y", "type": "Any"}, {"lineNumber": 121, "col_offset": 54, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 123, "col_offset": 54, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "target_regions_intervaltree_x", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "target_regions_intervaltree_y", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "dataframe", "type": "None"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "BedTool", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "values", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "values", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "result_dataframe", "type": "Any"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "argparse", "type": "module"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "__version__", "type": "str"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "hic", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "hic", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "pLowestResolution", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "pLowestResolution", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "loop", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "overlap", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "loop", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "overlap", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "dict_of_interest_x", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "dict_of_interest_x", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "max_distance", "type": "int"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "max_distance", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "max_index", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "max_index", "type": "Any"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "all_id_list", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "remove", "type": "Any"}, {"lineNumber": 108, "col_offset": 58, "nodeName": "data", "type": "Any"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "max_index", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "all_id_list", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "remove", "type": "Any"}, {"lineNumber": 115, "col_offset": 58, "nodeName": "data", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "target_regions_intervaltree_x", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "target_regions_intervaltree_y", "type": "Any"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "chromosome_x", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "dict_x", "type": "Dict[Any, Tuple[Any, Any]]"}, {"lineNumber": 128, "col_offset": 47, "nodeName": "chromosome_y", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "dict_y", "type": "Dict[Any, Tuple[Any, Any]]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "dict_y", "type": "Dict[Any, Tuple[Any, Any]]"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "parse_arguments", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "readFile", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "file", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "sort", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "x_interval", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "y_interval", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "data", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "all_id_list", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "chromosome_x", "type": "Any"}, {"lineNumber": 124, "col_offset": 42, "nodeName": "chromosome_y", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "y", "type": "Any"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "dataframe_bedtool", "type": "Any"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "dataframe", "type": "Any"}, {"lineNumber": 172, "col_offset": 38, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 172, "col_offset": 45, "nodeName": "result_list_index", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "target_regions_intervaltree_x", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "neighborhood_factor_x", "type": "int"}, {"lineNumber": 79, "col_offset": 63, "nodeName": "neighborhood_factor_x", "type": "int"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "target_regions_intervaltree_y", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "neighborhood_factor_y", "type": "int"}, {"lineNumber": 82, "col_offset": 63, "nodeName": "neighborhood_factor_y", "type": "int"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "list_of_interest", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "target_regions_intervaltree_x", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "target_regions_intervaltree_y", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "result_list_index", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "loop", "type": "Any"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "loop", "type": "Any"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "loop", "type": "Any"}, {"lineNumber": 75, "col_offset": 56, "nodeName": "loop", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "loop", "type": "Any"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "loop", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "loop", "type": "Any"}, {"lineNumber": 82, "col_offset": 53, "nodeName": "loop", "type": "Any"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "data", "type": "Any"}, {"lineNumber": 78, "col_offset": 55, "nodeName": "loop", "type": "Any"}, {"lineNumber": 81, "col_offset": 55, "nodeName": "loop", "type": "Any"}, {"lineNumber": 108, "col_offset": 42, "nodeName": "loop", "type": "Any"}, {"lineNumber": 115, "col_offset": 42, "nodeName": "loop", "type": "Any"}]