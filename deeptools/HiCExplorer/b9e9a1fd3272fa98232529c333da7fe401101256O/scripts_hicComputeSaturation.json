[{"lineNumber": 21, "col_offset": 0, "nodeName": "parse_arguments", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "use", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 82, "col_offset": 10, "nodeName": "outPrefix", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "hic_matrix", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "filterThreshold", "type": "List[int]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "iterNum", "type": "int"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "delta", "type": "float"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "lookahead", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "full", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "isect_all", "type": "numpy.ndarray"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "num", "type": "str"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "isect_all", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 169, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "matplotlib", "type": "Any"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "args", "type": "None"}, {"lineNumber": 82, "col_offset": 10, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "hiCMatrix", "type": "Any"}, {"lineNumber": 84, "col_offset": 7, "nodeName": "overlapResolution", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "overlapResolution", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "ma", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "outlier_regions", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "pct_outlier", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "correction_factors", "type": "List[nothing]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "min_idx", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "boundaries", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "bound_ext", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "bound_ext", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "outfile", "type": "str"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "BedTool", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "bedfile", "type": "str"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "bed", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "isect", "type": "int"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "isect_all", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "figure", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "plot", "type": "Any"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "isect_all", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "xlabel", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "ylabel", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "title", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "savefig", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "ArgumentDefaultsHelpFormatter", "type": "Type[argparse.ArgumentDefaultsHelpFormatter]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "HiCMatrix", "type": "Any"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "matrixFile", "type": "Any"}, {"lineNumber": 84, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "getBinSize", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "hic_matrix", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 104, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "eliminate_zeros", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "filter_by_zscore", "type": "Callable[..., List[Any]]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "ma", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "printchrtoremove", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "outlier_regions", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "maskBins", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "outlier_regions", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "corrected_matrix", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "correction_factors", "type": "Any"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "iterativeCorrection", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "iterNum", "type": "int"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "setMatrixValues", "type": "Any"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "corrected_matrix", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "setCorrectionFactors", "type": "Any"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "correction_factors", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "chr_start", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "chr_end", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "compute_spectra_matrix", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "find_consensus_minima", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "bound_ext", "type": "numpy.ndarray"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "fh", "type": "TextIO"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "bedtool", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 148, "col_offset": 50, "nodeName": "out", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "num", "type": "str"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "BedTool", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "bedfile", "type": "str"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "isect_all", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "isect", "type": "int"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "bedfile", "type": "str"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "isect_all", "type": "Any"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "isect_all", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "plt", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "plt", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "plt", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "plt", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "plt", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "plt", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "argparse", "type": "module"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 73, "col_offset": 53, "nodeName": "__version__", "type": "str"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "parse_arguments", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "hic_matrix", "type": "Any"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 100, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "copy", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "hicCorrectMatrix", "type": "module"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "filterThreshold", "type": "List[int]"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "filterThreshold", "type": "List[int]"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "shape", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "ma", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "ma", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "ma", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "ma", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "ma", "type": "Any"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "hicFindTADs", "type": "module"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "ma", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "hicFindTADs", "type": "module"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "lookahead", "type": "int"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "delta", "type": "float"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "min_idx", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 70, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "outfile", "type": "str"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "bt", "type": "Any"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "bedtool", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "intersect", "type": "Any"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "full", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "ma", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 111, "col_offset": 51, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 112, "col_offset": 67, "nodeName": "pct_outlier", "type": "Any"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "chr_start", "type": "Any"}, {"lineNumber": 135, "col_offset": 50, "nodeName": "idx", "type": "Any"}, {"lineNumber": 135, "col_offset": 57, "nodeName": "min_idx", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "boundaries", "type": "numpy.ndarray"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "boundaries", "type": "numpy.ndarray"}, {"lineNumber": 139, "col_offset": 51, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "bt", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "bed", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "outlier_regions", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "ma", "type": "Any"}, {"lineNumber": 112, "col_offset": 80, "nodeName": "shape", "type": "Any"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "idx", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "bound_ext", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "fh", "type": "TextIO"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "hic_matrix", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 112, "col_offset": 80, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "chrom", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "bound_ext", "type": "Any"}, {"lineNumber": 145, "col_offset": 47, "nodeName": "bound_ext", "type": "Any"}, {"lineNumber": 112, "col_offset": 80, "nodeName": "ma", "type": "Any"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 57, "nodeName": "i", "type": "int"}]