[{"lineNumber": 13, "col_offset": 0, "nodeName": "load_testfile", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "test", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "test_MalformedComment", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "filepath", "type": "str"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "test_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "test_MalformedComment_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "test_bad1", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_bad2", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_bad3", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "test_bad4", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_bad5", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "test_good1", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "test_good2", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "test_good3", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_bad_java", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "test_malformed_comment_python", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "test_malformed_comment_java", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 15, "col_offset": 54, "nodeName": "filename", "type": "str"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "fl", "type": "TextIO"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "test_file_content", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "arguments", "type": "Dict[str, str]"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "optional_setting", "type": "None"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "section", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "correct_file_content", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "arguments", "type": "Dict[str, str]"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "optional_setting", "type": "Dict[str, str]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "section", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "test", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "test", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "test", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "test", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "test", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "test", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "test", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "test", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "test", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "test_MalformedComment", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "test_MalformedComment", "type": "Callable[..., Any]"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 14, "col_offset": 28, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 14, "col_offset": 44, "nodeName": "__file__", "type": "str"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "filepath", "type": "str"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "read", "type": "Callable"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "splitlines", "type": "Callable[..., List[str]]"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "Section", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "value", "type": "str"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "value", "type": "str"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "results", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "diff", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "results", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "splitlines", "type": "Callable[..., List[str]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "correct_file_content", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 47, "nodeName": "modified", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "Section", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "value", "type": "str"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "value", "type": "str"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "results", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "dedent", "type": "Callable[[str], str]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "dedent", "type": "Callable[[str], str]"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 14, "col_offset": 28, "nodeName": "path", "type": "module"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "fl", "type": "TextIO"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "optional_setting", "type": "Dict[str, str]"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "arguments", "type": "Dict[str, str]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "section", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "execute_bear", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "test_file", "type": "str"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "test_file_content", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "Diff", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "test_file_content", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "diff", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "DocumentationStyleBearTest"}, {"lineNumber": 46, "col_offset": 47, "nodeName": "diff", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "optional_setting", "type": "Dict[str, str]"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "arguments", "type": "Dict[str, str]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "section", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "execute_bear", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "test_data", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "message", "type": "Any"}, {"lineNumber": 64, "col_offset": 49, "nodeName": "message", "type": "str"}, {"lineNumber": 14, "col_offset": 28, "nodeName": "os", "type": "module"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "load_testfile", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 42, "nodeName": "test_file", "type": "str"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "arguments", "type": "Dict[str, str]"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "key", "type": "str"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "DocumentationStyleBear", "type": "Type[bears.documentation.DocumentationStyleBear.DocumentationStyleBear]"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "section", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "arguments", "type": "Dict[str, str]"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "diffs", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "load_testfile", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "expected_file", "type": "str"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "arguments", "type": "Dict[str, str]"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "key", "type": "str"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "DocumentationStyleBear", "type": "Type[bears.documentation.DocumentationStyleBear.DocumentationStyleBear]"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "section", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "arguments", "type": "Dict[str, str]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "DocumentationStyleBearTest"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "Queue", "type": "Type[queue.Queue[Any]]"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "self", "type": "DocumentationStyleBearTest"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "diffs", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "test_file", "type": "str"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "Queue", "type": "Type[queue.Queue[Any]]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "results", "type": "Any"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "result", "type": "Any"}]