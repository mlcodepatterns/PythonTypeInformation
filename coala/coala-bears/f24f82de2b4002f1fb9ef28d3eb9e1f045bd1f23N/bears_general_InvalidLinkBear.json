[{"lineNumber": 16, "col_offset": 22, "nodeName": "LocalBear", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "DEFAULT_TIMEOUT", "type": "int"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "LANGUAGES", "type": "Set[str]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "REQUIREMENTS", "type": "Set[Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "AUTHORS", "type": "Set[str]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "AUTHORS_EMAILS", "type": "Set[str]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "LICENSE", "type": "str"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "CAN_DETECT", "type": "Set[str]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "check_connection_url", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "splitted_at", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "splitted_schema", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "splitted_schema", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "link_ignore_regex", "type": "Pattern[Any]"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "DEFAULT_TIMEOUT", "type": "int"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "PipRequirement", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "get_status_code", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "check_connection_url", "type": "str"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "DEFAULT_TIMEOUT", "type": "int"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "code", "type": "int"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "splitted_at", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "link_ignore_regex", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "VERBOSE", "type": "int"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "line_number", "type": "int"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "file", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 116, "col_offset": 39, "nodeName": "find_links_in_file", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "file", "type": "Any"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "timeout", "type": "int"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "link_ignore_regex", "type": "str"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "link_ignore_list", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "cls", "type": "Type[InvalidLinkBear]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "cls", "type": "Type[InvalidLinkBear]"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "cls", "type": "Type[InvalidLinkBear]"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "code", "type": "int"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "split", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "re", "type": "module"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "search", "type": "Callable"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "line", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "link", "type": "str"}, {"lineNumber": 116, "col_offset": 39, "nodeName": "InvalidLinkBear", "type": "Type[InvalidLinkBear]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "code", "type": "int"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "head", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "url", "type": "str"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "link", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "regex", "type": "Pattern[str]"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "group", "type": "Callable"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "code", "type": "int"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "requests", "type": "module"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "timeout", "type": "int"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "index", "type": "Any"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "link", "type": "str"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "get_status_code", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "link", "type": "str"}, {"lineNumber": 88, "col_offset": 65, "nodeName": "timeout", "type": "Any"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "code", "type": "int"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "follow_redirects", "type": "bool"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "splitted_at", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "search", "type": "Callable"}, {"lineNumber": 84, "col_offset": 49, "nodeName": "link", "type": "str"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "fnmatch", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "link", "type": "str"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "link_ignore_list", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "link", "type": "str"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "parse_pip_vcs_url", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 65, "nodeName": "link", "type": "str"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "InvalidLinkBear", "type": "Type[InvalidLinkBear]"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "link", "type": "str"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "code", "type": "int"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "code", "type": "int"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "code", "type": "int"}, {"lineNumber": 137, "col_offset": 47, "nodeName": "code", "type": "int"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "SequenceMatcher", "type": "Type[difflib.SequenceMatcher[Any]]"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "redirect_url", "type": "str"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "link", "type": "str"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "diff", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "current_line", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "start", "type": "Any"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "end", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "link_ignore_regex", "type": "Pattern[Any]"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "InvalidLinkBear", "type": "Type[InvalidLinkBear]"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "line_number", "type": "int"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "from_values", "type": "Any"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "head", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 138, "col_offset": 49, "nodeName": "link", "type": "str"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "Diff", "type": "Any"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "file", "type": "Any"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "file", "type": "Any"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "find", "type": "Any"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "link", "type": "str"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "start", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "change_line", "type": "Any"}, {"lineNumber": 150, "col_offset": 41, "nodeName": "line_number", "type": "int"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "current_line", "type": "Any"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "replacement", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "Result", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "filename", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "line_number", "type": "int"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "NORMAL", "type": "Any"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "requests", "type": "module"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "ratio", "type": "Callable[[], float]"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "current_line", "type": "Any"}, {"lineNumber": 147, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "link", "type": "str"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "redirect_url", "type": "str"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "current_line", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "diff", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "from_values", "type": "Any"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "RESULT_SEVERITY", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "real_quick_ratio", "type": "Callable[[], float]"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "matcher", "type": "difflib.SequenceMatcher[nothing]"}, {"lineNumber": 145, "col_offset": 44, "nodeName": "line_number", "type": "int"}, {"lineNumber": 149, "col_offset": 56, "nodeName": "end", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "Result", "type": "Any"}, {"lineNumber": 156, "col_offset": 56, "nodeName": "redirect_url", "type": "str"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "filename", "type": "Any"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "line_number", "type": "int"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "NORMAL", "type": "Any"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "link", "type": "str"}, {"lineNumber": 133, "col_offset": 57, "nodeName": "code", "type": "int"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "matcher", "type": "difflib.SequenceMatcher[nothing]"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "filename", "type": "Any"}, {"lineNumber": 157, "col_offset": 45, "nodeName": "diff", "type": "Any"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "RESULT_SEVERITY", "type": "Any"}]