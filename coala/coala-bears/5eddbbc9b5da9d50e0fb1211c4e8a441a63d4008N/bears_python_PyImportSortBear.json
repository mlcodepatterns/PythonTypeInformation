[{"lineNumber": 11, "col_offset": 23, "nodeName": "LocalBear", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "LANGUAGES", "type": "Set[str]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "REQUIREMENTS", "type": "Set[Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "AUTHORS", "type": "Set[str]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "AUTHORS_EMAILS", "type": "Set[str]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "LICENSE", "type": "str"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "CAN_FIX", "type": "Set[str]"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "DEFAULT_TAB_WIDTH", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "isort_settings", "type": "Dict[Any, Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "sort_imports", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "new_file", "type": "Tuple[Any, ...]"}, {"lineNumber": 14, "col_offset": 20, "nodeName": "PipRequirement", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "SpacingHelper", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "known_standard_library_imports", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "known_standard_library_imports", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "SortImports", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "new_file", "type": "Tuple[Any, ...]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "diff", "type": "Any"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "typed_list", "type": "Any"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "use_parentheses_in_import", "type": "bool"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "force_alphabetical_sort_in_import", "type": "bool"}, {"lineNumber": 150, "col_offset": 39, "nodeName": "force_sort_within_import_sections", "type": "bool"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "from_first_in_import", "type": "bool"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "include_trailing_comma_in_import", "type": "bool"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "combine_star_imports", "type": "bool"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "lines_after_imports", "type": "int"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "order_imports_by_type", "type": "bool"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "balanced_wrapping_in_imports", "type": "bool"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "import_heading_localfolder", "type": "str"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "import_heading_firstparty", "type": "str"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "import_heading_thirdparty", "type": "str"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "import_heading_stdlib", "type": "str"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "import_heading_future", "type": "str"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "default_import_section", "type": "str"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "force_grid_wrap_imports", "type": "bool"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "force_single_line_imports", "type": "bool"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "sort_imports_by_length", "type": "bool"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "forced_separate_imports", "type": "Any"}, {"lineNumber": 168, "col_offset": 30, "nodeName": "isort_multi_line_output", "type": "int"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "known_first_party_imports", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "max_line_length", "type": "int"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "imports_forced_to_top", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "isort_settings", "type": "Dict[Any, Any]"}, {"lineNumber": 178, "col_offset": 37, "nodeName": "isort_settings", "type": "Dict[Any, Any]"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "splitlines", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "file", "type": "Any"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "from_string_arrays", "type": "Any"}, {"lineNumber": 182, "col_offset": 43, "nodeName": "file", "type": "Any"}, {"lineNumber": 182, "col_offset": 49, "nodeName": "new_file", "type": "Tuple[Any, ...]"}, {"lineNumber": 166, "col_offset": 53, "nodeName": "tab_width", "type": "int"}, {"lineNumber": 177, "col_offset": 49, "nodeName": "join", "type": "Callable"}, {"lineNumber": 177, "col_offset": 57, "nodeName": "file", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "Diff", "type": "Any"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "Result", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "self", "type": "PyImportSortBear"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "use_spaces", "type": "bool"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "sort_imports", "type": "Any"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "affected_code", "type": "Any"}, {"lineNumber": 185, "col_offset": 58, "nodeName": "filename", "type": "Any"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "filename", "type": "Any"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "diff", "type": "Any"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "diff", "type": "Any"}]