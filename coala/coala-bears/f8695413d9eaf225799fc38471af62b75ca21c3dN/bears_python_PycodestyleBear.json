[{"lineNumber": 13, "col_offset": 0, "nodeName": "OUTPUT_REGEX", "type": "str"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "LANGUAGES", "type": "Set[str]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "REQUIREMENTS", "type": "Set[Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "AUTHORS", "type": "Set[str]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "AUTHORS_EMAILS", "type": "Set[str]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "LICENSE", "type": "str"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "CAN_DETECT", "type": "Set[str]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "arguments", "type": "List[Union[str, Any]]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "pycodestyle_ignore", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "pycodestyle_select", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "arguments", "type": "List[Union[str, Any]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "result", "type": "Optional[Match[str]]"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "PipRequirement", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "max_line_length", "type": "int"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "max_line_length", "type": "int"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "maxsize", "type": "int"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "ignore", "type": "str"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "select", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "filename", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "match", "type": "Callable"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "OUTPUT_REGEX", "type": "str"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "result", "type": "Optional[Match[str]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "line", "type": "Optional[str]"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "column", "type": "Optional[str]"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "message", "type": "Optional[str]"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "rule", "type": "Optional[str]"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "groups", "type": "Callable"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "rule", "type": "Optional[str]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "aspect", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "aspect", "type": "None"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "sys", "type": "module"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "arguments", "type": "List[Union[str, Any]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "arguments", "type": "List[Union[str, Any]]"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "warn", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "result", "type": "Optional[Match[str]]"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "LineLength", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "from_values", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "arguments", "type": "List[Union[str, Any]]"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "ignore", "type": "str"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "arguments", "type": "List[Union[str, Any]]"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "select", "type": "str"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 68, "col_offset": 52, "nodeName": "max_line_length", "type": "int"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 79, "col_offset": 56, "nodeName": "filename", "type": "Any"}, {"lineNumber": 79, "col_offset": 66, "nodeName": "output", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "Result", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "message", "type": "Optional[str]"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "filename", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "aspect", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "strip", "type": "Any"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "part", "type": "Any"}, {"lineNumber": 61, "col_offset": 55, "nodeName": "pycodestyle_ignore", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "strip", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "part", "type": "Any"}, {"lineNumber": 65, "col_offset": 55, "nodeName": "pycodestyle_select", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "rule", "type": "Optional[str]"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "line", "type": "Optional[str]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "column", "type": "Optional[str]"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "part", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "part", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "self", "type": "Any"}]