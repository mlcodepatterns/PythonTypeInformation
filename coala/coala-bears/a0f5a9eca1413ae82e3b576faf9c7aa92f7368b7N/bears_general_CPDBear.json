[{"lineNumber": 16, "col_offset": 14, "nodeName": "GlobalBear", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "language_dict", "type": "Dict[str, str]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "LANGUAGES", "type": "Set[str]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "REQUIREMENTS", "type": "Set[Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "AUTHORS", "type": "Set[str]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "AUTHORS_EMAILS", "type": "Set[str]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "LICENSE", "type": "str"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "CAN_DETECT", "type": "Set[str]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "supported_lang", "type": "str"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "language_dict", "type": "Dict[str, str]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "files", "type": "str"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "executable", "type": "Optional[str]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "executable", "type": "Tuple[Optional[str], ...]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "arguments", "type": "Tuple[str, str, str, str, str, str, str, str, str]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "arguments", "type": "Union[Tuple[str, ...], Tuple[Optional[str], ...]]"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "stdout_output", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "AnyOneOfRequirements", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "self", "type": "CPDBear"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "ignore_annotations", "type": "bool"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "ignore_identifiers", "type": "bool"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "ignore_literals", "type": "bool"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "ignore_usings", "type": "bool"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "skip_duplicate_files", "type": "bool"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "cpd_language", "type": "str"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "files", "type": "str"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "executable", "type": "Tuple[Optional[str], ...]"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "arguments", "type": "Tuple[str, ...]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "stdout_output", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "_", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "run_shell_command", "type": "Any"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "arguments", "type": "Union[Tuple[str, ...], Tuple[Optional[str], ...]]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "root", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "duplication", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "language_dict", "type": "Dict[str, str]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "supported_lang", "type": "str"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "language", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "cpd_language", "type": "str"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "err", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "which", "type": "Callable[..., Optional[str]]"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "which", "type": "Callable[..., Optional[str]]"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 103, "col_offset": 45, "nodeName": "minimum_tokens", "type": "int"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "fromstring", "type": "Callable[..., xml.etree.ElementTree.Element]"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "stdout_output", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "findall", "type": "Callable[..., List[xml.etree.ElementTree.Element]]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "length", "type": "int"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "affected_code", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "xml_file", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "ExecutableRequirement", "type": "Any"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "ExecutableRequirement", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "language_dict", "type": "Dict[str, str]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "CPDBear"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "language", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "file_dict", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "executable", "type": "Optional[str]"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "executable", "type": "Optional[str]"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "ElementTree", "type": "module"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "root", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "findall", "type": "Callable[..., List[xml.etree.ElementTree.Element]]"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "filename", "type": "str"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "start_line", "type": "int"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "end_line", "type": "int"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "self", "type": "CPDBear"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "supported_lang", "type": "str"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "self", "type": "CPDBear"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "option", "type": "str"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "enable", "type": "bool"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "items", "type": "Callable"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "enable", "type": "bool"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "attrib", "type": "Dict[str, str]"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "duplication", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "attrib", "type": "Dict[str, str]"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "min", "type": "Callable"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "Result", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "self", "type": "CPDBear"}, {"lineNumber": 134, "col_offset": 51, "nodeName": "affected_code", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "executable", "type": "Optional[str]"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "duplication", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "xml_file", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "attrib", "type": "Dict[str, str]"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "affected_code", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "from_values", "type": "Any"}, {"lineNumber": 129, "col_offset": 48, "nodeName": "filename", "type": "str"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "xml_file", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "start_line", "type": "int"}, {"lineNumber": 125, "col_offset": 48, "nodeName": "length", "type": "int"}, {"lineNumber": 126, "col_offset": 39, "nodeName": "file_dict", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "SourceRange", "type": "Any"}, {"lineNumber": 130, "col_offset": 59, "nodeName": "start_line", "type": "int"}, {"lineNumber": 131, "col_offset": 57, "nodeName": "end_line", "type": "int"}, {"lineNumber": 126, "col_offset": 39, "nodeName": "self", "type": "CPDBear"}, {"lineNumber": 126, "col_offset": 54, "nodeName": "filename", "type": "str"}]