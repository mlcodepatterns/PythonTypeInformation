[{"lineNumber": 11, "col_offset": 0, "nodeName": "no_condition", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "is_call_argument", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "stack", "type": "Any"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "functions", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "elem", "type": "Any"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "child_num", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "expected_results", "type": "Dict[Tuple[int, str], Union[Dict[nothing, nothing], Dict[str, List[nothing]]]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "uut", "type": "bears.c_languages.codeclone_detection.ClangCountVectorCreator.ClangCountVectorCreator"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "cv_dict", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "function", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "actual", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "expected_results", "type": "Dict[Tuple[int, str], Union[Dict[nothing, nothing], Dict[str, List[int]]]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "uut", "type": "bears.c_languages.codeclone_detection.ClangCountVectorCreator.ClangCountVectorCreator"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "cv_dict", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "CALL_EXPR", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "ClangCountVectorCreator", "type": "Type[bears.c_languages.codeclone_detection.ClangCountVectorCreator.ClangCountVectorCreator]"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "get_vectors_for_file", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "testfile", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "check_cv_dict", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "cv_dict", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "expected_results", "type": "Dict[Tuple[int, str], Union[Dict[nothing, nothing], Dict[str, List[nothing]]]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "variable", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "ClangCountVectorCreator", "type": "Type[bears.c_languages.codeclone_detection.ClangCountVectorCreator.ClangCountVectorCreator]"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "get_vectors_for_file", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "testfile", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "check_cv_dict", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "cv_dict", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "expected_results", "type": "Dict[Tuple[int, str], Union[Dict[nothing, nothing], Dict[str, List[int]]]]"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "elem", "type": "Any"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "CursorKind", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "join", "type": "Callable"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "uut", "type": "bears.c_languages.codeclone_detection.ClangCountVectorCreator.ClangCountVectorCreator"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "expected", "type": "Any"}, {"lineNumber": 56, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "actual", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "actual", "type": "Any"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "no_condition", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 58, "nodeName": "is_call_argument", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "uut", "type": "bears.c_languages.codeclone_detection.ClangCountVectorCreator.ClangCountVectorCreator"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "path", "type": "module"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "__file__", "type": "str"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "keys", "type": "Any"}, {"lineNumber": 57, "col_offset": 55, "nodeName": "keys", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "function", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "count_vector", "type": "Any"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "os", "type": "module"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "actual", "type": "Any"}, {"lineNumber": 57, "col_offset": 55, "nodeName": "expected", "type": "Any"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "actual", "type": "Any"}, {"lineNumber": 60, "col_offset": 56, "nodeName": "expected", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "keys", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "keys", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "function", "type": "Any"}, {"lineNumber": 60, "col_offset": 65, "nodeName": "function", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 65, "col_offset": 52, "nodeName": "variable", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "actual", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "actual", "type": "Any"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "variable", "type": "Any"}, {"lineNumber": 65, "col_offset": 42, "nodeName": "function", "type": "Any"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "function", "type": "Any"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "function", "type": "Any"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "function", "type": "Any"}]