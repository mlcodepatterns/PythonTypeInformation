[{"lineNumber": 15, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "section", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "queue", "type": "queue.Queue[nothing]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "good_file", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "bad_file", "type": "str"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 18, "col_offset": 30, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "Section", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "Queue", "type": "Type[queue.Queue[Any]]"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "base_test_path", "type": "Any"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "good_filelines", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "CPDBear", "type": "Type[bears.general.CPDBear.CPDBear]"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "section", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "queue", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "base_test_path", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "bad_filelines", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "CPDBear", "type": "Type[bears.general.CPDBear.CPDBear]"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "section", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "queue", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "update_setting", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "CPDBear", "type": "Type[bears.general.CPDBear.CPDBear]"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "section", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "queue", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "log_level", "type": "Any"}, {"lineNumber": 65, "col_offset": 55, "nodeName": "ERROR", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "message", "type": "Any"}, {"lineNumber": 18, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 18, "col_offset": 46, "nodeName": "join", "type": "Callable"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "section", "type": "Any"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "Setting", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "good_file", "type": "str"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "good_file", "type": "str"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "good_filelines", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "run_bear_from_section", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "bad_file", "type": "str"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "bad_file", "type": "str"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "bad_filelines", "type": "List[str]"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "run_bear_from_section", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "section", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "run_bear_from_section", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 55, "nodeName": "logging", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 18, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 18, "col_offset": 46, "nodeName": "path", "type": "module"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "__file__", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "uut", "type": "bears.general.CPDBear.CPDBear"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "uut", "type": "bears.general.CPDBear.CPDBear"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "uut", "type": "bears.general.CPDBear.CPDBear"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "queue", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "queue", "type": "Any"}, {"lineNumber": 18, "col_offset": 46, "nodeName": "os", "type": "module"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "message_queue", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "message_queue", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "uut", "type": "bears.general.CPDBear.CPDBear"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "uut", "type": "bears.general.CPDBear.CPDBear"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "self", "type": "Any"}]