[{"lineNumber": 9, "col_offset": 0, "nodeName": "convert_if_not_empty", "type": "Callable[[str, Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "LANGUAGES", "type": "str"}, {"lineNumber": 9, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "NORMAL", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "MAJOR", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 17, "col_offset": 7, "nodeName": "value", "type": "str"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "value", "type": "str"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "conversion", "type": "Any"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "value", "type": "str"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "RESULT_SEVERITY", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "RESULT_SEVERITY", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "filename", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "output", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "from_values", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "Result", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "filename", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "convert_if_not_empty", "type": "Callable[[str, Any], Any]"}, {"lineNumber": 47, "col_offset": 65, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "convert_if_not_empty", "type": "Callable[[str, Any], Any]"}, {"lineNumber": 48, "col_offset": 72, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "severity_map", "type": "Any"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}]