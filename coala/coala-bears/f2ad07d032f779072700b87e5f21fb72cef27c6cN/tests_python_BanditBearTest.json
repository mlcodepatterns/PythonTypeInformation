[{"lineNumber": 29, "col_offset": 0, "nodeName": "get_testfile_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "load_testfile", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "gen_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "BANDIT_VERSION", "type": "Tuple[Union[str, int], ...]"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "version", "type": "Tuple[Union[str, int], ...]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "B701_MESSAGE", "type": "str"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "B701_MESSAGE_1_4_0_TAIL", "type": "str"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "B701_MESSAGE_1_5_0_TAIL", "type": "str"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "LocalBearTestHelper", "type": "Any"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "good_files", "type": "Tuple[str, str]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "bad_files", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "skipped_error_codes", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "BanditBearSkipErrorCodesTest1", "type": "Any"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "good_files", "type": "Tuple[str]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "bad_files", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "BanditBearSkipErrorCodesTest2", "type": "Any"}, {"lineNumber": 23, "col_offset": 3, "nodeName": "BANDIT_VERSION", "type": "Tuple[Union[str, int], ...]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "B701_MESSAGE_TAIL", "type": "str"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "B701_MESSAGE_1_5_0_TAIL", "type": "str"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "B701_MESSAGE_TAIL", "type": "str"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "B701_MESSAGE_1_4_0_TAIL", "type": "str"}, {"lineNumber": 37, "col_offset": 7, "nodeName": "splitlines", "type": "bool"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "contents", "type": "str"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "test_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "test_assert", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_exec_py2_py", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "test_jinja2_templating", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "verify_local_bear", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "BanditBear", "type": "Any"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "verify_local_bear", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "BanditBear", "type": "Any"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "LooseVersion", "type": "Type[distutils.version.LooseVersion]"}, {"lineNumber": 15, "col_offset": 30, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 30, "col_offset": 72, "nodeName": "name", "type": "str"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "fl", "type": "TextIO"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "contents", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "contents", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "bear", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "gen_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "gen_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "gen_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 30, "nodeName": "bandit", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 30, "col_offset": 40, "nodeName": "__file__", "type": "str"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "read", "type": "Callable"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "splitlines", "type": "Callable[..., List[str]]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "BanditBear", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "check_results", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "bear", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "expected_results", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "get_testfile_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "name", "type": "str"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "fl", "type": "TextIO"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "contents", "type": "str"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "Section", "type": "Any"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "Queue", "type": "Type[queue.Queue[Any]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "BanditBearTest"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "load_testfile", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 47, "nodeName": "testfilename", "type": "str"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "get_testfile_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 63, "nodeName": "testfilename", "type": "str"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "from_values", "type": "Any"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "from_values", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "from_values", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "from_values", "type": "Any"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "from_values", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "from_values", "type": "Any"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "join", "type": "Callable"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "skipped_error_codes", "type": "List[str]"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "Result", "type": "Any"}, {"lineNumber": 57, "col_offset": 42, "nodeName": "get_testfile_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "INFO", "type": "Any"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "Result", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "get_testfile_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "MAJOR", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "Result", "type": "Any"}, {"lineNumber": 70, "col_offset": 56, "nodeName": "B701_MESSAGE_TAIL", "type": "str"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "get_testfile_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "MAJOR", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "Result", "type": "Any"}, {"lineNumber": 75, "col_offset": 53, "nodeName": "B701_MESSAGE_TAIL", "type": "str"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "get_testfile_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "MAJOR", "type": "Any"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "Result", "type": "Any"}, {"lineNumber": 80, "col_offset": 53, "nodeName": "B701_MESSAGE_TAIL", "type": "str"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "get_testfile_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "MAJOR", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "Result", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "B701_MESSAGE_TAIL", "type": "str"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "get_testfile_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 50, "nodeName": "MAJOR", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "load_testfile", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "file", "type": "str"}, {"lineNumber": 103, "col_offset": 54, "nodeName": "good_files", "type": "Tuple[str, str]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "load_testfile", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "file", "type": "str"}, {"lineNumber": 104, "col_offset": 56, "nodeName": "bad_files", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "load_testfile", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "file", "type": "str"}, {"lineNumber": 115, "col_offset": 54, "nodeName": "good_files", "type": "Tuple[str]"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "load_testfile", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "file", "type": "str"}, {"lineNumber": 116, "col_offset": 56, "nodeName": "bad_files", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "RESULT_SEVERITY", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "RESULT_SEVERITY", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "B701_MESSAGE", "type": "str"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "RESULT_SEVERITY", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "B701_MESSAGE", "type": "str"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "RESULT_SEVERITY", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "B701_MESSAGE", "type": "str"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "RESULT_SEVERITY", "type": "Any"}, {"lineNumber": 88, "col_offset": 50, "nodeName": "RESULT_SEVERITY", "type": "Any"}]