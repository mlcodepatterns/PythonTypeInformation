[{"lineNumber": 10, "col_offset": 0, "nodeName": "get_available_decodeerror", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "DecodeError", "type": "Type[json.decoder.JSONDecodeError]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "LANGUAGES", "type": "Set[str]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "REQUIREMENTS", "type": "Set[Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "AUTHORS", "type": "Set[str]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "AUTHORS_EMAILS", "type": "Set[str]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "LICENSE", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "ASCIINEMA_URL", "type": "str"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "CAN_DETECT", "type": "Set[str]"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "JSONDecodeError", "type": "Type[json.decoder.JSONDecodeError]"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "get_available_decodeerror", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "message", "type": "str"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "decoder", "type": "module"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "NpmRequirement", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "filename", "type": "Any"}, {"lineNumber": 37, "col_offset": 67, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "function", "type": "Any"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "json", "type": "module"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "DecodeError", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "output_regex", "type": "str"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 58, "col_offset": 45, "nodeName": "cc_threshold", "type": "int"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "json", "type": "module"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "finditer", "type": "Callable"}, {"lineNumber": 48, "col_offset": 41, "nodeName": "output_regex", "type": "str"}, {"lineNumber": 48, "col_offset": 55, "nodeName": "output", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "groups", "type": "Dict[str, str]"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "function", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "re", "type": "module"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "groupdict", "type": "Callable"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "from_values", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "from_values", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "Result", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "filename", "type": "Any"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "Result", "type": "Any"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "filename", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "MAJOR", "type": "Any"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "function", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "RESULT_SEVERITY", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "message", "type": "str"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "function", "type": "Any"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "function", "type": "Any"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "groups", "type": "Dict[str, str]"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "groups", "type": "Dict[str, str]"}]