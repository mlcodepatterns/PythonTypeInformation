[{"lineNumber": 14, "col_offset": 19, "nodeName": "BaseEstimator", "type": "Any"}, {"lineNumber": 14, "col_offset": 34, "nodeName": "TransformerMixin", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "expansion_warn_threshold", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "dummy_na", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "dummy_na", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "fill_value", "type": "Any"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "fill_value", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "dataframe_output", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "dataframe_output", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "check_null_cols", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "check_null_cols", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "vals", "type": "Iterator[Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "levels", "type": "Dict[Any, Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "warn_list", "type": "Dict[Any, int]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "col", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "warn_list", "type": "Dict[Any, int]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "levels", "type": "Dict[Any, Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "cnames", "type": "List[Union[str, Any]]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "col", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "unexpanded_cnames", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "catcol", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "catcol", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "newcat", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "expanded_array", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "expanded_array", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "is_nan", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "expanded_array", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "levels_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "check_null_cols", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "dataframe_output", "type": "Any"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "X_new", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "null_cols", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "from_iterable", "type": "Callable"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "hex", "type": "str"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "cnames", "type": "List[Union[str, Any]]"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "unexpanded_cnames", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 171, "col_offset": 37, "nodeName": "categories", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "catcol", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "sentinel_entries", "type": "None"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "sentinel_entries", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "fillna", "type": "Any"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "set_categories", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "get_dummies", "type": "Any"}, {"lineNumber": 183, "col_offset": 40, "nodeName": "newcat", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "newcat", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "fill_value", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "sentinel_entries", "type": "Optional[Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "_cols_to_drop", "type": "List[nothing]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 223, "col_offset": 33, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "_cols_to_drop", "type": "Union[List[nothing], Any]"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "_cols_to_expand", "type": "List[nothing]"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "levels_", "type": "Dict[Any, Any]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "columns_", "type": "List[Union[str, Any]]"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "required_columns_", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 48, "nodeName": "_create_col_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 71, "nodeName": "X", "type": "Any"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "X_new", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "col", "type": "Any"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "required_columns_", "type": "List[Any]"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "ncol", "type": "int"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "X_new", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "col", "type": "Any"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "required_columns_", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "null_cols", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "check_null_cols", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "levels", "type": "Dict[Any, Any]"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "expansion_warn_threshold", "type": "int"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "dummy_na", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "col", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "col_levels", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "dummy_na", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 171, "col_offset": 37, "nodeName": "cat", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "add_categories", "type": "Any"}, {"lineNumber": 172, "col_offset": 47, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "catcol", "type": "Any"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "catcol", "type": "Any"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "cat", "type": "Any"}, {"lineNumber": 182, "col_offset": 43, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "pd", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "is_nan", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "expanded_array", "type": "Any"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "dummy_na", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "expanded_array", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "expanded_array", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 223, "col_offset": 33, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 226, "col_offset": 33, "nodeName": "_flag_nulls", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 226, "col_offset": 50, "nodeName": "X", "type": "Any"}, {"lineNumber": 226, "col_offset": 53, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "_cols_to_expand", "type": "List[Any]"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "_check_sentinels", "type": "Callable[[Any], Any]"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 240, "col_offset": 27, "nodeName": "_create_levels", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 47, "nodeName": "X", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 243, "col_offset": 48, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "columns_", "type": "List[Union[str, Any]]"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "empty", "type": "Any"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "check_null_cols", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "col", "type": "Any"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "u", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "_nan_sentinel", "type": "Any"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "u", "type": "Any"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "vals", "type": "Iterator[Any]"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "col", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "categories", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "expansion_warn_threshold", "type": "int"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "warn_list", "type": "Dict[Any, int]"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "extend", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "col", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "expanded_names", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "expanded_names", "type": "List[str]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "col", "type": "Any"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "X", "type": "Any"}, {"lineNumber": 171, "col_offset": 37, "nodeName": "catcol", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "cat", "type": "Any"}, {"lineNumber": 172, "col_offset": 47, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "catcol", "type": "Any"}, {"lineNumber": 182, "col_offset": 43, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 182, "col_offset": 56, "nodeName": "col", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "expanded_array", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "expanded_array", "type": "Any"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "pd", "type": "Any"}, {"lineNumber": 226, "col_offset": 33, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 226, "col_offset": 53, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 240, "col_offset": 27, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "pd", "type": "Any"}, {"lineNumber": 272, "col_offset": 41, "nodeName": "columns_", "type": "List[Union[str, Any]]"}, {"lineNumber": 276, "col_offset": 19, "nodeName": "col", "type": "Any"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "_cols_to_expand", "type": "Union[List[nothing], Any, List[Any]]"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "expanded", "type": "Any"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 42, "nodeName": "ncol", "type": "int"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "col", "type": "Any"}, {"lineNumber": 297, "col_offset": 26, "nodeName": "_cols_to_expand", "type": "Union[List[nothing], Any, List[Any]]"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "expanded", "type": "Any"}, {"lineNumber": 301, "col_offset": 58, "nodeName": "expanded", "type": "Any"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "col", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "isnull", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "uuid", "type": "module"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "cat", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "col", "type": "Any"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "levels", "type": "Dict[Any, Any]"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "isnull", "type": "Any"}, {"lineNumber": 117, "col_offset": 36, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "columns", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "col", "type": "Any"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "col_levels", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "expanded_names", "type": "List[str]"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "expanded_names", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "cnames", "type": "List[Union[str, Any]]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "cnames", "type": "List[Union[str, Any]]"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "col", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "catcol", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "is_nan", "type": "Any"}, {"lineNumber": 196, "col_offset": 27, "nodeName": "sentinel_entries", "type": "Optional[Any]"}, {"lineNumber": 236, "col_offset": 51, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 271, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 272, "col_offset": 41, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 279, "col_offset": 48, "nodeName": "X", "type": "Any"}, {"lineNumber": 279, "col_offset": 51, "nodeName": "col", "type": "Any"}, {"lineNumber": 283, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 288, "col_offset": 39, "nodeName": "astype", "type": "Any"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 297, "col_offset": 26, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 300, "col_offset": 48, "nodeName": "X", "type": "Any"}, {"lineNumber": 300, "col_offset": 51, "nodeName": "col", "type": "Any"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "X_new", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "X_new", "type": "Any"}, {"lineNumber": 305, "col_offset": 34, "nodeName": "astype", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "pd", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "values", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "first_valid_index", "type": "Any"}, {"lineNumber": 80, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "null_cols", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "levels", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "col", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "levels", "type": "Dict[Any, Any]"}, {"lineNumber": 117, "col_offset": 36, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "X", "type": "Any"}, {"lineNumber": 157, "col_offset": 38, "nodeName": "col_levels", "type": "Any"}, {"lineNumber": 233, "col_offset": 39, "nodeName": "columns", "type": "Any"}, {"lineNumber": 236, "col_offset": 51, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 237, "col_offset": 40, "nodeName": "c", "type": "Any"}, {"lineNumber": 237, "col_offset": 45, "nodeName": "columns", "type": "Any"}, {"lineNumber": 271, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 49, "nodeName": "shape", "type": "Any"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 283, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 284, "col_offset": 47, "nodeName": "expanded", "type": "Any"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "expanded", "type": "Any"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "X_new", "type": "Any"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "expanded", "type": "Any"}, {"lineNumber": 84, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 84, "col_offset": 51, "nodeName": "null_cols", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "astype", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "col", "type": "Any"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "col", "type": "Any"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "col_levels", "type": "Any"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "col_levels", "type": "Any"}, {"lineNumber": 157, "col_offset": 52, "nodeName": "cat", "type": "Any"}, {"lineNumber": 157, "col_offset": 59, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 233, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 237, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 271, "col_offset": 49, "nodeName": "X", "type": "Any"}, {"lineNumber": 283, "col_offset": 35, "nodeName": "expanded", "type": "Any"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "X_new", "type": "Any"}, {"lineNumber": 288, "col_offset": 34, "nodeName": "i", "type": "Union[Any, int]"}, {"lineNumber": 288, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "i", "type": "Union[Any, int]"}, {"lineNumber": 305, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "col", "type": "Any"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "c", "type": "Any"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "l", "type": "int"}, {"lineNumber": 123, "col_offset": 50, "nodeName": "items", "type": "Callable"}, {"lineNumber": 157, "col_offset": 59, "nodeName": "self", "type": "DataFrameETL"}, {"lineNumber": 284, "col_offset": 59, "nodeName": "j", "type": "int"}, {"lineNumber": 288, "col_offset": 41, "nodeName": "col", "type": "Any"}, {"lineNumber": 301, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 305, "col_offset": 36, "nodeName": "col", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "col", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "col", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 123, "col_offset": 50, "nodeName": "warn_list", "type": "Dict[Any, int]"}, {"lineNumber": 146, "col_offset": 58, "nodeName": "col", "type": "Any"}, {"lineNumber": 146, "col_offset": 63, "nodeName": "cat", "type": "Any"}, {"lineNumber": 151, "col_offset": 58, "nodeName": "col", "type": "Any"}, {"lineNumber": 151, "col_offset": 63, "nodeName": "cat", "type": "Any"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "dtypes", "type": "Any"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "dtypes", "type": "Any"}, {"lineNumber": 284, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 284, "col_offset": 42, "nodeName": "j", "type": "int"}, {"lineNumber": 301, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "col", "type": "Any"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "X", "type": "Any"}, {"lineNumber": 301, "col_offset": 36, "nodeName": "expanded", "type": "Any"}]