[{"lineNumber": 35, "col_offset": 0, "nodeName": "data_raw", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "dataframe_expected", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "data_raw_2", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "dataframe_2_expected", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "data_few_levels", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "few_levels_expected", "type": "Callable[[], Any]"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "levels_dict", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "levels_dict_numeric", "type": "Callable[[], Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "test_sklearn_api", "type": "Callable[[], Any]"}, {"lineNumber": 165, "col_offset": 0, "nodeName": "test_flag_nulls_warn", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "test_flag_nulls_raise", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 0, "nodeName": "test_check_sentinels", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 0, "nodeName": "test_create_levels", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 223, "col_offset": 0, "nodeName": "test_create_levels_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 235, "col_offset": 0, "nodeName": "test_create_col_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 0, "nodeName": "test_create_col_names_no_dummy", "type": "Callable[[Any], Any]"}, {"lineNumber": 269, "col_offset": 0, "nodeName": "test_create_col_names_numeric", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 0, "nodeName": "test_expand_col", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 0, "nodeName": "test_expand_col_no_dummy", "type": "Callable[[Any], Any]"}, {"lineNumber": 312, "col_offset": 0, "nodeName": "test_expand_col_numeric", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 0, "nodeName": "test_expand_col_numeric_no_dummy", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 0, "nodeName": "test_expand_col_few_levels", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 355, "col_offset": 0, "nodeName": "test_expand_col_few_levels_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 373, "col_offset": 0, "nodeName": "test_fit_exc", "type": "Callable[[Any], Any]"}, {"lineNumber": 380, "col_offset": 0, "nodeName": "test_fit_auto", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 396, "col_offset": 0, "nodeName": "test_fit_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 407, "col_offset": 0, "nodeName": "test_fit_drop_only", "type": "Callable[[Any], Any]"}, {"lineNumber": 418, "col_offset": 0, "nodeName": "test_fit_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 434, "col_offset": 0, "nodeName": "test_fit_list_numeric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 446, "col_offset": 0, "nodeName": "test_fit_with_nan_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 472, "col_offset": 0, "nodeName": "test_transform_notfitted", "type": "Callable[[Any], Any]"}, {"lineNumber": 478, "col_offset": 0, "nodeName": "test_transform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 490, "col_offset": 0, "nodeName": "test_transform_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 506, "col_offset": 0, "nodeName": "test_transform_dataframe", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 517, "col_offset": 0, "nodeName": "test_transform_dataframe_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 533, "col_offset": 0, "nodeName": "test_transform_two_levels", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 544, "col_offset": 0, "nodeName": "test_transform_two_levels_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 558, "col_offset": 0, "nodeName": "test_transform_reuse_transformer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 569, "col_offset": 0, "nodeName": "test_transform_preserve_col_order", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 582, "col_offset": 0, "nodeName": "test_transform_bad_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 595, "col_offset": 0, "nodeName": "test_refit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 625, "col_offset": 0, "nodeName": "test_pickle", "type": "Callable[[Any], Any]"}, {"lineNumber": 642, "col_offset": 0, "nodeName": "test_categorical_looks_like_int", "type": "Callable[[], Any]"}, {"lineNumber": 659, "col_offset": 0, "nodeName": "test_categorical_mixed_type_levels", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "raw", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "raw", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "raw", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "levels", "type": "Dict[str, List[str]]"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "levels", "type": "Dict[str, Union[List[str], List[Union[float, str]]]]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "estimator", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "drop_cols", "type": "List[str]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "drop_cols_2", "type": "List[str]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "drop_cols", "type": "List[str]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "levels_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "actual_levels", "type": "Dict[Any, Any]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 230, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "actual_levels", "type": "Dict[Any, Any]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 241, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "levels_", "type": "Dict[Any, Any]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 257, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "levels_", "type": "Dict[Any, Any]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 273, "col_offset": 29, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "levels_", "type": "Dict[Any, Any]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "data_cnames", "type": "Any"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 512, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 601, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "df2", "type": "Any"}, {"lineNumber": 629, "col_offset": 4, "nodeName": "expected_array", "type": "Any"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "buff", "type": "_io.BytesIO"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "expander", "type": "Any"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "tfm", "type": "Any"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "tfm", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "concat", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "concat", "type": "Any"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "concat", "type": "Any"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "concat", "type": "Any"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "concat", "type": "Any"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "concat", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "check_parameters_default_constructible", "type": "Any"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 136, "col_offset": 49, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "check_no_fit_attributes_set_in_init", "type": "Any"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "check_transformers_unfitted", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "check_transformer_n_iter", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "check_get_params_invariance", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "check_transformer_data_not_an_array", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "check_transformer_general", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "check_fit2d_predict1d", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "check_fit2d_1sample", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "check_fit2d_1feature", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "check_fit1d_1feature", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "check_fit1d_1sample", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "check_dict_unchanged", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "check_dont_overwrite_parameters", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 170, "col_offset": 56, "nodeName": "drop_cols", "type": "List[str]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "Series", "type": "Any"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "Series", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "_check_sentinels", "type": "Callable[[Any], None]"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 219, "col_offset": 44, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "actual_levels", "type": "Dict[Any, Any]"}, {"lineNumber": 220, "col_offset": 28, "nodeName": "levels_dict", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "levels_dict_numeric", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 230, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 231, "col_offset": 44, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "actual_levels", "type": "Dict[Any, Any]"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "levels_dict_numeric", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 241, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 242, "col_offset": 47, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 243, "col_offset": 5, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 13, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 27, "nodeName": "_create_col_names", "type": "Callable[[Any], Tuple[List[Any], List[Any]]]"}, {"lineNumber": 243, "col_offset": 54, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "cols_expected", "type": "List[str]"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 257, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 259, "col_offset": 47, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 260, "col_offset": 5, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "_create_col_names", "type": "Callable[[Any], Tuple[List[Any], List[Any]]]"}, {"lineNumber": 260, "col_offset": 54, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 265, "col_offset": 11, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "cols_expected", "type": "List[str]"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 276, "col_offset": 23, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 276, "col_offset": 47, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 277, "col_offset": 5, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 277, "col_offset": 27, "nodeName": "_create_col_names", "type": "Callable[[Any], Tuple[List[Any], List[Any]]]"}, {"lineNumber": 277, "col_offset": 54, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "cols_numeric", "type": "List[str]"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 290, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 290, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 291, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 293, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 293, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 294, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 294, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 295, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 296, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 296, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 303, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 304, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 305, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 306, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 307, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 308, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 309, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 309, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 318, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 319, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 320, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 329, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 329, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 330, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 331, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 331, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 338, "col_offset": 17, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 339, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 339, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 340, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 342, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 344, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 344, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 347, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 349, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 349, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 350, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 352, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 352, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 359, "col_offset": 17, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 360, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 362, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 362, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 364, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 364, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 365, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 366, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 368, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 368, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 375, "col_offset": 10, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 382, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 385, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 390, "col_offset": 11, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 390, "col_offset": 31, "nodeName": "levels_dict", "type": "Any"}, {"lineNumber": 391, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 391, "col_offset": 32, "nodeName": "cols_expected", "type": "List[str]"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 398, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 400, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 403, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 403, "col_offset": 32, "nodeName": "data_cnames", "type": "Any"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 404, "col_offset": 41, "nodeName": "data_cnames", "type": "Any"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 411, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 414, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 423, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 428, "col_offset": 11, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 428, "col_offset": 31, "nodeName": "levels_dict", "type": "Any"}, {"lineNumber": 429, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 429, "col_offset": 32, "nodeName": "cols_expected", "type": "List[str]"}, {"lineNumber": 430, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 435, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 438, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 439, "col_offset": 31, "nodeName": "levels_dict_numeric", "type": "Any"}, {"lineNumber": 442, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 442, "col_offset": 32, "nodeName": "cols_numeric", "type": "List[str]"}, {"lineNumber": 443, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 448, "col_offset": 28, "nodeName": "Series", "type": "Any"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 453, "col_offset": 49, "nodeName": "fit_w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 473, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 479, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 482, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 483, "col_offset": 10, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 483, "col_offset": 29, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 485, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 485, "col_offset": 32, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 486, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 486, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 487, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 487, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 494, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 495, "col_offset": 10, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 495, "col_offset": 29, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 501, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 501, "col_offset": 32, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 502, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 502, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 503, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 503, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 507, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 511, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 512, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 512, "col_offset": 28, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 513, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 513, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 514, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 514, "col_offset": 21, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 518, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 523, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 523, "col_offset": 28, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 529, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 529, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 530, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 530, "col_offset": 21, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 534, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 538, "col_offset": 17, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 539, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 539, "col_offset": 28, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 540, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 540, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 541, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 541, "col_offset": 21, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 549, "col_offset": 17, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 550, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 550, "col_offset": 28, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 554, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 554, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 555, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 555, "col_offset": 21, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 560, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 564, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 565, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 565, "col_offset": 28, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 566, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 566, "col_offset": 21, "nodeName": "dataframe_2_expected", "type": "Any"}, {"lineNumber": 571, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 575, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 577, "col_offset": 17, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 578, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 578, "col_offset": 28, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 579, "col_offset": 21, "nodeName": "dataframe_2_expected", "type": "Any"}, {"lineNumber": 583, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 587, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 588, "col_offset": 10, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 588, "col_offset": 29, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 590, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 590, "col_offset": 32, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 591, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 591, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 592, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 592, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 596, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 600, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 601, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 601, "col_offset": 28, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 602, "col_offset": 18, "nodeName": "concat", "type": "Any"}, {"lineNumber": 610, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 610, "col_offset": 21, "nodeName": "df_expected", "type": "Any"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 612, "col_offset": 17, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 613, "col_offset": 10, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 613, "col_offset": 29, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 614, "col_offset": 20, "nodeName": "concat", "type": "Any"}, {"lineNumber": 622, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 622, "col_offset": 22, "nodeName": "df_expected_2", "type": "Any"}, {"lineNumber": 626, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 629, "col_offset": 21, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 629, "col_offset": 44, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 631, "col_offset": 11, "nodeName": "BytesIO", "type": "Type[_io.BytesIO]"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 632, "col_offset": 16, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 632, "col_offset": 26, "nodeName": "buff", "type": "_io.BytesIO"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 635, "col_offset": 15, "nodeName": "load", "type": "Callable[[IO[str]], Any]"}, {"lineNumber": 635, "col_offset": 27, "nodeName": "buff", "type": "_io.BytesIO"}, {"lineNumber": 637, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 637, "col_offset": 29, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 638, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 638, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 639, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 639, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 639, "col_offset": 29, "nodeName": "expected_array", "type": "Any"}, {"lineNumber": 645, "col_offset": 10, "nodeName": "concat", "type": "Any"}, {"lineNumber": 649, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 650, "col_offset": 10, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 650, "col_offset": 33, "nodeName": "raw", "type": "Any"}, {"lineNumber": 651, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 654, "col_offset": 24, "nodeName": "tfm", "type": "Any"}, {"lineNumber": 654, "col_offset": 29, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 655, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 661, "col_offset": 10, "nodeName": "concat", "type": "Any"}, {"lineNumber": 665, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 666, "col_offset": 10, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 666, "col_offset": 33, "nodeName": "raw", "type": "Any"}, {"lineNumber": 667, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 670, "col_offset": 24, "nodeName": "tfm", "type": "Any"}, {"lineNumber": 670, "col_offset": 29, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 671, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "check", "type": "Any"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "estimator", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "e", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "_flag_nulls", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "_flag_nulls", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "drop_cols", "type": "List[str]"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "pd", "type": "Any"}, {"lineNumber": 174, "col_offset": 9, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 62, "nodeName": "drop_cols_2", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 60, "nodeName": "drop_cols_2", "type": "List[str]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 182, "col_offset": 42, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "pd", "type": "Any"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "_flag_nulls", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "drop_cols", "type": "List[str]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 243, "col_offset": 27, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 276, "col_offset": 23, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 277, "col_offset": 27, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 290, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 291, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 295, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 304, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 305, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 308, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 318, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 319, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 327, "col_offset": 39, "nodeName": "nan", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 329, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 330, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 339, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 340, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 340, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 344, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 345, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 349, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 350, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 350, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 360, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 361, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 364, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 365, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 365, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 368, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 375, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 376, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 376, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 377, "col_offset": 21, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 390, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 391, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "columns", "type": "Any"}, {"lineNumber": 403, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 414, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 428, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 429, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 430, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 442, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 443, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 448, "col_offset": 28, "nodeName": "pd", "type": "Any"}, {"lineNumber": 453, "col_offset": 9, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 454, "col_offset": 21, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 459, "col_offset": 35, "nodeName": "levels_dict", "type": "Any"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 460, "col_offset": 36, "nodeName": "cols_expected", "type": "List[str]"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 464, "col_offset": 15, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 464, "col_offset": 26, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 464, "col_offset": 46, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 474, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 474, "col_offset": 23, "nodeName": "NotFittedError", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 475, "col_offset": 27, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 483, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 485, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 486, "col_offset": 11, "nodeName": "arr", "type": "Any"}, {"lineNumber": 486, "col_offset": 24, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 495, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 501, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 502, "col_offset": 11, "nodeName": "arr", "type": "Any"}, {"lineNumber": 502, "col_offset": 24, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 512, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 513, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 513, "col_offset": 23, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 514, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 523, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 529, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 529, "col_offset": 23, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 530, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 539, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 540, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 540, "col_offset": 23, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 541, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 550, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 554, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 554, "col_offset": 23, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 555, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 565, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 566, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 578, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 588, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 590, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 591, "col_offset": 11, "nodeName": "arr", "type": "Any"}, {"lineNumber": 591, "col_offset": 24, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 601, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 602, "col_offset": 18, "nodeName": "pd", "type": "Any"}, {"lineNumber": 610, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 613, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 614, "col_offset": 20, "nodeName": "pd", "type": "Any"}, {"lineNumber": 622, "col_offset": 11, "nodeName": "df2", "type": "Any"}, {"lineNumber": 629, "col_offset": 21, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 631, "col_offset": 11, "nodeName": "io", "type": "module"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "pickle", "type": "module"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "buff", "type": "_io.BytesIO"}, {"lineNumber": 635, "col_offset": 15, "nodeName": "pickle", "type": "module"}, {"lineNumber": 637, "col_offset": 10, "nodeName": "expander", "type": "Any"}, {"lineNumber": 638, "col_offset": 11, "nodeName": "arr", "type": "Any"}, {"lineNumber": 638, "col_offset": 24, "nodeName": "expected_array", "type": "Any"}, {"lineNumber": 645, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 650, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 651, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 655, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 661, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 666, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 667, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 671, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "check", "type": "Any"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "estimator", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 174, "col_offset": 9, "nodeName": "warnings", "type": "module"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "_flag_nulls", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "drop_cols_2", "type": "List[str]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "_flag_nulls", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 180, "col_offset": 46, "nodeName": "drop_cols", "type": "List[str]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 327, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 35, "nodeName": "nan", "type": "Any"}, {"lineNumber": 330, "col_offset": 43, "nodeName": "nan", "type": "Any"}, {"lineNumber": 376, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 448, "col_offset": 39, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 453, "col_offset": 9, "nodeName": "warnings", "type": "module"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 463, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 463, "col_offset": 19, "nodeName": "fit_w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 474, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 647, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 652, "col_offset": 21, "nodeName": "nan", "type": "Any"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 663, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 668, "col_offset": 21, "nodeName": "nan", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "e", "type": "Any"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 448, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 464, "col_offset": 26, "nodeName": "fit_w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 646, "col_offset": 28, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 647, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 652, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 662, "col_offset": 28, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 663, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 663, "col_offset": 28, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 668, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 646, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 662, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 663, "col_offset": 28, "nodeName": "np", "type": "module"}]