[{"lineNumber": 20, "col_offset": 0, "nodeName": "data_raw", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "dataframe_expected", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "data_raw_2", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "dataframe_2_expected", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "data_few_levels", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "few_levels_expected", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "levels_dict", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "levels_dict_numeric", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "test_flag_numeric", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "test_check_sentinels", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "test_create_levels", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 0, "nodeName": "test_create_levels_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "test_create_col_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 192, "col_offset": 0, "nodeName": "test_create_col_names_no_dummy", "type": "Callable[[Any], Any]"}, {"lineNumber": 211, "col_offset": 0, "nodeName": "test_create_col_names_numeric", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 0, "nodeName": "test_add_sentinel", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 0, "nodeName": "test_expand_col", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 0, "nodeName": "test_expand_col_no_dummy", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 0, "nodeName": "test_expand_col_numeric", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 0, "nodeName": "test_expand_col_numeric_no_dummy", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 0, "nodeName": "test_expand_col_few_levels", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 320, "col_offset": 0, "nodeName": "test_expand_col_few_levels_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 338, "col_offset": 0, "nodeName": "test_fit_exc", "type": "Callable[[Any], Any]"}, {"lineNumber": 345, "col_offset": 0, "nodeName": "test_fit_auto", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 361, "col_offset": 0, "nodeName": "test_fit_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 0, "nodeName": "test_fit_drop_only", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 0, "nodeName": "test_fit_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 399, "col_offset": 0, "nodeName": "test_fit_list_numeric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 411, "col_offset": 0, "nodeName": "test_transform_notfitted", "type": "Callable[[Any], Any]"}, {"lineNumber": 417, "col_offset": 0, "nodeName": "test_transform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 429, "col_offset": 0, "nodeName": "test_transform_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 445, "col_offset": 0, "nodeName": "test_transform_dataframe", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 456, "col_offset": 0, "nodeName": "test_transform_dataframe_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 472, "col_offset": 0, "nodeName": "test_transform_two_levels", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 483, "col_offset": 0, "nodeName": "test_transform_two_levels_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 497, "col_offset": 0, "nodeName": "test_transform_reuse_transformer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 508, "col_offset": 0, "nodeName": "test_transform_preserve_col_order", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 521, "col_offset": 0, "nodeName": "test_transform_bad_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 534, "col_offset": 0, "nodeName": "test_refit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 564, "col_offset": 0, "nodeName": "test_pickle", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "NAN_NUMERIC", "type": "float"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "raw", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "raw", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "raw", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "levels", "type": "Dict[str, List[str]]"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "levels", "type": "Dict[str, Union[List[str], List[float]]]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "test1", "type": "List[Union[int, str]]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "test2", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "_nan_string", "type": "str"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "_nan_numeric", "type": "float"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "_is_numeric", "type": "Dict[Any, bool]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "levels_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "_is_numeric", "type": "Dict[str, int]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "_nan_numeric", "type": "float"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "NAN_NUMERIC", "type": "float"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "_nan_string", "type": "str"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "actual_levels", "type": "Dict[Any, Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "_is_numeric", "type": "Dict[str, int]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "_nan_numeric", "type": "float"}, {"lineNumber": 165, "col_offset": 28, "nodeName": "NAN_NUMERIC", "type": "float"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "_nan_string", "type": "str"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "actual_levels", "type": "Dict[Any, Any]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "_is_numeric", "type": "Dict[str, int]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "_nan_numeric", "type": "float"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "NAN_NUMERIC", "type": "float"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "_nan_string", "type": "str"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "levels_", "type": "Dict[Any, Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "_is_numeric", "type": "Dict[str, int]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "_nan_numeric", "type": "float"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "NAN_NUMERIC", "type": "float"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "_nan_string", "type": "str"}, {"lineNumber": 198, "col_offset": 27, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "levels_", "type": "Dict[Any, Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "_is_numeric", "type": "Dict[str, int]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "_nan_numeric", "type": "float"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "NAN_NUMERIC", "type": "float"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "_nan_string", "type": "str"}, {"lineNumber": 217, "col_offset": 27, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "levels_", "type": "Dict[Any, Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "_nan_numeric", "type": "float"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "NAN_NUMERIC", "type": "float"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "_nan_string", "type": "str"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "col", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "col2", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "col2", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "data_cnames", "type": "Any"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "df2", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "buff", "type": "_io.BytesIO"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "expander", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 22, "col_offset": 10, "nodeName": "concat", "type": "Any"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "concat", "type": "Any"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "concat", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "concat", "type": "Any"}, {"lineNumber": 80, "col_offset": 10, "nodeName": "concat", "type": "Any"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "concat", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "nan", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "_check_sentinels", "type": "Callable[[Any], None]"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "_nan_string", "type": "str"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "actual_levels", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "levels_dict", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "levels_dict_numeric", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "actual_levels", "type": "Dict[Any, Any]"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "levels_dict_numeric", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 182, "col_offset": 47, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 183, "col_offset": 5, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "_create_col_names", "type": "Callable[[Any], Tuple[List[Any], List[Any]]]"}, {"lineNumber": 183, "col_offset": 54, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "cols_expected", "type": "List[str]"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 201, "col_offset": 23, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 201, "col_offset": 47, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 202, "col_offset": 5, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "_create_col_names", "type": "Callable[[Any], Tuple[List[Any], List[Any]]]"}, {"lineNumber": 202, "col_offset": 54, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "cols_expected", "type": "List[str]"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 220, "col_offset": 47, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 221, "col_offset": 5, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "_create_col_names", "type": "Callable[[Any], Tuple[List[Any], List[Any]]]"}, {"lineNumber": 221, "col_offset": 54, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "cols_numeric", "type": "List[str]"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 235, "col_offset": 10, "nodeName": "_add_sentinel", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "assert_series_equal", "type": "Any"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "col", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "_add_sentinel", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "assert_series_equal", "type": "Any"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "col2", "type": "Any"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "_add_sentinel", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "assert_series_equal", "type": "Any"}, {"lineNumber": 244, "col_offset": 35, "nodeName": "col2", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 255, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 255, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 256, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 258, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 259, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 259, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 261, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 268, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 269, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 272, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 273, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 274, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 283, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 283, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 294, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 294, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 295, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 296, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 296, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 303, "col_offset": 17, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 304, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 304, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 307, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 309, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 309, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 310, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 312, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 314, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 314, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 315, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 325, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 325, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 326, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 327, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 329, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 329, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 330, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 331, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 331, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 333, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 335, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 335, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 340, "col_offset": 10, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 340, "col_offset": 21, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 355, "col_offset": 11, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "levels_dict", "type": "Any"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 356, "col_offset": 32, "nodeName": "cols_expected", "type": "List[str]"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 365, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 367, "col_offset": 18, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 368, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 368, "col_offset": 32, "nodeName": "data_cnames", "type": "Any"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 369, "col_offset": 41, "nodeName": "data_cnames", "type": "Any"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 376, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 378, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 388, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 393, "col_offset": 11, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 393, "col_offset": 31, "nodeName": "levels_dict", "type": "Any"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 394, "col_offset": 32, "nodeName": "cols_expected", "type": "List[str]"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 403, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 404, "col_offset": 31, "nodeName": "levels_dict_numeric", "type": "Any"}, {"lineNumber": 407, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 407, "col_offset": 32, "nodeName": "cols_numeric", "type": "List[str]"}, {"lineNumber": 408, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 421, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 422, "col_offset": 10, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 422, "col_offset": 29, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 424, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 424, "col_offset": 32, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 425, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 426, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 426, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 433, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 434, "col_offset": 10, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 434, "col_offset": 29, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 440, "col_offset": 32, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 441, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 441, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 442, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 450, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 451, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 451, "col_offset": 28, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 452, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 452, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 453, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 453, "col_offset": 21, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 462, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 462, "col_offset": 28, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 469, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 469, "col_offset": 21, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 473, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 477, "col_offset": 17, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 478, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 478, "col_offset": 28, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 479, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 480, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 480, "col_offset": 21, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 488, "col_offset": 17, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 489, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 493, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 493, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 494, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 494, "col_offset": 21, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 499, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 503, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 504, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 504, "col_offset": 28, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 505, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 505, "col_offset": 21, "nodeName": "dataframe_2_expected", "type": "Any"}, {"lineNumber": 510, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 514, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 516, "col_offset": 17, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 517, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 517, "col_offset": 28, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 518, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 518, "col_offset": 21, "nodeName": "dataframe_2_expected", "type": "Any"}, {"lineNumber": 522, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 526, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 527, "col_offset": 10, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 527, "col_offset": 29, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 529, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 529, "col_offset": 32, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 530, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 530, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 531, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 531, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 535, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 539, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 540, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 540, "col_offset": 28, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 541, "col_offset": 18, "nodeName": "concat", "type": "Any"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 549, "col_offset": 21, "nodeName": "df_expected", "type": "Any"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 551, "col_offset": 17, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 552, "col_offset": 10, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 552, "col_offset": 29, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 553, "col_offset": 20, "nodeName": "concat", "type": "Any"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 561, "col_offset": 22, "nodeName": "df_expected_2", "type": "Any"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 568, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 570, "col_offset": 11, "nodeName": "BytesIO", "type": "Type[_io.BytesIO]"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 571, "col_offset": 16, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 571, "col_offset": 26, "nodeName": "buff", "type": "_io.BytesIO"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "load", "type": "Callable[[IO[str]], Any]"}, {"lineNumber": 574, "col_offset": 27, "nodeName": "buff", "type": "_io.BytesIO"}, {"lineNumber": 576, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 576, "col_offset": 29, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 577, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 577, "col_offset": 32, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 578, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 578, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 579, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 579, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 22, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 80, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 106, "col_offset": 50, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "NAN_NUMERIC", "type": "float"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "_flag_numeric", "type": "Callable[[Any], bool]"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "test1", "type": "List[Union[int, str]]"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "_flag_numeric", "type": "Callable[[Any], bool]"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "test2", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "_flag_numeric", "type": "Callable[[Any], bool]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 201, "col_offset": 23, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 235, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 236, "col_offset": 40, "nodeName": "astype", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 238, "col_offset": 44, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 240, "col_offset": 35, "nodeName": "Series", "type": "Any"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 243, "col_offset": 44, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "Series", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 255, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 256, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 269, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 273, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 283, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 39, "nodeName": "nan", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 294, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 295, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 304, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 305, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 309, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 310, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 310, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 314, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 315, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 325, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 326, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 326, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 329, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 330, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 333, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 334, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 340, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 341, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 341, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 342, "col_offset": 21, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 355, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 367, "col_offset": 18, "nodeName": "columns", "type": "Any"}, {"lineNumber": 368, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 378, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 393, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 407, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 408, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 413, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 413, "col_offset": 23, "nodeName": "NotFittedError", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 414, "col_offset": 27, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 422, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 424, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "arr", "type": "Any"}, {"lineNumber": 425, "col_offset": 24, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 434, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 11, "nodeName": "arr", "type": "Any"}, {"lineNumber": 441, "col_offset": 24, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 451, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 452, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 452, "col_offset": 23, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 453, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 462, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 469, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 478, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 479, "col_offset": 23, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 480, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 489, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 493, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 493, "col_offset": 23, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 494, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 504, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 505, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 517, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 518, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 527, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 529, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 530, "col_offset": 11, "nodeName": "arr", "type": "Any"}, {"lineNumber": 530, "col_offset": 24, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 540, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 541, "col_offset": 18, "nodeName": "pd", "type": "Any"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 552, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 553, "col_offset": 20, "nodeName": "pd", "type": "Any"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "df2", "type": "Any"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 570, "col_offset": 11, "nodeName": "io", "type": "module"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "pickle", "type": "module"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "buff", "type": "_io.BytesIO"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "pickle", "type": "module"}, {"lineNumber": 576, "col_offset": 10, "nodeName": "expander", "type": "Any"}, {"lineNumber": 577, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 578, "col_offset": 11, "nodeName": "arr", "type": "Any"}, {"lineNumber": 578, "col_offset": 24, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "unique", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "pd", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "pd", "type": "Any"}, {"lineNumber": 240, "col_offset": 35, "nodeName": "pd", "type": "Any"}, {"lineNumber": 240, "col_offset": 60, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "pd", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "pd", "type": "Any"}, {"lineNumber": 245, "col_offset": 51, "nodeName": "NAN_NUMERIC", "type": "float"}, {"lineNumber": 292, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 35, "nodeName": "nan", "type": "Any"}, {"lineNumber": 295, "col_offset": 43, "nodeName": "nan", "type": "Any"}, {"lineNumber": 341, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 367, "col_offset": 18, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 413, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 236, "col_offset": 40, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 295, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "col", "type": "Any"}]