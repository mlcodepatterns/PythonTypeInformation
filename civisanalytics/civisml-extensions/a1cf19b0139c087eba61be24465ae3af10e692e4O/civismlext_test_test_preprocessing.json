[{"lineNumber": 35, "col_offset": 0, "nodeName": "data_raw", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "dataframe_expected", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "data_raw_2", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "dataframe_2_expected", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "data_few_levels", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "few_levels_expected", "type": "Callable[[], Any]"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "levels_dict", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "levels_dict_numeric", "type": "Callable[[], Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "test_sklearn_api", "type": "Callable[[], Any]"}, {"lineNumber": 165, "col_offset": 0, "nodeName": "test_flag_nulls_warn", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "test_flag_nulls_raise", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 0, "nodeName": "test_check_sentinels", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 0, "nodeName": "test_create_levels", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 223, "col_offset": 0, "nodeName": "test_create_levels_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 235, "col_offset": 0, "nodeName": "test_warn_too_many_categories", "type": "Callable[[], Any]"}, {"lineNumber": 245, "col_offset": 0, "nodeName": "test_create_col_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 0, "nodeName": "test_create_col_names_no_dummy", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 0, "nodeName": "test_create_col_names_numeric", "type": "Callable[[Any], Any]"}, {"lineNumber": 294, "col_offset": 0, "nodeName": "test_dropped_cols_no_levels", "type": "Callable[[Any], Any]"}, {"lineNumber": 305, "col_offset": 0, "nodeName": "test_expand_col", "type": "Callable[[Any], Any]"}, {"lineNumber": 320, "col_offset": 0, "nodeName": "test_expand_col_no_dummy", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 0, "nodeName": "test_expand_col_numeric", "type": "Callable[[Any], Any]"}, {"lineNumber": 344, "col_offset": 0, "nodeName": "test_expand_col_numeric_no_dummy", "type": "Callable[[Any], Any]"}, {"lineNumber": 355, "col_offset": 0, "nodeName": "test_expand_col_few_levels", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 376, "col_offset": 0, "nodeName": "test_expand_col_few_levels_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 394, "col_offset": 0, "nodeName": "test_fit_exc", "type": "Callable[[Any], Any]"}, {"lineNumber": 401, "col_offset": 0, "nodeName": "test_fit_auto", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 417, "col_offset": 0, "nodeName": "test_fit_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 428, "col_offset": 0, "nodeName": "test_fit_drop_only", "type": "Callable[[Any], Any]"}, {"lineNumber": 439, "col_offset": 0, "nodeName": "test_fit_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 455, "col_offset": 0, "nodeName": "test_fit_list_numeric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 467, "col_offset": 0, "nodeName": "test_fit_with_nan_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 493, "col_offset": 0, "nodeName": "test_transform_notfitted", "type": "Callable[[Any], Any]"}, {"lineNumber": 499, "col_offset": 0, "nodeName": "test_transform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 511, "col_offset": 0, "nodeName": "test_transform_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 527, "col_offset": 0, "nodeName": "test_transform_dataframe", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 538, "col_offset": 0, "nodeName": "test_transform_dataframe_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 554, "col_offset": 0, "nodeName": "test_transform_two_levels", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 565, "col_offset": 0, "nodeName": "test_transform_two_levels_no_dummy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 579, "col_offset": 0, "nodeName": "test_transform_reuse_transformer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 590, "col_offset": 0, "nodeName": "test_transform_preserve_col_order", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 603, "col_offset": 0, "nodeName": "test_transform_bad_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 616, "col_offset": 0, "nodeName": "test_refit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 646, "col_offset": 0, "nodeName": "test_dataframe_output_with_index", "type": "Callable[[], Any]"}, {"lineNumber": 657, "col_offset": 0, "nodeName": "test_pickle", "type": "Callable[[Any], Any]"}, {"lineNumber": 674, "col_offset": 0, "nodeName": "test_categorical_looks_like_int", "type": "Callable[[], Any]"}, {"lineNumber": 691, "col_offset": 0, "nodeName": "test_categorical_mixed_type_levels", "type": "Callable[[], Any]"}, {"lineNumber": 706, "col_offset": 0, "nodeName": "test_transform_no_level_overlap", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "raw", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "raw", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "raw", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "levels", "type": "Dict[str, List[str]]"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "levels", "type": "Dict[str, Union[List[str], List[Union[float, str]]]]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "estimator", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "drop_cols", "type": "List[str]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "drop_cols_2", "type": "List[str]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "drop_cols", "type": "List[str]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "levels_", "type": "Dict[nothing, nothing]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "actual_levels", "type": "Dict[Any, Any]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 230, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "actual_levels", "type": "Dict[Any, Any]"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 251, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "levels_", "type": "Dict[Any, Any]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 268, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "levels_", "type": "Dict[Any, Any]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 283, "col_offset": 29, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "_cols_to_drop", "type": "Any"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "cols_to_drop", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "_cols_to_expand", "type": "Any"}, {"lineNumber": 285, "col_offset": 31, "nodeName": "cols_to_expand", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "levels_", "type": "Dict[Any, Any]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "data_cnames", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 622, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "df2", "type": "Any"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "df2", "type": "Any"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "expected_array", "type": "Any"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "buff", "type": "_io.BytesIO"}, {"lineNumber": 667, "col_offset": 4, "nodeName": "expander", "type": "Any"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 681, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "tfm", "type": "Any"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "tfm", "type": "Any"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "concat", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "concat", "type": "Any"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "concat", "type": "Any"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "concat", "type": "Any"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "concat", "type": "Any"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "concat", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "check_parameters_default_constructible", "type": "Any"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 136, "col_offset": 49, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "check_no_fit_attributes_set_in_init", "type": "Any"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "check_transformers_unfitted", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "check_transformer_n_iter", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "check_get_params_invariance", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "check_transformer_data_not_an_array", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "check_transformer_general", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "check_fit2d_predict1d", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "check_fit2d_1sample", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "check_fit2d_1feature", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "check_fit1d_1feature", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "check_fit1d_1sample", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "check_dict_unchanged", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "check_dont_overwrite_parameters", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 170, "col_offset": 56, "nodeName": "drop_cols", "type": "List[str]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "Series", "type": "Any"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "Series", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "_check_sentinels", "type": "Callable[[Any], None]"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "_nan_sentinel", "type": "str"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 219, "col_offset": 44, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "actual_levels", "type": "Dict[Any, Any]"}, {"lineNumber": 220, "col_offset": 28, "nodeName": "levels_dict", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "levels_dict_numeric", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 230, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 231, "col_offset": 44, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "actual_levels", "type": "Dict[Any, Any]"}, {"lineNumber": 232, "col_offset": 28, "nodeName": "levels_dict_numeric", "type": "Any"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 238, "col_offset": 41, "nodeName": "warn", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 251, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 252, "col_offset": 47, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 253, "col_offset": 5, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "_create_col_names", "type": "Callable[[Any], Tuple[List[Any], List[Any]]]"}, {"lineNumber": 253, "col_offset": 54, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "cols_expected", "type": "List[str]"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 268, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 269, "col_offset": 47, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 270, "col_offset": 5, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 27, "nodeName": "_create_col_names", "type": "Callable[[Any], Tuple[List[Any], List[Any]]]"}, {"lineNumber": 270, "col_offset": 54, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "cols_expected", "type": "List[str]"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 285, "col_offset": 31, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "_create_levels", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 286, "col_offset": 47, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 287, "col_offset": 5, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 287, "col_offset": 13, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 287, "col_offset": 27, "nodeName": "_create_col_names", "type": "Callable[[Any], Tuple[List[Any], List[Any]]]"}, {"lineNumber": 287, "col_offset": 54, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "cnames", "type": "List[Any]"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "cols_numeric", "type": "List[str]"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "unexpanded", "type": "List[Any]"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 299, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 301, "col_offset": 23, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 311, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 312, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 314, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 315, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 315, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 325, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 325, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 326, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 327, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 328, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 328, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 338, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 339, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 339, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 340, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 341, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 349, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 350, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 351, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 352, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 352, "col_offset": 29, "nodeName": "arr_exp", "type": "numpy.ndarray"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 359, "col_offset": 17, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 360, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 363, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 363, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 365, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 370, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 370, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 371, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 377, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 380, "col_offset": 17, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 381, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 381, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 383, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 385, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 385, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 386, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 387, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 387, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 389, "col_offset": 10, "nodeName": "_expand_col", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 389, "col_offset": 31, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 391, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 391, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 396, "col_offset": 10, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 396, "col_offset": 21, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 406, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 411, "col_offset": 11, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 411, "col_offset": 31, "nodeName": "levels_dict", "type": "Any"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 412, "col_offset": 32, "nodeName": "cols_expected", "type": "List[str]"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 421, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 423, "col_offset": 18, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 424, "col_offset": 32, "nodeName": "data_cnames", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 425, "col_offset": 41, "nodeName": "data_cnames", "type": "Any"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 432, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 434, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 435, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 441, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 444, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 449, "col_offset": 11, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 449, "col_offset": 31, "nodeName": "levels_dict", "type": "Any"}, {"lineNumber": 450, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 450, "col_offset": 32, "nodeName": "cols_expected", "type": "List[str]"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 456, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 459, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 460, "col_offset": 11, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 460, "col_offset": 31, "nodeName": "levels_dict_numeric", "type": "Any"}, {"lineNumber": 463, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 463, "col_offset": 32, "nodeName": "cols_numeric", "type": "List[str]"}, {"lineNumber": 464, "col_offset": 11, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 469, "col_offset": 28, "nodeName": "Series", "type": "Any"}, {"lineNumber": 470, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 474, "col_offset": 49, "nodeName": "fit_w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 500, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 503, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 504, "col_offset": 10, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 504, "col_offset": 29, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 506, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 506, "col_offset": 32, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 507, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 507, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 508, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 508, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 515, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 516, "col_offset": 10, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 516, "col_offset": 29, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 522, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 522, "col_offset": 32, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 523, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 524, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 524, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 528, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 532, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 533, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 533, "col_offset": 28, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 534, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 534, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 535, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 535, "col_offset": 21, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 543, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 544, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 544, "col_offset": 28, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 550, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 550, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 551, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 551, "col_offset": 21, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 559, "col_offset": 17, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 560, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 560, "col_offset": 28, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 562, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 562, "col_offset": 21, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 570, "col_offset": 17, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 571, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 571, "col_offset": 28, "nodeName": "data_few_levels", "type": "Any"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 575, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 575, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 576, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 576, "col_offset": 21, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 585, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 586, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 586, "col_offset": 28, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 587, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 587, "col_offset": 21, "nodeName": "dataframe_2_expected", "type": "Any"}, {"lineNumber": 592, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 596, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 598, "col_offset": 17, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 599, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 599, "col_offset": 28, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 600, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 600, "col_offset": 21, "nodeName": "dataframe_2_expected", "type": "Any"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 608, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 609, "col_offset": 10, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 609, "col_offset": 29, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 611, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 611, "col_offset": 32, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 612, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 612, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 613, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 613, "col_offset": 29, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 617, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 621, "col_offset": 17, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 622, "col_offset": 9, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 622, "col_offset": 28, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 623, "col_offset": 18, "nodeName": "concat", "type": "Any"}, {"lineNumber": 631, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 631, "col_offset": 21, "nodeName": "df_expected", "type": "Any"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 633, "col_offset": 17, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 634, "col_offset": 10, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 634, "col_offset": 29, "nodeName": "data_raw_2", "type": "Any"}, {"lineNumber": 635, "col_offset": 20, "nodeName": "concat", "type": "Any"}, {"lineNumber": 643, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 643, "col_offset": 22, "nodeName": "df_expected_2", "type": "Any"}, {"lineNumber": 648, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 649, "col_offset": 10, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 649, "col_offset": 76, "nodeName": "df", "type": "Any"}, {"lineNumber": 651, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 654, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 654, "col_offset": 22, "nodeName": "df_exp", "type": "Any"}, {"lineNumber": 658, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 661, "col_offset": 21, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 661, "col_offset": 44, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 663, "col_offset": 11, "nodeName": "BytesIO", "type": "Type[_io.BytesIO]"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 664, "col_offset": 16, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 664, "col_offset": 26, "nodeName": "buff", "type": "_io.BytesIO"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 667, "col_offset": 15, "nodeName": "load", "type": "Callable[[IO[str]], Any]"}, {"lineNumber": 667, "col_offset": 27, "nodeName": "buff", "type": "_io.BytesIO"}, {"lineNumber": 669, "col_offset": 10, "nodeName": "transform", "type": "Any"}, {"lineNumber": 669, "col_offset": 29, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 670, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 670, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 671, "col_offset": 24, "nodeName": "arr", "type": "Any"}, {"lineNumber": 671, "col_offset": 29, "nodeName": "expected_array", "type": "Any"}, {"lineNumber": 677, "col_offset": 10, "nodeName": "concat", "type": "Any"}, {"lineNumber": 681, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 682, "col_offset": 10, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 682, "col_offset": 33, "nodeName": "raw", "type": "Any"}, {"lineNumber": 683, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 686, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 686, "col_offset": 24, "nodeName": "tfm", "type": "Any"}, {"lineNumber": 686, "col_offset": 29, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 687, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 693, "col_offset": 10, "nodeName": "concat", "type": "Any"}, {"lineNumber": 697, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 698, "col_offset": 10, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 698, "col_offset": 33, "nodeName": "raw", "type": "Any"}, {"lineNumber": 699, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 702, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 702, "col_offset": 24, "nodeName": "tfm", "type": "Any"}, {"lineNumber": 702, "col_offset": 29, "nodeName": "exp", "type": "numpy.ndarray"}, {"lineNumber": 703, "col_offset": 11, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 707, "col_offset": 9, "nodeName": "concat", "type": "Any"}, {"lineNumber": 712, "col_offset": 15, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 713, "col_offset": 17, "nodeName": "df", "type": "Any"}, {"lineNumber": 717, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 717, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 719, "col_offset": 49, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "NAN_STRING", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "check", "type": "Any"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "estimator", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "e", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "_flag_nulls", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "_flag_nulls", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "drop_cols", "type": "List[str]"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "pd", "type": "Any"}, {"lineNumber": 174, "col_offset": 9, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 62, "nodeName": "drop_cols_2", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 60, "nodeName": "drop_cols_2", "type": "List[str]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 182, "col_offset": 42, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "pd", "type": "Any"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "_flag_nulls", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "drop_cols", "type": "List[str]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 238, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 239, "col_offset": 57, "nodeName": "df", "type": "Any"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "warn", "type": "Any"}, {"lineNumber": 241, "col_offset": 39, "nodeName": "args", "type": "Any"}, {"lineNumber": 242, "col_offset": 40, "nodeName": "args", "type": "Any"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 270, "col_offset": 27, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 287, "col_offset": 27, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 301, "col_offset": 23, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 311, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 312, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 325, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 326, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 328, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 339, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 340, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 348, "col_offset": 39, "nodeName": "nan", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 350, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 351, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 360, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 361, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 365, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 366, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 370, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 371, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 371, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 381, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 382, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 385, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 386, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 386, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 389, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 390, "col_offset": 32, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 396, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 397, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 397, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 398, "col_offset": 21, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 411, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 423, "col_offset": 18, "nodeName": "columns", "type": "Any"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 434, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 435, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 449, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 450, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 460, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 463, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 464, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 469, "col_offset": 28, "nodeName": "pd", "type": "Any"}, {"lineNumber": 474, "col_offset": 9, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 475, "col_offset": 21, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 480, "col_offset": 15, "nodeName": "levels_", "type": "Any"}, {"lineNumber": 480, "col_offset": 35, "nodeName": "levels_dict", "type": "Any"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "columns_", "type": "Any"}, {"lineNumber": 481, "col_offset": 36, "nodeName": "cols_expected", "type": "List[str]"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "required_columns_", "type": "Any"}, {"lineNumber": 485, "col_offset": 15, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 485, "col_offset": 26, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 485, "col_offset": 46, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 495, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 495, "col_offset": 23, "nodeName": "NotFittedError", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 496, "col_offset": 27, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 504, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 506, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 507, "col_offset": 11, "nodeName": "arr", "type": "Any"}, {"lineNumber": 507, "col_offset": 24, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 516, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 522, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "arr", "type": "Any"}, {"lineNumber": 523, "col_offset": 24, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 533, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 534, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 534, "col_offset": 23, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 535, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 544, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 550, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 550, "col_offset": 23, "nodeName": "dataframe_expected", "type": "Any"}, {"lineNumber": 551, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 560, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 562, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 571, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 575, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 575, "col_offset": 23, "nodeName": "few_levels_expected", "type": "Any"}, {"lineNumber": 576, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 586, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 587, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 599, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 600, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 609, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 611, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 612, "col_offset": 11, "nodeName": "arr", "type": "Any"}, {"lineNumber": 612, "col_offset": 24, "nodeName": "expected_array", "type": "numpy.ndarray"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 622, "col_offset": 9, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 623, "col_offset": 18, "nodeName": "pd", "type": "Any"}, {"lineNumber": 631, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 634, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 635, "col_offset": 20, "nodeName": "pd", "type": "Any"}, {"lineNumber": 643, "col_offset": 11, "nodeName": "df2", "type": "Any"}, {"lineNumber": 648, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 651, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 654, "col_offset": 11, "nodeName": "df2", "type": "Any"}, {"lineNumber": 661, "col_offset": 21, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 663, "col_offset": 11, "nodeName": "io", "type": "module"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "pickle", "type": "module"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "buff", "type": "_io.BytesIO"}, {"lineNumber": 667, "col_offset": 15, "nodeName": "pickle", "type": "module"}, {"lineNumber": 669, "col_offset": 10, "nodeName": "expander", "type": "Any"}, {"lineNumber": 670, "col_offset": 11, "nodeName": "arr", "type": "Any"}, {"lineNumber": 670, "col_offset": 24, "nodeName": "expected_array", "type": "Any"}, {"lineNumber": 677, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 682, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 683, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 687, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 693, "col_offset": 10, "nodeName": "pd", "type": "Any"}, {"lineNumber": 698, "col_offset": 10, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 699, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 703, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 707, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 719, "col_offset": 9, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 721, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 725, "col_offset": 15, "nodeName": "msg", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "check", "type": "Any"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "estimator", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 174, "col_offset": 9, "nodeName": "warnings", "type": "module"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "_flag_nulls", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "drop_cols_2", "type": "List[str]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "_flag_nulls", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 180, "col_offset": 46, "nodeName": "drop_cols", "type": "List[str]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 236, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 238, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 241, "col_offset": 39, "nodeName": "message", "type": "Any"}, {"lineNumber": 242, "col_offset": 40, "nodeName": "message", "type": "Any"}, {"lineNumber": 348, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 351, "col_offset": 35, "nodeName": "nan", "type": "Any"}, {"lineNumber": 351, "col_offset": 43, "nodeName": "nan", "type": "Any"}, {"lineNumber": 397, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 423, "col_offset": 18, "nodeName": "data_raw", "type": "Any"}, {"lineNumber": 469, "col_offset": 39, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 474, "col_offset": 9, "nodeName": "warnings", "type": "module"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 480, "col_offset": 15, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 484, "col_offset": 19, "nodeName": "fit_w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 495, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 649, "col_offset": 10, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 678, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 679, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 684, "col_offset": 21, "nodeName": "nan", "type": "Any"}, {"lineNumber": 694, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 695, "col_offset": 12, "nodeName": "Series", "type": "Any"}, {"lineNumber": 700, "col_offset": 21, "nodeName": "nan", "type": "Any"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 717, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 719, "col_offset": 9, "nodeName": "warnings", "type": "module"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 722, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 722, "col_offset": 19, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 725, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "e", "type": "Any"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "expander", "type": "civismlext.preprocessing.DataFrameETL"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 237, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "DataFrameETL", "type": "Type[civismlext.preprocessing.DataFrameETL]"}, {"lineNumber": 351, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 351, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 469, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 485, "col_offset": 26, "nodeName": "fit_w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 678, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 678, "col_offset": 28, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 679, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 684, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 694, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 694, "col_offset": 28, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 695, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 695, "col_offset": 28, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 700, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 708, "col_offset": 24, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 725, "col_offset": 22, "nodeName": "message", "type": "Warning"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 40, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 241, "col_offset": 39, "nodeName": "warn", "type": "Any"}, {"lineNumber": 242, "col_offset": 40, "nodeName": "warn", "type": "Any"}, {"lineNumber": 678, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 694, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 695, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 708, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 725, "col_offset": 22, "nodeName": "w", "type": "List[warnings.WarningMessage]"}]