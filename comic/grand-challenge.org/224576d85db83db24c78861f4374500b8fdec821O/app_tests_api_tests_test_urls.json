[{"lineNumber": 38, "col_offset": 0, "nodeName": "check_answer_type_schema_from_response", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "check_response_schema_formatting", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "extract_all_api_exposed_model_serializers", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "kwargs", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "schema", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "definitions", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "serializers", "type": "Union[List[nothing], List[Any]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "serializer", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "serializers", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "serializers", "type": "List[nothing]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "modules", "type": "Set[Any]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "serializers", "type": "Union[List[nothing], List[Any]]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "model_field_names", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "model_property_definitions", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "field_name", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "char_field_names", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "schema", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "assert_viewname_status", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "schema_format", "type": "Any"}, {"lineNumber": 40, "col_offset": 56, "nodeName": "schema", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "extract_all_api_exposed_model_serializers", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "Meta", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "CharField", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "char_field", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "definitions", "type": "Dict[Any, Any]"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "definitions", "type": "Dict[Any, Any]"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "schema", "type": "Any"}, {"lineNumber": 26, "col_offset": 43, "nodeName": "schema", "type": "Any"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 28, "col_offset": 70, "nodeName": "client", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "check_answer_type_schema_from_response", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 47, "nodeName": "response", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "check_response_schema_formatting", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 41, "nodeName": "response", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "ANSWER_TYPE_SCHEMA", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "response", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "registry", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "serializers", "type": "List[nothing]"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "Type", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "serializer", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "f", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "f", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "fields", "type": "Any"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "definitions", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "QuestionSerializer", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "field_name", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "model_field_names", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "char_field", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "schema", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "schema", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "schema", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "schema", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "schema_format", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "content", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "serializer", "type": "Any"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 47, "col_offset": 51, "nodeName": "Meta", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "klass", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "_", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "router", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "serializer_class", "type": "Any"}, {"lineNumber": 78, "col_offset": 43, "nodeName": "ModelSerializer", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "_meta", "type": "Any"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "field_name", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "field", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "items", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "field", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "CharField", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "get_field", "type": "Any"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "field_name", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "upper", "type": "Any"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "replace", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "e", "type": "Any"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "e", "type": "Any"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "choices", "type": "Any"}, {"lineNumber": 28, "col_offset": 54, "nodeName": "kwargs", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "response", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 51, "nodeName": "serializer", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "Meta", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "definitions", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "check_serializer_charfield_schema_formatting", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "urls", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "klass", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "model", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "_declared_fields", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "fields", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "field_name", "type": "Any"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "name_remapping", "type": "Union[Dict[str, str], Dict[nothing, nothing]]"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "name_remapping", "type": "Union[Dict[str, str], Dict[nothing, nothing]]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "_meta", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "char_field", "type": "Any"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "CharField", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "check_charfield_schema_formatting", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "char_field", "type": "Any"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "schema", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "response", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "response", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "serializer", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "definitions", "type": "Any"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "serializer", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "api", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "values", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "serializer", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "rest_framework", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "field_name", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "choices", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "model_property_definitions", "type": "Any"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "char_field", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "grandchallenge", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "__dict__", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "isclass", "type": "Callable[[object], bool]"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "v", "type": "Any"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "char_field", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "module", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "inspect", "type": "module"}, {"lineNumber": 72, "col_offset": 53, "nodeName": "ModelSerializer", "type": "Any"}]