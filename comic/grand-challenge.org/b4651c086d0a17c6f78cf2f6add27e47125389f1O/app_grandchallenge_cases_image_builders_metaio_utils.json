[{"lineNumber": 41, "col_offset": 0, "nodeName": "parse_mh_header", "type": "Callable[[pathlib.Path], Mapping[str, Optional[str]]]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "extract_key_value_pairs", "type": "Callable[[str, Dict[str, str]], Any]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "load_sitk_image_with_nd_support", "type": "Callable[[pathlib.Path], Any]"}, {"lineNumber": 186, "col_offset": 0, "nodeName": "load_sitk_image", "type": "Callable[[pathlib.Path], Any]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "METAIO_IMAGE_TYPES", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 56, "nodeName": "Image", "type": "Any"}, {"lineNumber": 151, "col_offset": 5, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 170, "col_offset": 5, "nodeName": "Image", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "Image", "type": "Any"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "sitkInt8", "type": "Any"}, {"lineNumber": 12, "col_offset": 17, "nodeName": "sitkUInt8", "type": "Any"}, {"lineNumber": 13, "col_offset": 17, "nodeName": "sitkInt16", "type": "Any"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "sitkUInt16", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "sitkInt32", "type": "Any"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "sitkUInt32", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "sitkInt64", "type": "Any"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "sitkUInt64", "type": "Any"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "sitkFloat32", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "sitkFloat64", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "sitkVectorInt8", "type": "Any"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "sitkVectorUInt8", "type": "Any"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "sitkVectorInt16", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "sitkVectorUInt16", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "sitkVectorInt32", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "sitkVectorUInt32", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "sitkVectorInt64", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "sitkVectorUInt64", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "sitkVectorFloat32", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "sitkVectorFloat64", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "read_line_limit", "type": "int"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "result", "type": "Dict[nothing, nothing]"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "line", "type": "str"}, {"lineNumber": 103, "col_offset": 74, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 104, "col_offset": 5, "nodeName": "List", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "is_mha", "type": "bool"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "data_file_path", "type": "pathlib.Path"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "sitk_image", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "sitk_image", "type": "Any"}, {"lineNumber": 108, "col_offset": 56, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "num_components", "type": "int"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 134, "col_offset": 5, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 152, "col_offset": 7, "nodeName": "is_mha", "type": "bool"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "data_file_path", "type": "pathlib.Path"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "is_compressed", "type": "bool"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "sitk_image", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "sitk_image", "type": "Any"}, {"lineNumber": 170, "col_offset": 5, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "ndims", "type": "int"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "sitk_image", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 12, "col_offset": 17, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 13, "col_offset": 17, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "bin_line", "type": "bool"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 103, "col_offset": 67, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "Any", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "parse_mh_header", "type": "Callable[[pathlib.Path], Mapping[str, Optional[str]]]"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "mhd_file", "type": "pathlib.Path"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "resolve_mh_data_file_path", "type": "Callable[[Mapping[str, Optional[str]], bool, pathlib.Path], pathlib.Path]"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 111, "col_offset": 56, "nodeName": "is_mha", "type": "bool"}, {"lineNumber": 111, "col_offset": 64, "nodeName": "mhd_file", "type": "pathlib.Path"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "extract_header_listing", "type": "Callable[..., List[Any]]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "dtype", "type": "int"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "num_components", "type": "int"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "determine_mh_components_and_dtype", "type": "Callable[[Mapping[str, Optional[str]]], Tuple[int, int]]"}, {"lineNumber": 115, "col_offset": 62, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "create_sitk_img_from_mh_data", "type": "Callable[[pathlib.Path, int, Mapping[str, Optional[str]], bool, int, Any], Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "data_file_path", "type": "pathlib.Path"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "dtype", "type": "int"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "is_mha", "type": "bool"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "num_components", "type": "int"}, {"lineNumber": 118, "col_offset": 64, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "SetDirection", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "SetSpacing", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "SetOrigin", "type": "Any"}, {"lineNumber": 136, "col_offset": 36, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "num_components", "type": "int"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "METAIO_IMAGE_TYPES", "type": "Dict[str, Any]"}, {"lineNumber": 141, "col_offset": 7, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "num_components", "type": "int"}, {"lineNumber": 150, "col_offset": 53, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 150, "col_offset": 69, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "data_file_path", "type": "pathlib.Path"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "mhd_file", "type": "pathlib.Path"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "data_file_path", "type": "pathlib.Path"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "is_mha", "type": "bool"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "Image", "type": "Any"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "dtype", "type": "int"}, {"lineNumber": 181, "col_offset": 47, "nodeName": "num_components", "type": "int"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "_SetImageFromArray", "type": "Any"}, {"lineNumber": 182, "col_offset": 34, "nodeName": "s", "type": "bytes"}, {"lineNumber": 182, "col_offset": 37, "nodeName": "sitk_image", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "parse_mh_header", "type": "Callable[[pathlib.Path], Mapping[str, Optional[str]]]"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "mhd_file", "type": "pathlib.Path"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 189, "col_offset": 7, "nodeName": "ndims", "type": "int"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "sitk_image", "type": "Any"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "bin_line", "type": "bool"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "read_line_limit", "type": "int"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "bin_line", "type": "bytes"}, {"lineNumber": 41, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "line", "type": "str"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "line", "type": "str"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "line", "type": "str"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "e", "type": "str"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "e", "type": "str"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 113, "col_offset": 54, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 113, "col_offset": 69, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "sitk_image", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "extract_header_listing", "type": "Callable[..., List[Any]]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "sitk_image", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "extract_header_listing", "type": "Callable[..., List[Any]]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "sitk_image", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "extract_header_listing", "type": "Callable[..., List[Any]]"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "parent", "type": "pathlib.Path"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "name", "type": "str"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "exists", "type": "Callable[[], bool]"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "IOError", "type": "Type[OSError]"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "is_compressed", "type": "bool"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "s", "type": "bytes"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "s", "type": "bytes"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "_SimpleITK", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "ReadImage", "type": "Any"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "ndims", "type": "int"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "sitk_image", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "filename", "type": "pathlib.Path"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "read_line_limit", "type": "int"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "readline", "type": "Callable"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "bin_line", "type": "bytes"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "bin_line", "type": "None"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "UnicodeDecodeError", "type": "Type[UnicodeDecodeError]"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "result", "type": "Dict[nothing, nothing]"}, {"lineNumber": 41, "col_offset": 52, "nodeName": "Union", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "value", "type": "str"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "result", "type": "Dict[str, Optional[str]]"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "result", "type": "Dict[str, Optional[str]]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 122, "col_offset": 58, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 125, "col_offset": 57, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 127, "col_offset": 66, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 138, "col_offset": 54, "nodeName": "num_components", "type": "int"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "data_file_path", "type": "pathlib.Path"}, {"lineNumber": 172, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "data_file_path", "type": "pathlib.Path"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "line", "type": "bytes"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "read", "type": "Callable"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "decompress", "type": "Callable[..., bytes]"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "SimpleITK", "type": "Any"}, {"lineNumber": 190, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 190, "col_offset": 45, "nodeName": "mhd_file", "type": "pathlib.Path"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "load_sitk_image_with_nd_support", "type": "Callable[[pathlib.Path], Any]"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "bin_line", "type": "bytes"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "extract_key_value_pairs", "type": "Callable[[str, Dict[str, str]], Any]"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "line", "type": "str"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "result", "type": "Dict[nothing, nothing]"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 92, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "line", "type": "str"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "value", "type": "str"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "resolve", "type": "Callable"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 55, "nodeName": "line", "type": "str"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "readline", "type": "Callable"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "zlib", "type": "module"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "read", "type": "Callable"}, {"lineNumber": 192, "col_offset": 62, "nodeName": "mhd_file", "type": "pathlib.Path"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "bin_line", "type": "bytes"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "Union", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "Union", "type": "Any"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "Union", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "mhd_file", "type": "pathlib.Path"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "Union", "type": "Any"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "key", "type": "str"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "line", "type": "str"}, {"lineNumber": 103, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "headers", "type": "Mapping[str, Optional[str]]"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "property", "type": "str"}]