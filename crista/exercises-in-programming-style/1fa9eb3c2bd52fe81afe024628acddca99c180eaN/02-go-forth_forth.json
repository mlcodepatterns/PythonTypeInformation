[{"lineNumber": 21, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "getWord", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "tokenizeWords", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "execute", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "rAdd", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "rMul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "rSub", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "rDiv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "rEq", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "rGt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "rLt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "rSwap", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "rDup", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "rDrop", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "rOver", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "rDump", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "rDot", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "rJmp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "rJnz", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "rJz", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "rRun", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "rPush", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "rCreate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "rDoes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "rAllot", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "rAt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "rBang", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "rComa", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "compile", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "fatal", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "cColon", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "cSemi", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "cBegin", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 0, "nodeName": "cUntil", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "cIf", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "cElse", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 0, "nodeName": "cThen", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "heap", "type": "List[Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "heapNext", "type": "int"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "words", "type": "List[str]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "rDict", "type": "Dict[Any, Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "cDict", "type": "Dict[str, Callable[[Any], Any]]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "raw_input", "type": "Any"}, {"lineNumber": 12, "col_offset": 7, "nodeName": "NameError", "type": "Type[NameError]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "word", "type": "str"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "words", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "word", "type": "str"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "words", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "p", "type": "int"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "b", "type": "nothing"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "a", "type": "nothing"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "lastCreate", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "label", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "heapNext", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "heapNext", "type": "Any"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "rAdd", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "rSub", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "rDiv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 50, "nodeName": "rMul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 66, "nodeName": "rOver", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "rDup", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "rSwap", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "rDot", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "rDump", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 66, "nodeName": "rDrop", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "rEq", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "rGt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "rLt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "rComa", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "rAt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "rBang", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 50, "nodeName": "rAllot", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "rCreate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "rDoes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "pcode", "type": "List[nothing]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "prompt", "type": "str"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "mesg", "type": "str"}, {"lineNumber": 132, "col_offset": 7, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "label", "type": "Optional[str]"}, {"lineNumber": 141, "col_offset": 10, "nodeName": "pcode", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "cColon", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 28, "nodeName": "cSemi", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "cIf", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 54, "nodeName": "cElse", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 69, "nodeName": "cThen", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "cBegin", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "cUntil", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "raw_input", "type": "Callable[..., str]"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "input", "type": "Callable[..., str]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "pcode", "type": "None"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "words", "type": "List[str]"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "words", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "words", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "p", "type": "int"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "p", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "newP", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "append", "type": "Callable"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "append", "type": "Callable"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "append", "type": "Callable"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "append", "type": "Callable"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "append", "type": "Callable"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "append", "type": "Callable"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "append", "type": "Callable"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "append", "type": "Callable"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "a", "type": "Any"}, {"lineNumber": 61, "col_offset": 57, "nodeName": "append", "type": "Callable"}, {"lineNumber": 61, "col_offset": 67, "nodeName": "b", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "append", "type": "Callable"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "append", "type": "Callable"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "cod", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "execute", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "p", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "append", "type": "Callable"}, {"lineNumber": 71, "col_offset": 50, "nodeName": "p", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "getWord", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "rDict", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "rPush", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "heapNext", "type": "Union[Any, int]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "rDict", "type": "Dict[Any, Any]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "cod", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "cod", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "append", "type": "Callable"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "heap", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "heap", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "word", "type": "None"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "cAct", "type": "Optional[Callable[[Any], Any]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "rAct", "type": "Optional[Union[Callable[[Any, Any], Any], Any]]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "cAct", "type": "Optional[Callable[[Any], Any]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "prompt", "type": "str"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "getWord", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "code", "type": "str"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "label", "type": "Optional[Union[int, str]]"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 139, "col_offset": 7, "nodeName": "code", "type": "str"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "rDict", "type": "Dict[Any, Any]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "pcode", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "code", "type": "str"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "slot", "type": "Optional[Union[int, str]]"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 149, "col_offset": 7, "nodeName": "code", "type": "str"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "append", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "rJz", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "append", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "slot", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "append", "type": "Any"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "rJz", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "append", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "code", "type": "str"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "slot", "type": "Optional[Union[int, str]]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 161, "col_offset": 7, "nodeName": "code", "type": "str"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "rJmp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "pcode", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "pcode", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "code", "type": "str"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "slot", "type": "Optional[Union[int, str]]"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 170, "col_offset": 7, "nodeName": "code", "type": "str"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "pcode", "type": "Any"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "pcode", "type": "Any"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "compile", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "pcode", "type": "None"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "lin", "type": "str"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "lin", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "tokenizeWords", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "lin", "type": "str"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "code", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "code", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "code", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "p", "type": "int"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "newP", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "newP", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 53, "nodeName": "a", "type": "nothing"}, {"lineNumber": 54, "col_offset": 55, "nodeName": "b", "type": "nothing"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "a", "type": "Any"}, {"lineNumber": 55, "col_offset": 55, "nodeName": "b", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 53, "nodeName": "a", "type": "Any"}, {"lineNumber": 56, "col_offset": 55, "nodeName": "b", "type": "Any"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 53, "nodeName": "a", "type": "Any"}, {"lineNumber": 57, "col_offset": 55, "nodeName": "b", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 57, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "rDict", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "cod", "type": "Any"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "label", "type": "Any"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "lastCreate", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "heap", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "heapNext", "type": "Union[Any, int]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "getWord", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "prompt", "type": "str"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "word", "type": "None"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "word", "type": "Optional[str]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "word", "type": "Optional[str]"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "rAct", "type": "Optional[Union[Callable[[Any, Any], Any], Any]]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "pcode", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "fatal", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "label", "type": "Optional[str]"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "fatal", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "fatal", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 10, "nodeName": "label", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "pop", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "fatal", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "fatal", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "pcode", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "pcode", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "pcode", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "pcode", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "fatal", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "fatal", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "pcode", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "pcode", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 10, "nodeName": "slot", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "fatal", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "fatal", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 10, "nodeName": "slot", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "lin", "type": "str"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "read", "type": "Callable"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "p", "type": "int"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "a", "type": "Any"}, {"lineNumber": 58, "col_offset": 60, "nodeName": "b", "type": "Any"}, {"lineNumber": 59, "col_offset": 57, "nodeName": "a", "type": "Any"}, {"lineNumber": 59, "col_offset": 59, "nodeName": "b", "type": "Any"}, {"lineNumber": 60, "col_offset": 57, "nodeName": "a", "type": "Any"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "b", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "cod", "type": "Any"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "p", "type": "Any"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "cod", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "p", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "cDict", "type": "Dict[str, Callable[[Any], Any]]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "rDict", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "cAct", "type": "Optional[Callable[[Any], Any]]"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "pcode", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 53, "nodeName": "cStack", "type": "List[Union[Tuple[str, int], Tuple[str, Optional[str]], Tuple[str, Any]]]"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "pcode", "type": "Any"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "pcode", "type": "Any"}, {"lineNumber": 149, "col_offset": 68, "nodeName": "code", "type": "str"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "pcode", "type": "Any"}, {"lineNumber": 161, "col_offset": 61, "nodeName": "code", "type": "str"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 163, "col_offset": 30, "nodeName": "pcode", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 82, "nodeName": "code", "type": "str"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "raw_input", "type": "Callable[..., str]"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "prompt", "type": "str"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "cod", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "rPush", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "open", "type": "Callable"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "ds", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "rAct", "type": "Optional[Union[Callable[[Any, Any], Any], Any]]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "rRun", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "word", "type": "Optional[str]"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "append", "type": "Callable"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "rAct", "type": "Optional[Union[Callable[[Any, Any], Any], Any]]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "pcode", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "append", "type": "Callable"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "lin", "type": "str"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "re", "type": "module"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "pcode", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "pcode", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "pcode", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "pcode", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "word", "type": "Optional[str]"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "append", "type": "Callable"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "rRun", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "pcode", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "word", "type": "Optional[str]"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "pcode", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "word", "type": "Optional[str]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "pcode", "type": "List[Any]"}]