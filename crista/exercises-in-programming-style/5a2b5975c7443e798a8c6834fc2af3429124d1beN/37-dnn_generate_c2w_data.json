[{"lineNumber": 15, "col_offset": 0, "nodeName": "generate_pair", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "MAX_LINE_SIZE", "type": "int"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "MAX_WORDS_IN_LINE", "type": "int"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "all_chars", "type": "str"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "all_words", "type": "List[Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 10, "col_offset": 40, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "all_chars", "type": "str"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "index", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "cquery", "type": "str"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "wquery", "type": "Set[Any]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "wquery", "type": "Set[Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "list_of_words", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "VOCAB_SIZE", "type": "int"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "data_folder", "type": "str"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "train_x", "type": "str"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "train_y", "type": "str"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "val_x", "type": "str"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "val_y", "type": "str"}, {"lineNumber": 72, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 10, "col_offset": 5, "nodeName": "open", "type": "Callable"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 12, "col_offset": 36, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 13, "col_offset": 13, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 13, "col_offset": 17, "nodeName": "all_words", "type": "List[Any]"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "randint", "type": "Any"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "MAX_LINE_SIZE", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "last_sp", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "cquery", "type": "str"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "list_of_words", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "fx", "type": "TextIO"}, {"lineNumber": 48, "col_offset": 57, "nodeName": "fy", "type": "TextIO"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "fx", "type": "TextIO"}, {"lineNumber": 54, "col_offset": 53, "nodeName": "fy", "type": "TextIO"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "data_folder", "type": "str"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "data_folder", "type": "str"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "data_folder", "type": "str"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "data_folder", "type": "str"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "data_folder", "type": "str"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "generate_data", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 72, "nodeName": "data_folder", "type": "str"}, {"lineNumber": 70, "col_offset": 85, "nodeName": "train_x", "type": "str"}, {"lineNumber": 70, "col_offset": 94, "nodeName": "train_y", "type": "str"}, {"lineNumber": 70, "col_offset": 103, "nodeName": "val_x", "type": "str"}, {"lineNumber": 70, "col_offset": 110, "nodeName": "val_y", "type": "str"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 36, "nodeName": "all_chars", "type": "str"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 17, "col_offset": 50, "nodeName": "MAX_LINE_SIZE", "type": "int"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "other", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "exp", "type": "str"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "indices", "type": "List[Tuple[int, int]]"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "cquery", "type": "str"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "rfind", "type": "Callable[..., int]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "re", "type": "module"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "data_folder", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "data_folder", "type": "str"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "train_x", "type": "str"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "open", "type": "Callable"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "train_y", "type": "str"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "ntrain", "type": "int"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "val_x", "type": "str"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "open", "type": "Callable"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "val_y", "type": "str"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "nval", "type": "int"}, {"lineNumber": 65, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 70, "col_offset": 54, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "read", "type": "Callable"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 17, "col_offset": 37, "nodeName": "all_chars", "type": "str"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "all_chars", "type": "str"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "e", "type": "int"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "indices", "type": "List[Tuple[int, int]]"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "cquery", "type": "str"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "cquery", "type": "str"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "cquery", "type": "str"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "cquery", "type": "str"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "query", "type": "str"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "ans", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "generate_pair", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "query", "type": "str"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "ans", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "generate_pair", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "sys", "type": "module"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "data_folder", "type": "str"}, {"lineNumber": 65, "col_offset": 60, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 58, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "index", "type": "Any"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "cquery", "type": "str"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "VOCAB_SIZE", "type": "int"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "w", "type": "Any"}, {"lineNumber": 26, "col_offset": 52, "nodeName": "m", "type": "Match[str]"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "cquery", "type": "str"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "last_sp", "type": "int"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "MAX_LINE_SIZE", "type": "int"}, {"lineNumber": 33, "col_offset": 59, "nodeName": "last_sp", "type": "int"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "fx", "type": "TextIO"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "query", "type": "str"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "fy", "type": "TextIO"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "fx", "type": "TextIO"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "query", "type": "str"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "fy", "type": "TextIO"}, {"lineNumber": 65, "col_offset": 60, "nodeName": "sys", "type": "module"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "sys", "type": "module"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "sys", "type": "module"}, {"lineNumber": 70, "col_offset": 58, "nodeName": "sys", "type": "module"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "randint", "type": "Any"}, {"lineNumber": 26, "col_offset": 57, "nodeName": "finditer", "type": "Callable"}, {"lineNumber": 26, "col_offset": 69, "nodeName": "exp", "type": "str"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "other", "type": "Any"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "cquery", "type": "str"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "MAX_LINE_SIZE", "type": "int"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "ans", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "ans", "type": "List[Any]"}, {"lineNumber": 18, "col_offset": 35, "nodeName": "index", "type": "Any"}, {"lineNumber": 18, "col_offset": 41, "nodeName": "MAX_LINE_SIZE", "type": "int"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 24, "col_offset": 47, "nodeName": "VOCAB_SIZE", "type": "int"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "start", "type": "Callable[..., int]"}, {"lineNumber": 26, "col_offset": 37, "nodeName": "end", "type": "Callable[..., int]"}, {"lineNumber": 26, "col_offset": 57, "nodeName": "re", "type": "module"}, {"lineNumber": 26, "col_offset": 74, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "cquery", "type": "str"}, {"lineNumber": 28, "col_offset": 54, "nodeName": "e", "type": "int"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "m", "type": "Match[str]"}, {"lineNumber": 26, "col_offset": 37, "nodeName": "m", "type": "Match[str]"}, {"lineNumber": 26, "col_offset": 74, "nodeName": "cquery", "type": "str"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "b", "type": "int"}]