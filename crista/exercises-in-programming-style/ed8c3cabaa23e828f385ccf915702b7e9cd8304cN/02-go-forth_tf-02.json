[{"lineNumber": 17, "col_offset": 0, "nodeName": "read_file", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "filter_chars", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "scan", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "remove_stop_words", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "frequencies", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "sort", "type": "Callable[[], Any]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "append", "type": "Callable"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "read_file", "type": "Callable[[], Any]"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "filter_chars", "type": "Callable[[], Any]"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "scan", "type": "Callable[[], Any]"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "remove_stop_words", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "frequencies", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "sort", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "append", "type": "Callable"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "open", "type": "Callable"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "open", "type": "Callable"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 107, "col_offset": 5, "nodeName": "w", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "f", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "append", "type": "Callable"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "ascii_lowercase", "type": "str"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "sys", "type": "module"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "read", "type": "Callable"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "string", "type": "module"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "items", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "read", "type": "Callable"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "itemgetter", "type": "Callable"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "heap", "type": "Dict[str, Union[Pattern[str], str, List[str], List[Any], Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "operator", "type": "module"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "stack", "type": "List[Any]"}]