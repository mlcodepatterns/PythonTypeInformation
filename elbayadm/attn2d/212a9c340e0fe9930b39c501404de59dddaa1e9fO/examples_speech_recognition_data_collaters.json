[{"lineNumber": 21, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "feature_index", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "feature_index", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "label_index", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "label_index", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "pad_index", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "pad_index", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "eos_index", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "eos_index", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "move_eos_to_beginning", "type": "Any"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "move_eos_to_beginning", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "len_max", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "f_dim", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "parsed_samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "samples", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "parsed_samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "id", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "frames", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "frames_lengths", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "id", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "frames", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "target", "type": "None"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "target_lengths", "type": "None"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "prev_output_tokens", "type": "None"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Seq2SeqCollater"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Seq2SeqCollater"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Seq2SeqCollater"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Seq2SeqCollater"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Seq2SeqCollater"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "max", "type": "Callable"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "size", "type": "Any"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "frames", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "v", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "source", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "parsed_sample", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "_collate_frames", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "frames_lengths", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "sort_order", "type": "Any"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "sort", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "sort_order", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "sort_order", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "ntokens", "type": "int"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "prev_output_tokens", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "ntokens", "type": "int"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "id", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "ntokens", "type": "int"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "target_lengths", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "prev_output_tokens", "type": "Any"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "prev_output_tokens", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "samples", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "source", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "source", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "target", "type": "Any"}, {"lineNumber": 80, "col_offset": 54, "nodeName": "source", "type": "Any"}, {"lineNumber": 80, "col_offset": 72, "nodeName": "target", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "parsed_sample", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "self", "type": "Seq2SeqCollater"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "frames_lengths", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "id", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "frames", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "collate_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "pad_index", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "eos_index", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "sort_order", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "sort_order", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "collate_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "pad_index", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "eos_index", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 115, "col_offset": 68, "nodeName": "sort_order", "type": "Any"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "frames", "type": "Any"}, {"lineNumber": 122, "col_offset": 63, "nodeName": "frames_lengths", "type": "Any"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 51, "col_offset": 40, "nodeName": "frame", "type": "Any"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "frames", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "frames", "type": "Any"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "new", "type": "Any"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "len_max", "type": "Any"}, {"lineNumber": 53, "col_offset": 50, "nodeName": "f_dim", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "s", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "feature_index", "type": "Any"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "generic", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "source", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "s", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "label_index", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "generic", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "long", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "s", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "parsed_samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 60, "nodeName": "samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "size", "type": "Any"}, {"lineNumber": 87, "col_offset": 67, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 72, "nodeName": "samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "fairseq_data_utils", "type": "module"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "self", "type": "Seq2SeqCollater"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "self", "type": "Seq2SeqCollater"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "target", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "fairseq_data_utils", "type": "module"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "self", "type": "Seq2SeqCollater"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "self", "type": "Seq2SeqCollater"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "move_eos_to_beginning", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "prev_output_tokens", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "frame", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "frames", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "feature_index", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "self", "type": "Seq2SeqCollater"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "self", "type": "Seq2SeqCollater"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 52, "nodeName": "samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "self", "type": "Seq2SeqCollater"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 117, "col_offset": 47, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 52, "nodeName": "samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "frames", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "self", "type": "Seq2SeqCollater"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "target", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "v", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "size", "type": "Any"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "s", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "samples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "s", "type": "Dict[str, Any]"}]