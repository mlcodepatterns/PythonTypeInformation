[{"lineNumber": 54, "col_offset": 0, "nodeName": "_get_ins_targets", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "_apply_ins_words", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 230, "col_offset": 0, "nodeName": "base_architecture", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "neg_scorer", "type": "NegativeDistanceScore"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "LevenshteinTransformerModel", "type": "Any"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "LevenshteinTransformerDecoder", "type": "Type[fairseq.models.levenshtein_transformer.LevenshteinTransformerDecoder]"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "NegativeDistanceScore", "type": "Type[NegativeDistanceScore]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "B", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "T", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "V", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "insert_labels", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "insert_label_tensors", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "insert_label_tensors", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "insert_label_tensors", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "padding_masks", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "in_coords", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "out_coords", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "out_tokens", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "out_scores", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "encoder_embed_path", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "encoder_embed_dim", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "encoder_ffn_embed_dim", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "encoder_layers", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "encoder_attention_heads", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "encoder_normalize_before", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "encoder_learned_pos", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "decoder_embed_path", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "decoder_embed_dim", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "decoder_layers", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "decoder_attention_heads", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "decoder_normalize_before", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "decoder_learned_pos", "type": "Any"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "attention_dropout", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "activation_dropout", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "adaptive_softmax_cutoff", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "adaptive_softmax_dropout", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "share_all_embeddings", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "adaptive_input", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "apply_bert_init", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "decoder_input_dim", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "label_tau", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "scores", "type": "Dict[float, Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "s", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "suggested_ed2_path", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "in_tokens_list", "type": "List[List[Any]]"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "out_tokens_list", "type": "List[List[Any]]"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "float", "type": "Any"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "scatter_", "type": "Any"}, {"lineNumber": 94, "col_offset": 58, "nodeName": "insert_labels", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "view", "type": "Any"}, {"lineNumber": 95, "col_offset": 53, "nodeName": "B", "type": "Any"}, {"lineNumber": 95, "col_offset": 63, "nodeName": "V", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "eq", "type": "Any"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "masked_fill_", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "padding_masks", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "masked_fill_", "type": "Any"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "padding_masks", "type": "Any"}, {"lineNumber": 104, "col_offset": 46, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "type_as", "type": "Any"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "in_scores", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "masked_fill", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "gather", "type": "Any"}, {"lineNumber": 113, "col_offset": 68, "nodeName": "out_coords", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "gather", "type": "Any"}, {"lineNumber": 114, "col_offset": 70, "nodeName": "out_coords", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "out_tokens", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "out_scores", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "decoder", "type": "InsertionTransformerDecoder"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "decoder", "type": "InsertionTransformerDecoder"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "encoder_out", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "word_ins_masks", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "output_tokens", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "output_tokens", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "word_ins_score", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "cut_off", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "output_tokens", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "bos", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "unk", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "pool_out", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "label_tau", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 224, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 234, "col_offset": 33, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 234, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 43, "nodeName": "args", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 237, "col_offset": 36, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 44, "nodeName": "args", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "args", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 239, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 239, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 240, "col_offset": 64, "nodeName": "encoder_embed_dim", "type": "Any"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "encoder_ffn_embed_dim", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 43, "nodeName": "args", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 246, "col_offset": 36, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 246, "col_offset": 44, "nodeName": "args", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 39, "nodeName": "args", "type": "Any"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 248, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 249, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 251, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 252, "col_offset": 35, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 43, "nodeName": "args", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 253, "col_offset": 36, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 44, "nodeName": "args", "type": "Any"}, {"lineNumber": 254, "col_offset": 44, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 257, "col_offset": 32, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 257, "col_offset": 40, "nodeName": "args", "type": "Any"}, {"lineNumber": 258, "col_offset": 42, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 261, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 264, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 265, "col_offset": 36, "nodeName": "decoder_embed_dim", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 267, "col_offset": 64, "nodeName": "decoder_embed_dim", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "NegativeDistanceScore"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "scores", "type": "Dict[float, Any]"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "compute_score_full", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "scores", "type": "Dict[float, Any]"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "compute_score_full", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "scores", "type": "Dict[float, Any]"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "compute_score_full", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "tau", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "scores", "type": "Dict[float, Any]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "exp", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 45, "col_offset": 77, "nodeName": "tau", "type": "float"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "exp", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "e", "type": "ImportError"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "in_tokens", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "in_tokens", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "device_of", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "in_tokens", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "libnat", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "full_labels", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "insert_label_tensors", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "long", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "insert_label_tensors", "type": "Any"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "T", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "word_ins_scores", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "word_ins_pred", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "eq", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "sort", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "add_args", "type": "Any"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "parser", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "InsertionTransformerDecoder", "type": "Type[InsertionTransformerDecoder]"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "args", "type": "Any"}, {"lineNumber": 135, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 135, "col_offset": 62, "nodeName": "embed_tokens", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "tgt_tokens", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "forward_word_ins", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "prev_output_tokens", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "word_ins_out", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "ne", "type": "Any"}, {"lineNumber": 161, "col_offset": 54, "nodeName": "pad", "type": "Any"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "word_ins_out", "type": "Any"}, {"lineNumber": 165, "col_offset": 28, "nodeName": "word_ins_tgt", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "word_ins_masks", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "decoder_out", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "decoder_out", "type": "Any"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "forward_word_ins", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "output_tokens", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "word_ins_out", "type": "Any"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "eos_penalty", "type": "Any"}, {"lineNumber": 181, "col_offset": 46, "nodeName": "eos_penalty", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "word_ins_score", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "word_ins_pred", "type": "Any"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "max", "type": "Any"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "_apply_ins_words", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "output_tokens", "type": "Any"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "word_ins_pred", "type": "Any"}, {"lineNumber": 184, "col_offset": 57, "nodeName": "word_ins_score", "type": "Any"}, {"lineNumber": 184, "col_offset": 73, "nodeName": "pad", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "max", "type": "Any"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "output_tokens", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "embed_tokens", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "InsertionTransformerDecoder"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "InsertionTransformerDecoder"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "bos", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "InsertionTransformerDecoder"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "unk", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "InsertionTransformerDecoder"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "eos", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "InsertionTransformerDecoder"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "Linear", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 58, "nodeName": "output_embed_dim", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "InsertionTransformerDecoder"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "pool_out", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "output_layer", "type": "Callable[..., Any]"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "features", "type": "Any"}, {"lineNumber": 240, "col_offset": 64, "nodeName": "args", "type": "Any"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "args", "type": "Any"}, {"lineNumber": 265, "col_offset": 36, "nodeName": "args", "type": "Any"}, {"lineNumber": 267, "col_offset": 64, "nodeName": "args", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "NegativeDistanceScore"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "self", "type": "NegativeDistanceScore"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "NegativeDistanceScore"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "self", "type": "NegativeDistanceScore"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "NegativeDistanceScore"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "self", "type": "NegativeDistanceScore"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "tau", "type": "Any"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "tau", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "L", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "self", "type": "NegativeDistanceScore"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "L", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "compute_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "L", "type": "Any"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "tau", "type": "Any"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "i", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "s", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "tril", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "s", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "triu", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "new_zeros", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "insert_index", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "insert_labels", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "insert_index", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "in_tokens", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "new_arange", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "in_tokens", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "word_ins_pred", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "cat", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "cat", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "TransformerModel", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 131, "col_offset": 62, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "apply", "type": "Any"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "init_bert_params", "type": "Callable[[Any], None]"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 59, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 147, "col_offset": 74, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "encoder_out", "type": "Any"}, {"lineNumber": 161, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "encoder_out", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "F", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "word_ins_score", "type": "Any"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "word_ins_score", "type": "Any"}, {"lineNumber": 184, "col_offset": 73, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "decoder_out", "type": "Any"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "output_tokens", "type": "Any"}, {"lineNumber": 193, "col_offset": 26, "nodeName": "output_scores", "type": "Any"}, {"lineNumber": 202, "col_offset": 60, "nodeName": "no_encoder_attn", "type": "Any"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "output_embed_dim", "type": "Any"}, {"lineNumber": 209, "col_offset": 58, "nodeName": "self", "type": "InsertionTransformerDecoder"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "extract_features", "type": "Callable[..., Tuple[Any, Dict[str, Any]]]"}, {"lineNumber": 214, "col_offset": 41, "nodeName": "prev_output_tokens", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "self", "type": "InsertionTransformerDecoder"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "cat", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "self", "type": "InsertionTransformerDecoder"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "self", "type": "NegativeDistanceScore"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "tau", "type": "Any"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "max", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "s", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "max", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "torch", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "t", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 68, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 54, "nodeName": "s", "type": "Any"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "t", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "in_tokens", "type": "Any"}, {"lineNumber": 81, "col_offset": 61, "nodeName": "V", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "in_coords", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "cat", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "in_tokens", "type": "Any"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "word_ins_pred", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "in_scores", "type": "Any"}, {"lineNumber": 114, "col_offset": 39, "nodeName": "word_ins_scores", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "decoder", "type": "InsertionTransformerDecoder"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "_get_ins_targets", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "prev_output_tokens", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "tgt_tokens", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "pad", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "unk", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "prev_output_tokens", "type": "Any"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "sum", "type": "Any"}, {"lineNumber": 189, "col_offset": 42, "nodeName": "cut_off", "type": "Any"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "cut_off", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "LevenshteinTransformerDecoder", "type": "Type[fairseq.models.levenshtein_transformer.LevenshteinTransformerDecoder]"}, {"lineNumber": 201, "col_offset": 45, "nodeName": "self", "type": "InsertionTransformerDecoder"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "self", "type": "InsertionTransformerDecoder"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "self", "type": "InsertionTransformerDecoder"}, {"lineNumber": 214, "col_offset": 73, "nodeName": "encoder_out", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "scores", "type": "Dict[float, Any]"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 40, "col_offset": 59, "nodeName": "L", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "s", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 68, "col_offset": 69, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "B", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "labels", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "insert_labels", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "label", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "k", "type": "int"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "w", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "label", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "in_coords", "type": "Any"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "out_coords", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "label_tau", "type": "Any"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "pad", "type": "Any"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "features", "type": "Any"}, {"lineNumber": 216, "col_offset": 44, "nodeName": "features", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "scores", "type": "Dict[float, Any]"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "self", "type": "NegativeDistanceScore"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "tau", "type": "Any"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "i", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 69, "nodeName": "in_tokens", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "out_tokens", "type": "Any"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "T", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "labels", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "ne", "type": "Any"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "pad", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "self", "type": "NegativeDistanceScore"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "tau", "type": "Any"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "L", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 45, "col_offset": 52, "nodeName": "arange", "type": "Any"}, {"lineNumber": 45, "col_offset": 62, "nodeName": "L", "type": "int"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "output_tokens", "type": "Any"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "L", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 45, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "L", "type": "int"}]