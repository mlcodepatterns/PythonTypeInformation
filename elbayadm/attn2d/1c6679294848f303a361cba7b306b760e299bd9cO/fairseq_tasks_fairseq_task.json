[{"lineNumber": 13, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "datasets", "type": "Dict[nothing, nothing]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "dataset_to_epoch_iter", "type": "Dict[Any, fairseq.data.iterators.EpochBatchIterator]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "filename", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "filenames", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "epoch_iter", "type": "fairseq.data.iterators.EpochBatchIterator"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "epoch_iter", "type": "fairseq.data.iterators.EpochBatchIterator"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "ignore_grad", "type": "Any"}, {"lineNumber": 277, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 283, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "load", "type": "Callable"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "filename", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "Dictionary", "type": "Type[fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "finalize", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "cls", "type": "Type[FairseqTask]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "split", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "datasets", "type": "Dict[nothing, nothing]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "datasets", "type": "Dict[nothing, nothing]"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "dataset_to_epoch_iter", "type": "Dict[Any, fairseq.data.iterators.EpochBatchIterator]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "FairseqDataset", "type": "Type[fairseq.data.fairseq_dataset.FairseqDataset]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "set_epoch", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "indices", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "max_positions", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "batch_by_size", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "indices", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "num_tokens", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "EpochBatchIterator", "type": "Type[fairseq.data.iterators.EpochBatchIterator]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "dataset_to_epoch_iter", "type": "Dict[Any, fairseq.data.iterators.EpochBatchIterator]"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "build_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 180, "col_offset": 40, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "build_criterion", "type": "Any"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "args", "type": "Any"}, {"lineNumber": 194, "col_offset": 48, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 242, "col_offset": 27, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 242, "col_offset": 44, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 242, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 242, "col_offset": 61, "nodeName": "sample", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "loss", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 246, "col_offset": 34, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 252, "col_offset": 34, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "grad_denom", "type": "Any"}, {"lineNumber": 264, "col_offset": 46, "nodeName": "sample_sizes", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "aggregate_logging_outputs", "type": "Any"}, {"lineNumber": 267, "col_offset": 61, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "Dictionary", "type": "Type[fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "add_file_to_dictionary", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 54, "col_offset": 46, "nodeName": "filename", "type": "Any"}, {"lineNumber": 54, "col_offset": 56, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 54, "col_offset": 59, "nodeName": "tokenize_line", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 54, "col_offset": 84, "nodeName": "workers", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "nwords", "type": "Any"}, {"lineNumber": 55, "col_offset": 70, "nodeName": "padding_factor", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 88, "col_offset": 48, "nodeName": "FairseqDataset", "type": "Type[fairseq.data.fairseq_dataset.FairseqDataset]"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "dataset_to_epoch_iter", "type": "Dict[Any, fairseq.data.iterators.EpochBatchIterator]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "numpy_seed", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "seed", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "ordered_indices", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "filter_by_size", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "indices", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "max_positions", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 150, "col_offset": 52, "nodeName": "max_tokens", "type": "Any"}, {"lineNumber": 150, "col_offset": 78, "nodeName": "max_sentences", "type": "Any"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "required_batch_size_multiple", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "iterators", "type": "module"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "collater", "type": "Any"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "batch_sampler", "type": "Any"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "seed", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "num_shards", "type": "Any"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "shard_id", "type": "Any"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "num_workers", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "models", "type": "module"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "criterions", "type": "module"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "SequenceScorer", "type": "Type[fairseq.sequence_scorer.SequenceScorer]"}, {"lineNumber": 199, "col_offset": 34, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 251, "col_offset": 31, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 251, "col_offset": 48, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 251, "col_offset": 58, "nodeName": "model", "type": "Any"}, {"lineNumber": 251, "col_offset": 65, "nodeName": "sample", "type": "Any"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "generate", "type": "Any"}, {"lineNumber": 256, "col_offset": 38, "nodeName": "models", "type": "Any"}, {"lineNumber": 256, "col_offset": 46, "nodeName": "sample", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "Dictionary", "type": "Type[fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 54, "col_offset": 59, "nodeName": "tokenizer", "type": "module"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "split", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "datasets", "type": "Dict[nothing, nothing]"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 131, "col_offset": 46, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 199, "col_offset": 34, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "generator", "type": "Any"}, {"lineNumber": 256, "col_offset": 68, "nodeName": "prefix_tokens", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "split", "type": "Any"}, {"lineNumber": 145, "col_offset": 70, "nodeName": "ignore_invalid_inputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 36, "nodeName": "args", "type": "Any"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 36, "nodeName": "args", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 212, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 213, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 214, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 36, "nodeName": "args", "type": "Any"}, {"lineNumber": 215, "col_offset": 36, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 44, "nodeName": "args", "type": "Any"}, {"lineNumber": 216, "col_offset": 38, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "args", "type": "Any"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 218, "col_offset": 45, "nodeName": "args", "type": "Any"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 46, "nodeName": "args", "type": "Any"}]