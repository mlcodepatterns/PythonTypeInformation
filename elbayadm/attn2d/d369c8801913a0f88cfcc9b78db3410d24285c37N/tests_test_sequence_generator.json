[{"lineNumber": 41, "col_offset": 0, "nodeName": "get_dummy_dictionary", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "get_dummy_task_and_parser", "type": "Callable[[], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "DEFAULT_TEST_VOCAB_SIZE", "type": "int"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "FairseqTask", "type": "Type[fairseq.tasks.fairseq_task.FairseqTask]"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "TestJitSequenceGeneratorBase", "type": "Type[TestJitSequenceGeneratorBase]"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "TestJitSequenceGeneratorBase", "type": "Type[TestJitSequenceGeneratorBase]"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "TestSequenceGeneratorBase", "type": "Type[TestSequenceGeneratorBase]"}, {"lineNumber": 304, "col_offset": 28, "nodeName": "TestSequenceGeneratorBase", "type": "Type[TestSequenceGeneratorBase]"}, {"lineNumber": 384, "col_offset": 32, "nodeName": "TestDiverseBeamSearch", "type": "Type[TestDiverseBeamSearch]"}, {"lineNumber": 426, "col_offset": 29, "nodeName": "TestSequenceGeneratorBase", "type": "Type[TestSequenceGeneratorBase]"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "DEFAULT_TEST_VOCAB_SIZE", "type": "int"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "dummy_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "dummy_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "unittest", "type": "module"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 575, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "dictionary", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "src_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "dictionary", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "tgt_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "dictionary", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "src_dict", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "Dictionary", "type": "Type[fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "id", "type": "int"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "add_args", "type": "Callable[[Any], None]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "encoder_layers", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "decoder_layers", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "transformer_model", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "transformer_model", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "transformer_model", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "scripted_model", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "transformer_model", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "ensemble_models", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "search_strategy", "type": "fairseq.search.DiverseBeamSearch"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "low_sampling_topp", "type": "float"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "search_strategy", "type": "fairseq.search.Sampling"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "search_strategy", "type": "fairseq.search.DiverseSiblingsSearch"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "normalized", "type": "bool"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "reshaping_model", "type": "tests.utils.TestReshapingModel"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "sent", "type": "int"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "w1", "type": "int"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "w2", "type": "int"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "unk", "type": "float"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "search_strategy", "type": "fairseq.search.DiverseBeamSearch"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 393, "col_offset": 11, "nodeName": "normalized", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "search_strategy", "type": "fairseq.search.DiverseSiblingsSearch"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "w1", "type": "int"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "w2", "type": "int"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "unk", "type": "float"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 452, "col_offset": 18, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 485, "col_offset": 24, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "low_sampling_topp", "type": "float"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "search_strategy", "type": "fairseq.search.Sampling"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "high_sampling_topp", "type": "float"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "search_strategy", "type": "fairseq.search.Sampling"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 564, "col_offset": 11, "nodeName": "normalized", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "main", "type": "Type[unittest.main.TestProgram]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "get_dummy_dictionary", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 58, "col_offset": 60, "nodeName": "SUPPRESS", "type": "str"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "DummyTask", "type": "Type[DummyTask]"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "DummyTask", "type": "Type[DummyTask]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "get_dummy_task_and_parser", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "eos", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "long", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "cat", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "add_args", "type": "Any"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestJitEnsemble"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "build_model", "type": "Any"}, {"lineNumber": 80, "col_offset": 62, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 80, "col_offset": 68, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertTensorSizeEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 62, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertTensorSizeEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertTensorEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "f", "type": "IO[bytes]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "self", "type": "TestJitSequeneceGenerator"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "script", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "self", "type": "TestJitSequeneceGenerator"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Any"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "script", "type": "Any"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "generator", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "_test_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "scripted_model", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "self", "type": "TestJitEnsemble"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "EnsembleModel", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "script", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "ensemble_models", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "_", "type": "argparse.ArgumentParser"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "get_dummy_task_and_parser", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TestExportSearch"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestExportSearch"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "DiverseBeamSearch", "type": "Type[fairseq.search.DiverseBeamSearch]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "script", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "search_strategy", "type": "fairseq.search.DiverseBeamSearch"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "Sampling", "type": "Type[fairseq.search.Sampling]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "script", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "search_strategy", "type": "fairseq.search.Sampling"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "DiverseSiblingsSearch", "type": "Type[fairseq.search.DiverseSiblingsSearch]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "script", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "search_strategy", "type": "fairseq.search.DiverseSiblingsSearch"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertTensorEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 58, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 41, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 191, "col_offset": 53, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "sequence_generator_setup", "type": "Callable[[], Tuple[Any, int, int, Any, Any, Any]]"}, {"lineNumber": 199, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Any"}, {"lineNumber": 199, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 200, "col_offset": 34, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 201, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 201, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Any"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 221, "col_offset": 34, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 222, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 222, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Any"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 241, "col_offset": 34, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 242, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 242, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Any"}, {"lineNumber": 259, "col_offset": 26, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 261, "col_offset": 34, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 262, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 262, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 262, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Any"}, {"lineNumber": 277, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 278, "col_offset": 34, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 279, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 279, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 295, "col_offset": 57, "nodeName": "args", "type": "Any"}, {"lineNumber": 295, "col_offset": 63, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 295, "col_offset": 78, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 296, "col_offset": 26, "nodeName": "build_model", "type": "Callable"}, {"lineNumber": 296, "col_offset": 68, "nodeName": "args", "type": "Any"}, {"lineNumber": 296, "col_offset": 74, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Any"}, {"lineNumber": 297, "col_offset": 57, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 298, "col_offset": 34, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "beam", "type": "int"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "dummy_dictionary", "type": "Callable[..., fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "eos", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 317, "col_offset": 26, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 321, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 358, "col_offset": 57, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 358, "col_offset": 63, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 358, "col_offset": 66, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "build_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 359, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 363, "col_offset": 26, "nodeName": "DiverseBeamSearch", "type": "Type[fairseq.search.DiverseBeamSearch]"}, {"lineNumber": 363, "col_offset": 51, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 364, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Any"}, {"lineNumber": 365, "col_offset": 26, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 368, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 368, "col_offset": 34, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 369, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 369, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 369, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 369, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "sub_", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 390, "col_offset": 58, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 398, "col_offset": 26, "nodeName": "DiverseSiblingsSearch", "type": "Type[fairseq.search.DiverseSiblingsSearch]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Any"}, {"lineNumber": 402, "col_offset": 26, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 410, "col_offset": 34, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 411, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 411, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 411, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 411, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "dummy_dictionary", "type": "Callable[..., fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "eos", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 439, "col_offset": 26, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 443, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 452, "col_offset": 18, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 453, "col_offset": 18, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 453, "col_offset": 39, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 454, "col_offset": 23, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 483, "col_offset": 57, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 483, "col_offset": 63, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 483, "col_offset": 66, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 484, "col_offset": 21, "nodeName": "build_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 484, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 485, "col_offset": 24, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 490, "col_offset": 28, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 491, "col_offset": 26, "nodeName": "Sampling", "type": "Type[fairseq.search.Sampling]"}, {"lineNumber": 491, "col_offset": 42, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 492, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Any"}, {"lineNumber": 493, "col_offset": 26, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 500, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 500, "col_offset": 34, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 501, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 501, "col_offset": 18, "nodeName": "eos", "type": "Any"}, {"lineNumber": 501, "col_offset": 28, "nodeName": "w1", "type": "int"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 519, "col_offset": 26, "nodeName": "Sampling", "type": "Type[fairseq.search.Sampling]"}, {"lineNumber": 519, "col_offset": 42, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 520, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Any"}, {"lineNumber": 521, "col_offset": 26, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 528, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 528, "col_offset": 34, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 529, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 529, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 529, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 529, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 529, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "tensorEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 558, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 563, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 565, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "dummy_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "id", "type": "int"}, {"lineNumber": 58, "col_offset": 60, "nodeName": "argparse", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestJitEnsemble"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "self", "type": "TestJitEnsemble"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 74, "col_offset": 67, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "TransformerModel", "type": "Any"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "self", "type": "TestJitEnsemble"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "TransformerModel", "type": "Any"}, {"lineNumber": 80, "col_offset": 68, "nodeName": "self", "type": "TestJitEnsemble"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestJitSequenceGeneratorBase"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestJitSequenceGeneratorBase"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "numel", "type": "Any"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "numel", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestJitSequenceGeneratorBase"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestJitSequenceGeneratorBase"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestJitSequenceGeneratorBase"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestJitSequenceGeneratorBase"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestJitSequenceGeneratorBase"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestJitSequenceGeneratorBase"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "h1", "type": "Any"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "h2", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestJitSequenceGeneratorBase"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "h1", "type": "Any"}, {"lineNumber": 101, "col_offset": 56, "nodeName": "h2", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestJitSequenceGeneratorBase"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestJitSequenceGeneratorBase"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "h1", "type": "Any"}, {"lineNumber": 103, "col_offset": 48, "nodeName": "h2", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "name", "type": "str"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "name", "type": "str"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "jit", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "jit", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestJitSequeneceGenerator"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "jit", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "search", "type": "module"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "TestExportSearch"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "jit", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "self", "type": "TestExportSearch"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "search", "type": "module"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "self", "type": "TestExportSearch"}, {"lineNumber": 156, "col_offset": 41, "nodeName": "low_sampling_topp", "type": "float"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "jit", "type": "Any"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "search", "type": "module"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "self", "type": "TestExportSearch"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "jit", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 169, "col_offset": 47, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 169, "col_offset": 64, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "numel", "type": "Any"}, {"lineNumber": 174, "col_offset": 45, "nodeName": "numel", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 181, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 195, "col_offset": 40, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 195, "col_offset": 67, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 199, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 199, "col_offset": 52, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "generator", "type": "Any"}, {"lineNumber": 200, "col_offset": 34, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 201, "col_offset": 43, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 201, "col_offset": 52, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 203, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 203, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 206, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 206, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 206, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 206, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 209, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 209, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 209, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 209, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 212, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 212, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 212, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "generator", "type": "Any"}, {"lineNumber": 221, "col_offset": 34, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 222, "col_offset": 43, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 222, "col_offset": 52, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 224, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 224, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 227, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 227, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 227, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 227, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 230, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 230, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 230, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 233, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 233, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 233, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 233, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 239, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 239, "col_offset": 66, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "generator", "type": "Any"}, {"lineNumber": 241, "col_offset": 34, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 242, "col_offset": 43, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 242, "col_offset": 52, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 244, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 244, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 245, "col_offset": 61, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 247, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 247, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 247, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 248, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 250, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 250, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 251, "col_offset": 66, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 253, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 253, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 253, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 253, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 254, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 259, "col_offset": 26, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 259, "col_offset": 66, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "generator", "type": "Any"}, {"lineNumber": 261, "col_offset": 34, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 262, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 262, "col_offset": 43, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 262, "col_offset": 52, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 264, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 264, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 264, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 264, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 265, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 267, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 267, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 268, "col_offset": 61, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 270, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 270, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 270, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 270, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 271, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 273, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 273, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 273, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 274, "col_offset": 66, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 277, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 277, "col_offset": 52, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "generator", "type": "Any"}, {"lineNumber": 278, "col_offset": 34, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 279, "col_offset": 43, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 279, "col_offset": 52, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 281, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 281, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 284, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 284, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 284, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 287, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 287, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 287, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 290, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 290, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 290, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "TestTranslationTask", "type": "Type[tests.utils.TestTranslationTask]"}, {"lineNumber": 295, "col_offset": 63, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 295, "col_offset": 78, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 296, "col_offset": 26, "nodeName": "TestReshapingModel", "type": "Type[tests.utils.TestReshapingModel]"}, {"lineNumber": 297, "col_offset": 39, "nodeName": "reshaping_model", "type": "tests.utils.TestReshapingModel"}, {"lineNumber": 297, "col_offset": 57, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "generator", "type": "Any"}, {"lineNumber": 298, "col_offset": 34, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "pad", "type": "Callable[[], Any]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "unk", "type": "Callable[[], Any]"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 317, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 321, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "argparse", "type": "module"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "TestTranslationTask", "type": "Type[tests.utils.TestTranslationTask]"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 363, "col_offset": 26, "nodeName": "search", "type": "module"}, {"lineNumber": 363, "col_offset": 51, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 365, "col_offset": 26, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 365, "col_offset": 70, "nodeName": "search_strategy", "type": "fairseq.search.DiverseBeamSearch"}, {"lineNumber": 367, "col_offset": 46, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 367, "col_offset": 78, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 368, "col_offset": 16, "nodeName": "generator", "type": "Any"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 369, "col_offset": 32, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 369, "col_offset": 41, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 371, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 371, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 371, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 374, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 374, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 374, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 377, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 377, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 377, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 380, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 380, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 380, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 389, "col_offset": 53, "nodeName": "diversity_rate", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 390, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 391, "col_offset": 25, "nodeName": "numel", "type": "Any"}, {"lineNumber": 391, "col_offset": 45, "nodeName": "numel", "type": "Any"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 394, "col_offset": 43, "nodeName": "lenpen", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 395, "col_offset": 24, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 398, "col_offset": 26, "nodeName": "search", "type": "module"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 402, "col_offset": 26, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 402, "col_offset": 70, "nodeName": "search_strategy", "type": "fairseq.search.DiverseSiblingsSearch"}, {"lineNumber": 406, "col_offset": 30, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 407, "col_offset": 31, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "generator", "type": "Any"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 411, "col_offset": 32, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 411, "col_offset": 41, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 413, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 413, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 413, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 416, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 416, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 416, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 419, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 419, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 419, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 422, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 422, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 422, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "pad", "type": "Callable[[], Any]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 432, "col_offset": 25, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 433, "col_offset": 25, "nodeName": "unk", "type": "Callable[[], Any]"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 439, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 443, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "argparse", "type": "module"}, {"lineNumber": 453, "col_offset": 18, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 453, "col_offset": 39, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 454, "col_offset": 23, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "TestTranslationTask", "type": "Type[tests.utils.TestTranslationTask]"}, {"lineNumber": 484, "col_offset": 21, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 490, "col_offset": 28, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 491, "col_offset": 26, "nodeName": "search", "type": "module"}, {"lineNumber": 491, "col_offset": 42, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 491, "col_offset": 71, "nodeName": "low_sampling_topp", "type": "float"}, {"lineNumber": 493, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 493, "col_offset": 26, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 493, "col_offset": 70, "nodeName": "search_strategy", "type": "fairseq.search.Sampling"}, {"lineNumber": 496, "col_offset": 30, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 497, "col_offset": 31, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 500, "col_offset": 16, "nodeName": "generator", "type": "Any"}, {"lineNumber": 501, "col_offset": 18, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 501, "col_offset": 28, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 503, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 503, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 503, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 506, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 506, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 506, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 509, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 509, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 509, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 512, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 512, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 512, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 518, "col_offset": 30, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 518, "col_offset": 49, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 519, "col_offset": 26, "nodeName": "search", "type": "module"}, {"lineNumber": 519, "col_offset": 42, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 519, "col_offset": 71, "nodeName": "high_sampling_topp", "type": "float"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 521, "col_offset": 26, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 521, "col_offset": 70, "nodeName": "search_strategy", "type": "fairseq.search.Sampling"}, {"lineNumber": 524, "col_offset": 30, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 525, "col_offset": 31, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 528, "col_offset": 16, "nodeName": "generator", "type": "Any"}, {"lineNumber": 529, "col_offset": 22, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 529, "col_offset": 32, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 529, "col_offset": 41, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 555, "col_offset": 32, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 555, "col_offset": 48, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 555, "col_offset": 65, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "almostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 559, "col_offset": 59, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "numel", "type": "Any"}, {"lineNumber": 561, "col_offset": 33, "nodeName": "numel", "type": "Any"}, {"lineNumber": 563, "col_offset": 16, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 565, "col_offset": 43, "nodeName": "lenpen", "type": "Any"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "dictionary", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "randint", "type": "Any"}, {"lineNumber": 71, "col_offset": 44, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "self", "type": "TestJitEnsemble"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "pos_probs", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "scripted_module", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "f", "type": "IO[bytes]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "jit", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "f", "type": "IO[bytes]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "self", "type": "TestJitSequeneceGenerator"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 169, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "pos_probs", "type": "List[float]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "numel", "type": "Any"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 181, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 199, "col_offset": 39, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 212, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 227, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 230, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 239, "col_offset": 13, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 244, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 245, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 248, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 250, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 262, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 264, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 267, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 270, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 273, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 277, "col_offset": 39, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 284, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 287, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 290, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 296, "col_offset": 26, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 318, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 318, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 319, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 319, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 319, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 367, "col_offset": 46, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 367, "col_offset": 78, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 371, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 372, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 374, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 375, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 377, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 378, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 380, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 381, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 388, "col_offset": 39, "nodeName": "pos_probs", "type": "Any"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 389, "col_offset": 37, "nodeName": "sibling_rank", "type": "Any"}, {"lineNumber": 391, "col_offset": 25, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 394, "col_offset": 21, "nodeName": "numel", "type": "Any"}, {"lineNumber": 395, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 406, "col_offset": 30, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 407, "col_offset": 31, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 413, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 414, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 416, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 417, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 419, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 422, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 423, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 432, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 433, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 440, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 440, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 441, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 441, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 441, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 493, "col_offset": 13, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 496, "col_offset": 30, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 497, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 503, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 504, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 506, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 507, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 509, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 510, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 512, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 513, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 518, "col_offset": 30, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 518, "col_offset": 49, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 524, "col_offset": 30, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 525, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 531, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 532, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 533, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 534, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 537, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 538, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 539, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 540, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 543, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 544, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 545, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 546, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 549, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 550, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 551, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 552, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 555, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 558, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 558, "col_offset": 39, "nodeName": "pos_probs", "type": "Any"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 559, "col_offset": 32, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 565, "col_offset": 21, "nodeName": "numel", "type": "Any"}, {"lineNumber": 566, "col_offset": 19, "nodeName": "score", "type": "Any"}, {"lineNumber": 569, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 569, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 569, "col_offset": 43, "nodeName": "max", "type": "Any"}, {"lineNumber": 572, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 572, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 572, "col_offset": 42, "nodeName": "sum", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "self", "type": "TestJitEnsemble"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "long", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "h1", "type": "Any"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "h2", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 174, "col_offset": 45, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "long", "type": "Any"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 262, "col_offset": 22, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "self", "type": "TestSequeneceGenerator"}, {"lineNumber": 318, "col_offset": 13, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 318, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 319, "col_offset": 13, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 319, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 319, "col_offset": 31, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 333, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 340, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 341, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "unk", "type": "float"}, {"lineNumber": 344, "col_offset": 23, "nodeName": "unk", "type": "float"}, {"lineNumber": 350, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 351, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 353, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 354, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 391, "col_offset": 45, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 394, "col_offset": 21, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 395, "col_offset": 36, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 440, "col_offset": 22, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 440, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 441, "col_offset": 13, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 441, "col_offset": 22, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 441, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 460, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 461, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 462, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 463, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 468, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 468, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 468, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 468, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 469, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 469, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 469, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 469, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 470, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 470, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 470, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 470, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 471, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 471, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 471, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 471, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 476, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 477, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 478, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 479, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 531, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 531, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 531, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 531, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 532, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 532, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 532, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 532, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 533, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 534, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 537, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 537, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 537, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 537, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 538, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 538, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 538, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 538, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 539, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 540, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 543, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 543, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 543, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 543, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 544, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 544, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 544, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 544, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 545, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 546, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 549, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 549, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 549, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 549, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 550, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 550, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 550, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 550, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 551, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 552, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 558, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 561, "col_offset": 33, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 565, "col_offset": 21, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 566, "col_offset": 27, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 569, "col_offset": 15, "nodeName": "t1", "type": "Any"}, {"lineNumber": 569, "col_offset": 28, "nodeName": "t2", "type": "Any"}, {"lineNumber": 572, "col_offset": 15, "nodeName": "t1", "type": "Any"}, {"lineNumber": 572, "col_offset": 28, "nodeName": "t2", "type": "Any"}, {"lineNumber": 71, "col_offset": 63, "nodeName": "eos", "type": "Any"}, {"lineNumber": 71, "col_offset": 70, "nodeName": "eos", "type": "Any"}, {"lineNumber": 531, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 532, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 533, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 534, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 537, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 538, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 539, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 540, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 543, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 544, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 545, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 546, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 549, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 550, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 551, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 552, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 569, "col_offset": 43, "nodeName": "abs", "type": "Any"}, {"lineNumber": 572, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "t2", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "ne", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "t2", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "t2", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "ne", "type": "Any"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "t2", "type": "Any"}, {"lineNumber": 301, "col_offset": 23, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 301, "col_offset": 35, "nodeName": "beam", "type": "int"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "sent", "type": "int"}, {"lineNumber": 569, "col_offset": 43, "nodeName": "t1", "type": "Any"}, {"lineNumber": 569, "col_offset": 48, "nodeName": "t2", "type": "Any"}, {"lineNumber": 572, "col_offset": 42, "nodeName": "ne", "type": "Any"}, {"lineNumber": 572, "col_offset": 48, "nodeName": "t2", "type": "Any"}, {"lineNumber": 572, "col_offset": 42, "nodeName": "t1", "type": "Any"}]