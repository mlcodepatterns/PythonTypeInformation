[{"lineNumber": 13, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "FairseqOptimizer", "type": "Type[fairseq.optim.fairseq_optimizer.FairseqOptimizer]"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "FairseqOptimizer", "type": "Type[fairseq.optim.fairseq_optimizer.FairseqOptimizer]"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "optim", "type": "module"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "optim", "type": "module"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "tolerance", "type": "Any"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "tolerance", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "_last_rescale_iter", "type": "int"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "_overflows_since_rescale", "type": "int"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "iter_since_rescale", "type": "int"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "overflow", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "total_param_size", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "offset", "type": "int"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "params", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "optimizer_config", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "_needs_sync", "type": "bool"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "_needs_sync", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "_needs_sync", "type": "bool"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "offset", "type": "int"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "_needs_sync", "type": "bool"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "itr", "type": "Iterator[Any]"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 241, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 276, "col_offset": 33, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "fp16_optimizer", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "optimizer_config", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 322, "col_offset": 35, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "_grads_are_scaled", "type": "bool"}, {"lineNumber": 351, "col_offset": 11, "nodeName": "_grads_are_scaled", "type": "Any"}, {"lineNumber": 361, "col_offset": 11, "nodeName": "_grads_are_scaled", "type": "bool"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 374, "col_offset": 11, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "_grads_are_scaled", "type": "bool"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "_iter", "type": "int"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "_last_rescale_iter", "type": "int"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "_iter", "type": "int"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "_overflows_since_rescale", "type": "int"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "pct_overflow", "type": "float"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "fp16_scale_window", "type": "Any"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "new", "type": "Any"}, {"lineNumber": 93, "col_offset": 51, "nodeName": "total_param_size", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "numel", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "offset", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "numel", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "new", "type": "Any"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "total_param_size", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "build_optimizer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "cls", "type": "Type[FP16Optimizer]"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "get_lr", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "set_lr", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "lr", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 135, "col_offset": 44, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 135, "col_offset": 56, "nodeName": "optimizer_overrides", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "offset", "type": "int"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "_needs_sync", "type": "bool"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "_sync_fp16_grads_to_fp32", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "clip_grad_norm_", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 175, "col_offset": 70, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "has_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 50, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "_sync_fp16_grads_to_fp32", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "closure", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "numel", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "offset", "type": "Any"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "numel", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "params", "type": "Any"}, {"lineNumber": 230, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "ConvertToFP32"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "ConvertToFP32"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "map", "type": "Callable"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "convert_to_fp32", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 40, "nodeName": "params", "type": "Any"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 241, "col_offset": 21, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "itr", "type": "Iterator[Any]"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "self", "type": "ConvertToFP32"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "fp16_scale_window", "type": "Any"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "build_optimizer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 302, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 302, "col_offset": 53, "nodeName": "params", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "cls", "type": "Type[MemoryEfficientFP16Optimizer]"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 303, "col_offset": 33, "nodeName": "fp16_optimizer", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "get_lr", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "set_lr", "type": "Any"}, {"lineNumber": 317, "col_offset": 38, "nodeName": "lr", "type": "Any"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 322, "col_offset": 35, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 333, "col_offset": 27, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "wrap_optimizer_", "type": "Callable[[Any], Any]"}, {"lineNumber": 335, "col_offset": 38, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 336, "col_offset": 47, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 336, "col_offset": 59, "nodeName": "optimizer_overrides", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "unwrap_optimizer_", "type": "Callable[[Any], Any]"}, {"lineNumber": 337, "col_offset": 40, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 346, "col_offset": 22, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 351, "col_offset": 11, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "_grads_are_scaled", "type": "bool"}, {"lineNumber": 361, "col_offset": 11, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "_unscale_grads", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 20, "nodeName": "clip_grad_norm", "type": "Any"}, {"lineNumber": 369, "col_offset": 58, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "has_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 50, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 373, "col_offset": 33, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "_unscale_grads", "type": "Callable[..., Any]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "wrap_optimizer_", "type": "Callable[[Any], Any]"}, {"lineNumber": 392, "col_offset": 38, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 394, "col_offset": 36, "nodeName": "closure", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "unwrap_optimizer_", "type": "Callable[[Any], Any]"}, {"lineNumber": 397, "col_offset": 40, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "_overflows_since_rescale", "type": "int"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "pct_overflow", "type": "float"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "tolerance", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "_last_rescale_iter", "type": "int"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "_iter", "type": "int"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "_overflows_since_rescale", "type": "int"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "_last_rescale_iter", "type": "int"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "_iter", "type": "int"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "max", "type": "Callable"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 47, "col_offset": 51, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "fp16_init_scale", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "fp16_scale_tolerance", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "numel", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "optim", "type": "module"}, {"lineNumber": 102, "col_offset": 54, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "grad_data", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "numel", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "offset", "type": "Any"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "numel", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "_sync_fp16_grads_to_fp32", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "c", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 170, "col_offset": 44, "nodeName": "c", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "utils", "type": "module"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "grad", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 181, "col_offset": 41, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 189, "col_offset": 18, "nodeName": "OverflowError", "type": "Type[OverflowError]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "numel", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "float", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "ConvertToFP32", "type": "Type[ConvertToFP32]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "group", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "self", "type": "ConvertToFP32"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "self", "type": "ConvertToFP32"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "next", "type": "Callable"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "itr", "type": "Iterator[Any]"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 289, "col_offset": 23, "nodeName": "fp16_init_scale", "type": "Any"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 291, "col_offset": 22, "nodeName": "fp16_scale_tolerance", "type": "Any"}, {"lineNumber": 292, "col_offset": 22, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "optim", "type": "module"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 322, "col_offset": 35, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 334, "col_offset": 37, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "ConvertToFP32", "type": "Type[ConvertToFP32]"}, {"lineNumber": 335, "col_offset": 38, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "ConvertToFP32", "type": "Type[ConvertToFP32]"}, {"lineNumber": 337, "col_offset": 40, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 346, "col_offset": 22, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "_unscale_grads", "type": "Callable[..., Any]"}, {"lineNumber": 362, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 364, "col_offset": 50, "nodeName": "c", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 369, "col_offset": 20, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 375, "col_offset": 41, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 383, "col_offset": 18, "nodeName": "OverflowError", "type": "Type[OverflowError]"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "ConvertToFP32", "type": "Type[ConvertToFP32]"}, {"lineNumber": 392, "col_offset": 38, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "ConvertToFP32", "type": "Type[ConvertToFP32]"}, {"lineNumber": 397, "col_offset": 40, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 34, "col_offset": 59, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 34, "col_offset": 65, "nodeName": "iter_since_rescale", "type": "int"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "_decrease_loss_scale", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 47, "col_offset": 51, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "update_freq", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "distributed_world_size", "type": "Any"}, {"lineNumber": 73, "col_offset": 65, "nodeName": "update_freq", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "numel", "type": "Any"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "p", "type": "Any"}, {"lineNumber": 92, "col_offset": 55, "nodeName": "params", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "float", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "view", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "numel", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 161, "col_offset": 61, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 181, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "FloatingPointError", "type": "Type[FloatingPointError]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "view_as", "type": "Any"}, {"lineNumber": 203, "col_offset": 76, "nodeName": "data", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "detach_", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 227, "col_offset": 30, "nodeName": "float", "type": "Any"}, {"lineNumber": 237, "col_offset": 44, "nodeName": "group", "type": "Any"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "half", "type": "Any"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "grad", "type": "Any"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "self", "type": "ConvertToFP32"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 279, "col_offset": 19, "nodeName": "update_freq", "type": "Any"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 284, "col_offset": 35, "nodeName": "distributed_world_size", "type": "Any"}, {"lineNumber": 284, "col_offset": 65, "nodeName": "update_freq", "type": "Any"}, {"lineNumber": 289, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 291, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 292, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 335, "col_offset": 38, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 337, "col_offset": 40, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 346, "col_offset": 22, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 355, "col_offset": 50, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 355, "col_offset": 67, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 369, "col_offset": 20, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 375, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "FloatingPointError", "type": "Type[FloatingPointError]"}, {"lineNumber": 392, "col_offset": 38, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 397, "col_offset": 40, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "_iter", "type": "int"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 73, "col_offset": 65, "nodeName": "args", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "data", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 155, "col_offset": 43, "nodeName": "grad", "type": "Any"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 155, "col_offset": 67, "nodeName": "new_zeros", "type": "Any"}, {"lineNumber": 155, "col_offset": 84, "nodeName": "shape", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "grad_data", "type": "Any"}, {"lineNumber": 157, "col_offset": 70, "nodeName": "view", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 161, "col_offset": 61, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 181, "col_offset": 41, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 189, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 189, "col_offset": 64, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 203, "col_offset": 76, "nodeName": "p", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 227, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 246, "col_offset": 34, "nodeName": "half", "type": "Any"}, {"lineNumber": 279, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 284, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 284, "col_offset": 65, "nodeName": "args", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 355, "col_offset": 67, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 375, "col_offset": 41, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 379, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 383, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 383, "col_offset": 64, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "new", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "offset", "type": "int"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "p", "type": "Any"}, {"lineNumber": 155, "col_offset": 43, "nodeName": "p", "type": "Any"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "p", "type": "Any"}, {"lineNumber": 155, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 155, "col_offset": 84, "nodeName": "data", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 157, "col_offset": 70, "nodeName": "grad_data", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 161, "col_offset": 61, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 189, "col_offset": 64, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 227, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "p", "type": "Any"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 246, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 355, "col_offset": 67, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 383, "col_offset": 64, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "offset", "type": "int"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "numel", "type": "Any"}, {"lineNumber": 155, "col_offset": 67, "nodeName": "p", "type": "Any"}, {"lineNumber": 155, "col_offset": 84, "nodeName": "p", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "offset", "type": "int"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 189, "col_offset": 64, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 203, "col_offset": 47, "nodeName": "offset", "type": "int"}, {"lineNumber": 227, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 246, "col_offset": 34, "nodeName": "grad", "type": "Any"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 383, "col_offset": 64, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 157, "col_offset": 50, "nodeName": "offset", "type": "int"}, {"lineNumber": 157, "col_offset": 57, "nodeName": "numel", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 203, "col_offset": 54, "nodeName": "offset", "type": "int"}, {"lineNumber": 203, "col_offset": 61, "nodeName": "numel", "type": "Any"}, {"lineNumber": 246, "col_offset": 34, "nodeName": "p", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "self", "type": "FP16Optimizer"}]