[{"lineNumber": 19, "col_offset": 0, "nodeName": "DistributedFairseqModel", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "distributed_rank", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "ddp_class", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "distributed_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 63, "nodeName": "args", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "BaseFairseqModel", "type": "Any"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "ddp_backend", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "ddp_class", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "DistributedDataParallel", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "_DistributedFairseqModel", "type": "Type[Any]"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "distributed_utils", "type": "module"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 34, "col_offset": 74, "nodeName": "distributed_rank", "type": "Any"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "args", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "ddp_backend", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "ddp_class", "type": "Type[fairseq.legacy_distributed_data_parallel.LegacyDistributedDataParallel]"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "LegacyDistributedDataParallel", "type": "Type[fairseq.legacy_distributed_data_parallel.LegacyDistributedDataParallel]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "init_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 34, "col_offset": 52, "nodeName": "gethostname", "type": "Callable[[], str]"}, {"lineNumber": 34, "col_offset": 74, "nodeName": "args", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "bucket_cap_mb", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "init_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "args", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "__getattr__", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "__getattr__", "type": "Any"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 34, "col_offset": 52, "nodeName": "socket", "type": "module"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "getargspec", "type": "Callable[[object], inspect.ArgSpec]"}, {"lineNumber": 48, "col_offset": 51, "nodeName": "ddp_class", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "distributed_world_size", "type": "Any"}, {"lineNumber": 58, "col_offset": 53, "nodeName": "ddp_backend", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "args", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "inspect", "type": "module"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 58, "col_offset": 53, "nodeName": "args", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}]