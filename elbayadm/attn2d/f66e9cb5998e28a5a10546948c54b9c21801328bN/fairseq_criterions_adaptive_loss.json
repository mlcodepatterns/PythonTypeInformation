[{"lineNumber": 17, "col_offset": 19, "nodeName": "FairseqCriterion", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "adaptive_softmax", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "adaptive_softmax", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "net_output", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "bsz", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "loss_sum", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "ntokens", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "nsentences", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "agg_output", "type": "Dict[str, Any]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "task", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "no_c10d", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "view", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "size", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "target", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "adaptive_softmax", "type": "Any"}, {"lineNumber": 48, "col_offset": 57, "nodeName": "target", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "sentence_avg", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "logging_output", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "ntokens", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "nsentences", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "ntokens", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "adaptive_softmax", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "target", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "net_output", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "target", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "logits", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "target", "type": "Any"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "args", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 59, "col_offset": 78, "nodeName": "sample", "type": "Any"}, {"lineNumber": 61, "col_offset": 45, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 61, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "agg_output", "type": "Dict[str, Any]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "model", "type": "Any"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "sample", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "get_targets", "type": "Any"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "net_output", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "new", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "cross_entropy", "type": "Any"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "item", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 57, "nodeName": "loss", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "log", "type": "Any"}, {"lineNumber": 71, "col_offset": 53, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "log", "type": "Any"}, {"lineNumber": 72, "col_offset": 55, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 73, "col_offset": 54, "nodeName": "log", "type": "Any"}, {"lineNumber": 73, "col_offset": 61, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "log", "type": "Any"}, {"lineNumber": 74, "col_offset": 63, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "loss_sum", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "loss_sum", "type": "Any"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "ntokens", "type": "Any"}, {"lineNumber": 82, "col_offset": 58, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 40, "col_offset": 62, "nodeName": "model", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 51, "col_offset": 38, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 51, "col_offset": 50, "nodeName": "bsz", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "F", "type": "Any"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "logits", "type": "Any"}, {"lineNumber": 56, "col_offset": 51, "nodeName": "target", "type": "Any"}, {"lineNumber": 56, "col_offset": 95, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "sample", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "utils", "type": "module"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "loss", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "sample", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "log", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "log", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "log", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "log", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "math", "type": "module"}, {"lineNumber": 82, "col_offset": 58, "nodeName": "math", "type": "module"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "net_output", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "min", "type": "Any"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "max", "type": "Any"}, {"lineNumber": 55, "col_offset": 68, "nodeName": "size", "type": "Any"}, {"lineNumber": 56, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 56, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 56, "col_offset": 95, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "target", "type": "Any"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "target", "type": "Any"}, {"lineNumber": 55, "col_offset": 68, "nodeName": "logits", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 75, "nodeName": "i", "type": "int"}]