[{"lineNumber": 11, "col_offset": 23, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "add_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "optimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "optimizer_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "params", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "__getstate__", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "get_lr", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "set_lr", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "load_state_dict", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "multiply_grads", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "clip_grad_norm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "step", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "zero_grad", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "supports_memory_efficient_fp16", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "supports_flat_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "average_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 15, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "params", "type": "Generator[Any, Any, None]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "params", "type": "Generator[Any, Any, None]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "FairseqOptimizer"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "__getstate__", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "lr", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "group", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "self", "type": "FairseqOptimizer"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "clip_grad_norm_", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "params", "type": "Generator[Any, Any, None]"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "closure", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "self", "type": "FairseqOptimizer"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "grad", "type": "None"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "supports_memory_efficient_fp16", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "supports_flat_params", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "_optimizer", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "self", "type": "FairseqOptimizer"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "optimizer_overrides", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "utils", "type": "module"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "self", "type": "FairseqOptimizer"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "optim", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "p", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "self", "type": "FairseqOptimizer"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "self", "type": "FairseqOptimizer"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "FairseqOptimizer"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "optimizer_overrides", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "self", "type": "FairseqOptimizer"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "update", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "optimizer_overrides", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "c", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "FairseqOptimizer"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "FairseqOptimizer"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "self", "type": "FairseqOptimizer"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "group", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "p", "type": "Any"}]