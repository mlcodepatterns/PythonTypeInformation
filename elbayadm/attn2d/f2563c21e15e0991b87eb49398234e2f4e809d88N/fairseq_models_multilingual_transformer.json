[{"lineNumber": 179, "col_offset": 0, "nodeName": "base_multilingual_architecture", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 0, "nodeName": "multilingual_transformer_iwslt_de_en", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "FairseqMultiModel", "type": "Type[fairseq.models.fairseq_model.FairseqMultiModel]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "share_encoder_embeddings", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "share_decoder_embeddings", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "share_encoders", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "share_decoders", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "encoder_embed_dim", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "encoder_ffn_embed_dim", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "encoder_attention_heads", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "encoder_layers", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "decoder_embed_dim", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "decoder_ffn_embed_dim", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "decoder_attention_heads", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "decoder_layers", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "src_langs", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "tgt_langs", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "share_encoders", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "share_decoders", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "share_all_embeddings", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "share_encoders", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "share_decoders", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "state_dict_subset", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "base_architecture", "type": "Any"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 44, "nodeName": "args", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 183, "col_offset": 36, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 183, "col_offset": 44, "nodeName": "args", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 192, "col_offset": 35, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 43, "nodeName": "args", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 193, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "args", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "base_multilingual_architecture", "type": "Any"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "encoders", "type": "Any"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "decoders", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "add_args", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "parser", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "task", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "MultilingualTranslationTask", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "base_multilingual_architecture", "type": "Any"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "args", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "max_source_positions", "type": "int"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "max_target_positions", "type": "int"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "share_encoder_embeddings", "type": "bool"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "share_decoder_embeddings", "type": "bool"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "num_embeddings", "type": "int"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "emb", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "path", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "emb", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "shared_encoder_embed_tokens", "type": "None"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "shared_decoder_embed_tokens", "type": "None"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "shared_decoder_embed_tokens", "type": "Any"}, {"lineNumber": 106, "col_offset": 42, "nodeName": "shared_encoder_embed_tokens", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "share_decoder_input_output_embed", "type": "bool"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "share_encoder_embeddings", "type": "bool"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "share_decoder_embeddings", "type": "bool"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "lang_encoders", "type": "Dict[Any, fairseq.models.transformer.TransformerEncoder]"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "lang_decoders", "type": "Dict[Any, fairseq.models.transformer.TransformerDecoder]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "shared_encoder", "type": "None"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "shared_decoder", "type": "None"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "shared_encoder", "type": "fairseq.models.transformer.TransformerEncoder"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "shared_decoder", "type": "fairseq.models.transformer.TransformerDecoder"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "encoders", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "decoders", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "src", "type": "Any"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "tgt", "type": "Any"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 163, "col_offset": 39, "nodeName": "model_lang_pairs", "type": "Any"}, {"lineNumber": 163, "col_offset": 62, "nodeName": "src_langs", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 73, "nodeName": "tgt_langs", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "MultilingualTransformerModel", "type": "Any"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "encoders", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 167, "col_offset": 54, "nodeName": "decoders", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "copy", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "state_dict_subset", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "TransformerModel", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "model_lang_pairs", "type": "Any"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 73, "col_offset": 62, "nodeName": "model_lang_pairs", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "pad", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "Embedding", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "num_embeddings", "type": "int"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "embed_dim", "type": "Any"}, {"lineNumber": 83, "col_offset": 55, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "embed_dict", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "encoder_embed_dim", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "decoder_embed_dim", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "decoder_embed_path", "type": "Any"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "build_shared_embeddings", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "lang", "type": "Any"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "lang_encoders", "type": "Dict[Any, fairseq.models.transformer.TransformerEncoder]"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "lang_encoders", "type": "Dict[Any, fairseq.models.transformer.TransformerEncoder]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "lang", "type": "Any"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "lang_decoders", "type": "Dict[Any, fairseq.models.transformer.TransformerDecoder]"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "lang_decoders", "type": "Dict[Any, fairseq.models.transformer.TransformerDecoder]"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "get_encoder", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "get_decoder", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 162, "col_offset": 44, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 163, "col_offset": 39, "nodeName": "task", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "encoders", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "shared_encoder", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "decoders", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 165, "col_offset": 34, "nodeName": "shared_decoder", "type": "Any"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "models", "type": "Any"}, {"lineNumber": 176, "col_offset": 58, "nodeName": "strict", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "split", "type": "Any"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "task", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "split", "type": "Any"}, {"lineNumber": 73, "col_offset": 62, "nodeName": "task", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "parse_embedding", "type": "Callable[[Any], Dict[str, Any]]"}, {"lineNumber": 86, "col_offset": 51, "nodeName": "path", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "load_embedding", "type": "Callable"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "embed_dict", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 49, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 87, "col_offset": 61, "nodeName": "emb", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "decoder_embed_path", "type": "Any"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "encoder_embed_path", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "FairseqMultiModel", "type": "Type[fairseq.models.fairseq_model.FairseqMultiModel]"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "langs", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "encoder_embed_dim", "type": "Any"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "build_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "encoder_embed_path", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "build_shared_embeddings", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "build_shared_embeddings", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "shared_encoder_embed_tokens", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "encoder_embed_tokens", "type": "Any"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "shared_encoder_embed_tokens", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "lang_encoders", "type": "Dict[Any, fairseq.models.transformer.TransformerEncoder]"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "TransformerEncoder", "type": "Type[fairseq.models.transformer.TransformerEncoder]"}, {"lineNumber": 141, "col_offset": 57, "nodeName": "args", "type": "Any"}, {"lineNumber": 141, "col_offset": 81, "nodeName": "encoder_embed_tokens", "type": "Any"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "lang", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "shared_decoder_embed_tokens", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "decoder_embed_tokens", "type": "Any"}, {"lineNumber": 147, "col_offset": 43, "nodeName": "shared_decoder_embed_tokens", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "lang_decoders", "type": "Dict[Any, fairseq.models.transformer.TransformerDecoder]"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "TransformerDecoder", "type": "Type[fairseq.models.transformer.TransformerDecoder]"}, {"lineNumber": 152, "col_offset": 57, "nodeName": "args", "type": "Any"}, {"lineNumber": 152, "col_offset": 81, "nodeName": "decoder_embed_tokens", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "lang", "type": "Any"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "src_langs", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "tgt_langs", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 164, "col_offset": 52, "nodeName": "shared_encoder", "type": "Any"}, {"lineNumber": 164, "col_offset": 84, "nodeName": "get_encoder", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 96, "nodeName": "src", "type": "Any"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 165, "col_offset": 52, "nodeName": "shared_decoder", "type": "Any"}, {"lineNumber": 165, "col_offset": 84, "nodeName": "get_decoder", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 96, "nodeName": "tgt", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "state_dict_subset", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "utils", "type": "module"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "utils", "type": "module"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "task", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "task", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "FairseqMultiModel", "type": "Type[fairseq.models.fairseq_model.FairseqMultiModel]"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "src_langs", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "encoder_embed_dim", "type": "Any"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "build_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 46, "nodeName": "encoder_embed_path", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "FairseqMultiModel", "type": "Type[fairseq.models.fairseq_model.FairseqMultiModel]"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "tgt_langs", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "decoder_embed_dim", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "build_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 46, "nodeName": "decoder_embed_path", "type": "Any"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "build_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "encoder_embed_dim", "type": "Any"}, {"lineNumber": 139, "col_offset": 66, "nodeName": "encoder_embed_path", "type": "Any"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "lang", "type": "Any"}, {"lineNumber": 141, "col_offset": 63, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "build_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 42, "nodeName": "decoder_embed_dim", "type": "Any"}, {"lineNumber": 150, "col_offset": 66, "nodeName": "decoder_embed_path", "type": "Any"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "lang", "type": "Any"}, {"lineNumber": 152, "col_offset": 63, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "k", "type": "Any"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "task", "type": "Any"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 116, "col_offset": 46, "nodeName": "args", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "task", "type": "Any"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 126, "col_offset": 46, "nodeName": "args", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "args", "type": "Any"}, {"lineNumber": 139, "col_offset": 66, "nodeName": "args", "type": "Any"}, {"lineNumber": 141, "col_offset": 63, "nodeName": "task", "type": "Any"}, {"lineNumber": 141, "col_offset": 74, "nodeName": "lang", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 150, "col_offset": 42, "nodeName": "args", "type": "Any"}, {"lineNumber": 150, "col_offset": 66, "nodeName": "args", "type": "Any"}, {"lineNumber": 152, "col_offset": 63, "nodeName": "task", "type": "Any"}, {"lineNumber": 152, "col_offset": 74, "nodeName": "lang", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "task", "type": "Any"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "lang", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "task", "type": "Any"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "lang", "type": "Any"}]