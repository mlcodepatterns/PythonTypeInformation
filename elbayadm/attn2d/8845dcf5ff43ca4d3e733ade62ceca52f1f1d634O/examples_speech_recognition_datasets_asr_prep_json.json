[{"lineNumber": 24, "col_offset": 0, "nodeName": "process_sample", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "MILLISECONDS_TO_SECONDS", "type": "float"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "input", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "output", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "aud_path", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "token", "type": "str"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "lable", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "token", "type": "str"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "sp", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "tgt_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "labels", "type": "Dict[Any, Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "labels", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "Sample", "type": "Type[namedtuple_Sample_aud_path_utt_id]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "samples", "type": "List[namedtuple_Sample_aud_path_utt_id]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "utts", "type": "Dict[Any, Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "num_cpu", "type": "int"}, {"lineNumber": 95, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "si", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "ei", "type": "Any"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "info", "type": "Any"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "aud_path", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "input", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "input", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "encode_line", "type": "Any"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "token", "type": "str"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "output", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "output", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "output", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "utt_id", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "SentencePieceProcessor", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "Load", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "load", "type": "Callable"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "label", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "path", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "_", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "files", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "from_iterable", "type": "Callable"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "files", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "cpu_count", "type": "Callable[[], int]"}, {"lineNumber": 83, "col_offset": 71, "nodeName": "executor", "type": "concurrent.futures.thread.ThreadPoolExecutor"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "future_to_sample", "type": "Dict[concurrent.futures._base.Future[Any], namedtuple_Sample_aud_path_utt_id]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "future", "type": "concurrent.futures._base.Future[Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "output", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "torchaudio", "type": "Any"}, {"lineNumber": 28, "col_offset": 65, "nodeName": "MILLISECONDS_TO_SECONDS", "type": "float"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "EncodeAsPieces", "type": "Any"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "lable", "type": "Any"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "map", "type": "Callable"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "input", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "output", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "spm", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "sp", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "spm_model", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "Dictionary", "type": "Type[fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "utt_id", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "label", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "split", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "labels", "type": "Dict[Any, Any]"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "labels", "type": "Dict[Any, Any]"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "labels_path", "type": "Any"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "ThreadPoolExecutor", "type": "Type[concurrent.futures.thread.ThreadPoolExecutor]"}, {"lineNumber": 84, "col_offset": 115, "nodeName": "s", "type": "namedtuple_Sample_aud_path_utt_id"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "as_completed", "type": "Callable"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "future_to_sample", "type": "Dict[concurrent.futures._base.Future[Any], namedtuple_Sample_aud_path_utt_id]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "json", "type": "module"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "utts", "type": "Dict[Any, Any]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 28, "col_offset": 55, "nodeName": "rate", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "sp", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "FileType", "type": "Type[argparse.FileType]"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "FileType", "type": "Type[argparse.FileType]"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "FileType", "type": "Type[argparse.FileType]"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "FileType", "type": "Type[argparse.FileType]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "line", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "utt_id", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "walk", "type": "Callable"}, {"lineNumber": 71, "col_offset": 54, "nodeName": "path", "type": "Any"}, {"lineNumber": 71, "col_offset": 64, "nodeName": "path", "type": "Any"}, {"lineNumber": 71, "col_offset": 72, "nodeName": "audio_dirs", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "audio_format", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "utt_id", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "futures", "type": "module"}, {"lineNumber": 83, "col_offset": 59, "nodeName": "num_cpu", "type": "int"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "submit", "type": "Callable"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "process_sample", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 60, "nodeName": "aud_path", "type": "Any"}, {"lineNumber": 84, "col_offset": 90, "nodeName": "utt_id", "type": "Any"}, {"lineNumber": 84, "col_offset": 100, "nodeName": "sp", "type": "Any"}, {"lineNumber": 84, "col_offset": 104, "nodeName": "tgt_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 84, "col_offset": 121, "nodeName": "s", "type": "namedtuple_Sample_aud_path_utt_id"}, {"lineNumber": 84, "col_offset": 126, "nodeName": "samples", "type": "List[namedtuple_Sample_aud_path_utt_id]"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "futures", "type": "module"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "channels", "type": "Any"}, {"lineNumber": 28, "col_offset": 55, "nodeName": "si", "type": "Any"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 35, "col_offset": 59, "nodeName": "t", "type": "Any"}, {"lineNumber": 35, "col_offset": 64, "nodeName": "ids", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "argparse", "type": "module"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "argparse", "type": "module"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "argparse", "type": "module"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "argparse", "type": "module"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "os", "type": "module"}, {"lineNumber": 71, "col_offset": 72, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "utt_id", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "labels", "type": "Dict[Any, Any]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "concurrent", "type": "module"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "executor", "type": "concurrent.futures.thread.ThreadPoolExecutor"}, {"lineNumber": 84, "col_offset": 60, "nodeName": "s", "type": "namedtuple_Sample_aud_path_utt_id"}, {"lineNumber": 84, "col_offset": 72, "nodeName": "labels", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 90, "nodeName": "s", "type": "namedtuple_Sample_aud_path_utt_id"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "concurrent", "type": "module"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "result", "type": "Callable"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "si", "type": "Any"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "si", "type": "Any"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "t", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 75, "col_offset": 82, "nodeName": "f", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "f", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "samples", "type": "List[namedtuple_Sample_aud_path_utt_id]"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "Sample", "type": "Type[namedtuple_Sample_aud_path_utt_id]"}, {"lineNumber": 79, "col_offset": 61, "nodeName": "utt_id", "type": "Any"}, {"lineNumber": 84, "col_offset": 79, "nodeName": "utt_id", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "future", "type": "concurrent.futures._base.Future[Any]"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "exc", "type": "Exception"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "utts", "type": "Dict[Any, Any]"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "f", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "join", "type": "Callable"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "path", "type": "Any"}, {"lineNumber": 79, "col_offset": 57, "nodeName": "f", "type": "Any"}, {"lineNumber": 84, "col_offset": 79, "nodeName": "s", "type": "namedtuple_Sample_aud_path_utt_id"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "os", "type": "module"}]