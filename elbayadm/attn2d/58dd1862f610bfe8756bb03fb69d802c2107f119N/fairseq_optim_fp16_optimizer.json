[{"lineNumber": 13, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "FairseqOptimizer", "type": "Type[fairseq.optim.fairseq_optimizer.FairseqOptimizer]"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "optim", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "tolerance", "type": "Any"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "tolerance", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "_last_rescale_iter", "type": "int"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "_overflows_since_rescale", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "iter_since_rescale", "type": "int"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "overflow", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "itr", "type": "Iterator[Any]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "fp16_optimizer", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "optimizer_config", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "_grads_are_scaled", "type": "bool"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "_grads_are_scaled", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "_grads_are_scaled", "type": "bool"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "_grads_are_scaled", "type": "bool"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "_iter", "type": "int"}, {"lineNumber": 26, "col_offset": 42, "nodeName": "_last_rescale_iter", "type": "int"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "_iter", "type": "int"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "_overflows_since_rescale", "type": "int"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "pct_overflow", "type": "float"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "params", "type": "Any"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "ConvertToFP32"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "ConvertToFP32"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "map", "type": "Callable"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "convert_to_fp32", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "params", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "itr", "type": "Iterator[Any]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "self", "type": "ConvertToFP32"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "fp16_scale_window", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "build_optimizer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "params", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "fp16_optimizer", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "get_lr", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "set_lr", "type": "Any"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "lr", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "wrap_optimizer_", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 163, "col_offset": 47, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 163, "col_offset": 59, "nodeName": "optimizer_overrides", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "unwrap_optimizer_", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "_grads_are_scaled", "type": "bool"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "_unscale_grads", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "clip_grad_norm", "type": "Any"}, {"lineNumber": 190, "col_offset": 58, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "has_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "_unscale_grads", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "wrap_optimizer_", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 215, "col_offset": 36, "nodeName": "closure", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "unwrap_optimizer_", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 40, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 26, "col_offset": 42, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "_overflows_since_rescale", "type": "int"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "pct_overflow", "type": "float"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "tolerance", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "_last_rescale_iter", "type": "int"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "_iter", "type": "int"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "_overflows_since_rescale", "type": "int"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "_last_rescale_iter", "type": "int"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "_iter", "type": "int"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 43, "col_offset": 53, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "float", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "ConvertToFP32", "type": "Type[ConvertToFP32]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "group", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "self", "type": "ConvertToFP32"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "self", "type": "ConvertToFP32"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "next", "type": "Callable"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "itr", "type": "Iterator[Any]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "fp16_init_scale", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "fp16_scale_tolerance", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "optim", "type": "module"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "ConvertToFP32", "type": "Type[ConvertToFP32]"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "ConvertToFP32", "type": "Type[ConvertToFP32]"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "_unscale_grads", "type": "Callable[..., Any]"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 185, "col_offset": 50, "nodeName": "c", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "OverflowError", "type": "Type[OverflowError]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "ConvertToFP32", "type": "Type[ConvertToFP32]"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "ConvertToFP32", "type": "Type[ConvertToFP32]"}, {"lineNumber": 218, "col_offset": 40, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 30, "col_offset": 59, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 30, "col_offset": 65, "nodeName": "iter_since_rescale", "type": "int"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 35, "col_offset": 55, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "float", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "group", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "half", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "grad", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "self", "type": "ConvertToFP32"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "update_freq", "type": "Any"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "distributed_world_size", "type": "Any"}, {"lineNumber": 117, "col_offset": 65, "nodeName": "update_freq", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 176, "col_offset": 50, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 176, "col_offset": 67, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "FloatingPointError", "type": "Type[FloatingPointError]"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 218, "col_offset": 40, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "_iter", "type": "int"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 35, "col_offset": 55, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "half", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 117, "col_offset": 65, "nodeName": "args", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 176, "col_offset": 67, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 204, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 204, "col_offset": 64, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "p", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 176, "col_offset": 67, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 204, "col_offset": 64, "nodeName": "scaler", "type": "DynamicLossScaler"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "grad", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 204, "col_offset": 64, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "p", "type": "Any"}]