[{"lineNumber": 71, "col_offset": 0, "nodeName": "transformer_lm_megatron", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "transformer_lm_megatron_11b", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "DEFAULT_MAX_TARGET_POSITIONS", "type": "int"}, {"lineNumber": 29, "col_offset": 44, "nodeName": "TransformerLanguageModel", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "build_model", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "has_megatron_submodule", "type": "bool"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "decoder_embed_dim", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "decoder_ffn_embed_dim", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "decoder_layers", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "decoder_attention_heads", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "attention_dropout", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "decoder_embed_dim", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "decoder_ffn_embed_dim", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "decoder_layers", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "decoder_attention_heads", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "attention_dropout", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "activation_fn", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "ModuleNotFoundError", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "has_megatron_submodule", "type": "bool"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "decoder_layers_to_keep", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "character_embeddings", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "embed_tokens", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "embed_tokens", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "args", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "base_lm_architecture", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "args", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "base_lm_architecture", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "has_megatron_submodule", "type": "bool"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "base_lm_architecture", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "decoder_layers", "type": "int"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "max_target_positions", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "adaptive_input", "type": "Any"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "ModelParallelTransformerDecoder", "type": "Type[fairseq.model_parallel.models.transformer.ModelParallelTransformerDecoder]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "embed_tokens", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "cls", "type": "Type[Any]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "decoder", "type": "fairseq.model_parallel.models.transformer.ModelParallelTransformerDecoder"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "VocabParallelEmbedding", "type": "Any"}, {"lineNumber": 67, "col_offset": 63, "nodeName": "embed_dim", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 48, "nodeName": "args", "type": "Any"}, {"lineNumber": 48, "col_offset": 75, "nodeName": "DEFAULT_MAX_TARGET_POSITIONS", "type": "int"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "args", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "embed_tokens", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "task", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "normal_", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "constant_", "type": "Any"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 67, "col_offset": 74, "nodeName": "pad", "type": "Any"}, {"lineNumber": 67, "col_offset": 104, "nodeName": "_vocab_init", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "split", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "build_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "source_dictionary", "type": "Any"}, {"lineNumber": 55, "col_offset": 77, "nodeName": "decoder_input_dim", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "init", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "init", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 67, "col_offset": 74, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "decoder_layers_to_keep", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "cls", "type": "Type[Any]"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "task", "type": "Any"}, {"lineNumber": 55, "col_offset": 77, "nodeName": "args", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "embed_dim", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "args", "type": "Any"}]