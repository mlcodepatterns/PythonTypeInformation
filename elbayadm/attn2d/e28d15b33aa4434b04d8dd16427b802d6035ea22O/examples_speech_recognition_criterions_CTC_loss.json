[{"lineNumber": 24, "col_offset": 0, "nodeName": "arr_to_toks", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "compute_ctc_uer", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "FairseqCriterion", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "add_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "forward", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "aggregate_logging_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 20, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "setLevel", "type": "Callable[[Union[int, str, unicode]], None]"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "DEBUG", "type": "int"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "toks", "type": "List[examples.speech_recognition.utils.wer_utils.Token]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "arr", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "toks", "type": "List[examples.speech_recognition.utils.wer_utils.Token]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "batch_errors", "type": "float"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "batch_total", "type": "float"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "b", "type": "int"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "logging", "type": "module"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "predicted", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "predicted", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "nonblanks", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "predicted", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "predicted", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "nonblanks", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "codes", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "batch_total", "type": "float"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "batch_errors", "type": "float"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "batch_total", "type": "float"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "blank_idx", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "pad_idx", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "task", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "task", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "net_output", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "lprobs", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "batch_first", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "device", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "target_lengths", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "batch_first", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "targets_flat", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "lprobs", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "sentence_avg", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "loss_sum", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "ntokens", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "nsentences", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "errors", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "total", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "nframes", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "agg_output", "type": "Dict[str, Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "align", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "target", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "task", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "index", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "pad", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "get_normalized_probs", "type": "Any"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "net_output", "type": "Any"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "lprobs", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "batch_first", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "bsz", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "bsz", "type": "Any"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "encoder_padding_mask_to_lengths", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 128, "col_offset": 61, "nodeName": "bsz", "type": "Any"}, {"lineNumber": 128, "col_offset": 66, "nodeName": "device", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "sample", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "lprobs", "type": "Any"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "pad_idx", "type": "Any"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "masked_select", "type": "Any"}, {"lineNumber": 138, "col_offset": 45, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "ctc_loss", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "lprobs", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "targets_flat", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "input_lengths", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "target_lengths", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "compute_ctc_uer", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "lprobs", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "targets", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "input_lengths", "type": "Any"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "target_lengths", "type": "Any"}, {"lineNumber": 152, "col_offset": 60, "nodeName": "blank_idx", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "use_source_side_sample_size", "type": "Any"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "errors", "type": "float"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "total", "type": "float"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "logging_output", "type": "Dict[str, Any]"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "ntokens", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "nsentences", "type": "Any"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "nframes", "type": "Any"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "ntokens", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "toks", "type": "List[examples.speech_recognition.utils.wer_utils.Token]"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "Token", "type": "Type[examples.speech_recognition.utils.wer_utils.Token]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "logprobs", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "p", "type": "Tuple[Any, Iterator[Any]]"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "p", "type": "Tuple[Any, Iterator[Any]]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "blank_idx", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "arr_to_toks", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "predicted", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "arr_to_toks", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "target", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "match", "type": "int"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "batch_errors", "type": "float"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 107, "col_offset": 66, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "lprobs", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "size", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "size", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "net_output", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "net_output", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "targets", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "F", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "blank_idx", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "lprobs", "type": "Any"}, {"lineNumber": 152, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 164, "col_offset": 45, "nodeName": "reduce", "type": "Any"}, {"lineNumber": 164, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "agg_output", "type": "Dict[str, Any]"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "groupby", "type": "Callable"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "predicted", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "p", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "EditDistance", "type": "Type[examples.speech_recognition.utils.wer_utils.EditDistance]"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "Code", "type": "Type[examples.speech_recognition.utils.wer_utils.Code]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "task", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "task", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "sample", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "lprobs", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "lprobs", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "lprobs", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "lprobs", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "lprobs", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "sample", "type": "Any"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "item", "type": "Any"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 164, "col_offset": 57, "nodeName": "loss", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "log", "type": "Any"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 178, "col_offset": 48, "nodeName": "log", "type": "Any"}, {"lineNumber": 178, "col_offset": 55, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 179, "col_offset": 54, "nodeName": "log", "type": "Any"}, {"lineNumber": 179, "col_offset": 61, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 180, "col_offset": 56, "nodeName": "log", "type": "Any"}, {"lineNumber": 180, "col_offset": 63, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 181, "col_offset": 46, "nodeName": "log", "type": "Any"}, {"lineNumber": 181, "col_offset": 53, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 182, "col_offset": 44, "nodeName": "log", "type": "Any"}, {"lineNumber": 182, "col_offset": 51, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 183, "col_offset": 48, "nodeName": "log", "type": "Any"}, {"lineNumber": 183, "col_offset": 55, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "loss_sum", "type": "Any"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 185, "col_offset": 45, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "min", "type": "Callable"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "loss_sum", "type": "Any"}, {"lineNumber": 193, "col_offset": 48, "nodeName": "ntokens", "type": "Any"}, {"lineNumber": 193, "col_offset": 58, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "targets", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "nonblanks", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "sample", "type": "Any"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "utils", "type": "module"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "loss", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "sample", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "log", "type": "Any"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "log", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "log", "type": "Any"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "log", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "log", "type": "Any"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "log", "type": "Any"}, {"lineNumber": 185, "col_offset": 45, "nodeName": "math", "type": "module"}, {"lineNumber": 190, "col_offset": 48, "nodeName": "total", "type": "Any"}, {"lineNumber": 193, "col_offset": 58, "nodeName": "math", "type": "module"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "b", "type": "int"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "target_lengths", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 159, "col_offset": 40, "nodeName": "input_lengths", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "errors", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "logprobs", "type": "Any"}, {"lineNumber": 51, "col_offset": 45, "nodeName": "b", "type": "int"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "sample", "type": "Any"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "b", "type": "int"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "input_lengths", "type": "Any"}, {"lineNumber": 50, "col_offset": 48, "nodeName": "b", "type": "int"}]