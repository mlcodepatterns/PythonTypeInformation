[{"lineNumber": 13, "col_offset": 0, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "cli_main", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "use_fp16", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "fp16", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "subset", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "override_parser", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "override_args", "type": "Any"}, {"lineNumber": 98, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "import_user_module", "type": "Callable[[Any], None]"}, {"lineNumber": 14, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 19, "col_offset": 7, "nodeName": "override_args", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "overrides", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "overrides", "type": "None"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "load_model_ensemble_and_task", "type": "Callable[..., Tuple[List[Any], Any, Any]]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "use_fp16", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 10, "nodeName": "model_args", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "build_criterion", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "model_args", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "eval", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "log_outputs", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "log_output", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "get_validation_parser", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "parse_args_and_arch", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "parser", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "get_validation_parser", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "parse_args_and_arch", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "override_parser", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "args", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "override_args", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "cli_main", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "utils", "type": "module"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 17, "col_offset": 49, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "override_args", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 26, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 26, "col_offset": 46, "nodeName": "path", "type": "Any"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "checkpoint_utils", "type": "module"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "path", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "overrides", "type": "Optional[Dict[Union[str, Any], Any]]"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "task", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "valid_subset", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "build_progress_bar", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "itr", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "progress", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "aggregate_logging_outputs", "type": "Any"}, {"lineNumber": 82, "col_offset": 52, "nodeName": "log_outputs", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 65, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "print", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "log_output", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "options", "type": "module"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "options", "type": "module"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "options", "type": "module"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "options", "type": "module"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 17, "col_offset": 49, "nodeName": "args", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "overrides", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 46, "nodeName": "args", "type": "Any"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "args", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "half", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "load_dataset", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "subset", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "subset", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "progress_bar", "type": "module"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "sample", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "_loss", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "_sample_size", "type": "Any"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "log_output", "type": "Any"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "valid_step", "type": "Any"}, {"lineNumber": 78, "col_offset": 62, "nodeName": "sample", "type": "Any"}, {"lineNumber": 78, "col_offset": 70, "nodeName": "model", "type": "Any"}, {"lineNumber": 78, "col_offset": 77, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "log", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "log_output", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "log_output", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "task", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "progress", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "subset", "type": "Any"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 38, "nodeName": "override_args", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "task", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "get_batch_iterator", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "subset", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "move_to_cuda", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "sample", "type": "Any"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "task", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "progress", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "log_outputs", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "subset", "type": "Any"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "task", "type": "Any"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "max_tokens", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "max_sentences", "type": "Any"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "skip_invalid_size_inputs_valid_test", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "required_batch_size_multiple", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "seed", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "num_workers", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "utils", "type": "module"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "resolve_max_positions", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "args", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "args", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "utils", "type": "module"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "max_positions", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "task", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "max_positions", "type": "Any"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "m", "type": "Any"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "m", "type": "Any"}]