[{"lineNumber": 16, "col_offset": 17, "nodeName": "Module", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "Module", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "Module", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "weight", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "transpose", "type": "bool"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "transpose", "type": "bool"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "weights", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "word_proj", "type": "TiedLinear"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "class_proj", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "out_dim", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "inp_sz", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "factor", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "factor", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "lsm", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "buggy_offset", "type": "int"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "extra_denom", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "tail", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "version_name", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "new_target", "type": "List[Optional[Any]]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "target_idxs", "type": "List[Optional[Any]]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "head_y", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "head_sz", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "tail_priors", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TiedLinear"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TiedLinear"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "linear", "type": "Any"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "input", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "tied_emb", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "size", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TiedHeadModule"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "TiedLinear", "type": "Type[TiedLinear]"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "tied_emb", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TiedHeadModule"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TiedHeadModule"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "register_buffer", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "new", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "inp_sz", "type": "Any"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "out_dim", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "word_proj", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "class_proj", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "LogSoftmax", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "adaptive_inputs", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "head", "type": "TiedHeadModule"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "head", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "_make_tail", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "adaptive_inputs", "type": "Any"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "tie_proj", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "apply", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "init_weights", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "register_buffer", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "fix_exponent", "type": "bool"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "dim", "type": "int"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "version_name", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "buggy_offset", "type": "int"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "view", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "new_target", "type": "List[Optional[Any]]"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "target_idxs", "type": "List[Optional[Any]]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "view", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "input", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "new_target", "type": "List[Optional[Any]]"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "target_idxs", "type": "List[Optional[Any]]"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "adapt_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 52, "nodeName": "target", "type": "Any"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "new_target", "type": "List[Optional[Any]]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "bsz", "type": "Any"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "length", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "dim", "type": "Any"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "size", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "view", "type": "Any"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "dim", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "target", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "target_idxs", "type": "None"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "head", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "new_zeros", "type": "Any"}, {"lineNumber": 193, "col_offset": 52, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "lsm", "type": "Any"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "head_y", "type": "Any"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "clone", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "start", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "end", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "view", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "bsz", "type": "Any"}, {"lineNumber": 213, "col_offset": 40, "nodeName": "length", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "F", "type": "Any"}, {"lineNumber": 23, "col_offset": 50, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 23, "col_offset": 70, "nodeName": "weight", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TiedHeadModule"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "tied_emb", "type": "Any"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "word_proj", "type": "TiedLinear"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "self", "type": "TiedHeadModule"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TiedHeadModule"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "functools", "type": "module"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "operator", "type": "module"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "_float_tensor", "type": "Any"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "self", "type": "TiedHeadModule"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "self", "type": "TiedHeadModule"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "view", "type": "Any"}, {"lineNumber": 47, "col_offset": 60, "nodeName": "inp_sz", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "self", "type": "TiedHeadModule"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "view", "type": "Any"}, {"lineNumber": 48, "col_offset": 61, "nodeName": "inp_sz", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "TiedHeadModule", "type": "Type[TiedHeadModule]"}, {"lineNumber": 79, "col_offset": 76, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "tied_proj", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "tie_proj", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "proj", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "proj", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "m", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "_make_tail", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "clone", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "mul", "type": "Any"}, {"lineNumber": 144, "col_offset": 55, "nodeName": "buggy_offset", "type": "int"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 164, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 165, "col_offset": 58, "nodeName": "training", "type": "Any"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "head", "type": "Any"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "input", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "target_idxs", "type": "List[Optional[Any]]"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "_", "type": "List[Optional[Any]]"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "target_idxs", "type": "List[Optional[Any]]"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "adapt_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 47, "nodeName": "target", "type": "Any"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "head_y", "type": "Any"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "size", "type": "Any"}, {"lineNumber": 193, "col_offset": 52, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "tail", "type": "Any"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "tail", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "target_idxs", "type": "Optional[List[Optional[Any]]]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "tail_out", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 23, "col_offset": 50, "nodeName": "self", "type": "TiedLinear"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "t", "type": "Any"}, {"lineNumber": 23, "col_offset": 70, "nodeName": "self", "type": "TiedLinear"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "self", "type": "TiedHeadModule"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "input", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "self", "type": "TiedHeadModule"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "input", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "input", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "weights_for_band", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "m", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "xavier_uniform_", "type": "Any"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "weight", "type": "Any"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "adaptive_inputs", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "proj", "type": "TiedLinear"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "proj", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "dim", "type": "int"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "tail", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "version_name", "type": "Any"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 143, "col_offset": 49, "nodeName": "lt", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "new_target", "type": "List[Optional[Any]]"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "mask", "type": "Any"}, {"lineNumber": 144, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 144, "col_offset": 55, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 164, "col_offset": 44, "nodeName": "input", "type": "Any"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 165, "col_offset": 58, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "target_idxs", "type": "List[Optional[Any]]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "input", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "head_sz", "type": "Any"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 200, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "add_", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "idxs", "type": "Optional[Any]"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "tail_out", "type": "Any"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "self", "type": "TiedHeadModule"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "self", "type": "TiedHeadModule"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "adaptive_inputs", "type": "Any"}, {"lineNumber": 79, "col_offset": 87, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 91, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "m", "type": "Any"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "TiedLinear", "type": "Type[TiedLinear]"}, {"lineNumber": 86, "col_offset": 78, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 86, "col_offset": 89, "nodeName": "m", "type": "Any"}, {"lineNumber": 86, "col_offset": 92, "nodeName": "TiedHeadModule", "type": "Type[TiedHeadModule]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "init", "type": "Any"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "m", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "factor", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "TiedLinear", "type": "Type[TiedLinear]"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "tied_proj", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "tied_emb", "type": "Any"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "TiedLinear", "type": "Type[TiedLinear]"}, {"lineNumber": 118, "col_offset": 54, "nodeName": "tied_emb", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "ge", "type": "Any"}, {"lineNumber": 143, "col_offset": 49, "nodeName": "target", "type": "Any"}, {"lineNumber": 143, "col_offset": 59, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "target_idxs", "type": "List[Optional[Any]]"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "new_target", "type": "List[Optional[Any]]"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "add", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "target_idxs", "type": "List[Optional[Any]]"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "new_target", "type": "List[Optional[Any]]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "tail_out", "type": "Any"}, {"lineNumber": 205, "col_offset": 44, "nodeName": "input", "type": "Any"}, {"lineNumber": 206, "col_offset": 66, "nodeName": "tail_priors", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "target_idxs", "type": "Optional[List[Optional[Any]]]"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "target_idxs", "type": "Optional[List[Optional[Any]]]"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "add_", "type": "Any"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "self", "type": "TiedLinear"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 100, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 60, "nodeName": "extra_denom", "type": "int"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "size", "type": "Any"}, {"lineNumber": 109, "col_offset": 56, "nodeName": "size", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "target", "type": "Any"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 143, "col_offset": 59, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "tail", "type": "Any"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "start", "type": "Any"}, {"lineNumber": 204, "col_offset": 46, "nodeName": "end", "type": "Any"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "tail", "type": "Any"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "start", "type": "Any"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "end", "type": "Any"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "lsm", "type": "Any"}, {"lineNumber": 206, "col_offset": 51, "nodeName": "tail_out", "type": "Any"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 208, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "tail_out", "type": "Any"}, {"lineNumber": 211, "col_offset": 69, "nodeName": "tail_priors", "type": "Any"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "tied_proj", "type": "Any"}, {"lineNumber": 109, "col_offset": 56, "nodeName": "tied_proj", "type": "Any"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 143, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "nonzero", "type": "Any"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "target", "type": "Any"}, {"lineNumber": 148, "col_offset": 52, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "input", "type": "Any"}, {"lineNumber": 172, "col_offset": 65, "nodeName": "target_idxs", "type": "List[Optional[Any]]"}, {"lineNumber": 197, "col_offset": 52, "nodeName": "buggy_offset", "type": "int"}, {"lineNumber": 197, "col_offset": 71, "nodeName": "head_sz", "type": "Any"}, {"lineNumber": 197, "col_offset": 81, "nodeName": "buggy_offset", "type": "int"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 206, "col_offset": 81, "nodeName": "i", "type": "int"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "idxs", "type": "Any"}, {"lineNumber": 209, "col_offset": 43, "nodeName": "start", "type": "Any"}, {"lineNumber": 209, "col_offset": 49, "nodeName": "end", "type": "Any"}, {"lineNumber": 210, "col_offset": 31, "nodeName": "tail", "type": "Any"}, {"lineNumber": 210, "col_offset": 44, "nodeName": "input", "type": "Any"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "idxs", "type": "Any"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "start", "type": "Any"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "end", "type": "Any"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "lsm", "type": "Any"}, {"lineNumber": 211, "col_offset": 54, "nodeName": "tail_out", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "mask", "type": "Any"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "mask", "type": "Any"}, {"lineNumber": 148, "col_offset": 52, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 148, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 172, "col_offset": 77, "nodeName": "i", "type": "int"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 197, "col_offset": 52, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 197, "col_offset": 81, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 210, "col_offset": 31, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 210, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 210, "col_offset": 50, "nodeName": "idxs", "type": "Any"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "self", "type": "AdaptiveSoftmax"}, {"lineNumber": 211, "col_offset": 81, "nodeName": "idxs", "type": "Any"}, {"lineNumber": 211, "col_offset": 87, "nodeName": "i", "type": "int"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "self", "type": "AdaptiveSoftmax"}]