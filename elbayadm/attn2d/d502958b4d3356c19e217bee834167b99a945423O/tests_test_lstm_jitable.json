[{"lineNumber": 37, "col_offset": 0, "nodeName": "get_dummy_dictionary", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "get_dummy_task_and_parser", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "DEFAULT_TEST_VOCAB_SIZE", "type": "int"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "FairseqTask", "type": "Type[fairseq.tasks.fairseq_task.FairseqTask]"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "DEFAULT_TEST_VOCAB_SIZE", "type": "int"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "dummy_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "dummy_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 109, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "dictionary", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "src_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "dictionary", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "tgt_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "dictionary", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "src_dict", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "Dictionary", "type": "Type[fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "id", "type": "int"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "add_args", "type": "Callable[[Any], None]"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "criterion", "type": "str"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "scripted_model", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "criterion", "type": "str"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "scripted_model", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "iter", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "seq_len_tensor", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "num_samples_tensor", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "main", "type": "Type[unittest.main.TestProgram]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "get_dummy_dictionary", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 54, "col_offset": 60, "nodeName": "SUPPRESS", "type": "str"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "DummyTask", "type": "Type[DummyTask]"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "DummyTask", "type": "Type[DummyTask]"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "f", "type": "IO[bytes]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "get_dummy_task_and_parser", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "add_args", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "build_model", "type": "Any"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "script", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_test_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "scripted_model", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "get_dummy_task_and_parser", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "add_args", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "build_model", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "script", "type": "Any"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "source_dictionary", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "randint", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "randint", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "iter", "type": "int"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "src_token", "type": "Tuple[Any]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "prev_output_token", "type": "Tuple[Any]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "scripted_result", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "dummy_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "id", "type": "int"}, {"lineNumber": 54, "col_offset": 60, "nodeName": "argparse", "type": "module"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "name", "type": "str"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "name", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestJitLSTMModel"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestJitLSTMModel"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "LSTMModel", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "LSTMModel", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "jit", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestJitLSTMModel"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "LSTMModel", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "LSTMModel", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "jit", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "scripted_model", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "iter", "type": "int"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 94, "col_offset": 51, "nodeName": "iter", "type": "int"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "seq_len_tensor", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "num_samples_tensor", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "randint", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "_", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "sort", "type": "Any"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "scripted_model", "type": "Any"}, {"lineNumber": 105, "col_offset": 59, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "assertTensorEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "assertTensorEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "dictionary", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "scripted_module", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "f", "type": "IO[bytes]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "jit", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "f", "type": "IO[bytes]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "randint", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "idx", "type": "int"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 99, "col_offset": 55, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "randint", "type": "Any"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "idx", "type": "int"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "src_token", "type": "Tuple[Any]"}, {"lineNumber": 104, "col_offset": 54, "nodeName": "prev_output_token", "type": "Tuple[Any]"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "src_token", "type": "Tuple[Any]"}, {"lineNumber": 105, "col_offset": 72, "nodeName": "prev_output_token", "type": "Tuple[Any]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "self", "type": "TestJitLSTMModel"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "result", "type": "Any"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "scripted_result", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "TestJitLSTMModel"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "result", "type": "Any"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "scripted_result", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "long", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 98, "col_offset": 60, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 103, "col_offset": 55, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "ne", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "t2", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "t1", "type": "Any"}]