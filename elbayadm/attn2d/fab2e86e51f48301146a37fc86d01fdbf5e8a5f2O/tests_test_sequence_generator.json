[{"lineNumber": 16, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "TestSequenceGeneratorBase", "type": "Type[TestSequenceGeneratorBase]"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "TestSequenceGeneratorBase", "type": "Type[TestSequenceGeneratorBase]"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "TestSequenceGeneratorBase", "type": "Type[TestSequenceGeneratorBase]"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 371, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "normalized", "type": "bool"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "w1", "type": "int"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "w2", "type": "int"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "unk", "type": "float"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "w1", "type": "int"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "w2", "type": "int"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "unk", "type": "float"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "low_sampling_topp", "type": "float"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "high_sampling_topp", "type": "float"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "normalized", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertTensorEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 58, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "sequence_generator_setup", "type": "Callable[[], Tuple[Any, int, int, Any, Any, Any]]"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 91, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 108, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 109, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 125, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 126, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "dummy_dictionary", "type": "Callable[..., fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "eos", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 195, "col_offset": 57, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 195, "col_offset": 63, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 195, "col_offset": 66, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "build_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "dummy_dictionary", "type": "Callable[..., fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "eos", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 247, "col_offset": 39, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 277, "col_offset": 57, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 277, "col_offset": 63, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 277, "col_offset": 66, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "build_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 284, "col_offset": 28, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 295, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 296, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "eos", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "w1", "type": "int"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 324, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 325, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 325, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 325, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 325, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "tensorEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 354, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 19, "col_offset": 47, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 19, "col_offset": 64, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "numel", "type": "Any"}, {"lineNumber": 24, "col_offset": 45, "nodeName": "numel", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 56, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 59, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 62, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 62, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 62, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 65, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 78, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 78, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 84, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 89, "col_offset": 78, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 91, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 93, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 94, "col_offset": 61, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 96, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 96, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 96, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 97, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 99, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 100, "col_offset": 66, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 102, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 102, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 102, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 102, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 103, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 107, "col_offset": 78, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 108, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 109, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 111, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 111, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 112, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 114, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 114, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 115, "col_offset": 61, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 117, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 117, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 118, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 121, "col_offset": 66, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 126, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 131, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 134, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 134, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 137, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "pad", "type": "Callable[[], Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "unk", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "argparse", "type": "module"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "TestTranslationTask", "type": "Type[tests.utils.TestTranslationTask]"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 203, "col_offset": 46, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 203, "col_offset": 78, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 204, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 207, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 207, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 210, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 210, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 210, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 213, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 213, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 213, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 216, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 216, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 216, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "pad", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "unk", "type": "Callable[[], Any]"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "argparse", "type": "module"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 247, "col_offset": 39, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "TestTranslationTask", "type": "Type[tests.utils.TestTranslationTask]"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 284, "col_offset": 28, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "low_sampling_topp", "type": "float"}, {"lineNumber": 291, "col_offset": 30, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 295, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 298, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 298, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 298, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 301, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 301, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 301, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 304, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 304, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 304, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 307, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 307, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 307, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 313, "col_offset": 49, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "high_sampling_topp", "type": "float"}, {"lineNumber": 320, "col_offset": 30, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 321, "col_offset": 31, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 324, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 325, "col_offset": 22, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 325, "col_offset": 32, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 325, "col_offset": 41, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 351, "col_offset": 32, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 351, "col_offset": 48, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 351, "col_offset": 65, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "almostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 355, "col_offset": 59, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "numel", "type": "Any"}, {"lineNumber": 357, "col_offset": 33, "nodeName": "numel", "type": "Any"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 361, "col_offset": 43, "nodeName": "lenpen", "type": "Any"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "pos_probs", "type": "List[float]"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "numel", "type": "Any"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 203, "col_offset": 46, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 203, "col_offset": 78, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 204, "col_offset": 36, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 207, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 210, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 213, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 235, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 291, "col_offset": 30, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 295, "col_offset": 36, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 298, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 299, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 302, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 304, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 307, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 308, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 313, "col_offset": 49, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 320, "col_offset": 30, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 321, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 324, "col_offset": 36, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 329, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 334, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 335, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 339, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 354, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 354, "col_offset": 39, "nodeName": "pos_probs", "type": "Any"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 355, "col_offset": 32, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "numel", "type": "Any"}, {"lineNumber": 362, "col_offset": 19, "nodeName": "score", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 365, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 365, "col_offset": 43, "nodeName": "max", "type": "Any"}, {"lineNumber": 368, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 368, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 368, "col_offset": 42, "nodeName": "sum", "type": "Any"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 24, "col_offset": 45, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "long", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "unk", "type": "float"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "unk", "type": "float"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 235, "col_offset": 13, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 254, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 262, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 262, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 264, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 264, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 264, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 265, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 265, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 271, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 272, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 273, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 327, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 327, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 327, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 328, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 328, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 328, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 329, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 333, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 333, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 333, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 334, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 334, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 334, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 334, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 335, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 339, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 339, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 339, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 339, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 340, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 340, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 340, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 345, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 345, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 345, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 346, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 346, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 346, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 354, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 357, "col_offset": 33, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 362, "col_offset": 27, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "t1", "type": "Any"}, {"lineNumber": 365, "col_offset": 28, "nodeName": "t2", "type": "Any"}, {"lineNumber": 368, "col_offset": 15, "nodeName": "t1", "type": "Any"}, {"lineNumber": 368, "col_offset": 28, "nodeName": "t2", "type": "Any"}, {"lineNumber": 327, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 328, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 329, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 330, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 333, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 334, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 335, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 336, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 339, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 340, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 341, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 342, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 345, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 346, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 347, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 348, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 365, "col_offset": 43, "nodeName": "abs", "type": "Any"}, {"lineNumber": 368, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "t2", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "ne", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "t2", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 365, "col_offset": 43, "nodeName": "t1", "type": "Any"}, {"lineNumber": 365, "col_offset": 48, "nodeName": "t2", "type": "Any"}, {"lineNumber": 368, "col_offset": 42, "nodeName": "ne", "type": "Any"}, {"lineNumber": 368, "col_offset": 48, "nodeName": "t2", "type": "Any"}, {"lineNumber": 368, "col_offset": 42, "nodeName": "t1", "type": "Any"}]