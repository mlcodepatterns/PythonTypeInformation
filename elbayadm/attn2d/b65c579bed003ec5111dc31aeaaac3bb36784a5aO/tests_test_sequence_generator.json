[{"lineNumber": 18, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 255, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "normalized", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "w1", "type": "int"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "w2", "type": "int"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "unk", "type": "float"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "encoder_input", "type": "Dict[str, Any]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "normalized", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "sequence_generator_setup", "type": "Callable[[], Tuple[Any, int, int, Any, Any, Any]]"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 25, "col_offset": 53, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "encoder_input", "type": "Dict[str, Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 31, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "encoder_input", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 50, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 66, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "encoder_input", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 68, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "encoder_input", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 86, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 101, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "encoder_input", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 103, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 118, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "encoder_input", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 120, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertTensorEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 58, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "dummy_dictionary", "type": "Callable[..., fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "eos", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 209, "col_offset": 57, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 209, "col_offset": 63, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 209, "col_offset": 66, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "build_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 218, "col_offset": 39, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 218, "col_offset": 71, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "encoder_input", "type": "Dict[str, Any]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 220, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 220, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertTensorEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 239, "col_offset": 58, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 31, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 36, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 36, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 39, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 39, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 39, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 39, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 42, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 50, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 55, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 55, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 61, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 66, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 66, "col_offset": 79, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 68, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 71, "col_offset": 61, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 73, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 74, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 77, "col_offset": 66, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 79, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 79, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 80, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 84, "col_offset": 79, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 86, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 88, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 88, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 89, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 92, "col_offset": 61, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 94, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 95, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 97, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 98, "col_offset": 66, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 101, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 103, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 105, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 108, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 111, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 114, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 114, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 114, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 118, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 120, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 122, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 125, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 125, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 125, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 125, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 128, "col_offset": 56, "nodeName": "w2", "type": "int"}, {"lineNumber": 128, "col_offset": 60, "nodeName": "eos", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 131, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 131, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 135, "col_offset": 64, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "numel", "type": "Any"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "numel", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "lenpen", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 147, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "pad", "type": "Callable[[], Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "unk", "type": "Callable[[], Any]"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "argparse", "type": "module"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "TestTranslationTask", "type": "Type[tests.utils.TestTranslationTask]"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 218, "col_offset": 39, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 218, "col_offset": 71, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 220, "col_offset": 32, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 220, "col_offset": 41, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 222, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 222, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 225, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 225, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 225, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 228, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 228, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 228, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 231, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 231, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 231, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 235, "col_offset": 47, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 235, "col_offset": 64, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 239, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "numel", "type": "Any"}, {"lineNumber": 240, "col_offset": 45, "nodeName": "numel", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "lenpen", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 244, "col_offset": 24, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 251, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "pos_probs", "type": "Any"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "numel", "type": "Any"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 147, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 228, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 232, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 235, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "pos_probs", "type": "Any"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "numel", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 251, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "long", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 192, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "unk", "type": "float"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "unk", "type": "float"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 240, "col_offset": 45, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 244, "col_offset": 36, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "long", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "t2", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "ne", "type": "Any"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "t2", "type": "Any"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 248, "col_offset": 30, "nodeName": "t2", "type": "Any"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "ne", "type": "Any"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "t2", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "t1", "type": "Any"}]