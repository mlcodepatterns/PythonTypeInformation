[{"lineNumber": 13, "col_offset": 23, "nodeName": "_Loss", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "task", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "task", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "padding_idx", "type": "Union[Any, int]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "agg_logging_outputs", "type": "Dict[str, Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "FairseqCriterion"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "FairseqCriterion"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "FairseqCriterion"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "cls", "type": "Type[FairseqCriterion]"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "task", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "deprecation_warning", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "deprecation_warning", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "aggregate_logging_outputs", "type": "Callable[[List[Dict[str, Any]]], Dict[str, Any]]"}, {"lineNumber": 58, "col_offset": 60, "nodeName": "logging_outputs", "type": "List[Dict[str, Any]]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 19, "col_offset": 59, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "pad", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "List", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "Any", "type": "Any"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "cls", "type": "Type[FairseqCriterion]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "agg_logging_outputs", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "k", "type": "str"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "log_scalar", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "k", "type": "str"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "v", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 19, "col_offset": 59, "nodeName": "task", "type": "Any"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "metrics", "type": "module"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "task", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 52, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "Any", "type": "Any"}, {"lineNumber": 52, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 60, "nodeName": "Any", "type": "Any"}]