[{"lineNumber": 14, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 192, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "src_len", "type": "List[int]"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "append_eos", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "shuffle_map", "type": "Dict[int, int]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "Dictionary", "type": "Type[fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "src_len", "type": "List[int]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "append_eos", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "_get_test_data", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "noising_gen", "type": "fairseq.data.noising.WordDropout"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "_get_test_data", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "noising_gen", "type": "fairseq.data.noising.WordDropout"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "v", "type": "int"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "_get_test_data", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "word_shuffle", "type": "fairseq.data.noising.WordShuffle"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "_get_test_data", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "noising_gen", "type": "fairseq.data.noising.WordDropout"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "_get_test_data", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "noising_gen", "type": "fairseq.data.noising.WordDropout"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "_get_test_data", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "word_shuffle", "type": "fairseq.data.noising.WordShuffle"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "x", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "x", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "src_tokens", "type": "List[List[str]]"}, {"lineNumber": 37, "col_offset": 66, "nodeName": "pad", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "src_tokens", "type": "List[List[str]]"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "src_len", "type": "List[int]"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "eos", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "numpy_seed", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "WordDropout", "type": "Type[fairseq.data.noising.WordDropout]"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "noising", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 56, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "assert_word_dropout_correct", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "assert_eos_at_end", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "numpy_seed", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "WordDropout", "type": "Type[fairseq.data.noising.WordDropout]"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "noising", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 90, "col_offset": 53, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 56, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "assert_word_blanking_correct", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "assert_eos_at_end", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "shuffle_map", "type": "Dict[int, int]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 118, "col_offset": 35, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "numpy_seed", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "WordShuffle", "type": "Type[fairseq.data.noising.WordShuffle]"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "noising", "type": "Callable"}, {"lineNumber": 127, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 57, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "assert_no_shuffle_with_0_distance", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "assert_eos_at_end", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "noising", "type": "Callable"}, {"lineNumber": 133, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 133, "col_offset": 57, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "assert_word_shuffle_with_distance_3", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "assert_eos_at_end", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "eos", "type": "Any"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "numpy_seed", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "WordDropout", "type": "Type[fairseq.data.noising.WordDropout]"}, {"lineNumber": 153, "col_offset": 46, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "noising", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 154, "col_offset": 53, "nodeName": "x", "type": "Any"}, {"lineNumber": 154, "col_offset": 56, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "assert_word_dropout_correct", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "assert_no_eos_at_end", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "numpy_seed", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "WordDropout", "type": "Type[fairseq.data.noising.WordDropout]"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "noising", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 166, "col_offset": 53, "nodeName": "x", "type": "Any"}, {"lineNumber": 166, "col_offset": 56, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "assert_word_blanking_correct", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "assert_no_eos_at_end", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "numpy_seed", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "WordShuffle", "type": "Type[fairseq.data.noising.WordShuffle]"}, {"lineNumber": 177, "col_offset": 47, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "noising", "type": "Callable"}, {"lineNumber": 179, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 179, "col_offset": 57, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "assert_no_shuffle_with_0_distance", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "assert_no_eos_at_end", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 185, "col_offset": 33, "nodeName": "noising", "type": "Callable"}, {"lineNumber": 185, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 185, "col_offset": 57, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "assert_word_shuffle_with_distance_3", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "assert_no_eos_at_end", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "length", "type": "int"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "length", "type": "int"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "src_len", "type": "List[int]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 37, "col_offset": 66, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "index", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "noising", "type": "module"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "noising_gen", "type": "fairseq.data.noising.WordDropout"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 71, "col_offset": 62, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 73, "col_offset": 53, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "unk", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "noising", "type": "module"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "noising_gen", "type": "fairseq.data.noising.WordDropout"}, {"lineNumber": 90, "col_offset": 68, "nodeName": "unk", "type": "Callable[[], Any]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 92, "col_offset": 46, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 92, "col_offset": 62, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 94, "col_offset": 53, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "noising", "type": "module"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "word_shuffle", "type": "fairseq.data.noising.WordShuffle"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 129, "col_offset": 46, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 129, "col_offset": 62, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 131, "col_offset": 53, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "word_shuffle", "type": "fairseq.data.noising.WordShuffle"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 135, "col_offset": 62, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 137, "col_offset": 53, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "noising", "type": "module"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "noising_gen", "type": "fairseq.data.noising.WordDropout"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 156, "col_offset": 46, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 156, "col_offset": 62, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 158, "col_offset": 40, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 158, "col_offset": 56, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "noising", "type": "module"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "noising_gen", "type": "fairseq.data.noising.WordDropout"}, {"lineNumber": 166, "col_offset": 68, "nodeName": "unk", "type": "Callable[[], Any]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 30, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 168, "col_offset": 62, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 170, "col_offset": 40, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 170, "col_offset": 56, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "noising", "type": "module"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "word_shuffle", "type": "fairseq.data.noising.WordShuffle"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 181, "col_offset": 46, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 181, "col_offset": 62, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 183, "col_offset": 40, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 183, "col_offset": 56, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 185, "col_offset": 33, "nodeName": "word_shuffle", "type": "fairseq.data.noising.WordShuffle"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 187, "col_offset": 46, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 187, "col_offset": 62, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 189, "col_offset": 56, "nodeName": "l_noised", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "src_tokens", "type": "List[List[str]]"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "max", "type": "Callable"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "src_len", "type": "List[int]"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "src_tokens", "type": "List[List[str]]"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "j", "type": "int"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "eos", "type": "Any"}, {"lineNumber": 53, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 73, "col_offset": 67, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 90, "col_offset": 68, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 92, "col_offset": 76, "nodeName": "unk", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 67, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "self", "type": "TestDataNoising"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 131, "col_offset": 67, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 67, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "eos", "type": "Any"}, {"lineNumber": 145, "col_offset": 75, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 70, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 166, "col_offset": 68, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 168, "col_offset": 76, "nodeName": "unk", "type": "Callable[[], Any]"}, {"lineNumber": 170, "col_offset": 70, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 183, "col_offset": 70, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 189, "col_offset": 70, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "i", "type": "int"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "src_tokens", "type": "List[List[str]]"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "j", "type": "int"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "i", "type": "int"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "j", "type": "int"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 73, "col_offset": 67, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 83, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 76, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 94, "col_offset": 67, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "x_noised", "type": "Any"}, {"lineNumber": 103, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "k", "type": "int"}, {"lineNumber": 117, "col_offset": 47, "nodeName": "v", "type": "int"}, {"lineNumber": 131, "col_offset": 67, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 137, "col_offset": 67, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 158, "col_offset": 70, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 168, "col_offset": 76, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 170, "col_offset": 70, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 183, "col_offset": 70, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 189, "col_offset": 70, "nodeName": "vocab", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 40, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 83, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "j", "type": "int"}, {"lineNumber": 103, "col_offset": 51, "nodeName": "j", "type": "int"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "x_len", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "i", "type": "int"}]