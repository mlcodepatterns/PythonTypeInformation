[{"lineNumber": 18, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "TestSequenceGeneratorBase", "type": "Type[TestSequenceGeneratorBase]"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "TestSequenceGeneratorBase", "type": "Type[TestSequenceGeneratorBase]"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "TestSequenceGeneratorBase", "type": "Type[TestSequenceGeneratorBase]"}, {"lineNumber": 18, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 390, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "normalized", "type": "bool"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "w1", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "w2", "type": "int"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "unk", "type": "float"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "w1", "type": "int"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "w2", "type": "int"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "unk", "type": "float"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "low_sampling_topp", "type": "float"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "high_sampling_topp", "type": "float"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "normalized", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertTensorEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 25, "col_offset": 58, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "sequence_generator_setup", "type": "Callable[[], Tuple[Any, int, int, Any, Any, Any]]"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 56, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 93, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 111, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 111, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 144, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 145, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 145, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "dummy_dictionary", "type": "Callable[..., fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "eos", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 214, "col_offset": 57, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 214, "col_offset": 63, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 214, "col_offset": 66, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "build_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 223, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "dummy_dictionary", "type": "Callable[..., fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "eos", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 256, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 266, "col_offset": 18, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 296, "col_offset": 57, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 296, "col_offset": 63, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 296, "col_offset": 66, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "build_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 303, "col_offset": 28, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 314, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 315, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 315, "col_offset": 18, "nodeName": "eos", "type": "Any"}, {"lineNumber": 315, "col_offset": 28, "nodeName": "w1", "type": "int"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 343, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 344, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 344, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 344, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 344, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "tensorEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 378, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 21, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 21, "col_offset": 47, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 21, "col_offset": 64, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "numel", "type": "Any"}, {"lineNumber": 26, "col_offset": 45, "nodeName": "numel", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 49, "col_offset": 57, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 56, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 61, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 64, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 64, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 77, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 80, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 80, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 83, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 86, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 91, "col_offset": 78, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 93, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 96, "col_offset": 61, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 98, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 98, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 99, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 101, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 101, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 101, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 102, "col_offset": 66, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 104, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 105, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 109, "col_offset": 78, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 111, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 111, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 113, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 113, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 114, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 117, "col_offset": 61, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 119, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 120, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 122, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 122, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 123, "col_offset": 66, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 130, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 133, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 133, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 136, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 136, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 139, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 144, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 145, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 145, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 147, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 150, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 150, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 150, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 153, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 153, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 153, "col_offset": 56, "nodeName": "w2", "type": "int"}, {"lineNumber": 153, "col_offset": 60, "nodeName": "eos", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 156, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 156, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 156, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 156, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "pad", "type": "Callable[[], Any]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "unk", "type": "Callable[[], Any]"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "argparse", "type": "module"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "TestTranslationTask", "type": "Type[tests.utils.TestTranslationTask]"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 222, "col_offset": 46, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 222, "col_offset": 78, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 223, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 226, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 226, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 229, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 229, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 229, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 232, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 232, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 232, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 235, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 235, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 235, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "pad", "type": "Callable[[], Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "unk", "type": "Callable[[], Any]"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 256, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "argparse", "type": "module"}, {"lineNumber": 266, "col_offset": 18, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "TestTranslationTask", "type": "Type[tests.utils.TestTranslationTask]"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 303, "col_offset": 28, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 306, "col_offset": 26, "nodeName": "low_sampling_topp", "type": "float"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 314, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 315, "col_offset": 18, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 315, "col_offset": 28, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 317, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 317, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 317, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 320, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 320, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 320, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 323, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 323, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 323, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 326, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 326, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 326, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 332, "col_offset": 30, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 332, "col_offset": 49, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 335, "col_offset": 26, "nodeName": "high_sampling_topp", "type": "float"}, {"lineNumber": 339, "col_offset": 30, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 340, "col_offset": 31, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 343, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 344, "col_offset": 22, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 344, "col_offset": 41, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 370, "col_offset": 32, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 370, "col_offset": 48, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 370, "col_offset": 65, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "almostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 374, "col_offset": 59, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "numel", "type": "Any"}, {"lineNumber": 376, "col_offset": 33, "nodeName": "numel", "type": "Any"}, {"lineNumber": 378, "col_offset": 16, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 380, "col_offset": 43, "nodeName": "lenpen", "type": "Any"}, {"lineNumber": 381, "col_offset": 15, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "pos_probs", "type": "List[float]"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "numel", "type": "Any"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 222, "col_offset": 46, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 222, "col_offset": 78, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 223, "col_offset": 36, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 226, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 236, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 254, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 254, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 314, "col_offset": 36, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 317, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 320, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 323, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 326, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 327, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 332, "col_offset": 30, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 332, "col_offset": 49, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 339, "col_offset": 30, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 340, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 343, "col_offset": 36, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 349, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 352, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 354, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 355, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 358, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 359, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 365, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 373, "col_offset": 39, "nodeName": "pos_probs", "type": "Any"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 374, "col_offset": 32, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 380, "col_offset": 21, "nodeName": "numel", "type": "Any"}, {"lineNumber": 381, "col_offset": 19, "nodeName": "score", "type": "Any"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 384, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 384, "col_offset": 43, "nodeName": "max", "type": "Any"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 387, "col_offset": 42, "nodeName": "sum", "type": "Any"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 45, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "long", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "unk", "type": "float"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "unk", "type": "float"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 254, "col_offset": 22, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 254, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 273, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 275, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 281, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 281, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 281, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 282, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 282, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 282, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 283, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 283, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 283, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 284, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 284, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 284, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 289, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 290, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 291, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 292, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 346, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 346, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 346, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 347, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 347, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 347, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 349, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 352, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 352, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 352, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 352, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 353, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 353, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 353, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 354, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 355, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 358, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 358, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 358, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 358, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 359, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 359, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 359, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 359, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 364, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 364, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 364, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 365, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 365, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 365, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 365, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 367, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 376, "col_offset": 33, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 380, "col_offset": 21, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 381, "col_offset": 27, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "t1", "type": "Any"}, {"lineNumber": 384, "col_offset": 28, "nodeName": "t2", "type": "Any"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "t1", "type": "Any"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "t2", "type": "Any"}, {"lineNumber": 346, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 347, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 348, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 349, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 352, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 353, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 354, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 355, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 358, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 359, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 360, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 361, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 364, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 365, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 366, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 367, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 384, "col_offset": 43, "nodeName": "abs", "type": "Any"}, {"lineNumber": 387, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "t2", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "ne", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "t2", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 384, "col_offset": 43, "nodeName": "t1", "type": "Any"}, {"lineNumber": 384, "col_offset": 48, "nodeName": "t2", "type": "Any"}, {"lineNumber": 387, "col_offset": 42, "nodeName": "ne", "type": "Any"}, {"lineNumber": 387, "col_offset": 48, "nodeName": "t2", "type": "Any"}, {"lineNumber": 387, "col_offset": 42, "nodeName": "t1", "type": "Any"}]