[{"lineNumber": 17, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "assertTensorEqual", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "TestSequenceGeneratorBase", "type": "Type[TestSequenceGeneratorBase]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_with_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "test_without_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "test_with_lenpen_favoring_short_hypos", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "test_with_lenpen_favoring_long_hypos", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "test_maxlen", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "test_encoder_with_different_output_len", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "TestSequenceGeneratorBase", "type": "Type[TestSequenceGeneratorBase]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "test_diverse_beam_search", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 32, "nodeName": "TestDiverseBeamSearch", "type": "Type[TestDiverseBeamSearch]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "test_diverse_beam_search", "type": "Callable[[Any], Any]"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "TestSequenceGeneratorBase", "type": "Type[TestSequenceGeneratorBase]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "test_topp_sampling_search_low_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "test_topp_sampling_search_high_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "hypoTokens", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "almostEqual", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "tensorEqual", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 423, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "normalized", "type": "bool"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "reshaping_model", "type": "tests.utils.TestReshapingModel"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "sent", "type": "int"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "w1", "type": "int"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "w2", "type": "int"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "unk", "type": "float"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "search_strategy", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "normalized", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "w1", "type": "int"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "w2", "type": "int"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "unk", "type": "float"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 300, "col_offset": 18, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "low_sampling_topp", "type": "float"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "search_strategy", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "high_sampling_topp", "type": "float"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "search_strategy", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "normalized", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertTensorEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 58, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "sequence_generator_setup", "type": "Callable[[], Tuple[Any, int, int, Any, Any, Any]]"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 55, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 74, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 91, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 126, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "w1", "type": "int"}, {"lineNumber": 127, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 144, "col_offset": 57, "nodeName": "args", "type": "Any"}, {"lineNumber": 144, "col_offset": 63, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 144, "col_offset": 78, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "build_model", "type": "Callable"}, {"lineNumber": 145, "col_offset": 68, "nodeName": "args", "type": "Any"}, {"lineNumber": 145, "col_offset": 74, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 146, "col_offset": 54, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "beam", "type": "int"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "dummy_dictionary", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "eos", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 206, "col_offset": 57, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 206, "col_offset": 63, "nodeName": "d", "type": "Any"}, {"lineNumber": 206, "col_offset": 66, "nodeName": "d", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "build_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "DiverseBeamSearch", "type": "Any"}, {"lineNumber": 211, "col_offset": 51, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 216, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 217, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "sub_", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 238, "col_offset": 58, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "DiverseSiblingsSearch", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 258, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 259, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 259, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 259, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "dummy_dictionary", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "eos", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 291, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 300, "col_offset": 18, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 301, "col_offset": 18, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 301, "col_offset": 39, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 302, "col_offset": 23, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 331, "col_offset": 57, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 331, "col_offset": 63, "nodeName": "d", "type": "Any"}, {"lineNumber": 331, "col_offset": 66, "nodeName": "d", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "build_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 332, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 338, "col_offset": 28, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 339, "col_offset": 26, "nodeName": "Sampling", "type": "Any"}, {"lineNumber": 339, "col_offset": 42, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 348, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 349, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 349, "col_offset": 18, "nodeName": "eos", "type": "Any"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "w1", "type": "int"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "Sampling", "type": "Any"}, {"lineNumber": 367, "col_offset": 42, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 368, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "generate", "type": "Any"}, {"lineNumber": 376, "col_offset": 49, "nodeName": "sample", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 377, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 377, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 377, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 377, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 377, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "tensorEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 20, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 20, "col_offset": 47, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 20, "col_offset": 64, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "numel", "type": "Any"}, {"lineNumber": 25, "col_offset": 45, "nodeName": "numel", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 48, "col_offset": 57, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 55, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 60, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 63, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 63, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 66, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 74, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 79, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 79, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 82, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 85, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 85, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 90, "col_offset": 78, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 91, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 97, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 97, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 98, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 100, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 100, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 101, "col_offset": 66, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 103, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 103, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 103, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 103, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 104, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 108, "col_offset": 78, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 112, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 112, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 112, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 113, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 116, "col_offset": 61, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 118, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 118, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 118, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 119, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 121, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 121, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 121, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 122, "col_offset": 66, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 126, "col_offset": 49, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 127, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 129, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 132, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 132, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 135, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 135, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 135, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 138, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "TestTranslationTask", "type": "Type[tests.utils.TestTranslationTask]"}, {"lineNumber": 144, "col_offset": 63, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 144, "col_offset": 78, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "TestReshapingModel", "type": "Type[tests.utils.TestReshapingModel]"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 146, "col_offset": 36, "nodeName": "reshaping_model", "type": "tests.utils.TestReshapingModel"}, {"lineNumber": 146, "col_offset": 54, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "pad", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "eos", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "unk", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "argparse", "type": "module"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "TestTranslationTask", "type": "Type[tests.utils.TestTranslationTask]"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "search", "type": "module"}, {"lineNumber": 211, "col_offset": 51, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 213, "col_offset": 56, "nodeName": "search_strategy", "type": "Any"}, {"lineNumber": 215, "col_offset": 46, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 215, "col_offset": 78, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 216, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 217, "col_offset": 41, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 219, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 219, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 222, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 222, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 225, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 225, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 225, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 228, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 228, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 228, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 237, "col_offset": 53, "nodeName": "diversity_rate", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "numel", "type": "Any"}, {"lineNumber": 239, "col_offset": 45, "nodeName": "numel", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 242, "col_offset": 43, "nodeName": "lenpen", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "search", "type": "module"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 250, "col_offset": 56, "nodeName": "search_strategy", "type": "Any"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 255, "col_offset": 31, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 258, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 259, "col_offset": 22, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 259, "col_offset": 32, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 259, "col_offset": 41, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 261, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 261, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 261, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 264, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 264, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 264, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 267, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 267, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 267, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 270, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 270, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 270, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "pad", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "eos", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "unk", "type": "Any"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 291, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "argparse", "type": "module"}, {"lineNumber": 301, "col_offset": 18, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 301, "col_offset": 39, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 302, "col_offset": 23, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "TestTranslationTask", "type": "Type[tests.utils.TestTranslationTask]"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 338, "col_offset": 28, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 339, "col_offset": 26, "nodeName": "search", "type": "module"}, {"lineNumber": 339, "col_offset": 42, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 339, "col_offset": 71, "nodeName": "low_sampling_topp", "type": "float"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 341, "col_offset": 56, "nodeName": "search_strategy", "type": "Any"}, {"lineNumber": 344, "col_offset": 30, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 345, "col_offset": 31, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 348, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 349, "col_offset": 18, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 351, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 351, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 351, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 354, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 354, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 354, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 357, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 357, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 357, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 360, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 360, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 360, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 366, "col_offset": 30, "nodeName": "min_top1_prob", "type": "float"}, {"lineNumber": 366, "col_offset": 49, "nodeName": "min_top2_prob", "type": "float"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "search", "type": "module"}, {"lineNumber": 367, "col_offset": 42, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 367, "col_offset": 71, "nodeName": "high_sampling_topp", "type": "float"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 369, "col_offset": 56, "nodeName": "search_strategy", "type": "Any"}, {"lineNumber": 372, "col_offset": 30, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 373, "col_offset": 31, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 376, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 377, "col_offset": 22, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 377, "col_offset": 32, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 377, "col_offset": 41, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 403, "col_offset": 32, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 403, "col_offset": 48, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 403, "col_offset": 65, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "almostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 407, "col_offset": 59, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 409, "col_offset": 11, "nodeName": "numel", "type": "Any"}, {"lineNumber": 409, "col_offset": 33, "nodeName": "numel", "type": "Any"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 413, "col_offset": 43, "nodeName": "lenpen", "type": "Any"}, {"lineNumber": 414, "col_offset": 15, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "pos_probs", "type": "List[float]"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "numel", "type": "Any"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 166, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 215, "col_offset": 46, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 215, "col_offset": 78, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 216, "col_offset": 36, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 219, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 228, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "pos_probs", "type": "Any"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 237, "col_offset": 37, "nodeName": "sibling_rank", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "numel", "type": "Any"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 255, "col_offset": 31, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 258, "col_offset": 36, "nodeName": "self", "type": "TestDiverseSiblingsSearch"}, {"lineNumber": 261, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 264, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 267, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 270, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 288, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 288, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 289, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 289, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 289, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 344, "col_offset": 30, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 345, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 348, "col_offset": 36, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 351, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 352, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 354, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 355, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 357, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 358, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 360, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 361, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 366, "col_offset": 30, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 366, "col_offset": 49, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 372, "col_offset": 30, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 373, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 376, "col_offset": 36, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 379, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 381, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 385, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 386, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 387, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 391, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 392, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 393, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 394, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 397, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 398, "col_offset": 24, "nodeName": "hypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 399, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 400, "col_offset": 24, "nodeName": "hypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 403, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 406, "col_offset": 39, "nodeName": "pos_probs", "type": "Any"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 407, "col_offset": 32, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 409, "col_offset": 11, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "numel", "type": "Any"}, {"lineNumber": 414, "col_offset": 19, "nodeName": "score", "type": "Any"}, {"lineNumber": 417, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 417, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 417, "col_offset": 43, "nodeName": "max", "type": "Any"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 420, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 420, "col_offset": 42, "nodeName": "sum", "type": "Any"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 45, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "long", "type": "Any"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 166, "col_offset": 31, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "self", "type": "TestDiverseBeamSearch"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "unk", "type": "float"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "unk", "type": "float"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 239, "col_offset": 45, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 243, "col_offset": 36, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 288, "col_offset": 13, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 288, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 289, "col_offset": 13, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 289, "col_offset": 22, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 289, "col_offset": 31, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 308, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 310, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 316, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 316, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 316, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 316, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 317, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 317, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 317, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 318, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 318, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 318, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 318, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "eos_prob", "type": "float"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "unk", "type": "float"}, {"lineNumber": 319, "col_offset": 32, "nodeName": "w1_prob", "type": "float"}, {"lineNumber": 319, "col_offset": 41, "nodeName": "w2_prob", "type": "float"}, {"lineNumber": 324, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 325, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 379, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 379, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 379, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 379, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 380, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 380, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 380, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 381, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 382, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 385, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 385, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 385, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 385, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 386, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 386, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 386, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 386, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 387, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 388, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 391, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 391, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 391, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 391, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 392, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 392, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 392, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 392, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 393, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 394, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 397, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 397, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 397, "col_offset": 58, "nodeName": "w1", "type": "int"}, {"lineNumber": 397, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 398, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 398, "col_offset": 54, "nodeName": "w1", "type": "int"}, {"lineNumber": 398, "col_offset": 58, "nodeName": "w2", "type": "int"}, {"lineNumber": 398, "col_offset": 62, "nodeName": "eos", "type": "Any"}, {"lineNumber": 399, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 400, "col_offset": 24, "nodeName": "self", "type": "TestTopPSamplingSearch"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 409, "col_offset": 33, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 414, "col_offset": 27, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 417, "col_offset": 15, "nodeName": "t1", "type": "Any"}, {"lineNumber": 417, "col_offset": 28, "nodeName": "t2", "type": "Any"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "t1", "type": "Any"}, {"lineNumber": 420, "col_offset": 28, "nodeName": "t2", "type": "Any"}, {"lineNumber": 379, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 380, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 381, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 382, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 385, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 386, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 387, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 388, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 391, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 392, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 393, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 394, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 397, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 398, "col_offset": 40, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 399, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 400, "col_offset": 39, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 417, "col_offset": 43, "nodeName": "abs", "type": "Any"}, {"lineNumber": 420, "col_offset": 42, "nodeName": "long", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "t2", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "ne", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "t2", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "beam", "type": "int"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "sent", "type": "int"}, {"lineNumber": 417, "col_offset": 43, "nodeName": "t1", "type": "Any"}, {"lineNumber": 417, "col_offset": 48, "nodeName": "t2", "type": "Any"}, {"lineNumber": 420, "col_offset": 42, "nodeName": "ne", "type": "Any"}, {"lineNumber": 420, "col_offset": 48, "nodeName": "t2", "type": "Any"}, {"lineNumber": 420, "col_offset": 42, "nodeName": "t1", "type": "Any"}]