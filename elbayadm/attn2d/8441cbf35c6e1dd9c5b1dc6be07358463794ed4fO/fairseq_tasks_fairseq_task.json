[{"lineNumber": 11, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "datasets", "type": "Dict[nothing, nothing]"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "cls", "type": "Type[FairseqTask]"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "split", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "datasets", "type": "Dict[nothing, nothing]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "datasets", "type": "Dict[nothing, nothing]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "FairseqDataset", "type": "Type[fairseq.data.fairseq_dataset.FairseqDataset]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "indices", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "filter_by_size", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "indices", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "max_positions", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "batch_by_size", "type": "Callable[..., Generator[List[Any], Any, None]]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "indices", "type": "Generator[Any, Any, None]"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "num_tokens", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "EpochBatchIterator", "type": "Type[fairseq.data.iterators.EpochBatchIterator]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "build_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "build_criterion", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 144, "col_offset": 42, "nodeName": "args", "type": "Any"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "sample", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 56, "col_offset": 48, "nodeName": "FairseqDataset", "type": "Type[fairseq.data.fairseq_dataset.FairseqDataset]"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "numpy_seed", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "seed", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "ordered_indices", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "max_tokens", "type": "Any"}, {"lineNumber": 104, "col_offset": 78, "nodeName": "max_sentences", "type": "Any"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "required_batch_size_multiple", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "iterators", "type": "module"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "collater", "type": "Any"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "batch_sampler", "type": "Generator[List[Any], Any, None]"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "seed", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "num_shards", "type": "Any"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "shard_id", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "models", "type": "module"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "criterions", "type": "module"}, {"lineNumber": 55, "col_offset": 52, "nodeName": "split", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "datasets", "type": "Dict[nothing, nothing]"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 99, "col_offset": 71, "nodeName": "ignore_invalid_inputs", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "split", "type": "Any"}]