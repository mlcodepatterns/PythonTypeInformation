[{"lineNumber": 11, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 26, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "itr", "type": "fairseq.data.iterators.CountingIterator"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "CountingIterator", "type": "Type[fairseq.data.iterators.CountingIterator]"}, {"lineNumber": 15, "col_offset": 41, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "skip", "type": "Callable"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "skip", "type": "Callable"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "iterators", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestIterators"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "has_next", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestIterators"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "next", "type": "Callable"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "itr", "type": "fairseq.data.iterators.CountingIterator"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestIterators"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "next", "type": "Callable"}, {"lineNumber": 18, "col_offset": 30, "nodeName": "itr", "type": "fairseq.data.iterators.CountingIterator"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "itr", "type": "fairseq.data.iterators.CountingIterator"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestIterators"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "next", "type": "Callable"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "itr", "type": "fairseq.data.iterators.CountingIterator"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "itr", "type": "fairseq.data.iterators.CountingIterator"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestIterators"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "next", "type": "Callable"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "itr", "type": "fairseq.data.iterators.CountingIterator"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestIterators"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "has_next", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "itr", "type": "fairseq.data.iterators.CountingIterator"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "itr", "type": "fairseq.data.iterators.CountingIterator"}]