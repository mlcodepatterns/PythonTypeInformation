[{"lineNumber": 29, "col_offset": 0, "nodeName": "_lang_token", "type": "Callable[[str], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "_lang_token_index", "type": "Callable[[fairseq.data.dictionary.Dictionary, str], Any]"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "FairseqTask", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "idx", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "idx", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "lang", "type": "str"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "Dictionary", "type": "Type[fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 33, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "index", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "idx", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "unk_index", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 37, "col_offset": 56, "nodeName": "lang", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "lang_pairs", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "lang_pairs", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "eval_lang_pairs", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "lang_pairs", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "model_lang_pairs", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "langs", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "training", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "training", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "left_pad_source", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "left_pad_target", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "lang_pairs", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "sorted_langs", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "dicts", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "lang", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "sorted_langs", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "new_src_eos", "type": "None"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "new_tgt_bos", "type": "None"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "paths", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "lang_pair", "type": "str"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "lang_pairs", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "logging_output_keys", "type": "Any"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "flat_logging_output", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "dic", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "_lang_token", "type": "Callable[[str], Any]"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "lang", "type": "str"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "dic", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "args", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "lang_pairs", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "training", "type": "Any"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "prepare", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "training", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "eval_bool", "type": "Callable"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "left_pad_source", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "eval_bool", "type": "Callable"}, {"lineNumber": 125, "col_offset": 49, "nodeName": "left_pad_target", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "dataset_impl", "type": "str"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "lang_pairs", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "split", "type": "Any"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "training", "type": "bool"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "lang_pairs", "type": "List[str]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "training", "type": "bool"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "paths", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "dicts", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "training", "type": "bool"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "encoder_langtok", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "encoder_langtok", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "decoder_langtok", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "_lang_token_index", "type": "Callable[[fairseq.data.dictionary.Dictionary, str], Any]"}, {"lineNumber": 171, "col_offset": 55, "nodeName": "tgt_lang", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "lang_pair_dataset", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "new_src_eos", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "src_eos", "type": "None"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "decoder_langtok", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "new_tgt_bos", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "tgt_eos", "type": "None"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "TransformEosLangPairDataset", "type": "Type[fairseq.data.transform_eos_lang_pair_dataset.TransformEosLangPairDataset]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "lang_pair_dataset", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "paths", "type": "Any"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "RoundRobinZipDatasets", "type": "Type[fairseq.data.round_robin_zip_datasets.RoundRobinZipDatasets]"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "RoundRobinZipDatasets", "type": "Type[fairseq.data.round_robin_zip_datasets.RoundRobinZipDatasets]"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "messages", "type": "List[str]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "check_args", "type": "Callable[[], Any]"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "build_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 267, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "agg_loss", "type": "float"}, {"lineNumber": 274, "col_offset": 18, "nodeName": "agg_sample_size", "type": "float"}, {"lineNumber": 274, "col_offset": 35, "nodeName": "agg_logging_output", "type": "Dict[Any, Any]"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "ignore_grad", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "agg_loss", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "agg_sample_size", "type": "Any"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 285, "col_offset": 44, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "agg_loss", "type": "Union[float, Any]"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "agg_sample_size", "type": "Union[Any, float]"}, {"lineNumber": 286, "col_offset": 42, "nodeName": "agg_logging_output", "type": "Dict[Any, Any]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 292, "col_offset": 29, "nodeName": "eval_lang_pairs", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "agg_loss", "type": "Union[Any, float]"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "agg_sample_size", "type": "Union[Any, float]"}, {"lineNumber": 300, "col_offset": 42, "nodeName": "agg_logging_output", "type": "Dict[Any, Any]"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "grad_denom", "type": "Any"}, {"lineNumber": 325, "col_offset": 46, "nodeName": "sample_sizes", "type": "Any"}, {"lineNumber": 328, "col_offset": 30, "nodeName": "logging_output_keys", "type": "Any"}, {"lineNumber": 328, "col_offset": 53, "nodeName": "eval_lang_pairs", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "flat_logging_output", "type": "Dict[str, Any]"}, {"lineNumber": 346, "col_offset": 38, "nodeName": "sum_over_languages", "type": "Callable[[Any], Any]"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "flat_logging_output", "type": "Dict[str, Any]"}, {"lineNumber": 349, "col_offset": 45, "nodeName": "sum_over_languages", "type": "Callable[[Any], Any]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "flat_logging_output", "type": "Dict[str, Any]"}, {"lineNumber": 350, "col_offset": 44, "nodeName": "sum_over_languages", "type": "Callable[[Any], Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "flat_logging_output", "type": "Dict[str, Any]"}, {"lineNumber": 351, "col_offset": 41, "nodeName": "sum_over_languages", "type": "Callable[[Any], Any]"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 82, "col_offset": 70, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 84, "col_offset": 71, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 86, "col_offset": 73, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 88, "col_offset": 73, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 90, "col_offset": 66, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 92, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "copy", "type": "module"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "args", "type": "Any"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "cls", "type": "Any"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "options", "type": "module"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "args", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "options", "type": "module"}, {"lineNumber": 125, "col_offset": 49, "nodeName": "args", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "deprecation_warning", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "args", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "dataset_impl", "type": "str"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "lang_pairs", "type": "Any"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "source_lang", "type": "Any"}, {"lineNumber": 137, "col_offset": 43, "nodeName": "target_lang", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "source_lang", "type": "Union[Any, str]"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "target_lang", "type": "Union[Any, str]"}, {"lineNumber": 142, "col_offset": 49, "nodeName": "split", "type": "Union[Any, Callable[..., List[str]]]"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "dicts", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 51, "nodeName": "decoder_langtok", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "lang_to_add", "type": "Any"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "sorted_langs", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "eos", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "_lang_token_index", "type": "Callable[[fairseq.data.dictionary.Dictionary, str], Any]"}, {"lineNumber": 164, "col_offset": 59, "nodeName": "src_lang", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "_lang_token_index", "type": "Callable[[fairseq.data.dictionary.Dictionary, str], Any]"}, {"lineNumber": 166, "col_offset": 59, "nodeName": "tgt_lang", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "eos", "type": "Any"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "encoder_langtok", "type": "Any"}, {"lineNumber": 175, "col_offset": 53, "nodeName": "decoder_langtok", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "encoder_langtok", "type": "Any"}, {"lineNumber": 179, "col_offset": 53, "nodeName": "src_eos", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "src_lang", "type": "Any"}, {"lineNumber": 180, "col_offset": 40, "nodeName": "tgt_lang", "type": "Any"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "get_encoder_langtok", "type": "Any"}, {"lineNumber": 181, "col_offset": 51, "nodeName": "src_lang", "type": "Any"}, {"lineNumber": 181, "col_offset": 61, "nodeName": "tgt_lang", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "tgt_eos", "type": "Any"}, {"lineNumber": 186, "col_offset": 65, "nodeName": "tgt_lang", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "get_decoder_langtok", "type": "Any"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "tgt_lang", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "src_eos", "type": "Optional[Any]"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "new_src_eos", "type": "Optional[Any]"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "tgt_eos", "type": "Optional[Any]"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "new_tgt_bos", "type": "Optional[Any]"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "paths", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "src", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "tgt", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "split", "type": "Any"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "load_langpair_dataset", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], fairseq.data.language_pair_dataset.LanguagePairDataset]"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "split", "type": "Any"}, {"lineNumber": 209, "col_offset": 34, "nodeName": "src", "type": "Any"}, {"lineNumber": 209, "col_offset": 56, "nodeName": "tgt", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "alter_dataset_langtok", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "langpair_dataset", "type": "fairseq.data.language_pair_dataset.LanguagePairDataset"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "source_lang", "type": "Any"}, {"lineNumber": 233, "col_offset": 54, "nodeName": "target_lang", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "lang_pair", "type": "str"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "encoder_langtok", "type": "Any"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "encoder_langtok", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "decoder_langtok", "type": "Any"}, {"lineNumber": 257, "col_offset": 44, "nodeName": "decoder_langtok", "type": "Any"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "models", "type": "module"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 268, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "FairseqMultiModel", "type": "Type[fairseq.models.fairseq_model.FairseqMultiModel]"}, {"lineNumber": 269, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 278, "col_offset": 18, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 278, "col_offset": 31, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 278, "col_offset": 48, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 281, "col_offset": 31, "nodeName": "loss", "type": "Any"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "agg_logging_output", "type": "Dict[Any, Any]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 290, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "agg_loss", "type": "float"}, {"lineNumber": 291, "col_offset": 22, "nodeName": "agg_sample_size", "type": "float"}, {"lineNumber": 291, "col_offset": 39, "nodeName": "agg_logging_output", "type": "Dict[Any, Any]"}, {"lineNumber": 292, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "agg_loss", "type": "Any"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "agg_sample_size", "type": "Any"}, {"lineNumber": 298, "col_offset": 35, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "generate", "type": "Any"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "models", "type": "Any"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "sample", "type": "Any"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 328, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 334, "col_offset": 23, "nodeName": "logging_output_keys", "type": "Any"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "flat_logging_output", "type": "Dict[str, Any]"}, {"lineNumber": 348, "col_offset": 46, "nodeName": "sum_over_languages", "type": "Callable[[Any], Any]"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 356, "col_offset": 26, "nodeName": "source_lang", "type": "Any"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 360, "col_offset": 26, "nodeName": "target_lang", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "deprecation_warning", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 136, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 137, "col_offset": 43, "nodeName": "args", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "source_lang", "type": "Any"}, {"lineNumber": 139, "col_offset": 64, "nodeName": "target_lang", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "paths", "type": "Any"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "lang", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "Dictionary", "type": "Type[fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "join", "type": "Callable"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "dicts", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "encoder_langtok", "type": "Any"}, {"lineNumber": 154, "col_offset": 51, "nodeName": "args", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 157, "col_offset": 55, "nodeName": "lang", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 37, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 44, "nodeName": "tgt_lang", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 175, "col_offset": 53, "nodeName": "args", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 209, "col_offset": 61, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 210, "col_offset": 43, "nodeName": "dataset_impl", "type": "Any"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "upsample_primary", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "left_pad_source", "type": "Any"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "left_pad_target", "type": "Any"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "max_source_positions", "type": "Any"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "max_target_positions", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "src", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "tgt", "type": "Any"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "training", "type": "Any"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "args", "type": "Any"}, {"lineNumber": 233, "col_offset": 54, "nodeName": "args", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "args", "type": "Any"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 257, "col_offset": 44, "nodeName": "args", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "messages", "type": "List[str]"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 278, "col_offset": 58, "nodeName": "models", "type": "Any"}, {"lineNumber": 278, "col_offset": 83, "nodeName": "sample", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 285, "col_offset": 31, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 290, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 295, "col_offset": 35, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 295, "col_offset": 52, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "item", "type": "Any"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "agg_logging_output", "type": "Dict[Any, Any]"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "generator", "type": "Any"}, {"lineNumber": 307, "col_offset": 34, "nodeName": "prefix_tokens", "type": "Any"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 321, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 343, "col_offset": 27, "nodeName": "agg_logging_output", "type": "Any"}, {"lineNumber": 343, "col_offset": 49, "nodeName": "items", "type": "Callable"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 344, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "items", "type": "Any"}, {"lineNumber": 347, "col_offset": 29, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 347, "col_offset": 48, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 356, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 360, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "values", "type": "Any"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "max_source_positions", "type": "Any"}, {"lineNumber": 366, "col_offset": 53, "nodeName": "max_target_positions", "type": "Any"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 136, "col_offset": 42, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 136, "col_offset": 55, "nodeName": "lang_pairs", "type": "Any"}, {"lineNumber": 136, "col_offset": 75, "nodeName": "x", "type": "Any"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "args", "type": "Any"}, {"lineNumber": 139, "col_offset": 64, "nodeName": "args", "type": "Any"}, {"lineNumber": 142, "col_offset": 49, "nodeName": "lang_pairs", "type": "Union[Any, List[str]]"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "path", "type": "module"}, {"lineNumber": 149, "col_offset": 55, "nodeName": "paths", "type": "Any"}, {"lineNumber": 149, "col_offset": 65, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 149, "col_offset": 86, "nodeName": "lang", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "pad", "type": "Any"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "pad", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "eos", "type": "Any"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "eos", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "unk", "type": "Any"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "unk", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "add_symbol", "type": "Any"}, {"lineNumber": 157, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 164, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 48, "nodeName": "src_lang", "type": "Any"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 48, "nodeName": "src_lang", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 204, "col_offset": 38, "nodeName": "paths", "type": "Any"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 50, "nodeName": "src", "type": "Any"}, {"lineNumber": 209, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 72, "nodeName": "tgt", "type": "Any"}, {"lineNumber": 210, "col_offset": 43, "nodeName": "args", "type": "Any"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "eos", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "lang_pairs", "type": "Any"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "lang_pair", "type": "str"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "symmetric_difference", "type": "Callable[[Any], Set[Any]]"}, {"lineNumber": 253, "col_offset": 66, "nodeName": "lang_pairs", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "messages", "type": "List[str]"}, {"lineNumber": 254, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 254, "col_offset": 96, "nodeName": "lang_pairs", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "messages", "type": "List[str]"}, {"lineNumber": 256, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 256, "col_offset": 73, "nodeName": "encoder_langtok", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "messages", "type": "List[str]"}, {"lineNumber": 258, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 261, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 261, "col_offset": 42, "nodeName": "messages", "type": "List[str]"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 276, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 278, "col_offset": 58, "nodeName": "model", "type": "Any"}, {"lineNumber": 278, "col_offset": 71, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 278, "col_offset": 90, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "detach", "type": "Any"}, {"lineNumber": 293, "col_offset": 19, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 293, "col_offset": 36, "nodeName": "sample", "type": "Any"}, {"lineNumber": 295, "col_offset": 62, "nodeName": "models", "type": "Any"}, {"lineNumber": 295, "col_offset": 87, "nodeName": "sample", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 299, "col_offset": 35, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "decoder_langtok", "type": "Any"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 332, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 332, "col_offset": 48, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 338, "col_offset": 23, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 338, "col_offset": 47, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 343, "col_offset": 49, "nodeName": "agg_logging_outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "agg_logging_output", "type": "Any"}, {"lineNumber": 347, "col_offset": 66, "nodeName": "values", "type": "Callable"}, {"lineNumber": 356, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 360, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "source_lang", "type": "Any"}, {"lineNumber": 365, "col_offset": 54, "nodeName": "target_lang", "type": "Any"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "args", "type": "Any"}, {"lineNumber": 366, "col_offset": 53, "nodeName": "args", "type": "Any"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 370, "col_offset": 23, "nodeName": "keys", "type": "Any"}, {"lineNumber": 136, "col_offset": 55, "nodeName": "args", "type": "Any"}, {"lineNumber": 136, "col_offset": 80, "nodeName": "split", "type": "Any"}, {"lineNumber": 142, "col_offset": 49, "nodeName": "args", "type": "Any"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "os", "type": "module"}, {"lineNumber": 156, "col_offset": 43, "nodeName": "_lang_token", "type": "Callable[[str], Any]"}, {"lineNumber": 156, "col_offset": 55, "nodeName": "lang_to_add", "type": "Any"}, {"lineNumber": 157, "col_offset": 65, "nodeName": "dicts", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "src_lang", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "tgt_lang", "type": "Any"}, {"lineNumber": 210, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 229, "col_offset": 59, "nodeName": "source_lang", "type": "Any"}, {"lineNumber": 229, "col_offset": 82, "nodeName": "target_lang", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "alter_dataset_langtok", "type": "Any"}, {"lineNumber": 253, "col_offset": 66, "nodeName": "args", "type": "Any"}, {"lineNumber": 254, "col_offset": 96, "nodeName": "args", "type": "Any"}, {"lineNumber": 256, "col_offset": 73, "nodeName": "args", "type": "Any"}, {"lineNumber": 258, "col_offset": 83, "nodeName": "decoder_langtok", "type": "Any"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 276, "col_offset": 48, "nodeName": "sample", "type": "Any"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 293, "col_offset": 46, "nodeName": "sample", "type": "Any"}, {"lineNumber": 293, "col_offset": 75, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 295, "col_offset": 62, "nodeName": "model", "type": "Any"}, {"lineNumber": 295, "col_offset": 75, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 295, "col_offset": 94, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "loss", "type": "Any"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 309, "col_offset": 54, "nodeName": "eos", "type": "Any"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "sample_lang", "type": "Any"}, {"lineNumber": 320, "col_offset": 20, "nodeName": "sample_lang", "type": "Any"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 338, "col_offset": 38, "nodeName": "key", "type": "str"}, {"lineNumber": 338, "col_offset": 65, "nodeName": "values", "type": "Callable"}, {"lineNumber": 347, "col_offset": 66, "nodeName": "agg_logging_outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "args", "type": "Any"}, {"lineNumber": 365, "col_offset": 54, "nodeName": "args", "type": "Any"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 366, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 370, "col_offset": 23, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 136, "col_offset": 80, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "dicts", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "dicts", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "dicts", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "dicts", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "dicts", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "dicts", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "dicts", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 157, "col_offset": 71, "nodeName": "lang", "type": "Any"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "dicts", "type": "Any"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 59, "nodeName": "args", "type": "Any"}, {"lineNumber": 229, "col_offset": 82, "nodeName": "args", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "LanguagePairDataset", "type": "Type[fairseq.data.language_pair_dataset.LanguagePairDataset]"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 239, "col_offset": 36, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "source_dictionary", "type": "Any"}, {"lineNumber": 243, "col_offset": 29, "nodeName": "source_lang", "type": "Any"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "target_lang", "type": "Any"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "lang_pairs", "type": "Any"}, {"lineNumber": 258, "col_offset": 83, "nodeName": "args", "type": "Any"}, {"lineNumber": 276, "col_offset": 55, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 293, "col_offset": 53, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 293, "col_offset": 79, "nodeName": "sample", "type": "Any"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 309, "col_offset": 54, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 338, "col_offset": 65, "nodeName": "agg_logging_outputs", "type": "Dict[Any, Any]"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "lang", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "lang", "type": "Any"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "lang", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "lang", "type": "Any"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "tgt", "type": "Any"}, {"lineNumber": 229, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 82, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "eos", "type": "Any"}, {"lineNumber": 243, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "args", "type": "Any"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 293, "col_offset": 86, "nodeName": "lang_pair", "type": "Any"}, {"lineNumber": 309, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 370, "col_offset": 23, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 151, "col_offset": 50, "nodeName": "sorted_langs", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 50, "nodeName": "sorted_langs", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 50, "nodeName": "sorted_langs", "type": "List[Any]"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "source_dictionary", "type": "Any"}, {"lineNumber": 243, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 370, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "split", "type": "Any"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "self", "type": "Any"}]