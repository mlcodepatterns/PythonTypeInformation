[{"lineNumber": 32, "col_offset": 0, "nodeName": "get_dummy_dictionary", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "get_dummy_task_and_parser", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "get_dummy_input", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "get_dummy_encoder_output", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 0, "nodeName": "_current_postion_info", "type": "Callable[[], Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "check_encoder_output", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "check_decoder_output", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "DEFAULT_TEST_VOCAB_SIZE", "type": "int"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "FairseqTask", "type": "Type[fairseq.tasks.fairseq_task.FairseqTask]"}, {"lineNumber": 229, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 254, "col_offset": 41, "nodeName": "TestBaseFairseqModelBase", "type": "Type[TestBaseFairseqModelBase]"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "TestBaseFairseqModelBase", "type": "Type[TestBaseFairseqModelBase]"}, {"lineNumber": 385, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 424, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 473, "col_offset": 24, "nodeName": "FairseqEncoderModel", "type": "Type[fairseq.models.fairseq_model.FairseqEncoderModel]"}, {"lineNumber": 489, "col_offset": 19, "nodeName": "FairseqEncoder", "type": "Type[fairseq.models.fairseq_encoder.FairseqEncoder]"}, {"lineNumber": 498, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "DEFAULT_TEST_VOCAB_SIZE", "type": "int"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "dummy_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "dummy_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "forward_input", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "feature", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "T", "type": "int"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "prev_output_tokens", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "b", "type": "int"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "prev_output_tokens", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "forward_input", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "encoder_out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "encoder_out", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "seq_lengths", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "encoder_out", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "cf", "type": "Optional[types.FrameType]"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "frameinfo", "type": "str"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 229, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 385, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 424, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 498, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "Dictionary", "type": "Type[fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "id", "type": "int"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "dictionary", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "tgt_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "dictionary", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "add_args", "type": "Callable[[Any], None]"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "B", "type": "int"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "T", "type": "int"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "D", "type": "int"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "B", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "token_length", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "collate_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "prev_output_tokens", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "sorted_order", "type": "Any"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "sort", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "forward_input", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 97, "col_offset": 58, "nodeName": "sorted_order", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "forward_input", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "forward_input", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 5, "nodeName": "T", "type": "int"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "B", "type": "int"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "D", "type": "int"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "t_", "type": "Any"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "currentframe", "type": "Callable[[], Optional[types.FrameType]]"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "f_lineno", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 164, "col_offset": 7, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 164, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 169, "col_offset": 7, "nodeName": "mask", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "model", "type": "None"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "forward_input", "type": "None"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "forward_input", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 341, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "forward_input", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "forward_input", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "encoder", "type": "None"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "forward_input", "type": "None"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 440, "col_offset": 23, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "forward_input", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "decoder", "type": "None"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "forward_input", "type": "None"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "prev_output_tokens", "type": "None"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "sentence_avg", "type": "bool"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "threshold", "type": "float"}, {"lineNumber": 509, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "model", "type": "DummyEncoderModel"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "predicted_idx", "type": "int"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 533, "col_offset": 15, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 536, "col_offset": 11, "nodeName": "soft_target", "type": "Any"}, {"lineNumber": 542, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "L", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "get_dummy_dictionary", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 62, "col_offset": 60, "nodeName": "SUPPRESS", "type": "str"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "DummyTask", "type": "Type[DummyTask]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "DummyTask", "type": "Type[DummyTask]"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "randint", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "randint", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "randint", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "fairseq_data_utils", "type": "module"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "feature", "type": "Any"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 112, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "randint", "type": "Any"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "expand", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "B", "type": "int"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "expand", "type": "Any"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "T", "type": "int"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "filename", "type": "str"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "f_back", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "msg", "type": "str"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "msg", "type": "str"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "msg", "type": "str"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "msg", "type": "str"}, {"lineNumber": 164, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "msg", "type": "str"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "decoder_output", "type": "Any"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "msg", "type": "str"}, {"lineNumber": 211, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "decoder_output", "type": "Any"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "msg", "type": "str"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 215, "col_offset": 41, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "msg", "type": "str"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "cls", "type": "Type[TestBaseFairseqModelBase]"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "TestBaseFairseqModelBase", "type": "Type[TestBaseFairseqModelBase]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "setUpClass", "type": "Callable[[Any], None]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TestBaseFairseqModelBase"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "TestBaseFairseqModelBase"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TestBaseFairseqModelBase"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "cls", "type": "Type[TestFairseqEncoderDecoderModelBase]"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "TestFairseqEncoderDecoderModelBase", "type": "Type[TestFairseqEncoderDecoderModelBase]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "setUpClass", "type": "Callable[[], Any]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 272, "col_offset": 14, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "get_dummy_task_and_parser", "type": "Callable[[], Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "add_args", "type": "Any"}, {"lineNumber": 273, "col_offset": 27, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "extra_args_setters", "type": "Any"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "args_setter", "type": "Any"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "extra_args_setters", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "build_model", "type": "Any"}, {"lineNumber": 279, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 279, "col_offset": 44, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 283, "col_offset": 69, "nodeName": "input", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 296, "col_offset": 34, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "logprob", "type": "Any"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "prob", "type": "Any"}, {"lineNumber": 324, "col_offset": 11, "nodeName": "cls", "type": "Type[TestFairseqEncoderModelBase]"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "TestFairseqEncoderModelBase", "type": "Type[TestFairseqEncoderModelBase]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "setUpClass", "type": "Callable[[], Any]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 333, "col_offset": 14, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "get_dummy_task_and_parser", "type": "Callable[[], Any]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "add_args", "type": "Any"}, {"lineNumber": 334, "col_offset": 27, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 336, "col_offset": 11, "nodeName": "extra_args_setters", "type": "Any"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "args_setter", "type": "Any"}, {"lineNumber": 337, "col_offset": 31, "nodeName": "extra_args_setters", "type": "Any"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "build_model", "type": "Any"}, {"lineNumber": 340, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 340, "col_offset": 44, "nodeName": "task", "type": "DummyTask"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 344, "col_offset": 69, "nodeName": "input", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "pop", "type": "Union[Any, Callable]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 353, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "bsz", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 364, "col_offset": 34, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 367, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "logprob", "type": "Any"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "prob", "type": "Any"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "cls", "type": "Type[TestFairseqEncoderBase]"}, {"lineNumber": 392, "col_offset": 18, "nodeName": "TestFairseqEncoderBase", "type": "Type[TestFairseqEncoderBase]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "setUpClass", "type": "Callable[[Any], None]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "self", "type": "TestFairseqEncoderBase"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "self", "type": "TestFairseqEncoderBase"}, {"lineNumber": 404, "col_offset": 69, "nodeName": "input", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "pop", "type": "Union[Any, Callable]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "self", "type": "TestFairseqEncoderBase"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "self", "type": "TestFairseqEncoderBase"}, {"lineNumber": 414, "col_offset": 11, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 414, "col_offset": 28, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "bsz", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 421, "col_offset": 34, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 431, "col_offset": 11, "nodeName": "cls", "type": "Type[TestFairseqDecoderBase]"}, {"lineNumber": 431, "col_offset": 18, "nodeName": "TestFairseqDecoderBase", "type": "Type[TestFairseqDecoderBase]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "setUpClass", "type": "Callable[[Any], None]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 443, "col_offset": 78, "nodeName": "input", "type": "Any"}, {"lineNumber": 446, "col_offset": 11, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "encoder_input", "type": "Dict[str, Any]"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "prev_output_tokens", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "prev_output_tokens", "type": "Any"}, {"lineNumber": 450, "col_offset": 38, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 470, "col_offset": 33, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 475, "col_offset": 25, "nodeName": "encoder", "type": "DummyEncoder"}, {"lineNumber": 479, "col_offset": 15, "nodeName": "cls", "type": "Type[DummyEncoderModel]"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "log", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 494, "col_offset": 14, "nodeName": "max_len", "type": "Any"}, {"lineNumber": 494, "col_offset": 24, "nodeName": "lengths_to_encoder_padding_mask", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 494, "col_offset": 56, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 495, "col_offset": 31, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 495, "col_offset": 67, "nodeName": "mask", "type": "Any"}, {"lineNumber": 501, "col_offset": 11, "nodeName": "cls", "type": "Type[CrossEntropyCriterionTestBase]"}, {"lineNumber": 501, "col_offset": 18, "nodeName": "CrossEntropyCriterionTestBase", "type": "Type[CrossEntropyCriterionTestBase]"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "setUpClass", "type": "Callable[[Any], None]"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "setUpArgs", "type": "Callable[[], Any]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "self", "type": "CrossEntropyCriterionTestBase"}, {"lineNumber": 513, "col_offset": 21, "nodeName": "DummyEncoderModel", "type": "Type[DummyEncoderModel]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "self", "type": "CrossEntropyCriterionTestBase"}, {"lineNumber": 514, "col_offset": 25, "nodeName": "criterion_cls", "type": "Any"}, {"lineNumber": 523, "col_offset": 29, "nodeName": "correct_prediction", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 529, "col_offset": 12, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 545, "col_offset": 21, "nodeName": "get_src_tokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 545, "col_offset": 41, "nodeName": "correct", "type": "Any"}, {"lineNumber": 545, "col_offset": 50, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 546, "col_offset": 17, "nodeName": "get_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 546, "col_offset": 33, "nodeName": "soft_target", "type": "Any"}, {"lineNumber": 547, "col_offset": 12, "nodeName": "size", "type": "Any"}, {"lineNumber": 550, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "dummy_dict", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "id", "type": "int"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "add_symbol", "type": "Callable[..., int]"}, {"lineNumber": 62, "col_offset": 60, "nodeName": "argparse", "type": "module"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "T", "type": "int"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "B", "type": "int"}, {"lineNumber": 80, "col_offset": 55, "nodeName": "int64", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "K", "type": "int"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "token_length", "type": "Any"}, {"lineNumber": 86, "col_offset": 75, "nodeName": "int64", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "prev_output_tokens", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 112, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 114, "col_offset": 65, "nodeName": "T", "type": "int"}, {"lineNumber": 114, "col_offset": 73, "nodeName": "B", "type": "int"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "encoder_out", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "path", "type": "module"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "cf", "type": "Optional[types.FrameType]"}, {"lineNumber": 142, "col_offset": 64, "nodeName": "_current_postion_info", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "_current_postion_info", "type": "Callable[[], Any]"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "_current_postion_info", "type": "Callable[[], Any]"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "torch", "type": "Any"}, {"lineNumber": 161, "col_offset": 53, "nodeName": "_current_postion_info", "type": "Callable[[], Any]"}, {"lineNumber": 164, "col_offset": 7, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 165, "col_offset": 54, "nodeName": "_current_postion_info", "type": "Callable[[], Any]"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "mask", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "msg", "type": "str"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "msg", "type": "str"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "dim", "type": "Any"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "msg", "type": "str"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 192, "col_offset": 54, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "msg", "type": "str"}, {"lineNumber": 208, "col_offset": 56, "nodeName": "_current_postion_info", "type": "Callable[[], Any]"}, {"lineNumber": 212, "col_offset": 61, "nodeName": "_current_postion_info", "type": "Callable[[], Any]"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "decoder_output", "type": "Any"}, {"lineNumber": 215, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 217, "col_offset": 64, "nodeName": "_current_postion_info", "type": "Callable[[], Any]"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.case.SkipTest]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestBaseFairseqModelBase"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 242, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 242, "col_offset": 42, "nodeName": "BaseFairseqModel", "type": "Type[fairseq.models.fairseq_model.BaseFairseqModel]"}, {"lineNumber": 263, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.case.SkipTest]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "model_cls", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "model_cls", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "model_cls", "type": "Any"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "input", "type": "Any"}, {"lineNumber": 283, "col_offset": 29, "nodeName": "get_dummy_input", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "forward", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "succ", "type": "bool"}, {"lineNumber": 293, "col_offset": 18, "nodeName": "msg", "type": "Optional[str]"}, {"lineNumber": 293, "col_offset": 24, "nodeName": "check_decoder_output", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 45, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "succ", "type": "bool"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "forward", "type": "Any"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "get_normalized_probs", "type": "Any"}, {"lineNumber": 301, "col_offset": 54, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "get_normalized_probs", "type": "Any"}, {"lineNumber": 302, "col_offset": 51, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 325, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.case.SkipTest]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "model_cls", "type": "Any"}, {"lineNumber": 330, "col_offset": 34, "nodeName": "FairseqEncoderModel", "type": "Type[fairseq.models.fairseq_model.FairseqEncoderModel]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "model_cls", "type": "Any"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "model_cls", "type": "Any"}, {"lineNumber": 344, "col_offset": 50, "nodeName": "input", "type": "Any"}, {"lineNumber": 344, "col_offset": 29, "nodeName": "get_dummy_input", "type": "Callable[..., Any]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "forward_input", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 353, "col_offset": 34, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 354, "col_offset": 18, "nodeName": "size", "type": "Any"}, {"lineNumber": 355, "col_offset": 29, "nodeName": "forward", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "succ", "type": "bool"}, {"lineNumber": 361, "col_offset": 18, "nodeName": "msg", "type": "Optional[str]"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "check_encoder_output", "type": "Callable[..., Any]"}, {"lineNumber": 361, "col_offset": 45, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 362, "col_offset": 19, "nodeName": "succ", "type": "bool"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 367, "col_offset": 11, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "forward", "type": "Any"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "get_normalized_probs", "type": "Any"}, {"lineNumber": 369, "col_offset": 54, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "get_normalized_probs", "type": "Any"}, {"lineNumber": 370, "col_offset": 51, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.case.SkipTest]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "TestFairseqEncoderBase"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 398, "col_offset": 23, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 398, "col_offset": 32, "nodeName": "FairseqEncoder", "type": "Type[fairseq.models.fairseq_encoder.FairseqEncoder]"}, {"lineNumber": 404, "col_offset": 50, "nodeName": "input", "type": "Any"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "get_dummy_input", "type": "Callable[..., Any]"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "forward_input", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 414, "col_offset": 11, "nodeName": "self", "type": "TestFairseqEncoderBase"}, {"lineNumber": 414, "col_offset": 28, "nodeName": "self", "type": "TestFairseqEncoderBase"}, {"lineNumber": 415, "col_offset": 18, "nodeName": "size", "type": "Any"}, {"lineNumber": 417, "col_offset": 29, "nodeName": "forward", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "succ", "type": "bool"}, {"lineNumber": 418, "col_offset": 18, "nodeName": "msg", "type": "Optional[str]"}, {"lineNumber": 418, "col_offset": 24, "nodeName": "check_encoder_output", "type": "Callable[..., Any]"}, {"lineNumber": 418, "col_offset": 45, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 419, "col_offset": 19, "nodeName": "succ", "type": "bool"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "self", "type": "TestFairseqEncoderBase"}, {"lineNumber": 432, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.case.SkipTest]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 437, "col_offset": 23, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 437, "col_offset": 32, "nodeName": "FairseqDecoder", "type": "Type[fairseq.models.fairseq_decoder.FairseqDecoder]"}, {"lineNumber": 443, "col_offset": 59, "nodeName": "input", "type": "Any"}, {"lineNumber": 443, "col_offset": 29, "nodeName": "get_dummy_encoder_output", "type": "Callable[..., Any]"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 447, "col_offset": 33, "nodeName": "get_dummy_input", "type": "Callable[..., Any]"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 448, "col_offset": 38, "nodeName": "encoder_input", "type": "Dict[str, Any]"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "prev_output_tokens", "type": "Any"}, {"lineNumber": 463, "col_offset": 29, "nodeName": "forward", "type": "Any"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "succ", "type": "bool"}, {"lineNumber": 467, "col_offset": 18, "nodeName": "msg", "type": "Optional[str]"}, {"lineNumber": 467, "col_offset": 24, "nodeName": "check_decoder_output", "type": "Callable[[Any], Any]"}, {"lineNumber": 467, "col_offset": 45, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 468, "col_offset": 19, "nodeName": "succ", "type": "bool"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 479, "col_offset": 19, "nodeName": "DummyEncoder", "type": "Type[DummyEncoder]"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "div", "type": "Any"}, {"lineNumber": 502, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.case.SkipTest]"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "argparse", "type": "module"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "self", "type": "CrossEntropyCriterionTestBase"}, {"lineNumber": 514, "col_offset": 25, "nodeName": "self", "type": "CrossEntropyCriterionTestBase"}, {"lineNumber": 514, "col_offset": 49, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 525, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 526, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 529, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 530, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 531, "col_offset": 20, "nodeName": "t", "type": "int"}, {"lineNumber": 537, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 538, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 541, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 545, "col_offset": 21, "nodeName": "self", "type": "CrossEntropyCriterionTestBase"}, {"lineNumber": 546, "col_offset": 17, "nodeName": "self", "type": "CrossEntropyCriterionTestBase"}, {"lineNumber": 547, "col_offset": 12, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 549, "col_offset": 40, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "dictionary", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 75, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "view", "type": "Any"}, {"lineNumber": 116, "col_offset": 66, "nodeName": "T", "type": "int"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "view", "type": "Any"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "B", "type": "int"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "getframeinfo", "type": "Callable[..., inspect.Traceback]"}, {"lineNumber": 129, "col_offset": 38, "nodeName": "cf", "type": "Optional[types.FrameType]"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 172, "col_offset": 64, "nodeName": "_current_postion_info", "type": "Callable[[], Any]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 177, "col_offset": 47, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 177, "col_offset": 61, "nodeName": "bool", "type": "Any"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "_current_postion_info", "type": "Callable[[], Any]"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "mask", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "_current_postion_info", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "size", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "_current_postion_info", "type": "Callable[[], Any]"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 263, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "FairseqEncoderDecoderModel", "type": "Type[fairseq.models.fairseq_model.FairseqEncoderDecoderModel]"}, {"lineNumber": 268, "col_offset": 63, "nodeName": "FairseqModel", "type": "Type[fairseq.models.fairseq_model.FairseqModel]"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "args_setter", "type": "Any"}, {"lineNumber": 278, "col_offset": 28, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 290, "col_offset": 50, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "succ", "type": "bool"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 300, "col_offset": 50, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 310, "col_offset": 28, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 310, "col_offset": 36, "nodeName": "logprob", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 311, "col_offset": 36, "nodeName": "prob", "type": "Any"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 313, "col_offset": 28, "nodeName": "is_tensor", "type": "Any"}, {"lineNumber": 313, "col_offset": 44, "nodeName": "logprob", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "is_tensor", "type": "Any"}, {"lineNumber": 314, "col_offset": 44, "nodeName": "prob", "type": "Any"}, {"lineNumber": 325, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "args_setter", "type": "Any"}, {"lineNumber": 338, "col_offset": 28, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 355, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 355, "col_offset": 50, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 361, "col_offset": 72, "nodeName": "bsz", "type": "Any"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 363, "col_offset": 32, "nodeName": "succ", "type": "bool"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 368, "col_offset": 50, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 378, "col_offset": 28, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 378, "col_offset": 36, "nodeName": "logprob", "type": "Any"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 379, "col_offset": 28, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 379, "col_offset": 36, "nodeName": "prob", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "is_tensor", "type": "Any"}, {"lineNumber": 381, "col_offset": 44, "nodeName": "logprob", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 382, "col_offset": 28, "nodeName": "is_tensor", "type": "Any"}, {"lineNumber": 382, "col_offset": 44, "nodeName": "prob", "type": "Any"}, {"lineNumber": 393, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "self", "type": "TestFairseqEncoderBase"}, {"lineNumber": 417, "col_offset": 29, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 417, "col_offset": 52, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 418, "col_offset": 72, "nodeName": "bsz", "type": "Any"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 420, "col_offset": 32, "nodeName": "succ", "type": "bool"}, {"lineNumber": 432, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 448, "col_offset": 38, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 463, "col_offset": 29, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 464, "col_offset": 35, "nodeName": "prev_output_tokens", "type": "Any"}, {"lineNumber": 465, "col_offset": 28, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 469, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 32, "nodeName": "succ", "type": "bool"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 485, "col_offset": 22, "nodeName": "net_output", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 502, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 513, "col_offset": 47, "nodeName": "DummyEncoder", "type": "Type[DummyEncoder]"}, {"lineNumber": 514, "col_offset": 60, "nodeName": "DummyTask", "type": "Type[DummyTask]"}, {"lineNumber": 514, "col_offset": 70, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 525, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 525, "col_offset": 51, "nodeName": "float", "type": "Any"}, {"lineNumber": 529, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 529, "col_offset": 55, "nodeName": "float", "type": "Any"}, {"lineNumber": 531, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 537, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 537, "col_offset": 47, "nodeName": "float", "type": "Any"}, {"lineNumber": 541, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 541, "col_offset": 48, "nodeName": "long", "type": "Any"}, {"lineNumber": 549, "col_offset": 67, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 551, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 551, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "DummyTask"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "item", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "encoder_out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "seq_lengths", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 177, "col_offset": 47, "nodeName": "mask", "type": "Any"}, {"lineNumber": 177, "col_offset": 61, "nodeName": "torch", "type": "Any"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "mask", "type": "Any"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 290, "col_offset": 50, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 295, "col_offset": 42, "nodeName": "msg", "type": "Any"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 300, "col_offset": 50, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "self", "type": "TestFairseqEncoderDecoderModelBase"}, {"lineNumber": 313, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 354, "col_offset": 18, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 355, "col_offset": 29, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 355, "col_offset": 50, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 363, "col_offset": 42, "nodeName": "msg", "type": "Any"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 368, "col_offset": 50, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 382, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 415, "col_offset": 18, "nodeName": "forward_input", "type": "Any"}, {"lineNumber": 417, "col_offset": 29, "nodeName": "self", "type": "TestFairseqEncoderBase"}, {"lineNumber": 417, "col_offset": 52, "nodeName": "self", "type": "TestFairseqEncoderBase"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "self", "type": "TestFairseqEncoderBase"}, {"lineNumber": 420, "col_offset": 42, "nodeName": "msg", "type": "Any"}, {"lineNumber": 463, "col_offset": 29, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 464, "col_offset": 35, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 465, "col_offset": 28, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 469, "col_offset": 16, "nodeName": "self", "type": "TestFairseqDecoderBase"}, {"lineNumber": 469, "col_offset": 42, "nodeName": "msg", "type": "Any"}, {"lineNumber": 485, "col_offset": 53, "nodeName": "net_output", "type": "Any"}, {"lineNumber": 525, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 527, "col_offset": 16, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 527, "col_offset": 30, "nodeName": "predicted_idx", "type": "int"}, {"lineNumber": 529, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 537, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 539, "col_offset": 16, "nodeName": "target", "type": "Any"}, {"lineNumber": 541, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 549, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 549, "col_offset": 81, "nodeName": "L", "type": "Any"}, {"lineNumber": 551, "col_offset": 23, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 551, "col_offset": 44, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "arange", "type": "Any"}, {"lineNumber": 116, "col_offset": 55, "nodeName": "T", "type": "int"}, {"lineNumber": 354, "col_offset": 18, "nodeName": "self", "type": "TestFairseqEncoderModelBase"}, {"lineNumber": 415, "col_offset": 18, "nodeName": "self", "type": "TestFairseqEncoderBase"}, {"lineNumber": 527, "col_offset": 27, "nodeName": "b", "type": "int"}, {"lineNumber": 532, "col_offset": 37, "nodeName": "predicted_idx", "type": "int"}, {"lineNumber": 539, "col_offset": 23, "nodeName": "b", "type": "int"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 532, "col_offset": 20, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 532, "col_offset": 34, "nodeName": "t", "type": "int"}, {"lineNumber": 85, "col_offset": 65, "nodeName": "b", "type": "int"}, {"lineNumber": 532, "col_offset": 31, "nodeName": "b", "type": "int"}]