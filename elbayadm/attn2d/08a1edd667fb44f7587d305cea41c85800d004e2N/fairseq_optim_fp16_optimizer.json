[{"lineNumber": 13, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "update_scale", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "_decrease_loss_scale", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "has_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "has_flat_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "load_state_dict", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "_sync_fp16_grads_to_fp32", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "multiply_grads", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "clip_grad_norm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "step", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "zero_grad", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "_FP16OptimizerMixin", "type": "Type[_FP16OptimizerMixin]"}, {"lineNumber": 213, "col_offset": 41, "nodeName": "FairseqOptimizer", "type": "Type[fairseq.optim.fairseq_optimizer.FairseqOptimizer]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "build_optimizer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "optimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "optimizer_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "get_lr", "type": "Callable[[Any], Any]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "set_lr", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 277, "col_offset": 41, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "has_flat_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "load_state_dict", "type": "Callable[..., Any]"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "backward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "_unscale_grads", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "multiply_grads", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "clip_grad_norm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "step", "type": "Callable[..., Any]"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "zero_grad", "type": "Callable[[Any], Any]"}, {"lineNumber": 386, "col_offset": 35, "nodeName": "_MemoryEfficientFP16OptimizerMixin", "type": "Type[_MemoryEfficientFP16OptimizerMixin]"}, {"lineNumber": 386, "col_offset": 71, "nodeName": "FairseqOptimizer", "type": "Type[fairseq.optim.fairseq_optimizer.FairseqOptimizer]"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "build_optimizer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "optimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "optimizer_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "get_lr", "type": "Callable[[Any], Any]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "set_lr", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 213, "col_offset": 41, "nodeName": "optim", "type": "module"}, {"lineNumber": 386, "col_offset": 71, "nodeName": "optim", "type": "module"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "tolerance", "type": "Any"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "tolerance", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "_last_rescale_iter", "type": "int"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "_overflows_since_rescale", "type": "int"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "iter_since_rescale", "type": "int"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "overflow", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "flatten", "type": "bool"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_needs_sync", "type": "bool"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "_needs_sync", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "_needs_sync", "type": "bool"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "has_flat_params", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "prev_scale", "type": "Any"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "has_flat_params", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "has_flat_params", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "_needs_sync", "type": "bool"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 220, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "flatten", "type": "bool"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "flatten", "type": "bool"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "optimizer_config", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 290, "col_offset": 35, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "groups", "type": "Any"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "saved_groups", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "_grads_are_scaled", "type": "bool"}, {"lineNumber": 337, "col_offset": 11, "nodeName": "_grads_are_scaled", "type": "Any"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "_grads_are_scaled", "type": "bool"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "prev_scale", "type": "Any"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 361, "col_offset": 11, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "_grads_are_scaled", "type": "bool"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 409, "col_offset": 33, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 427, "col_offset": 30, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "fp16_optimizer", "type": "Any"}, {"lineNumber": 441, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "optimizer_config", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "_iter", "type": "int"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "_last_rescale_iter", "type": "int"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "_iter", "type": "int"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "_overflows_since_rescale", "type": "int"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "pct_overflow", "type": "float"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "is_tensor", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "total_param_size", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "offset", "type": "int"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "params", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "fp32_params", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "params", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "fp32_params", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 105, "col_offset": 56, "nodeName": "optimizer_overrides", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "has_flat_params", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "_needs_sync", "type": "bool"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "has_flat_params", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "_sync_fp16_grads_to_fp32", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "has_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 50, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "update_scale", "type": "Any"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "_sync_fp16_grads_to_fp32", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 184, "col_offset": 33, "nodeName": "closure", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "offset", "type": "int"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "grad", "type": "None"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "p32", "type": "Any"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "scale_window", "type": "int"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 232, "col_offset": 27, "nodeName": "fp16_scale_window", "type": "Any"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "build_fp32_params", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "params", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "flatten", "type": "bool"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "cls", "type": "Type[FP16Optimizer]"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 260, "col_offset": 49, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "get_lr", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "set_lr", "type": "Any"}, {"lineNumber": 274, "col_offset": 35, "nodeName": "lr", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 290, "col_offset": 35, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 301, "col_offset": 27, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 304, "col_offset": 47, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 304, "col_offset": 59, "nodeName": "optimizer_overrides", "type": "Any"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 312, "col_offset": 23, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 320, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 320, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 332, "col_offset": 22, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 337, "col_offset": 11, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "_grads_are_scaled", "type": "bool"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "_unscale_grads", "type": "Callable[..., Any]"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "clip_grad_norm", "type": "Any"}, {"lineNumber": 355, "col_offset": 58, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "has_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 358, "col_offset": 50, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "update_scale", "type": "Any"}, {"lineNumber": 360, "col_offset": 33, "nodeName": "overflow", "type": "bool"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "_unscale_grads", "type": "Callable[..., Any]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 378, "col_offset": 36, "nodeName": "closure", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "supports_memory_efficient_fp16", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 419, "col_offset": 27, "nodeName": "fp16_scale_window", "type": "Any"}, {"lineNumber": 421, "col_offset": 22, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 427, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 436, "col_offset": 25, "nodeName": "build_optimizer", "type": "Any"}, {"lineNumber": 436, "col_offset": 47, "nodeName": "args", "type": "Any"}, {"lineNumber": 436, "col_offset": 53, "nodeName": "params", "type": "Any"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "cls", "type": "Type[MemoryEfficientFP16Optimizer]"}, {"lineNumber": 437, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 437, "col_offset": 33, "nodeName": "fp16_optimizer", "type": "Any"}, {"lineNumber": 441, "col_offset": 15, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "get_lr", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "set_lr", "type": "Any"}, {"lineNumber": 451, "col_offset": 38, "nodeName": "lr", "type": "Any"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "_overflows_since_rescale", "type": "int"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "pct_overflow", "type": "float"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "tolerance", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "_last_rescale_iter", "type": "int"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "_iter", "type": "int"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "_overflows_since_rescale", "type": "int"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "_last_rescale_iter", "type": "int"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "_iter", "type": "int"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "max", "type": "Callable"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 47, "col_offset": 51, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "grad_norm", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "total_param_size", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "numel", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "offset", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "numel", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "new", "type": "Any"}, {"lineNumber": 79, "col_offset": 52, "nodeName": "total_param_size", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "p32", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "offset", "type": "int"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "_sync_fp16_grads_to_fp32", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "c", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "p32", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "clip_grad_norm_", "type": "Any"}, {"lineNumber": 160, "col_offset": 76, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "clip_grad_norm_", "type": "Any"}, {"lineNumber": 162, "col_offset": 46, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 162, "col_offset": 64, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 169, "col_offset": 41, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 172, "col_offset": 41, "nodeName": "prev_scale", "type": "Any"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "OverflowError", "type": "Type[OverflowError]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "numel", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "offset", "type": "Any"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "numel", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "p32", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 196, "col_offset": 48, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 230, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 232, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "fp16_init_scale", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "scale_window", "type": "Union[Any, int]"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "fp16_scale_tolerance", "type": "Any"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "cls", "type": "Type[FP16Optimizer]"}, {"lineNumber": 250, "col_offset": 60, "nodeName": "flatten", "type": "bool"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "build_optimizer", "type": "Any"}, {"lineNumber": 252, "col_offset": 51, "nodeName": "args", "type": "Any"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "build_optimizer", "type": "Any"}, {"lineNumber": 254, "col_offset": 51, "nodeName": "args", "type": "Any"}, {"lineNumber": 254, "col_offset": 57, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 255, "col_offset": 27, "nodeName": "supports_flat_params", "type": "Any"}, {"lineNumber": 256, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 281, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 290, "col_offset": 35, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 302, "col_offset": 37, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "id_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "param", "type": "nothing"}, {"lineNumber": 323, "col_offset": 46, "nodeName": "v", "type": "Any"}, {"lineNumber": 332, "col_offset": 22, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 343, "col_offset": 19, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "_unscale_grads", "type": "Callable[..., Any]"}, {"lineNumber": 348, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 350, "col_offset": 50, "nodeName": "c", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 362, "col_offset": 41, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 365, "col_offset": 41, "nodeName": "prev_scale", "type": "Any"}, {"lineNumber": 371, "col_offset": 18, "nodeName": "OverflowError", "type": "Type[OverflowError]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 404, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 411, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 411, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 419, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 422, "col_offset": 23, "nodeName": "fp16_init_scale", "type": "Any"}, {"lineNumber": 423, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 424, "col_offset": 22, "nodeName": "fp16_scale_tolerance", "type": "Any"}, {"lineNumber": 425, "col_offset": 22, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 427, "col_offset": 30, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 436, "col_offset": 25, "nodeName": "optim", "type": "module"}, {"lineNumber": 441, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 34, "col_offset": 59, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 34, "col_offset": 65, "nodeName": "iter_since_rescale", "type": "int"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "_decrease_loss_scale", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 47, "col_offset": 51, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "float", "type": "Any"}, {"lineNumber": 72, "col_offset": 82, "nodeName": "device", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "numel", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "p32", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "p32", "type": "Any"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "grad_data", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "numel", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "offset", "type": "Any"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "numel", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 133, "col_offset": 48, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "p32", "type": "Any"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 135, "col_offset": 52, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "c", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "utils", "type": "module"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "data", "type": "Any"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "utils", "type": "module"}, {"lineNumber": 162, "col_offset": 46, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 169, "col_offset": 41, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "FloatingPointError", "type": "Type[FloatingPointError]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "numel", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 196, "col_offset": 48, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "update_freq", "type": "Any"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "optim", "type": "module"}, {"lineNumber": 252, "col_offset": 58, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "optim", "type": "module"}, {"lineNumber": 255, "col_offset": 27, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "old_id", "type": "nothing"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "p", "type": "nothing"}, {"lineNumber": 315, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 320, "col_offset": 20, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 322, "col_offset": 24, "nodeName": "id_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 332, "col_offset": 22, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 341, "col_offset": 50, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 341, "col_offset": 67, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 362, "col_offset": 41, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "FloatingPointError", "type": "Type[FloatingPointError]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 405, "col_offset": 51, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 412, "col_offset": 19, "nodeName": "update_freq", "type": "Any"}, {"lineNumber": 413, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 417, "col_offset": 35, "nodeName": "distributed_world_size", "type": "Any"}, {"lineNumber": 417, "col_offset": 65, "nodeName": "update_freq", "type": "Any"}, {"lineNumber": 422, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 424, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 425, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16Optimizer"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "_iter", "type": "int"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "numel", "type": "Any"}, {"lineNumber": 71, "col_offset": 54, "nodeName": "p", "type": "Any"}, {"lineNumber": 71, "col_offset": 59, "nodeName": "params", "type": "Any"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "torch", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "view", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "float", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "p32", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "fp32_params", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "numel", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 135, "col_offset": 52, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "grad", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "grad", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "c", "type": "Any"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "grad", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 178, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 178, "col_offset": 64, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "view_as", "type": "Any"}, {"lineNumber": 193, "col_offset": 80, "nodeName": "data", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "p32", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "distributed_world_size", "type": "Any"}, {"lineNumber": 230, "col_offset": 69, "nodeName": "update_freq", "type": "Any"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 323, "col_offset": 37, "nodeName": "param", "type": "nothing"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 341, "col_offset": 67, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 367, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 370, "col_offset": 25, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 371, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 371, "col_offset": 64, "nodeName": "loss_scale", "type": "Any"}, {"lineNumber": 405, "col_offset": 51, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 412, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 417, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 417, "col_offset": 65, "nodeName": "args", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 72, "col_offset": 82, "nodeName": "params", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "data", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "grad", "type": "Any"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "grad", "type": "Any"}, {"lineNumber": 129, "col_offset": 71, "nodeName": "new_zeros", "type": "Any"}, {"lineNumber": 129, "col_offset": 88, "nodeName": "shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "grad_data", "type": "Any"}, {"lineNumber": 131, "col_offset": 74, "nodeName": "view", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "multiply_grads", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "p32", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 142, "col_offset": 52, "nodeName": "data", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 178, "col_offset": 64, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 193, "col_offset": 80, "nodeName": "p", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "p32", "type": "Any"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "args", "type": "Any"}, {"lineNumber": 230, "col_offset": 69, "nodeName": "args", "type": "Any"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 341, "col_offset": 67, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 370, "col_offset": 25, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 371, "col_offset": 64, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 405, "col_offset": 51, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "offset", "type": "int"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "p", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "p", "type": "Any"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "p", "type": "Any"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "p", "type": "Any"}, {"lineNumber": 129, "col_offset": 71, "nodeName": "data", "type": "Any"}, {"lineNumber": 129, "col_offset": 88, "nodeName": "data", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 131, "col_offset": 74, "nodeName": "grad_data", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "grad", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 142, "col_offset": 52, "nodeName": "p", "type": "Any"}, {"lineNumber": 142, "col_offset": 66, "nodeName": "float", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 178, "col_offset": 64, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 371, "col_offset": 64, "nodeName": "self", "type": "_MemoryEfficientFP16OptimizerMixin"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "offset", "type": "int"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "numel", "type": "Any"}, {"lineNumber": 129, "col_offset": 71, "nodeName": "p", "type": "Any"}, {"lineNumber": 129, "col_offset": 88, "nodeName": "p", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 131, "col_offset": 47, "nodeName": "offset", "type": "int"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "grad", "type": "Any"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "grad", "type": "Any"}, {"lineNumber": 142, "col_offset": 66, "nodeName": "torch", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "p32", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 193, "col_offset": 51, "nodeName": "offset", "type": "int"}, {"lineNumber": 316, "col_offset": 24, "nodeName": "g", "type": "Any"}, {"lineNumber": 316, "col_offset": 40, "nodeName": "g", "type": "Any"}, {"lineNumber": 316, "col_offset": 45, "nodeName": "saved_groups", "type": "Any"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "g", "type": "Any"}, {"lineNumber": 317, "col_offset": 40, "nodeName": "g", "type": "Any"}, {"lineNumber": 317, "col_offset": 45, "nodeName": "groups", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 131, "col_offset": 54, "nodeName": "offset", "type": "int"}, {"lineNumber": 131, "col_offset": 61, "nodeName": "numel", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "p32", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "p32", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "self", "type": "_FP16OptimizerMixin"}, {"lineNumber": 193, "col_offset": 58, "nodeName": "offset", "type": "int"}, {"lineNumber": 193, "col_offset": 65, "nodeName": "numel", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "self", "type": "_FP16OptimizerMixin"}]