[{"lineNumber": 18, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 213, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "w1", "type": "int"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "w2", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "unk", "type": "float"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "normalized", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "dummy_dictionary", "type": "Callable[..., fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "eos", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "setup_task", "type": "Callable"}, {"lineNumber": 82, "col_offset": 57, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 82, "col_offset": 63, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 82, "col_offset": 66, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "build_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 106, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 107, "col_offset": 52, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 124, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 125, "col_offset": 52, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 142, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 143, "col_offset": 52, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 35, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 160, "col_offset": 52, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 161, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 176, "col_offset": 52, "nodeName": "tgt_dict", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "generate", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "src_tokens", "type": "Any"}, {"lineNumber": 177, "col_offset": 52, "nodeName": "src_lengths", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "eos", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "w2", "type": "int"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "eos", "type": "Any"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "w1", "type": "int"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "w2", "type": "int"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertHypoTokens", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertHypoScore", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertTensorEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "log", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 197, "col_offset": 58, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "pad", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "eos", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "unk", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "argparse", "type": "module"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "TestTranslationTask", "type": "Type[tests.utils.TestTranslationTask]"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "task", "type": "tests.utils.TestTranslationTask"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 94, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 97, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 97, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 100, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 100, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 106, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 107, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 113, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 113, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 116, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 119, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 124, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 124, "col_offset": 79, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 125, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 129, "col_offset": 61, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 131, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 131, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 132, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 134, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 134, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 135, "col_offset": 66, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 137, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 137, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 138, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 142, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 142, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 142, "col_offset": 79, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 143, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 146, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 146, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 146, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 147, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 149, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 149, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 150, "col_offset": 61, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 152, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 152, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 152, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 153, "col_offset": 71, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 155, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 155, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 156, "col_offset": 66, "nodeName": "lenpen", "type": "float"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 160, "col_offset": 35, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 160, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 161, "col_offset": 41, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 163, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 163, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 166, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 166, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 169, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 169, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 172, "col_offset": 52, "nodeName": "eos", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 176, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "generator", "type": "fairseq.sequence_generator.SequenceGenerator"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 177, "col_offset": 52, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 180, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 180, "col_offset": 48, "nodeName": "eos", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 183, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 183, "col_offset": 48, "nodeName": "w1", "type": "int"}, {"lineNumber": 183, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 183, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "w2", "type": "int"}, {"lineNumber": 186, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 186, "col_offset": 52, "nodeName": "w2", "type": "int"}, {"lineNumber": 186, "col_offset": 56, "nodeName": "w2", "type": "int"}, {"lineNumber": 186, "col_offset": 60, "nodeName": "eos", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 189, "col_offset": 44, "nodeName": "w1", "type": "int"}, {"lineNumber": 189, "col_offset": 48, "nodeName": "w2", "type": "int"}, {"lineNumber": 189, "col_offset": 52, "nodeName": "w1", "type": "int"}, {"lineNumber": 189, "col_offset": 56, "nodeName": "eos", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 193, "col_offset": 64, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "numel", "type": "Any"}, {"lineNumber": 198, "col_offset": 45, "nodeName": "numel", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 201, "col_offset": 41, "nodeName": "lenpen", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 205, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 209, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "w1", "type": "int"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "w2", "type": "int"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "eos", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 142, "col_offset": 39, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 163, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 180, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "hypos", "type": "Any"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "pos_probs", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "numel", "type": "Any"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 205, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 209, "col_offset": 36, "nodeName": "t2", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "self", "type": "TestSequenceGenerator"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "unk", "type": "float"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "unk", "type": "float"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "unk", "type": "float"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "unk", "type": "float"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "unk", "type": "float"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 198, "col_offset": 45, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "pos_scores", "type": "Any"}, {"lineNumber": 202, "col_offset": 36, "nodeName": "hypo", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "long", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "t1", "type": "Any"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "t2", "type": "Any"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "ne", "type": "Any"}, {"lineNumber": 210, "col_offset": 31, "nodeName": "t2", "type": "Any"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "t1", "type": "Any"}]