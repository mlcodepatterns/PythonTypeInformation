[{"lineNumber": 18, "col_offset": 0, "nodeName": "get_training_parser", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "get_generation_parser", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "_eval_float_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "get_eval_lm_parser", "type": "Callable[[], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "parse_args_and_arch", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "get_parser", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "add_dataset_args", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "add_distributed_training_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "add_optimization_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "add_checkpoint_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 0, "nodeName": "add_common_eval_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 0, "nodeName": "add_eval_lm_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 0, "nodeName": "add_generation_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 283, "col_offset": 0, "nodeName": "add_interactive_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 289, "col_offset": 0, "nodeName": "add_model_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "interactive", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "lr", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "update_freq", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 126, "col_offset": 7, "nodeName": "train", "type": "Any"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "gen", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "group", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "group", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "group", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "group", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "group", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "group", "type": "Any"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "get_parser", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "add_dataset_args", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "add_distributed_training_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "add_model_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "add_optimization_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "add_checkpoint_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "get_parser", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "add_dataset_args", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "add_generation_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "get_parser", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "add_dataset_args", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "add_eval_lm_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "parse_known_args", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "input_args", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "add_argument_group", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "add_args", "type": "Any"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "model_specific_group", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "add_args", "type": "Any"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "parser", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "add_args", "type": "Any"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "parser", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "add_args", "type": "Any"}, {"lineNumber": 72, "col_offset": 54, "nodeName": "parser", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "input_args", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "_eval_float_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "lr", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "_eval_float_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "update_freq", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "max_sentences_valid", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "max_sentences_valid", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "max_sentences", "type": "Any"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "args", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "add_argument_group", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "add_argument_group", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "add_argument_group", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "add_argument_group", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "add_argument_group", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "add_common_eval_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "group", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "add_argument_group", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "add_common_eval_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "group", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "add_argument_group", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "add_argument_group", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "add_interactive_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "parser", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "parser", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "SUPPRESS", "type": "str"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "parser", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "args", "type": "Any"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "args", "type": "Any"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "args", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "ARCH_CONFIG_REGISTRY", "type": "Dict[Any, Any]"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 97, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 110, "col_offset": 68, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 112, "col_offset": 91, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 152, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 155, "col_offset": 61, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 157, "col_offset": 69, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 159, "col_offset": 71, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 162, "col_offset": 62, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 164, "col_offset": 54, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 171, "col_offset": 62, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 173, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 175, "col_offset": 55, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 192, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 194, "col_offset": 67, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 201, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 203, "col_offset": 54, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 215, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 217, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 220, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 227, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 250, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 252, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 254, "col_offset": 54, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 257, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 268, "col_offset": 51, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 270, "col_offset": 51, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 276, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 285, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "group", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "argparse", "type": "module"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "ARCH_MODEL_REGISTRY", "type": "Dict[Any, Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "CRITERION_REGISTRY", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "OPTIMIZER_REGISTRY", "type": "Dict[Any, Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "LR_SCHEDULER_REGISTRY", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "arch", "type": "Any"}, {"lineNumber": 91, "col_offset": 78, "nodeName": "desc", "type": "str"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 133, "col_offset": 57, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 136, "col_offset": 75, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 143, "col_offset": 59, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 145, "col_offset": 57, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "device_count", "type": "Any"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 310, "col_offset": 13, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "arch", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "OPTIMIZER_REGISTRY", "type": "Dict[Any, Any]"}, {"lineNumber": 188, "col_offset": 66, "nodeName": "join", "type": "Callable"}, {"lineNumber": 200, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "ARCH_MODEL_REGISTRY", "type": "Dict[Any, Any]"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "CRITERION_REGISTRY", "type": "Dict[Any, Any]"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "args", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 188, "col_offset": 76, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 303, "col_offset": 22, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 188, "col_offset": 76, "nodeName": "OPTIMIZER_REGISTRY", "type": "Dict[Any, Any]"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "LR_SCHEDULER_REGISTRY", "type": "Dict[Any, Any]"}, {"lineNumber": 303, "col_offset": 22, "nodeName": "ARCH_MODEL_REGISTRY", "type": "Dict[Any, Any]"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "CRITERION_REGISTRY", "type": "Dict[Any, Any]"}]