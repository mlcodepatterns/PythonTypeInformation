[{"lineNumber": 10, "col_offset": 21, "nodeName": "Module", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "forward", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "extract_features", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "output_layer", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "get_normalized_probs", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "max_positions", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "upgrade_state_dict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "prepare_for_onnx_export_", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "onnx_trace", "type": "bool"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "onnx_trace", "type": "bool"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "FairseqDecoder"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "FairseqDecoder"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "extract_features", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "prev_output_tokens", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "net_output", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "FairseqDecoder"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "self", "type": "FairseqDecoder"}, {"lineNumber": 32, "col_offset": 44, "nodeName": "encoder_out", "type": "Any"}, {"lineNumber": 32, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "self", "type": "FairseqDecoder"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "adaptive_softmax", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "target", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "target", "type": "None"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "get_log_prob", "type": "Any"}, {"lineNumber": 65, "col_offset": 52, "nodeName": "out", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "logits", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "logits", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "self", "type": "FairseqDecoder"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "adaptive_softmax", "type": "Any"}, {"lineNumber": 64, "col_offset": 53, "nodeName": "net_output", "type": "Any"}, {"lineNumber": 64, "col_offset": 75, "nodeName": "target", "type": "Optional[Any]"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "exp_", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "utils", "type": "module"}, {"lineNumber": 69, "col_offset": 64, "nodeName": "onnx_trace", "type": "bool"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "utils", "type": "module"}, {"lineNumber": 71, "col_offset": 60, "nodeName": "onnx_trace", "type": "bool"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "self", "type": "FairseqDecoder"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "out", "type": "Any"}, {"lineNumber": 69, "col_offset": 64, "nodeName": "self", "type": "FairseqDecoder"}, {"lineNumber": 71, "col_offset": 60, "nodeName": "self", "type": "FairseqDecoder"}]