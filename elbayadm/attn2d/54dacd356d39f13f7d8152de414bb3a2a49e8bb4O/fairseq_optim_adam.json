[{"lineNumber": 17, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "FairseqOptimizer", "type": "Type[fairseq.optim.fairseq_optimizer.FairseqOptimizer]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "add_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "optimizer_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "average_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "supports_memory_efficient_fp16", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "supports_flat_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "step", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "optim", "type": "Any"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "fused_adam_cls", "type": "Type[fairseq.optim.fused_adam.FusedAdamV1]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "use_fused_adam", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "total_gpus", "type": "float"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "loss", "type": "None"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "loss", "type": "Optional[Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "get_fused_adam_class", "type": "Callable[[], Type[fairseq.optim.fused_adam.FusedAdamV1]]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "_optimizer", "type": "fairseq.optim.fused_adam.FusedAdamV1"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "_optimizer", "type": "Adam"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "adam_eps", "type": "Any"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "weight_decay", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "items", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "total_gpus", "type": "float"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "total_gpus", "type": "float"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "defaults", "type": "Dict[Any, Any]"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "closure", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "self", "type": "Adam"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "fused_adam_cls", "type": "Type[fairseq.optim.fused_adam.FusedAdamV1]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "fused_adam_cls", "type": "Type[fairseq.optim.fused_adam.FusedAdamV1]"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "params", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "Adam", "type": "Type[Adam]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 51, "col_offset": 72, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "lr", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "adam_betas", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "get_world_size", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "all_reduce", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "all_reduce", "type": "Any"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "lr", "type": "Any"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "betas", "type": "Any"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "eps", "type": "Any"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "weight_decay", "type": "Any"}, {"lineNumber": 120, "col_offset": 59, "nodeName": "amsgrad", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "closure", "type": "Any"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "group", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "is_sparse", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "amsgrad", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "p_data_fp32", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "amsgrad", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "amsgrad", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "bias_correction1", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "bias_correction2", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "args", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "optimizer_config", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "optimizer_config", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "dist", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "dist", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "value", "type": "Any"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "SUM", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "dist", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "value", "type": "Any"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "SUM", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "Adam", "type": "Type[Adam]"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "self", "type": "Adam"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "grad", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "float", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "grad", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "group", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "float", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "amsgrad", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "amsgrad", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "exp_avg", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "exp_avg_sq", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "max_exp_avg_sq", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "group", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "add_", "type": "Any"}, {"lineNumber": 179, "col_offset": 52, "nodeName": "grad", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "addcmul_", "type": "Any"}, {"lineNumber": 180, "col_offset": 59, "nodeName": "grad", "type": "Any"}, {"lineNumber": 180, "col_offset": 65, "nodeName": "grad", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "denom", "type": "Any"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "denom", "type": "Any"}, {"lineNumber": 191, "col_offset": 72, "nodeName": "bias_correction1", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "addcdiv_", "type": "Any"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "exp_avg", "type": "Any"}, {"lineNumber": 196, "col_offset": 58, "nodeName": "denom", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "p_data_fp32", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "ReduceOp", "type": "Any"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "ReduceOp", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "self", "type": "Adam"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "state", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 159, "col_offset": 56, "nodeName": "p_data_fp32", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 161, "col_offset": 59, "nodeName": "p_data_fp32", "type": "Any"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "type_as", "type": "Any"}, {"lineNumber": 166, "col_offset": 64, "nodeName": "p_data_fp32", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 167, "col_offset": 42, "nodeName": "type_as", "type": "Any"}, {"lineNumber": 167, "col_offset": 70, "nodeName": "p_data_fp32", "type": "Any"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "state", "type": "Any"}, {"lineNumber": 171, "col_offset": 56, "nodeName": "state", "type": "Any"}, {"lineNumber": 173, "col_offset": 37, "nodeName": "state", "type": "Any"}, {"lineNumber": 179, "col_offset": 45, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 180, "col_offset": 52, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "max", "type": "Any"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "max_exp_avg_sq", "type": "Any"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "exp_avg_sq", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "add_", "type": "Any"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "add_", "type": "Any"}, {"lineNumber": 189, "col_offset": 39, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "group", "type": "Any"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "add_", "type": "Any"}, {"lineNumber": 194, "col_offset": 75, "nodeName": "p_data_fp32", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "p_data_fp32", "type": "Any"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "dist", "type": "Any"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "dist", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "grad", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 164, "col_offset": 50, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 164, "col_offset": 67, "nodeName": "p_data_fp32", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 169, "col_offset": 50, "nodeName": "type_as", "type": "Any"}, {"lineNumber": 169, "col_offset": 82, "nodeName": "p_data_fp32", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 183, "col_offset": 62, "nodeName": "max_exp_avg_sq", "type": "Any"}, {"lineNumber": 185, "col_offset": 55, "nodeName": "group", "type": "Any"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "group", "type": "Any"}, {"lineNumber": 189, "col_offset": 48, "nodeName": "state", "type": "Any"}, {"lineNumber": 190, "col_offset": 48, "nodeName": "state", "type": "Any"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "group", "type": "Any"}, {"lineNumber": 191, "col_offset": 42, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 191, "col_offset": 52, "nodeName": "bias_correction2", "type": "Any"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "p_data_fp32", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 164, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "state", "type": "Any"}, {"lineNumber": 167, "col_offset": 42, "nodeName": "state", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "exp_avg", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "exp_avg_sq", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 191, "col_offset": 42, "nodeName": "math", "type": "module"}, {"lineNumber": 194, "col_offset": 62, "nodeName": "group", "type": "Any"}, {"lineNumber": 169, "col_offset": 50, "nodeName": "state", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "max_exp_avg_sq", "type": "Any"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "exp_avg_sq", "type": "Any"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "group", "type": "Any"}]