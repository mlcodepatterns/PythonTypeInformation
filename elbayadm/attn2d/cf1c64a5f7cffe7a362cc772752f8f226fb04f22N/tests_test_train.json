[{"lineNumber": 15, "col_offset": 0, "nodeName": "mock_trainer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "mock_loader", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "trainer", "type": "unittest.mock.MagicMock"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "return_value", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "return_value", "type": "int"}, {"lineNumber": 18, "col_offset": 43, "nodeName": "num_updates", "type": "int"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "trainer", "type": "unittest.mock.MagicMock"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "loader", "type": "unittest.mock.MagicMock"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "return_value", "type": "List[int]"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "loader", "type": "unittest.mock.MagicMock"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 66, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "load_checkpoint", "type": "Any"}, {"lineNumber": 17, "col_offset": 53, "nodeName": "epoch", "type": "int"}, {"lineNumber": 17, "col_offset": 76, "nodeName": "end_of_epoch", "type": "bool"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "get_num_updates", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "__next__", "type": "Any"}, {"lineNumber": 24, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "applied_patches", "type": "List[unittest.mock._patch]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "trainer", "type": "unittest.mock.MagicMock"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "loader", "type": "unittest.mock.MagicMock"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "trainer", "type": "unittest.mock.MagicMock"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "loader", "type": "unittest.mock.MagicMock"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "trainer", "type": "unittest.mock.MagicMock"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "loader", "type": "unittest.mock.MagicMock"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "trainer", "type": "unittest.mock.MagicMock"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "trainer", "type": "unittest.mock.MagicMock"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "loader", "type": "unittest.mock.MagicMock"}, {"lineNumber": 24, "col_offset": 40, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 24, "col_offset": 46, "nodeName": "length", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestLoadCheckpoint"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "mock_trainer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "mock_loader", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "ds", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "load_checkpoint", "type": "Callable[[Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 42, "col_offset": 55, "nodeName": "trainer", "type": "unittest.mock.MagicMock"}, {"lineNumber": 42, "col_offset": 64, "nodeName": "loader", "type": "unittest.mock.MagicMock"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "mock_trainer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "mock_loader", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "ds", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "load_checkpoint", "type": "Callable[[Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 49, "col_offset": 55, "nodeName": "trainer", "type": "unittest.mock.MagicMock"}, {"lineNumber": 49, "col_offset": 64, "nodeName": "loader", "type": "unittest.mock.MagicMock"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "mock_trainer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "mock_loader", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "ds", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "load_checkpoint", "type": "Callable[[Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 58, "col_offset": 55, "nodeName": "trainer", "type": "unittest.mock.MagicMock"}, {"lineNumber": 58, "col_offset": 64, "nodeName": "loader", "type": "unittest.mock.MagicMock"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "stopall", "type": "Callable[[], None]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "p", "type": "str"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "d", "type": "unittest.mock.MagicMock"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "start", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "p", "type": "unittest.mock._patch"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "applied_patches", "type": "List[unittest.mock._patch]"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "train", "type": "module"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestLoadCheckpoint"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestLoadCheckpoint"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "next", "type": "Callable"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "ds", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "train", "type": "module"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestLoadCheckpoint"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestLoadCheckpoint"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "next", "type": "Callable"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "patches", "type": "Dict[str, unittest.mock.MagicMock]"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "train", "type": "module"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestLoadCheckpoint"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestLoadCheckpoint"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "next", "type": "Callable"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "p", "type": "str"}, {"lineNumber": 36, "col_offset": 51, "nodeName": "d", "type": "unittest.mock.MagicMock"}, {"lineNumber": 36, "col_offset": 56, "nodeName": "items", "type": "Callable"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "p", "type": "unittest.mock._patch"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "self", "type": "TestLoadCheckpoint"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "ds", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestLoadCheckpoint"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "ds", "type": "Any"}, {"lineNumber": 36, "col_offset": 56, "nodeName": "patches", "type": "Dict[str, unittest.mock.MagicMock]"}, {"lineNumber": 36, "col_offset": 56, "nodeName": "self", "type": "TestLoadCheckpoint"}]