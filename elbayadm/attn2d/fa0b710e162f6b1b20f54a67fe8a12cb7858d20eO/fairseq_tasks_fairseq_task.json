[{"lineNumber": 20, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "datasets", "type": "Dict[nothing, nothing]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "dataset_to_epoch_iter", "type": "Dict[Any, fairseq.data.iterators.EpochBatchIterator]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "filename", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "filenames", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "epoch_iter", "type": "fairseq.data.iterators.EpochBatchIterator"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "epoch_iter", "type": "fairseq.data.iterators.EpochBatchIterator"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "sampling", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "sampling_topk", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "sampling_topp", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "diverse_beam_groups", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "diverse_beam_strength", "type": "Tuple[Any]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "match_source_len", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "diversity_rate", "type": "Any"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "sampling", "type": "Any"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "ignore_grad", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "base_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 329, "col_offset": 20, "nodeName": "aggregate_logging_outputs", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self_func", "type": "Any"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "__func__", "type": "Any"}, {"lineNumber": 364, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 370, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "load", "type": "Callable"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "filename", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "Dictionary", "type": "Type[fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "finalize", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "cls", "type": "Type[FairseqTask]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "split", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "datasets", "type": "Dict[nothing, nothing]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "datasets", "type": "Dict[nothing, nothing]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "dataset_to_epoch_iter", "type": "Dict[Any, fairseq.data.iterators.EpochBatchIterator]"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "FairseqDataset", "type": "Type[fairseq.data.fairseq_dataset.FairseqDataset]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "set_epoch", "type": "Any"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "indices", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "max_positions", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "batch_by_size", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "indices", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "num_tokens", "type": "Any"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "EpochBatchIterator", "type": "Type[fairseq.data.iterators.EpochBatchIterator]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "dataset_to_epoch_iter", "type": "Dict[Any, fairseq.data.iterators.EpochBatchIterator]"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "build_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "args", "type": "Any"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "build_criterion", "type": "Any"}, {"lineNumber": 201, "col_offset": 42, "nodeName": "args", "type": "Any"}, {"lineNumber": 201, "col_offset": 48, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 214, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 231, "col_offset": 36, "nodeName": "sampling", "type": "Any"}, {"lineNumber": 232, "col_offset": 36, "nodeName": "sampling", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "search_strategy", "type": "fairseq.search.Sampling"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "seq_gen_cls", "type": "Type[fairseq.sequence_generator.SequenceGeneratorWithAlignment]"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "SequenceGeneratorWithAlignment", "type": "Type[fairseq.sequence_generator.SequenceGeneratorWithAlignment]"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "seq_gen_cls", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "SequenceGenerator", "type": "Type[fairseq.sequence_generator.SequenceGenerator]"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "seq_gen_cls", "type": "Union[Type[fairseq.sequence_generator.SequenceGenerator], Type[fairseq.sequence_generator.SequenceGeneratorWithAlignment]]"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 292, "col_offset": 14, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 292, "col_offset": 27, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 292, "col_offset": 44, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 292, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 292, "col_offset": 61, "nodeName": "sample", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 295, "col_offset": 27, "nodeName": "loss", "type": "Any"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 296, "col_offset": 21, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 296, "col_offset": 34, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 302, "col_offset": 34, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "deprecation_warning", "type": "Callable[..., None]"}, {"lineNumber": 322, "col_offset": 36, "nodeName": "agg", "type": "Any"}, {"lineNumber": 329, "col_offset": 20, "nodeName": "FairseqTask", "type": "Type[FairseqTask]"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "self_func", "type": "Any"}, {"lineNumber": 331, "col_offset": 28, "nodeName": "base_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "agg_logging_outputs", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "ntokens", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "nsentences", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "reduce_metrics", "type": "Any"}, {"lineNumber": 354, "col_offset": 43, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "Dictionary", "type": "Type[fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "add_file_to_dictionary", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "filename", "type": "Any"}, {"lineNumber": 61, "col_offset": 56, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 61, "col_offset": 59, "nodeName": "tokenize_line", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 61, "col_offset": 84, "nodeName": "workers", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "d", "type": "fairseq.data.dictionary.Dictionary"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "nwords", "type": "Any"}, {"lineNumber": 62, "col_offset": 70, "nodeName": "padding_factor", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "FairseqDataset", "type": "Type[fairseq.data.fairseq_dataset.FairseqDataset]"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "dataset_to_epoch_iter", "type": "Dict[Any, fairseq.data.iterators.EpochBatchIterator]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "numpy_seed", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "seed", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "ordered_indices", "type": "Any"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "filter_by_size", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "indices", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 152, "col_offset": 34, "nodeName": "max_positions", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 157, "col_offset": 52, "nodeName": "max_tokens", "type": "Any"}, {"lineNumber": 157, "col_offset": 78, "nodeName": "max_sentences", "type": "Any"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "required_batch_size_multiple", "type": "Any"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "iterators", "type": "module"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "collater", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "batch_sampler", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "seed", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "num_shards", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "shard_id", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "num_workers", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 172, "col_offset": 35, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "models", "type": "module"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "criterions", "type": "module"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "SequenceScorer", "type": "Type[fairseq.sequence_scorer.SequenceScorer]"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 215, "col_offset": 32, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 40, "nodeName": "args", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "sampling_topk", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "sampling_topp", "type": "Any"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "Sampling", "type": "Type[fairseq.search.Sampling]"}, {"lineNumber": 235, "col_offset": 46, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 235, "col_offset": 70, "nodeName": "sampling_topk", "type": "Any"}, {"lineNumber": 235, "col_offset": 85, "nodeName": "sampling_topp", "type": "Any"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "diverse_beam_groups", "type": "Any"}, {"lineNumber": 239, "col_offset": 13, "nodeName": "match_source_len", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "search_strategy", "type": "Union[fairseq.search.BeamSearch, fairseq.search.Sampling, fairseq.search.DiverseSiblingsSearch, fairseq.search.LengthConstrainedBeamSearch, fairseq.search.DiverseBeamSearch]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 301, "col_offset": 18, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "logging_output", "type": "Any"}, {"lineNumber": 301, "col_offset": 48, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 301, "col_offset": 58, "nodeName": "model", "type": "Any"}, {"lineNumber": 301, "col_offset": 65, "nodeName": "sample", "type": "Any"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "generate", "type": "Any"}, {"lineNumber": 306, "col_offset": 38, "nodeName": "models", "type": "Any"}, {"lineNumber": 306, "col_offset": 46, "nodeName": "sample", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "aggregate", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "reduce_metrics", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 32, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 323, "col_offset": 49, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 324, "col_offset": 19, "nodeName": "get_smoothed_values", "type": "Any"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "deprecation_warning", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 34, "nodeName": "aggregate_logging_outputs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 336, "col_offset": 65, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 336, "col_offset": 82, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 337, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "items", "type": "Any"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 344, "col_offset": 22, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "log_scalar", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 38, "nodeName": "ntokens", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "log_speed", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 37, "nodeName": "ntokens", "type": "Any"}, {"lineNumber": 348, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "log_scalar", "type": "Callable[..., None]"}, {"lineNumber": 352, "col_offset": 38, "nodeName": "nsentences", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "Dictionary", "type": "Type[fairseq.data.dictionary.Dictionary]"}, {"lineNumber": 61, "col_offset": 59, "nodeName": "tokenizer", "type": "module"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "split", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "datasets", "type": "Dict[nothing, nothing]"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 138, "col_offset": 46, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "search", "type": "module"}, {"lineNumber": 235, "col_offset": 46, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "DiverseBeamSearch", "type": "Type[fairseq.search.DiverseBeamSearch]"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 238, "col_offset": 40, "nodeName": "diverse_beam_groups", "type": "Any"}, {"lineNumber": 238, "col_offset": 61, "nodeName": "diverse_beam_strength", "type": "Tuple[Any]"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 259, "col_offset": 22, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 260, "col_offset": 22, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 260, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 264, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 265, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 266, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "args", "type": "Any"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "generator", "type": "Any"}, {"lineNumber": 306, "col_offset": 68, "nodeName": "prefix_tokens", "type": "Any"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "metrics", "type": "module"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 324, "col_offset": 19, "nodeName": "agg", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 336, "col_offset": 34, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "agg_logging_outputs", "type": "Any"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "log_scalar", "type": "Callable[..., None]"}, {"lineNumber": 338, "col_offset": 35, "nodeName": "k", "type": "Any"}, {"lineNumber": 338, "col_offset": 38, "nodeName": "v", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "metrics", "type": "module"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "metrics", "type": "module"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "metrics", "type": "module"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "split", "type": "Any"}, {"lineNumber": 152, "col_offset": 70, "nodeName": "ignore_invalid_inputs", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "cond", "type": "Any"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "search", "type": "module"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 243, "col_offset": 30, "nodeName": "LengthConstrainedBeamSearch", "type": "Type[fairseq.search.LengthConstrainedBeamSearch]"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "diversity_rate", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "search_strategy", "type": "fairseq.search.DiverseSiblingsSearch"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "search_strategy", "type": "fairseq.search.BeamSearch"}, {"lineNumber": 262, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 42, "nodeName": "args", "type": "Any"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "metrics", "type": "module"}, {"lineNumber": 341, "col_offset": 32, "nodeName": "log", "type": "Any"}, {"lineNumber": 341, "col_offset": 40, "nodeName": "log", "type": "Any"}, {"lineNumber": 341, "col_offset": 47, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 344, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 344, "col_offset": 52, "nodeName": "log", "type": "Any"}, {"lineNumber": 344, "col_offset": 59, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 348, "col_offset": 35, "nodeName": "log", "type": "Any"}, {"lineNumber": 348, "col_offset": 43, "nodeName": "log", "type": "Any"}, {"lineNumber": 348, "col_offset": 50, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 351, "col_offset": 29, "nodeName": "get", "type": "Any"}, {"lineNumber": 351, "col_offset": 58, "nodeName": "log", "type": "Any"}, {"lineNumber": 351, "col_offset": 65, "nodeName": "logging_outputs", "type": "Any"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "sampling", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "match_source_len", "type": "Any"}, {"lineNumber": 243, "col_offset": 30, "nodeName": "search", "type": "module"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "DiverseSiblingsSearch", "type": "Type[fairseq.search.DiverseSiblingsSearch]"}, {"lineNumber": 247, "col_offset": 59, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 247, "col_offset": 83, "nodeName": "diversity_rate", "type": "Any"}, {"lineNumber": 249, "col_offset": 30, "nodeName": "BeamSearch", "type": "Type[fairseq.search.BeamSearch]"}, {"lineNumber": 249, "col_offset": 48, "nodeName": "target_dictionary", "type": "Any"}, {"lineNumber": 344, "col_offset": 26, "nodeName": "log", "type": "Any"}, {"lineNumber": 351, "col_offset": 29, "nodeName": "log", "type": "Any"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "diverse_beam_groups", "type": "Any"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "diversity_rate", "type": "Any"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "search", "type": "module"}, {"lineNumber": 247, "col_offset": 59, "nodeName": "self", "type": "FairseqTask"}, {"lineNumber": 249, "col_offset": 30, "nodeName": "search", "type": "module"}, {"lineNumber": 249, "col_offset": 48, "nodeName": "self", "type": "FairseqTask"}]