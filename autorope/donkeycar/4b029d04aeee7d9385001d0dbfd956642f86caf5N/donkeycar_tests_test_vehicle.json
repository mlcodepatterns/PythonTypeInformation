[{"lineNumber": 5, "col_offset": 0, "nodeName": "_get_sample_lambda", "type": "Callable[[], Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "vehicle", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "test_create_vehicle", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "test_add_part", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "test_vehicle_run", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "test_should_raise_assertion_on_non_list_inputs_for_add_part", "type": "Callable[[], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "test_should_raise_assertion_on_non_list_outputs_for_add_part", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "test_should_raise_assertion_on_non_boolean_threaded_for_add_part", "type": "Callable[[], Any]"}, {"lineNumber": 6, "col_offset": 4, "nodeName": "f", "type": "Callable[[], Any]"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "update", "type": "Callable[[], Any]"}, {"lineNumber": 8, "col_offset": 15, "nodeName": "f", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "inputs", "type": "str"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "outputs", "type": "str"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "threaded", "type": "str"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "f", "type": "Callable[[], Any]"}, {"lineNumber": 9, "col_offset": 11, "nodeName": "Lambda", "type": "Type[donkeycar.parts.transform.Lambda]"}, {"lineNumber": 9, "col_offset": 18, "nodeName": "f", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "Vehicle", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "Vehicle", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "parts", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "Vehicle", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "start", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "Vehicle", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "Vehicle", "type": "Any"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "Vehicle", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "dk", "type": "module"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 14, "col_offset": 10, "nodeName": "_get_sample_lambda", "type": "Callable[[], Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "dk", "type": "module"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "dk", "type": "module"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 24, "col_offset": 10, "nodeName": "_get_sample_lambda", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "parts", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "dk", "type": "module"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "dk", "type": "module"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "dk", "type": "module"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "_get_sample_lambda", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 49, "nodeName": "inputs", "type": "str"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "_get_sample_lambda", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 50, "nodeName": "outputs", "type": "str"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "_get_sample_lambda", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 51, "nodeName": "threaded", "type": "str"}, {"lineNumber": 36, "col_offset": 76, "nodeName": "inputs", "type": "str"}, {"lineNumber": 43, "col_offset": 77, "nodeName": "outputs", "type": "str"}, {"lineNumber": 50, "col_offset": 81, "nodeName": "threaded", "type": "str"}]