[{"lineNumber": 15, "col_offset": 0, "nodeName": "create_lbin", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "test_train_test_split", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "test_zero", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "test_positive", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "test_negative", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "test_illegal_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "test_zero", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_positive", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_negative", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "test_empty_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "test_positive", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "test_negative", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "test_reverse", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_merge_two_dicts", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "test_param_gen", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "l", "type": "List[int]"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "l", "type": "List[int]"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "data_set", "type": "List[int]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "l", "type": "List[int]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "l", "type": "List[int]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "l", "type": "List[int]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "l", "type": "List[int]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "min", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "half", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "max", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "min", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "half", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "max", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "min", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "half", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "max", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "d1", "type": "Dict[str, int]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "d2", "type": "Dict[Union[int, str], Union[str, int]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "train_set", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "val_set", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "train_test_split", "type": "Any"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "data_set", "type": "List[int]"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "train_set", "type": "Any"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "val_set", "type": "Any"}, {"lineNumber": 18, "col_offset": 6, "nodeName": "marker_index", "type": "int"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "linear_bin", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "linear_bin", "type": "Any"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "linear_bin", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "create_lbin", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "linear_unbin", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "l", "type": "List[int]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "create_lbin", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "linear_unbin", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "l", "type": "List[int]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "create_lbin", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "linear_unbin", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "l", "type": "List[int]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "linear_unbin", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "map_range", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "map_range", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "map_range", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "min", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "half", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "map_range", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "map_range", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "map_range", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "min", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "half", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "map_range", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "map_range", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "map_range", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "min", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "half", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "merge_two_dicts", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "d1", "type": "Dict[str, int]"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "d2", "type": "Dict[Union[int, str], Union[str, int]]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "param_gen", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "expected", "type": "List[Dict[str, str]]"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "train_set", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "val_set", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "linear_bin", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "g", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TestParamGen"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "res", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "res", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "res", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "res", "type": "Any"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "pytest", "type": "Any"}]