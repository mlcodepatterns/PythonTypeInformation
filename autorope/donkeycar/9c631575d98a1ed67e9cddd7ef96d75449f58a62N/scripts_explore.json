[{"lineNumber": 69, "col_offset": 0, "nodeName": "save_results", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "args", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "train", "type": "Tuple[Any, Any]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "val", "type": "Tuple[Any, Any]"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "test", "type": "Tuple[Any, Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "start", "type": "float"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "end", "type": "float"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "epochs", "type": "int"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "history", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 74, "col_offset": 7, "nodeName": "docopt", "type": "Any"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 76, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "url", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "loops", "type": "int"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "model_params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "optimizer_params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "training_params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "param_count", "type": "int"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "all_results", "type": "List[None]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "test_count", "type": "int"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "train", "type": "Tuple[Any, Any]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "val", "type": "Tuple[Any, Any]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "test", "type": "Tuple[Any, Any]"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "split_dataset", "type": "Callable[..., Tuple[Tuple[Any, Any], Tuple[Any, Any], Tuple[Any, Any]]]"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "Y", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "X_val", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "Y_val", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "Y_test", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "results", "type": "None"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "results", "type": "None"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "results", "type": "None"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "fit", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "results", "type": "None"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "end", "type": "float"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "start", "type": "float"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "results", "type": "None"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "results", "type": "None"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "results", "type": "None"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 59, "col_offset": 55, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "results", "type": "None"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "hist", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "results", "type": "None"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "X_val", "type": "Any"}, {"lineNumber": 61, "col_offset": 55, "nodeName": "Y_val", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "results", "type": "None"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 62, "col_offset": 42, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 62, "col_offset": 50, "nodeName": "Y_test", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "results", "type": "None"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "count_params", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "results", "type": "None"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "all_results", "type": "List[None]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "args", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "load_url", "type": "Callable[[Any], Tuple[numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "url", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 110, "col_offset": 85, "nodeName": "loops", "type": "int"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "loops", "type": "int"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "mp", "type": "Dict[Any, Any]"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "model_params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "utils", "type": "module"}, {"lineNumber": 39, "col_offset": 60, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 39, "col_offset": 74, "nodeName": "seed", "type": "None"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "X_val", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "time", "type": "module"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 50, "col_offset": 71, "nodeName": "epochs", "type": "int"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "time", "type": "module"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "url", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "datasets", "type": "module"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "rsplit", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "param_gen", "type": "Callable[[Any], Generator[Dict[Any, Any], Any, None]]"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "model_params", "type": "Dict[str, Union[List[float], List[List[int]], List[List[Tuple[int, int, int]]]]]"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "param_gen", "type": "Callable[[Any], Generator[Dict[Any, Any], Any, None]]"}, {"lineNumber": 107, "col_offset": 47, "nodeName": "optimizer_params", "type": "Dict[str, List[float]]"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "param_gen", "type": "Callable[[Any], Generator[Dict[Any, Any], Any, None]]"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "training_params", "type": "Dict[str, List[int]]"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "param_count", "type": "int"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "choise", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "op", "type": "Dict[Any, Any]"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "optimizer_params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "dk", "type": "module"}, {"lineNumber": 51, "col_offset": 38, "nodeName": "X_val", "type": "Any"}, {"lineNumber": 51, "col_offset": 45, "nodeName": "Y_val", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "dk", "type": "module"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "url", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "utils", "type": "module"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "utils", "type": "module"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "utils", "type": "module"}, {"lineNumber": 110, "col_offset": 62, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 66, "nodeName": "training_params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "cnn3_full1_relu", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "tp", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "training_params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "dk", "type": "module"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "dk", "type": "module"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "dk", "type": "module"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "model_params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "optimizer_params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "models", "type": "module"}, {"lineNumber": 121, "col_offset": 48, "nodeName": "mp", "type": "Dict[Any, Any]"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "compile", "type": "Any"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "test_count", "type": "int"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 46, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 132, "col_offset": 45, "nodeName": "seed", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "dk", "type": "module"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 124, "col_offset": 52, "nodeName": "op", "type": "Dict[Any, Any]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "mp", "type": "Dict[Any, Any]"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "op", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "op", "type": "Dict[Any, Any]"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "train_model", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 57, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 68, "nodeName": "model", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "results", "type": "None"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "save_results", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "results", "type": "None"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "keras", "type": "Any"}, {"lineNumber": 134, "col_offset": 51, "nodeName": "i", "type": "Any"}, {"lineNumber": 140, "col_offset": 60, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 141, "col_offset": 65, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 141, "col_offset": 79, "nodeName": "seed", "type": "Any"}, {"lineNumber": 141, "col_offset": 87, "nodeName": "tp", "type": "Dict[Any, Any]"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "all_results", "type": "List[None]"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "test_count", "type": "int"}, {"lineNumber": 129, "col_offset": 56, "nodeName": "param_count", "type": "int"}, {"lineNumber": 133, "col_offset": 50, "nodeName": "i", "type": "Any"}, {"lineNumber": 133, "col_offset": 59, "nodeName": "i", "type": "Any"}, {"lineNumber": 134, "col_offset": 57, "nodeName": "i", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "sys", "type": "module"}, {"lineNumber": 133, "col_offset": 64, "nodeName": "mp", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 62, "nodeName": "mp", "type": "Dict[Any, Any]"}]