[{"lineNumber": 13, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "min", "type": "int"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "half", "type": "int"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "max", "type": "int"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "min", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "half", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "max", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "min", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "half", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "max", "type": "int"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "map_range", "type": "Callable[[Any, Any, Any, Any, Any], int]"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "map_range", "type": "Callable[[Any, Any, Any, Any, Any], int]"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "map_range", "type": "Callable[[Any, Any, Any, Any, Any], int]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "min", "type": "int"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "half", "type": "int"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "max", "type": "int"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "map_range", "type": "Callable[[Any, Any, Any, Any, Any], int]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "map_range", "type": "Callable[[Any, Any, Any, Any, Any], int]"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "map_range", "type": "Callable[[Any, Any, Any, Any, Any], int]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "min", "type": "int"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "half", "type": "int"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "max", "type": "int"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "map_range", "type": "Callable[[Any, Any, Any, Any, Any], int]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "map_range", "type": "Callable[[Any, Any, Any, Any, Any], int]"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "map_range", "type": "Callable[[Any, Any, Any, Any, Any], int]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "min", "type": "int"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "half", "type": "int"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "max", "type": "int"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "ranges", "type": "Tuple[int, int, int, int]"}]