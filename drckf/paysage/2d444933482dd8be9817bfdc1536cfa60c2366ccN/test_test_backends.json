[{"lineNumber": 14, "col_offset": 0, "nodeName": "assert_close", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "test_conversion", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "test_transpose", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "test_zeros", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "test_ones", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "test_diag", "type": "Callable[[], Any]"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "test_fill_diagonal", "type": "Callable[[], Any]"}, {"lineNumber": 159, "col_offset": 0, "nodeName": "test_sign", "type": "Callable[[], Any]"}, {"lineNumber": 176, "col_offset": 0, "nodeName": "test_clip", "type": "Callable[[], Any]"}, {"lineNumber": 211, "col_offset": 0, "nodeName": "test_clip_inplace", "type": "Callable[[], Any]"}, {"lineNumber": 252, "col_offset": 0, "nodeName": "test_tround", "type": "Callable[[], Any]"}, {"lineNumber": 269, "col_offset": 0, "nodeName": "test_flatten", "type": "Callable[[], Any]"}, {"lineNumber": 298, "col_offset": 0, "nodeName": "test_reshape", "type": "Callable[[], Any]"}, {"lineNumber": 318, "col_offset": 0, "nodeName": "test_mix_inplace", "type": "Callable[[], Any]"}, {"lineNumber": 342, "col_offset": 0, "nodeName": "test_square_mix_inplace", "type": "Callable[[], Any]"}, {"lineNumber": 366, "col_offset": 0, "nodeName": "test_sqrt_div", "type": "Callable[[], Any]"}, {"lineNumber": 388, "col_offset": 0, "nodeName": "test_normalize", "type": "Callable[[], Any]"}, {"lineNumber": 408, "col_offset": 0, "nodeName": "test_norm", "type": "Callable[[], Any]"}, {"lineNumber": 421, "col_offset": 0, "nodeName": "test_tmax", "type": "Callable[[], Any]"}, {"lineNumber": 458, "col_offset": 0, "nodeName": "test_tabs", "type": "Callable[[], Any]"}, {"lineNumber": 476, "col_offset": 0, "nodeName": "test_exp", "type": "Callable[[], Any]"}, {"lineNumber": 494, "col_offset": 0, "nodeName": "test_log", "type": "Callable[[], Any]"}, {"lineNumber": 512, "col_offset": 0, "nodeName": "test_tanh", "type": "Callable[[], Any]"}, {"lineNumber": 530, "col_offset": 0, "nodeName": "test_expit", "type": "Callable[[], Any]"}, {"lineNumber": 548, "col_offset": 0, "nodeName": "test_reciprocal", "type": "Callable[[], Any]"}, {"lineNumber": 559, "col_offset": 0, "nodeName": "test_atanh", "type": "Callable[[], Any]"}, {"lineNumber": 579, "col_offset": 0, "nodeName": "test_sqrt", "type": "Callable[[], Any]"}, {"lineNumber": 597, "col_offset": 0, "nodeName": "test_square", "type": "Callable[[], Any]"}, {"lineNumber": 615, "col_offset": 0, "nodeName": "test_tpow", "type": "Callable[[], Any]"}, {"lineNumber": 634, "col_offset": 0, "nodeName": "test_cosh", "type": "Callable[[], Any]"}, {"lineNumber": 652, "col_offset": 0, "nodeName": "test_logaddexp", "type": "Callable[[], Any]"}, {"lineNumber": 673, "col_offset": 0, "nodeName": "test_logcosh", "type": "Callable[[], Any]"}, {"lineNumber": 691, "col_offset": 0, "nodeName": "test_acosh", "type": "Callable[[], Any]"}, {"lineNumber": 709, "col_offset": 0, "nodeName": "test_logit", "type": "Callable[[], Any]"}, {"lineNumber": 727, "col_offset": 0, "nodeName": "test_softplus", "type": "Callable[[], Any]"}, {"lineNumber": 745, "col_offset": 0, "nodeName": "test_cos", "type": "Callable[[], Any]"}, {"lineNumber": 763, "col_offset": 0, "nodeName": "test_sin", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "pytorchmat", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "torchpymat", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "py_vs_torch", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "torch_vs_py", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "py_torch_x", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "py_x_T", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "py_torch_x_T", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "torch_y_T", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "torch_py_y_T", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "py_zeros", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "torch_zeros", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "torch_py_zeros", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "py_torch_zeros", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "py_ones", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "torch_ones", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "torch_py_ones", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "py_torch_ones", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "py_vec", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "py_mat", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "py_diag", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "torch_vec", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "torch_diag", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "py_mat", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "py_mult", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "torch_mult", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "py_torch_mat", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "py_sign", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "torch_sign", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "py_torch_sign", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "py_py_sign", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "py_clipped", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "py_torch_clipped", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "py_clipped", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "py_torch_clipped", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "py_clipped", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "py_torch_clipped", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "py_torch_clipped", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "py_torch_clipped", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "py_torch_clipped", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "py_round", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "torch_round", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "py_torch_round", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "py_py_round", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "scalar", "type": "float"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "py_scalar", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "torch_scalar", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "py_flatten", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "torch_flatten", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "py_torch_flatten", "type": "Any"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "torch_py_flatten", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "newshape", "type": "Tuple[int, int]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "py_new", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "torch_new", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "py_torch_new", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "torch_py_new", "type": "Any"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "py_w", "type": "Any"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "py_torch_x", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "torch_py_x", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "py_w", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "py_torch_x", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "torch_py_x", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "py_sqrt_div", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "torch_sqrt_div", "type": "Any"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "py_torch_sqrt_div", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "torch_py_sqrt_div", "type": "Any"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "py_torch_norm", "type": "Any"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "torch_py_norm", "type": "Any"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 580, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 601, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "power", "type": "int"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 622, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 623, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 643, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 644, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "py_x_1", "type": "numpy.ndarray"}, {"lineNumber": 656, "col_offset": 4, "nodeName": "py_x_2", "type": "numpy.ndarray"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "torch_x_1", "type": "Any"}, {"lineNumber": 659, "col_offset": 4, "nodeName": "torch_x_2", "type": "Any"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 679, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 680, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 695, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 701, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 715, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 716, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 718, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 719, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 728, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 731, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 733, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 734, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 737, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 746, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 751, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 752, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 767, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 770, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 772, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 782, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 45, "nodeName": "torchmat", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 43, "nodeName": "pymat", "type": "Any"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "pymat", "type": "Any"}, {"lineNumber": 19, "col_offset": 44, "nodeName": "pytorchmat", "type": "Any"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 40, "nodeName": "torchmat", "type": "Any"}, {"lineNumber": 20, "col_offset": 50, "nodeName": "torchpymat", "type": "Any"}, {"lineNumber": 22, "col_offset": 7, "nodeName": "py_vs_torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "torch_vs_py", "type": "Any"}, {"lineNumber": 24, "col_offset": 7, "nodeName": "py_vs_torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "py_torch_x", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "rand", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "transpose", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "py_x_T", "type": "Any"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "py_torch_x_T", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "rand", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "transpose", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "torch_y_T", "type": "Any"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "torch_py_y_T", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "zeros", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "zeros", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "py_zeros", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "torch_zeros", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "py_zeros", "type": "Any"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "py_torch_zeros", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "torch_zeros", "type": "Any"}, {"lineNumber": 95, "col_offset": 46, "nodeName": "torch_py_zeros", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "ones", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "ones", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "py_ones", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 48, "nodeName": "torch_ones", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "py_ones", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "py_torch_ones", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "torch_ones", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "torch_py_ones", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "diagonal_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "py_vec", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "diag", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "py_mat", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "py_vec", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 38, "nodeName": "py_diag", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "randn", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "diagonal_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 45, "nodeName": "torch_vec", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "diag", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "torch_vec", "type": "Any"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "torch_diag", "type": "Any"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "n", "type": "int"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "n", "type": "int"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "py_mat", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "fill_diagonal", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "py_mat", "type": "Any"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "py_mat", "type": "Any"}, {"lineNumber": 145, "col_offset": 38, "nodeName": "py_mult", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "fill_diagonal", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "torch_mult", "type": "Any"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "py_torch_mat", "type": "Any"}, {"lineNumber": 156, "col_offset": 44, "nodeName": "py_mat", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "sign", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "sign", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 48, "nodeName": "torch_sign", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "py_sign", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "py_torch_sign", "type": "Any"}, {"lineNumber": 173, "col_offset": 45, "nodeName": "py_py_sign", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 51, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "py_clipped", "type": "Any"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "py_torch_clipped", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 51, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "py_clipped", "type": "Any"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "py_torch_clipped", "type": "Any"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 51, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "py_clipped", "type": "Any"}, {"lineNumber": 208, "col_offset": 42, "nodeName": "py_torch_clipped", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 51, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 225, "col_offset": 38, "nodeName": "py_torch_clipped", "type": "Any"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 229, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 51, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "py_torch_clipped", "type": "Any"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 51, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 30, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "py_torch_clipped", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "tround", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 261, "col_offset": 18, "nodeName": "tround", "type": "Callable[[Any], Any]"}, {"lineNumber": 261, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 263, "col_offset": 49, "nodeName": "torch_round", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "to_numpy_array", "type": "Callable"}, {"lineNumber": 264, "col_offset": 43, "nodeName": "py_round", "type": "Any"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 266, "col_offset": 30, "nodeName": "py_torch_round", "type": "Any"}, {"lineNumber": 266, "col_offset": 46, "nodeName": "py_py_round", "type": "Any"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 274, "col_offset": 34, "nodeName": "scalar", "type": "float"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 40, "nodeName": "scalar", "type": "float"}, {"lineNumber": 277, "col_offset": 11, "nodeName": "py_scalar", "type": "Any"}, {"lineNumber": 277, "col_offset": 24, "nodeName": "torch_scalar", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 283, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 286, "col_offset": 35, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 41, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 289, "col_offset": 23, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 289, "col_offset": 51, "nodeName": "torch_flatten", "type": "Any"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 49, "nodeName": "py_flatten", "type": "Any"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 292, "col_offset": 30, "nodeName": "py_flatten", "type": "Any"}, {"lineNumber": 292, "col_offset": 42, "nodeName": "py_torch_flatten", "type": "Any"}, {"lineNumber": 295, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 295, "col_offset": 33, "nodeName": "torch_flatten", "type": "Any"}, {"lineNumber": 295, "col_offset": 48, "nodeName": "torch_py_flatten", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 303, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 306, "col_offset": 13, "nodeName": "reshape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 306, "col_offset": 39, "nodeName": "newshape", "type": "Tuple[int, int]"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "reshape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 307, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 307, "col_offset": 48, "nodeName": "newshape", "type": "Tuple[int, int]"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 309, "col_offset": 47, "nodeName": "torch_new", "type": "Any"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 45, "nodeName": "py_new", "type": "Any"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 312, "col_offset": 30, "nodeName": "py_new", "type": "Any"}, {"lineNumber": 312, "col_offset": 38, "nodeName": "py_torch_new", "type": "Any"}, {"lineNumber": 315, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 315, "col_offset": 33, "nodeName": "torch_new", "type": "Any"}, {"lineNumber": 315, "col_offset": 44, "nodeName": "torch_py_new", "type": "Any"}, {"lineNumber": 321, "col_offset": 11, "nodeName": "float_scalar", "type": "Callable[[Any], Any]"}, {"lineNumber": 321, "col_offset": 34, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 324, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 324, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 325, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 325, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 327, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "mix_inplace", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 330, "col_offset": 26, "nodeName": "py_w", "type": "Any"}, {"lineNumber": 330, "col_offset": 32, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 330, "col_offset": 38, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "mix_inplace", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 331, "col_offset": 29, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 331, "col_offset": 38, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 331, "col_offset": 47, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 333, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 45, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 43, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 336, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 336, "col_offset": 36, "nodeName": "py_torch_x", "type": "Any"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 339, "col_offset": 33, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 339, "col_offset": 42, "nodeName": "torch_py_x", "type": "Any"}, {"lineNumber": 345, "col_offset": 11, "nodeName": "float_scalar", "type": "Callable[[Any], Any]"}, {"lineNumber": 345, "col_offset": 34, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 348, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 348, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 351, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 351, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 352, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 352, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "square_mix_inplace", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 354, "col_offset": 33, "nodeName": "py_w", "type": "Any"}, {"lineNumber": 354, "col_offset": 39, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 354, "col_offset": 45, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "square_mix_inplace", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 355, "col_offset": 36, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 355, "col_offset": 45, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 355, "col_offset": 54, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 357, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 357, "col_offset": 45, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 358, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 358, "col_offset": 43, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 360, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 360, "col_offset": 36, "nodeName": "py_torch_x", "type": "Any"}, {"lineNumber": 363, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 363, "col_offset": 33, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 363, "col_offset": 42, "nodeName": "torch_py_x", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 370, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 370, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 373, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 373, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 374, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 374, "col_offset": 40, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 376, "col_offset": 18, "nodeName": "sqrt_div", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 376, "col_offset": 37, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 376, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 377, "col_offset": 21, "nodeName": "sqrt_div", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 377, "col_offset": 43, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 377, "col_offset": 52, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 379, "col_offset": 24, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 379, "col_offset": 52, "nodeName": "torch_sqrt_div", "type": "Any"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 380, "col_offset": 50, "nodeName": "py_sqrt_div", "type": "Any"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 30, "nodeName": "py_sqrt_div", "type": "Any"}, {"lineNumber": 382, "col_offset": 43, "nodeName": "py_torch_sqrt_div", "type": "Any"}, {"lineNumber": 385, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 385, "col_offset": 33, "nodeName": "torch_sqrt_div", "type": "Any"}, {"lineNumber": 385, "col_offset": 49, "nodeName": "torch_py_sqrt_div", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 392, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 394, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 394, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 396, "col_offset": 14, "nodeName": "normalize", "type": "Callable[[Any], Any]"}, {"lineNumber": 396, "col_offset": 34, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "normalize", "type": "Callable[[Any], Any]"}, {"lineNumber": 397, "col_offset": 40, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 399, "col_offset": 48, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 400, "col_offset": 20, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 400, "col_offset": 46, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 402, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 402, "col_offset": 30, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 402, "col_offset": 39, "nodeName": "py_torch_norm", "type": "Any"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 405, "col_offset": 33, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 405, "col_offset": 45, "nodeName": "torch_py_norm", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 412, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 413, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 413, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "norm", "type": "Callable[[Any], Any]"}, {"lineNumber": 415, "col_offset": 29, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "norm", "type": "Callable[[Any], Any]"}, {"lineNumber": 416, "col_offset": 35, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 418, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 418, "col_offset": 20, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 418, "col_offset": 29, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 425, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 425, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 426, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 429, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 429, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 430, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 432, "col_offset": 20, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 432, "col_offset": 28, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 436, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 436, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 437, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 437, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 438, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 438, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 441, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 441, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 442, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 442, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 443, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 443, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 446, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 447, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 447, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 448, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 451, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 451, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 452, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 453, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 453, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 461, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 461, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 462, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 462, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 464, "col_offset": 11, "nodeName": "tabs", "type": "Callable[[Any], Any]"}, {"lineNumber": 464, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 465, "col_offset": 14, "nodeName": "tabs", "type": "Callable[[Any], Any]"}, {"lineNumber": 465, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 467, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 467, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 468, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 468, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 470, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 470, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 470, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 473, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 473, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 473, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 479, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 480, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 480, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 482, "col_offset": 11, "nodeName": "exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 482, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 483, "col_offset": 14, "nodeName": "exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 483, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 485, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 485, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 486, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 486, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 488, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 488, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 488, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 491, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 491, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 491, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 497, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 498, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 498, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 500, "col_offset": 11, "nodeName": "log", "type": "Callable[[Any], Any]"}, {"lineNumber": 500, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 501, "col_offset": 14, "nodeName": "log", "type": "Callable[[Any], Any]"}, {"lineNumber": 501, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 503, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 503, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 504, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 504, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 506, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 506, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 506, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 509, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 509, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 509, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 515, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 515, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 516, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 516, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 518, "col_offset": 11, "nodeName": "tanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 518, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 519, "col_offset": 14, "nodeName": "tanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 519, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 521, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 521, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 522, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 524, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 524, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 527, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 527, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 527, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 533, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 533, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 534, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 534, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 536, "col_offset": 11, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 536, "col_offset": 25, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 537, "col_offset": 14, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 537, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 539, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 539, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 540, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 540, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 542, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 542, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 545, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 545, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 545, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 551, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 551, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 552, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 552, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 554, "col_offset": 11, "nodeName": "reciprocal", "type": "Callable[[Any], Any]"}, {"lineNumber": 554, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 555, "col_offset": 14, "nodeName": "reciprocal", "type": "Callable[[Any], Any]"}, {"lineNumber": 555, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 557, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 557, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 563, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 563, "col_offset": 40, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 565, "col_offset": 11, "nodeName": "atanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 565, "col_offset": 25, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 566, "col_offset": 14, "nodeName": "atanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 566, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 568, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 568, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 569, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 569, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 573, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 573, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 573, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 576, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 576, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 576, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 582, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 582, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 583, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 583, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 585, "col_offset": 11, "nodeName": "sqrt", "type": "Callable[[Any], Any]"}, {"lineNumber": 585, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 586, "col_offset": 14, "nodeName": "sqrt", "type": "Callable[[Any], Any]"}, {"lineNumber": 586, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 588, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 588, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 589, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 589, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 591, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 591, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 591, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 594, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 594, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 594, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 600, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 600, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 601, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 601, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 603, "col_offset": 11, "nodeName": "square", "type": "Callable[[Any], Any]"}, {"lineNumber": 603, "col_offset": 26, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 604, "col_offset": 14, "nodeName": "square", "type": "Callable[[Any], Any]"}, {"lineNumber": 604, "col_offset": 32, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 606, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 606, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 607, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 607, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 609, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 609, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 609, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 612, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 612, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 612, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 619, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 619, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 620, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 620, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 622, "col_offset": 11, "nodeName": "tpow", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 622, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 622, "col_offset": 30, "nodeName": "power", "type": "int"}, {"lineNumber": 623, "col_offset": 14, "nodeName": "tpow", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 623, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 623, "col_offset": 39, "nodeName": "power", "type": "int"}, {"lineNumber": 625, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 625, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 626, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 626, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 628, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 628, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 628, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 631, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 631, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 631, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 637, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 637, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 638, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 638, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 640, "col_offset": 11, "nodeName": "cosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 640, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 641, "col_offset": 14, "nodeName": "cosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 641, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 643, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 643, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 644, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 644, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 646, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 646, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 646, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 649, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 649, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 649, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 655, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 655, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 656, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 656, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 658, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 658, "col_offset": 42, "nodeName": "py_x_1", "type": "numpy.ndarray"}, {"lineNumber": 659, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 659, "col_offset": 42, "nodeName": "py_x_2", "type": "numpy.ndarray"}, {"lineNumber": 661, "col_offset": 11, "nodeName": "logaddexp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 661, "col_offset": 29, "nodeName": "py_x_1", "type": "numpy.ndarray"}, {"lineNumber": 661, "col_offset": 37, "nodeName": "py_x_2", "type": "numpy.ndarray"}, {"lineNumber": 662, "col_offset": 14, "nodeName": "logaddexp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 662, "col_offset": 35, "nodeName": "torch_x_1", "type": "Any"}, {"lineNumber": 662, "col_offset": 46, "nodeName": "torch_x_2", "type": "Any"}, {"lineNumber": 664, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 664, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 665, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 665, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 667, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 667, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 667, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 670, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 670, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 670, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 676, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 676, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 677, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 677, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 679, "col_offset": 11, "nodeName": "logcosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 679, "col_offset": 27, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 680, "col_offset": 14, "nodeName": "logcosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 680, "col_offset": 33, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 682, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 682, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 683, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 683, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 685, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 685, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 685, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 688, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 688, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 688, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 695, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 695, "col_offset": 40, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 697, "col_offset": 11, "nodeName": "acosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 697, "col_offset": 25, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 698, "col_offset": 14, "nodeName": "acosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 698, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 700, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 700, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 701, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 701, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 703, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 703, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 703, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 706, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 706, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 706, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 712, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 712, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 713, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 713, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 715, "col_offset": 11, "nodeName": "logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 715, "col_offset": 25, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 716, "col_offset": 14, "nodeName": "logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 716, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 718, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 718, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 719, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 719, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 721, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 721, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 721, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 724, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 724, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 724, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 729, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 730, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 730, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 731, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 731, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 733, "col_offset": 11, "nodeName": "softplus", "type": "Callable[[Any], Any]"}, {"lineNumber": 733, "col_offset": 28, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 734, "col_offset": 14, "nodeName": "softplus", "type": "Callable[[Any], Any]"}, {"lineNumber": 734, "col_offset": 34, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 736, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 736, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 737, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 737, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 739, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 739, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 739, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 742, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 742, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 742, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 748, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 748, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 749, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 749, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 751, "col_offset": 11, "nodeName": "cos", "type": "Callable[[Any], Any]"}, {"lineNumber": 751, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 752, "col_offset": 14, "nodeName": "cos", "type": "Callable[[Any], Any]"}, {"lineNumber": 752, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 754, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 754, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 755, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 755, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 757, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 757, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 757, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 760, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 760, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 760, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 765, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 766, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 766, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 767, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 767, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 769, "col_offset": 11, "nodeName": "sin", "type": "Callable[[Any], Any]"}, {"lineNumber": 769, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 770, "col_offset": 14, "nodeName": "sin", "type": "Callable[[Any], Any]"}, {"lineNumber": 770, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 772, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 772, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 773, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 773, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 775, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 775, "col_offset": 30, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 775, "col_offset": 36, "nodeName": "py_torch_y", "type": "Any"}, {"lineNumber": 778, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 778, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 778, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "torch_vs_py", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "torch_vs_py", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "transpose", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 70, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "transpose", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 257, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 261, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 283, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 289, "col_offset": 23, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 295, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 306, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 315, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 321, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 324, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 325, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 327, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 333, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 336, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 345, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 348, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 351, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 352, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 357, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 358, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 363, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 370, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 371, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 373, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 374, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 376, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 377, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 379, "col_offset": 24, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 385, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 394, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 396, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 400, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 402, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 413, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 425, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 429, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 436, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 437, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 441, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 442, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 447, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 451, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 461, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 462, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 464, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 465, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 467, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 468, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 470, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 473, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 480, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 482, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 483, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 485, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 486, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 488, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 491, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 498, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 500, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 501, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 503, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 504, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 506, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 509, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 515, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 516, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 518, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 519, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 521, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 527, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 533, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 534, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 536, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 537, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 539, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 540, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 545, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 551, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 552, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 554, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 555, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 563, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 565, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 566, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 568, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 569, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 573, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 576, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 582, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 583, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 585, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 586, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 588, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 589, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 591, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 594, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 600, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 601, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 603, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 604, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 606, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 607, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 609, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 612, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 619, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 620, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 622, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 623, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 625, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 626, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 628, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 631, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 637, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 638, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 640, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 641, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 643, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 644, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 646, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 649, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 655, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 656, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 658, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 659, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 661, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 662, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 664, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 665, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 667, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 670, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 676, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 677, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 679, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 680, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 682, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 683, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 685, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 688, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 694, "col_offset": 15, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 694, "col_offset": 28, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 695, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 697, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 698, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 700, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 701, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 703, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 706, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 712, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 713, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 715, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 716, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 718, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 719, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 721, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 724, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 729, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 730, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 731, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 733, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 734, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 736, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 737, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 739, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 742, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 748, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 749, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 751, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 752, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 754, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 755, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 757, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 760, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 765, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 766, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 767, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 769, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 770, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 772, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 773, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 775, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 778, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 783, "col_offset": 17, "nodeName": "__file__", "type": "str"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "py_vs_torch", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 32, "col_offset": 63, "nodeName": "name", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 371, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 562, "col_offset": 15, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 562, "col_offset": 28, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 694, "col_offset": 15, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 562, "col_offset": 15, "nodeName": "py_rand", "type": "module"}]