[{"lineNumber": 567, "col_offset": 0, "nodeName": "get", "type": "Callable[[Any], Any]"}, {"lineNumber": 4, "col_offset": 12, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "W", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 287, "col_offset": 17, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 380, "col_offset": 21, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 473, "col_offset": 23, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "penalties", "type": "Dict[nothing, nothing]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "constraints", "type": "Dict[nothing, nothing]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "param_name", "type": "nothing"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "constraints", "type": "Dict[nothing, nothing]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "penalties", "type": "Dict[Any, Any]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "pen", "type": "Dict[nothing, nothing]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "v_scaled", "type": "Any"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "r", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 294, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 331, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 385, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 387, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 424, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 478, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 480, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 517, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 542, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 569, "col_offset": 15, "nodeName": "GaussianLayer", "type": "Type[GaussianLayer]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "self", "type": "Layer"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "self", "type": "Layer"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "subtract_dicts_inplace", "type": "Any"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 121, "col_offset": 51, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "enforce_constraints", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "Weights"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "vis", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "square", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "scale", "type": "Any"}, {"lineNumber": 181, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 197, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "exp", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 210, "col_offset": 53, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 211, "col_offset": 62, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 214, "col_offset": 53, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 216, "col_offset": 37, "nodeName": "log", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "exp", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "mix_inplace", "type": "Any"}, {"lineNumber": 222, "col_offset": 53, "nodeName": "var", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 223, "col_offset": 37, "nodeName": "log", "type": "Any"}, {"lineNumber": 223, "col_offset": 44, "nodeName": "var", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "dot", "type": "Any"}, {"lineNumber": 226, "col_offset": 41, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 226, "col_offset": 55, "nodeName": "weights", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 232, "col_offset": 35, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "rescale", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 32, "nodeName": "vis", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "square", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "rescale", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 294, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 305, "col_offset": 55, "nodeName": "len", "type": "Any"}, {"lineNumber": 318, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "logcosh", "type": "Any"}, {"lineNumber": 319, "col_offset": 26, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 323, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 323, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 326, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 327, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 329, "col_offset": 33, "nodeName": "atanh", "type": "Any"}, {"lineNumber": 329, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 337, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 337, "col_offset": 56, "nodeName": "weights", "type": "Any"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 343, "col_offset": 36, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 354, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 387, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 398, "col_offset": 55, "nodeName": "len", "type": "Any"}, {"lineNumber": 411, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "softplus", "type": "Any"}, {"lineNumber": 412, "col_offset": 27, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 415, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 416, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 416, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 419, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 419, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 420, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 422, "col_offset": 33, "nodeName": "logit", "type": "Any"}, {"lineNumber": 422, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 430, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 430, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 430, "col_offset": 56, "nodeName": "weights", "type": "Any"}, {"lineNumber": 431, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 436, "col_offset": 36, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 447, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "expit", "type": "Any"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 463, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 468, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 470, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 480, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 491, "col_offset": 54, "nodeName": "len", "type": "Any"}, {"lineNumber": 504, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 509, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 509, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "mean", "type": "Callable[[], Any]"}, {"lineNumber": 512, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 512, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 513, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 515, "col_offset": 33, "nodeName": "reciprocal", "type": "Any"}, {"lineNumber": 515, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 529, "col_offset": 35, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 539, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 539, "col_offset": 32, "nodeName": "vis", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 540, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 548, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "reciprocal", "type": "Any"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 559, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 560, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 568, "col_offset": 18, "nodeName": "lower", "type": "Any"}, {"lineNumber": 571, "col_offset": 15, "nodeName": "IsingLayer", "type": "Type[IsingLayer]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "penalties", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "param_name", "type": "nothing"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "penalties", "type": "Dict[nothing, nothing]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "self", "type": "Layer"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "Layer"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "self", "type": "Weights"}, {"lineNumber": 148, "col_offset": 46, "nodeName": "n", "type": "int"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "batch_dot", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "vis", "type": "Any"}, {"lineNumber": 154, "col_offset": 61, "nodeName": "hid", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "len", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 179, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "be", "type": "Any"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 197, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 198, "col_offset": 36, "nodeName": "phi", "type": "Any"}, {"lineNumber": 198, "col_offset": 43, "nodeName": "square", "type": "Any"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "phi", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 199, "col_offset": 36, "nodeName": "scale", "type": "Any"}, {"lineNumber": 199, "col_offset": 43, "nodeName": "phi", "type": "Any"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "be", "type": "Any"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 208, "col_offset": 14, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 214, "col_offset": 14, "nodeName": "n", "type": "int"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 216, "col_offset": 37, "nodeName": "be", "type": "Any"}, {"lineNumber": 216, "col_offset": 44, "nodeName": "x2", "type": "Any"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "be", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "float_scalar", "type": "Any"}, {"lineNumber": 222, "col_offset": 58, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 222, "col_offset": 71, "nodeName": "var", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 223, "col_offset": 37, "nodeName": "be", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "be", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 229, "col_offset": 39, "nodeName": "beta", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 232, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 233, "col_offset": 35, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "exp", "type": "Any"}, {"lineNumber": 238, "col_offset": 38, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "len", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 248, "col_offset": 33, "nodeName": "v_scaled", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "mean", "type": "Any"}, {"lineNumber": 253, "col_offset": 43, "nodeName": "diff", "type": "Any"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "batch_dot", "type": "Any"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "hid", "type": "Any"}, {"lineNumber": 257, "col_offset": 29, "nodeName": "vis", "type": "Any"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 259, "col_offset": 37, "nodeName": "vis", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 260, "col_offset": 41, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 267, "col_offset": 30, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 267, "col_offset": 43, "nodeName": "scale", "type": "Any"}, {"lineNumber": 267, "col_offset": 50, "nodeName": "observations", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 276, "col_offset": 28, "nodeName": "rand", "type": "Any"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 277, "col_offset": 78, "nodeName": "r", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 305, "col_offset": 55, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 318, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 323, "col_offset": 30, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 325, "col_offset": 20, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 327, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 329, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 339, "col_offset": 40, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 340, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 343, "col_offset": 36, "nodeName": "be", "type": "Any"}, {"lineNumber": 344, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 345, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 350, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 353, "col_offset": 33, "nodeName": "vis", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 368, "col_offset": 21, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 369, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 390, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 398, "col_offset": 55, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 411, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 411, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 416, "col_offset": 30, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 418, "col_offset": 21, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 419, "col_offset": 13, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 420, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 422, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 430, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 432, "col_offset": 40, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 433, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 436, "col_offset": 36, "nodeName": "be", "type": "Any"}, {"lineNumber": 437, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 438, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 443, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 446, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 446, "col_offset": 33, "nodeName": "vis", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 447, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 461, "col_offset": 21, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 462, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 462, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 463, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 463, "col_offset": 31, "nodeName": "r", "type": "Any"}, {"lineNumber": 463, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 467, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 470, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 470, "col_offset": 31, "nodeName": "r", "type": "Any"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "dot", "type": "Any"}, {"lineNumber": 491, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 491, "col_offset": 54, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 504, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 504, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 505, "col_offset": 23, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 509, "col_offset": 30, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 511, "col_offset": 22, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 512, "col_offset": 13, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 513, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 515, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 523, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 523, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 523, "col_offset": 56, "nodeName": "weights", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 525, "col_offset": 39, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 526, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 529, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 530, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 531, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 536, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 536, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 539, "col_offset": 24, "nodeName": "be", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 540, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 551, "col_offset": 29, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 554, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 555, "col_offset": 28, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 561, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 562, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 562, "col_offset": 23, "nodeName": "r", "type": "Any"}, {"lineNumber": 568, "col_offset": 18, "nodeName": "key", "type": "Any"}, {"lineNumber": 570, "col_offset": 20, "nodeName": "lower", "type": "Any"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "BernoulliLayer", "type": "Type[BernoulliLayer]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Layer"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Layer"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "randn", "type": "Any"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "self", "type": "Weights"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "be", "type": "Any"}, {"lineNumber": 179, "col_offset": 37, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "be", "type": "Any"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 198, "col_offset": 43, "nodeName": "be", "type": "Any"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "be", "type": "Any"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 208, "col_offset": 14, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "mean", "type": "Any"}, {"lineNumber": 211, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "be", "type": "Any"}, {"lineNumber": 222, "col_offset": 41, "nodeName": "shrinkage", "type": "Any"}, {"lineNumber": 222, "col_offset": 58, "nodeName": "be", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "be", "type": "Any"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 233, "col_offset": 35, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 237, "col_offset": 45, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 238, "col_offset": 38, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 251, "col_offset": 51, "nodeName": "vis", "type": "Any"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "be", "type": "Any"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 256, "col_offset": 42, "nodeName": "weights", "type": "Any"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 267, "col_offset": 30, "nodeName": "be", "type": "Any"}, {"lineNumber": 276, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 276, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 277, "col_offset": 41, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 281, "col_offset": 32, "nodeName": "rand", "type": "Any"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 305, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 318, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 325, "col_offset": 20, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 327, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 327, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 339, "col_offset": 40, "nodeName": "be", "type": "Any"}, {"lineNumber": 341, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 344, "col_offset": 36, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 345, "col_offset": 36, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 350, "col_offset": 24, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 362, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 368, "col_offset": 21, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 374, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 374, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 376, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 377, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 390, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 398, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 411, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 411, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 418, "col_offset": 21, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 420, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 420, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 432, "col_offset": 40, "nodeName": "be", "type": "Any"}, {"lineNumber": 434, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 437, "col_offset": 36, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 438, "col_offset": 36, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 443, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 446, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 447, "col_offset": 37, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 455, "col_offset": 31, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 461, "col_offset": 21, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 462, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 467, "col_offset": 16, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 467, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 467, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 469, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 469, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 491, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 504, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 504, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 511, "col_offset": 22, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 513, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 513, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 523, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 525, "col_offset": 39, "nodeName": "be", "type": "Any"}, {"lineNumber": 527, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 530, "col_offset": 36, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 531, "col_offset": 36, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 536, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 536, "col_offset": 24, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 540, "col_offset": 37, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 551, "col_offset": 29, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 554, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 554, "col_offset": 31, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 555, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 555, "col_offset": 23, "nodeName": "r", "type": "Any"}, {"lineNumber": 555, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 559, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 559, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 561, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 561, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 562, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 570, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 572, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 575, "col_offset": 15, "nodeName": "ExponentialLayer", "type": "Type[ExponentialLayer]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "Layer"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "param_name", "type": "nothing"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "self", "type": "Layer"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "param_name", "type": "nothing"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "penalties", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "self", "type": "Layer"}, {"lineNumber": 85, "col_offset": 61, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "batch_outer", "type": "Any"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "vis", "type": "Any"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "hid", "type": "Any"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "self", "type": "Weights"}, {"lineNumber": 179, "col_offset": 37, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "be", "type": "Any"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "square", "type": "Any"}, {"lineNumber": 214, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 216, "col_offset": 49, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 237, "col_offset": 45, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "be", "type": "Any"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "be", "type": "Any"}, {"lineNumber": 276, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 276, "col_offset": 47, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 277, "col_offset": 41, "nodeName": "be", "type": "Any"}, {"lineNumber": 277, "col_offset": 49, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 281, "col_offset": 32, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 281, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 281, "col_offset": 51, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 283, "col_offset": 32, "nodeName": "rand", "type": "Any"}, {"lineNumber": 283, "col_offset": 42, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 318, "col_offset": 28, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 327, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 341, "col_offset": 40, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 362, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 370, "col_offset": 35, "nodeName": "r", "type": "Any"}, {"lineNumber": 370, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 374, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 377, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 377, "col_offset": 35, "nodeName": "r", "type": "Any"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 398, "col_offset": 29, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 411, "col_offset": 28, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 420, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 434, "col_offset": 40, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 455, "col_offset": 31, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 467, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 469, "col_offset": 16, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 491, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 504, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 513, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 527, "col_offset": 40, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 554, "col_offset": 31, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 555, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 559, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 561, "col_offset": 16, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 572, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 574, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 577, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "Layer"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 216, "col_offset": 49, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 276, "col_offset": 47, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 277, "col_offset": 49, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 281, "col_offset": 42, "nodeName": "be", "type": "Any"}, {"lineNumber": 283, "col_offset": 32, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 362, "col_offset": 35, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 398, "col_offset": 29, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 574, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 362, "col_offset": 35, "nodeName": "self", "type": "IsingLayer"}]