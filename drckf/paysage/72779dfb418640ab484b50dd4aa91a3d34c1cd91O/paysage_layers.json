[{"lineNumber": 1405, "col_offset": 0, "nodeName": "get", "type": "Callable[[Any], Any]"}, {"lineNumber": 8, "col_offset": 12, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "W", "type": "Callable[[Any], Any]"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 607, "col_offset": 17, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 873, "col_offset": 21, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 1139, "col_offset": 23, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "penalties", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "constraints", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "layer_obj", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "constraints", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "pen", "type": "Dict[Any, Any]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "pen", "type": "Dict[nothing, nothing]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[nothing], List[str], str, Any]]"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[nothing], List[str], str, Any]]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "layer", "type": "Weights"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "layer", "type": "Weights"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 316, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 332, "col_offset": 35, "nodeName": "len", "type": "Any"}, {"lineNumber": 333, "col_offset": 37, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 344, "col_offset": 15, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 423, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "v_scaled", "type": "Any"}, {"lineNumber": 518, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "r", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 622, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 624, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 636, "col_offset": 35, "nodeName": "len", "type": "Any"}, {"lineNumber": 637, "col_offset": 37, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 638, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 648, "col_offset": 15, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 713, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 787, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 801, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 847, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 888, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 888, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 890, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 890, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 902, "col_offset": 35, "nodeName": "len", "type": "Any"}, {"lineNumber": 903, "col_offset": 37, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 904, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 908, "col_offset": 8, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 909, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 914, "col_offset": 15, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 952, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 970, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 973, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 974, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 975, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 979, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 979, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1053, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1067, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 1112, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 1113, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 1154, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 1154, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 1155, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1156, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1156, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1167, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 1168, "col_offset": 35, "nodeName": "len", "type": "Any"}, {"lineNumber": 1169, "col_offset": 37, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1170, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 1174, "col_offset": 8, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1175, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 1180, "col_offset": 15, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1218, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 1236, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 1237, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1239, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1240, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1241, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1245, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1245, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1319, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1333, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 1376, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 1407, "col_offset": 15, "nodeName": "GaussianLayer", "type": "Type[GaussianLayer]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "__name__", "type": "str"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "config", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "constraint", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "self", "type": "Layer"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "penalty", "type": "Dict[Any, Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "subtract_dicts_inplace", "type": "Any"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 186, "col_offset": 51, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "enforce_constraints", "type": "Callable[[], Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "Weights"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[nothing], List[str], str, Any]]"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "self", "type": "Weights"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "cls", "type": "Type[Weights]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "vis", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 332, "col_offset": 35, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 333, "col_offset": 37, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "cls", "type": "Type[GaussianLayer]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 342, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "vis", "type": "Any"}, {"lineNumber": 362, "col_offset": 17, "nodeName": "square", "type": "Any"}, {"lineNumber": 362, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 363, "col_offset": 18, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 363, "col_offset": 31, "nodeName": "scale", "type": "Any"}, {"lineNumber": 363, "col_offset": 38, "nodeName": "vis", "type": "Any"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 388, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 410, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "exp", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 415, "col_offset": 34, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 415, "col_offset": 53, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 416, "col_offset": 62, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 418, "col_offset": 14, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 418, "col_offset": 33, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 419, "col_offset": 53, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 421, "col_offset": 37, "nodeName": "log", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 441, "col_offset": 14, "nodeName": "exp", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "mix_inplace", "type": "Any"}, {"lineNumber": 442, "col_offset": 53, "nodeName": "var", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 443, "col_offset": 37, "nodeName": "log", "type": "Any"}, {"lineNumber": 443, "col_offset": 44, "nodeName": "var", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 464, "col_offset": 34, "nodeName": "dot", "type": "Any"}, {"lineNumber": 464, "col_offset": 41, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 464, "col_offset": 55, "nodeName": "weights", "type": "Any"}, {"lineNumber": 465, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 470, "col_offset": 35, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 474, "col_offset": 38, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 502, "col_offset": 19, "nodeName": "rescale", "type": "Callable[[Any], Any]"}, {"lineNumber": 502, "col_offset": 32, "nodeName": "vis", "type": "Any"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 505, "col_offset": 15, "nodeName": "square", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 515, "col_offset": 28, "nodeName": "rescale", "type": "Callable[[Any], Any]"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 517, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 534, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 535, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 581, "col_offset": 12, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 601, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 624, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 635, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 636, "col_offset": 35, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 637, "col_offset": 37, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "cls", "type": "Type[IsingLayer]"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 643, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 644, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 644, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 644, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 646, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 646, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 686, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 687, "col_offset": 15, "nodeName": "logcosh", "type": "Any"}, {"lineNumber": 687, "col_offset": 26, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 704, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 704, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 705, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 705, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 707, "col_offset": 12, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 708, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 708, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 709, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 711, "col_offset": 33, "nodeName": "atanh", "type": "Any"}, {"lineNumber": 711, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 751, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 751, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 751, "col_offset": 56, "nodeName": "weights", "type": "Any"}, {"lineNumber": 752, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 757, "col_offset": 36, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 785, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 831, "col_offset": 15, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 846, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 847, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 867, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 868, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 888, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 890, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 890, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 901, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 902, "col_offset": 35, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 903, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 903, "col_offset": 37, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 908, "col_offset": 16, "nodeName": "cls", "type": "Type[BernoulliLayer]"}, {"lineNumber": 909, "col_offset": 8, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 909, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 910, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 910, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 910, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 912, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 912, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 912, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 952, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 953, "col_offset": 15, "nodeName": "softplus", "type": "Any"}, {"lineNumber": 953, "col_offset": 27, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 970, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 970, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 971, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 971, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 973, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 974, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 974, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 975, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 977, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 977, "col_offset": 33, "nodeName": "logit", "type": "Any"}, {"lineNumber": 977, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 979, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1017, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1017, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1017, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 1017, "col_offset": 56, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1018, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1023, "col_offset": 36, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1050, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1051, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 1051, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1082, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 1097, "col_offset": 15, "nodeName": "expit", "type": "Any"}, {"lineNumber": 1112, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 1113, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1114, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 1133, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 1134, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 1136, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 1152, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 1154, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1155, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1156, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1156, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 1167, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 1168, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 1168, "col_offset": 35, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1169, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 1169, "col_offset": 37, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1174, "col_offset": 16, "nodeName": "cls", "type": "Type[ExponentialLayer]"}, {"lineNumber": 1175, "col_offset": 8, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1175, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 1176, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 1176, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 1176, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 1178, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 1178, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 1178, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 1196, "col_offset": 15, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1196, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 1218, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 1236, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1236, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 1237, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 1237, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1239, "col_offset": 12, "nodeName": "mean", "type": "Callable[[], Any]"}, {"lineNumber": 1240, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1240, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1241, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1243, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1243, "col_offset": 33, "nodeName": "reciprocal", "type": "Any"}, {"lineNumber": 1243, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 1245, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1283, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1284, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 1289, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1289, "col_offset": 35, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1316, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1316, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1316, "col_offset": 32, "nodeName": "vis", "type": "Any"}, {"lineNumber": 1317, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 1317, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1346, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 1361, "col_offset": 15, "nodeName": "reciprocal", "type": "Any"}, {"lineNumber": 1376, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1397, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 1398, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 1406, "col_offset": 18, "nodeName": "lower", "type": "Any"}, {"lineNumber": 1409, "col_offset": 15, "nodeName": "IsingLayer", "type": "Type[IsingLayer]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "__class__", "type": "Type[BernoulliLayer]"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "self", "type": "Layer"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "modules", "type": "Dict[str, module]"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "config", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "layer_obj", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "constraints", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "penalties", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "penalties", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "param_name", "type": "nothing"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "penalties", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "self", "type": "Layer"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "Layer"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "self", "type": "Weights"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "self", "type": "Weights"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 278, "col_offset": 46, "nodeName": "n", "type": "int"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 280, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "batch_dot", "type": "Any"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "vis", "type": "Any"}, {"lineNumber": 298, "col_offset": 61, "nodeName": "hid", "type": "Any"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "len", "type": "Any"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 360, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 361, "col_offset": 60, "nodeName": "vis", "type": "Any"}, {"lineNumber": 362, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 363, "col_offset": 18, "nodeName": "be", "type": "Any"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 364, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 386, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 388, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 389, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 389, "col_offset": 36, "nodeName": "phi", "type": "Any"}, {"lineNumber": 389, "col_offset": 43, "nodeName": "square", "type": "Any"}, {"lineNumber": 389, "col_offset": 53, "nodeName": "phi", "type": "Any"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 390, "col_offset": 23, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 390, "col_offset": 36, "nodeName": "scale", "type": "Any"}, {"lineNumber": 390, "col_offset": 43, "nodeName": "phi", "type": "Any"}, {"lineNumber": 410, "col_offset": 30, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "be", "type": "Any"}, {"lineNumber": 412, "col_offset": 20, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 413, "col_offset": 14, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 415, "col_offset": 34, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 416, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 418, "col_offset": 14, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 419, "col_offset": 14, "nodeName": "n", "type": "int"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 421, "col_offset": 37, "nodeName": "be", "type": "Any"}, {"lineNumber": 421, "col_offset": 44, "nodeName": "x2", "type": "Any"}, {"lineNumber": 441, "col_offset": 14, "nodeName": "be", "type": "Any"}, {"lineNumber": 441, "col_offset": 21, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 442, "col_offset": 23, "nodeName": "float_scalar", "type": "Any"}, {"lineNumber": 442, "col_offset": 58, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 442, "col_offset": 71, "nodeName": "var", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 443, "col_offset": 37, "nodeName": "be", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 464, "col_offset": 34, "nodeName": "be", "type": "Any"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 466, "col_offset": 39, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 467, "col_offset": 39, "nodeName": "beta", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 470, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 471, "col_offset": 35, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 472, "col_offset": 35, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 474, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 475, "col_offset": 38, "nodeName": "exp", "type": "Any"}, {"lineNumber": 476, "col_offset": 38, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 498, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 498, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 499, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 499, "col_offset": 28, "nodeName": "len", "type": "Any"}, {"lineNumber": 502, "col_offset": 19, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 503, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 503, "col_offset": 33, "nodeName": "v_scaled", "type": "Any"}, {"lineNumber": 505, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 508, "col_offset": 35, "nodeName": "mean", "type": "Any"}, {"lineNumber": 508, "col_offset": 43, "nodeName": "diff", "type": "Any"}, {"lineNumber": 509, "col_offset": 29, "nodeName": "batch_dot", "type": "Any"}, {"lineNumber": 510, "col_offset": 29, "nodeName": "hid", "type": "Any"}, {"lineNumber": 512, "col_offset": 29, "nodeName": "vis", "type": "Any"}, {"lineNumber": 514, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 514, "col_offset": 37, "nodeName": "vis", "type": "Any"}, {"lineNumber": 515, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 515, "col_offset": 41, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 517, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 534, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 534, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 535, "col_offset": 30, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 535, "col_offset": 43, "nodeName": "scale", "type": "Any"}, {"lineNumber": 535, "col_offset": 50, "nodeName": "observations", "type": "Any"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 581, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 581, "col_offset": 28, "nodeName": "rand", "type": "Any"}, {"lineNumber": 582, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 582, "col_offset": 78, "nodeName": "r", "type": "Any"}, {"lineNumber": 601, "col_offset": 16, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 603, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 627, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 635, "col_offset": 22, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 642, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 647, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 664, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 664, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 686, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 687, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 705, "col_offset": 30, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 707, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 707, "col_offset": 20, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 708, "col_offset": 13, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 709, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 711, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 751, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 753, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 753, "col_offset": 40, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 754, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 757, "col_offset": 36, "nodeName": "be", "type": "Any"}, {"lineNumber": 758, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 759, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 781, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 781, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 784, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 784, "col_offset": 33, "nodeName": "vis", "type": "Any"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 785, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 831, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 831, "col_offset": 23, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 846, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 846, "col_offset": 21, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 847, "col_offset": 12, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 847, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 847, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 867, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 893, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 893, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 901, "col_offset": 22, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 908, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 911, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 913, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 930, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 930, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 952, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 952, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 953, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 971, "col_offset": 30, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 973, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 973, "col_offset": 21, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 974, "col_offset": 13, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 975, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 977, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 977, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 1017, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1017, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 1019, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1019, "col_offset": 40, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1020, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1023, "col_offset": 36, "nodeName": "be", "type": "Any"}, {"lineNumber": 1024, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1025, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1047, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1047, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 1050, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1050, "col_offset": 33, "nodeName": "vis", "type": "Any"}, {"lineNumber": 1051, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 1051, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 1082, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1097, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1097, "col_offset": 24, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1112, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 1112, "col_offset": 21, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1113, "col_offset": 12, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1113, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1113, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 1114, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1114, "col_offset": 31, "nodeName": "r", "type": "Any"}, {"lineNumber": 1114, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 1133, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1135, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 1136, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1136, "col_offset": 31, "nodeName": "r", "type": "Any"}, {"lineNumber": 1159, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1159, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 1167, "col_offset": 22, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1174, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 1177, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 1179, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 1196, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1196, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1218, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1218, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 1219, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 1219, "col_offset": 23, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 1237, "col_offset": 30, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1239, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1239, "col_offset": 22, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1240, "col_offset": 13, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1241, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 1243, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1243, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 1283, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1283, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1283, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 1283, "col_offset": 56, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1285, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1285, "col_offset": 39, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1286, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 1289, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1289, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 1290, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1291, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1313, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1313, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 1316, "col_offset": 24, "nodeName": "be", "type": "Any"}, {"lineNumber": 1317, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 1317, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 1361, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1361, "col_offset": 29, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1376, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1376, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1377, "col_offset": 28, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1397, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1399, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 1400, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 1400, "col_offset": 23, "nodeName": "r", "type": "Any"}, {"lineNumber": 1406, "col_offset": 18, "nodeName": "key", "type": "Any"}, {"lineNumber": 1408, "col_offset": 20, "nodeName": "lower", "type": "Any"}, {"lineNumber": 1411, "col_offset": 15, "nodeName": "BernoulliLayer", "type": "Type[BernoulliLayer]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "pk", "type": "nothing"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "penalties", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "ck", "type": "nothing"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "constraints", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "sys", "type": "module"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "__name__", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "constraints", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "self", "type": "Layer"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "randn", "type": "Any"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "layer", "type": "Weights"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "layer", "type": "Weights"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "self", "type": "Weights"}, {"lineNumber": 280, "col_offset": 37, "nodeName": "self", "type": "Weights"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 298, "col_offset": 34, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 341, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 343, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 360, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "be", "type": "Any"}, {"lineNumber": 361, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "be", "type": "Any"}, {"lineNumber": 386, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 389, "col_offset": 43, "nodeName": "be", "type": "Any"}, {"lineNumber": 390, "col_offset": 23, "nodeName": "be", "type": "Any"}, {"lineNumber": 412, "col_offset": 20, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 413, "col_offset": 14, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 416, "col_offset": 38, "nodeName": "mean", "type": "Any"}, {"lineNumber": 416, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 419, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 441, "col_offset": 21, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 442, "col_offset": 23, "nodeName": "be", "type": "Any"}, {"lineNumber": 442, "col_offset": 41, "nodeName": "shrinkage", "type": "Any"}, {"lineNumber": 442, "col_offset": 58, "nodeName": "be", "type": "Any"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 466, "col_offset": 39, "nodeName": "be", "type": "Any"}, {"lineNumber": 468, "col_offset": 39, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 471, "col_offset": 35, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 472, "col_offset": 35, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 475, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 475, "col_offset": 45, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 476, "col_offset": 38, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 498, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 498, "col_offset": 24, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 499, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 499, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 503, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 506, "col_offset": 14, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 506, "col_offset": 51, "nodeName": "vis", "type": "Any"}, {"lineNumber": 508, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 509, "col_offset": 29, "nodeName": "be", "type": "Any"}, {"lineNumber": 511, "col_offset": 29, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 511, "col_offset": 42, "nodeName": "weights", "type": "Any"}, {"lineNumber": 517, "col_offset": 37, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 534, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 535, "col_offset": 30, "nodeName": "be", "type": "Any"}, {"lineNumber": 581, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 581, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 582, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 582, "col_offset": 41, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 601, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 601, "col_offset": 32, "nodeName": "rand", "type": "Any"}, {"lineNumber": 603, "col_offset": 16, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 627, "col_offset": 24, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 645, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 647, "col_offset": 12, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 647, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 664, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 664, "col_offset": 29, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 686, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 707, "col_offset": 20, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 709, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 709, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 753, "col_offset": 12, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 753, "col_offset": 40, "nodeName": "be", "type": "Any"}, {"lineNumber": 755, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 758, "col_offset": 36, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 759, "col_offset": 36, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 781, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 781, "col_offset": 24, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 784, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 785, "col_offset": 37, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 816, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 831, "col_offset": 23, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 846, "col_offset": 21, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 847, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 848, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 867, "col_offset": 16, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 867, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 867, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 869, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 869, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 870, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 893, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 893, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 911, "col_offset": 12, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 911, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 913, "col_offset": 12, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 913, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 930, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 930, "col_offset": 29, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 952, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 952, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 973, "col_offset": 21, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 975, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 975, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 1019, "col_offset": 12, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1019, "col_offset": 40, "nodeName": "be", "type": "Any"}, {"lineNumber": 1021, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1024, "col_offset": 36, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1025, "col_offset": 36, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1047, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1047, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1050, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 1051, "col_offset": 37, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1082, "col_offset": 31, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1097, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1112, "col_offset": 21, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1113, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 1133, "col_offset": 16, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1133, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1133, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 1135, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1135, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 1152, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1159, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1159, "col_offset": 24, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1177, "col_offset": 12, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1177, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 1179, "col_offset": 12, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1179, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 1196, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1218, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1218, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1219, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 1239, "col_offset": 22, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1241, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1241, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 1283, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 1285, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1285, "col_offset": 39, "nodeName": "be", "type": "Any"}, {"lineNumber": 1287, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1290, "col_offset": 36, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1291, "col_offset": 36, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1313, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1313, "col_offset": 24, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1317, "col_offset": 37, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1361, "col_offset": 29, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1376, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 1376, "col_offset": 31, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1377, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 1377, "col_offset": 23, "nodeName": "r", "type": "Any"}, {"lineNumber": 1377, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1397, "col_offset": 16, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1397, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1397, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 1399, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1399, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 1400, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 1408, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 1410, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 1413, "col_offset": 15, "nodeName": "ExponentialLayer", "type": "Type[ExponentialLayer]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "Layer"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "self", "type": "Layer"}, {"lineNumber": 116, "col_offset": 57, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 225, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 225, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 227, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 227, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 278, "col_offset": 19, "nodeName": "batch_outer", "type": "Any"}, {"lineNumber": 278, "col_offset": 34, "nodeName": "vis", "type": "Any"}, {"lineNumber": 278, "col_offset": 39, "nodeName": "hid", "type": "Any"}, {"lineNumber": 298, "col_offset": 34, "nodeName": "self", "type": "Weights"}, {"lineNumber": 341, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 341, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 341, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 343, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 343, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 343, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 361, "col_offset": 36, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 416, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 419, "col_offset": 18, "nodeName": "be", "type": "Any"}, {"lineNumber": 419, "col_offset": 26, "nodeName": "square", "type": "Any"}, {"lineNumber": 419, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 421, "col_offset": 49, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 468, "col_offset": 39, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 475, "col_offset": 45, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 506, "col_offset": 14, "nodeName": "be", "type": "Any"}, {"lineNumber": 506, "col_offset": 27, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 511, "col_offset": 29, "nodeName": "be", "type": "Any"}, {"lineNumber": 581, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 581, "col_offset": 47, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 582, "col_offset": 41, "nodeName": "be", "type": "Any"}, {"lineNumber": 582, "col_offset": 49, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 601, "col_offset": 32, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 601, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 601, "col_offset": 51, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 603, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 603, "col_offset": 32, "nodeName": "rand", "type": "Any"}, {"lineNumber": 603, "col_offset": 42, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 645, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 645, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 645, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 647, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 647, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 647, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 664, "col_offset": 29, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 686, "col_offset": 28, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 709, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 755, "col_offset": 40, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 816, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 848, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 848, "col_offset": 35, "nodeName": "r", "type": "Any"}, {"lineNumber": 848, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 867, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 869, "col_offset": 16, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 870, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 870, "col_offset": 35, "nodeName": "r", "type": "Any"}, {"lineNumber": 911, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 911, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 911, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 913, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 913, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 913, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 930, "col_offset": 29, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 952, "col_offset": 28, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 975, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 1021, "col_offset": 40, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1082, "col_offset": 31, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1133, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 1135, "col_offset": 16, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1177, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1177, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 1177, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 1179, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1179, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1179, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 1218, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1241, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 1287, "col_offset": 40, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1376, "col_offset": 31, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1377, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 1397, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 1399, "col_offset": 16, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1410, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 1412, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 1415, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 278, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 419, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 421, "col_offset": 49, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 506, "col_offset": 27, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 581, "col_offset": 47, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 582, "col_offset": 49, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 601, "col_offset": 42, "nodeName": "be", "type": "Any"}, {"lineNumber": 603, "col_offset": 32, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 816, "col_offset": 35, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1412, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 816, "col_offset": 35, "nodeName": "self", "type": "IsingLayer"}]