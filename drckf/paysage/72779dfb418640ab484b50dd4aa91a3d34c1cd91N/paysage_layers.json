[{"lineNumber": 1505, "col_offset": 0, "nodeName": "get", "type": "Callable[[Any], Any]"}, {"lineNumber": 8, "col_offset": 12, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "W", "type": "Callable[[Any], Any]"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 647, "col_offset": 17, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 933, "col_offset": 21, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 1219, "col_offset": 23, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "penalties", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "constraints", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "layer_obj", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "constraints", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "pen", "type": "Dict[Any, Any]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "pen", "type": "Dict[nothing, nothing]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[nothing], List[str], str, Any]]"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[nothing], List[str], str, Any]]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "layer", "type": "Weights"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "layer", "type": "Weights"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 362, "col_offset": 35, "nodeName": "len", "type": "Any"}, {"lineNumber": 363, "col_offset": 37, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 463, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "v_scaled", "type": "Any"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 644, "col_offset": 15, "nodeName": "r", "type": "Any"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 662, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 664, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 686, "col_offset": 35, "nodeName": "len", "type": "Any"}, {"lineNumber": 687, "col_offset": 37, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 688, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 708, "col_offset": 15, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 773, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 847, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 861, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 906, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 907, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 948, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 950, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 950, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 972, "col_offset": 35, "nodeName": "len", "type": "Any"}, {"lineNumber": 973, "col_offset": 37, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 974, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 988, "col_offset": 8, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 989, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 994, "col_offset": 15, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 1032, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 1050, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 1051, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1053, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1054, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1055, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1059, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1059, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1133, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1147, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 1192, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 1193, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 1234, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 1234, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 1235, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1236, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1236, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1257, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 1258, "col_offset": 35, "nodeName": "len", "type": "Any"}, {"lineNumber": 1259, "col_offset": 37, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1260, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 1274, "col_offset": 8, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1275, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 1280, "col_offset": 15, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1318, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 1336, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 1337, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1339, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1340, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1341, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1345, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1345, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1419, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1433, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 1476, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 1507, "col_offset": 15, "nodeName": "GaussianLayer", "type": "Type[GaussianLayer]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "__name__", "type": "str"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "config", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "constraint", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "self", "type": "Layer"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "penalty", "type": "Dict[Any, Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "subtract_dicts_inplace", "type": "Any"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 186, "col_offset": 51, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "enforce_constraints", "type": "Callable[[], Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "Weights"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[nothing], List[str], str, Any]]"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "self", "type": "Weights"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "cls", "type": "Type[Weights]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "vis", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 361, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 362, "col_offset": 35, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 363, "col_offset": 37, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 378, "col_offset": 16, "nodeName": "cls", "type": "Type[GaussianLayer]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 379, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 380, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 382, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 382, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 401, "col_offset": 17, "nodeName": "vis", "type": "Any"}, {"lineNumber": 402, "col_offset": 17, "nodeName": "square", "type": "Any"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 403, "col_offset": 18, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 403, "col_offset": 31, "nodeName": "scale", "type": "Any"}, {"lineNumber": 403, "col_offset": 38, "nodeName": "vis", "type": "Any"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 428, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 450, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 450, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 452, "col_offset": 13, "nodeName": "exp", "type": "Any"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 455, "col_offset": 34, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 455, "col_offset": 53, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 456, "col_offset": 62, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 458, "col_offset": 14, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 458, "col_offset": 33, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 459, "col_offset": 53, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 461, "col_offset": 37, "nodeName": "log", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 481, "col_offset": 14, "nodeName": "exp", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "mix_inplace", "type": "Any"}, {"lineNumber": 482, "col_offset": 53, "nodeName": "var", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 483, "col_offset": 37, "nodeName": "log", "type": "Any"}, {"lineNumber": 483, "col_offset": 44, "nodeName": "var", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 504, "col_offset": 34, "nodeName": "dot", "type": "Any"}, {"lineNumber": 504, "col_offset": 41, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 504, "col_offset": 55, "nodeName": "weights", "type": "Any"}, {"lineNumber": 505, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 510, "col_offset": 35, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 514, "col_offset": 38, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 542, "col_offset": 19, "nodeName": "rescale", "type": "Callable[[Any], Any]"}, {"lineNumber": 542, "col_offset": 32, "nodeName": "vis", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "square", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 555, "col_offset": 28, "nodeName": "rescale", "type": "Callable[[Any], Any]"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 557, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 574, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 575, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 591, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 606, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 641, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 642, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 664, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 685, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 686, "col_offset": 35, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 687, "col_offset": 37, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 702, "col_offset": 16, "nodeName": "cls", "type": "Type[IsingLayer]"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 703, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 704, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 704, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 704, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 706, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 706, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 706, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 746, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 747, "col_offset": 15, "nodeName": "logcosh", "type": "Any"}, {"lineNumber": 747, "col_offset": 26, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 764, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 764, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 765, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 765, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 767, "col_offset": 12, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 768, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 768, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 769, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 771, "col_offset": 33, "nodeName": "atanh", "type": "Any"}, {"lineNumber": 771, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 811, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 811, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 811, "col_offset": 56, "nodeName": "weights", "type": "Any"}, {"lineNumber": 812, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 817, "col_offset": 36, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 845, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 891, "col_offset": 15, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 906, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 907, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 927, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 928, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 946, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 950, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 950, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 971, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 972, "col_offset": 35, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 973, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 973, "col_offset": 37, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 988, "col_offset": 16, "nodeName": "cls", "type": "Type[BernoulliLayer]"}, {"lineNumber": 989, "col_offset": 8, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 989, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 990, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 990, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 990, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 992, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 992, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 992, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 1032, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 1033, "col_offset": 15, "nodeName": "softplus", "type": "Any"}, {"lineNumber": 1033, "col_offset": 27, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 1050, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1050, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 1051, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 1051, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1053, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 1054, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1054, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1055, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1057, "col_offset": 33, "nodeName": "logit", "type": "Any"}, {"lineNumber": 1057, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 1059, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1097, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1097, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1097, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 1097, "col_offset": 56, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1098, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 1103, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1103, "col_offset": 36, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1130, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1131, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 1131, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1162, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 1177, "col_offset": 15, "nodeName": "expit", "type": "Any"}, {"lineNumber": 1192, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 1193, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1194, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 1213, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 1214, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 1216, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 1232, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 1234, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1235, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1236, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1236, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 1257, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 1258, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 1258, "col_offset": 35, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1259, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 1259, "col_offset": 37, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1274, "col_offset": 16, "nodeName": "cls", "type": "Type[ExponentialLayer]"}, {"lineNumber": 1275, "col_offset": 8, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1275, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 1276, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 1276, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 1276, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 1278, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 1278, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 1278, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 1296, "col_offset": 15, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1296, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 1318, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 1336, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1336, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 1337, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 1337, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1339, "col_offset": 12, "nodeName": "mean", "type": "Callable[[], Any]"}, {"lineNumber": 1340, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1340, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1341, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1343, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1343, "col_offset": 33, "nodeName": "reciprocal", "type": "Any"}, {"lineNumber": 1343, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 1345, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1383, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1384, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 1389, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1389, "col_offset": 35, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1416, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1416, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1416, "col_offset": 32, "nodeName": "vis", "type": "Any"}, {"lineNumber": 1417, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 1417, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1446, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 1461, "col_offset": 15, "nodeName": "reciprocal", "type": "Any"}, {"lineNumber": 1476, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1497, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 1498, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 1506, "col_offset": 18, "nodeName": "lower", "type": "Any"}, {"lineNumber": 1509, "col_offset": 15, "nodeName": "IsingLayer", "type": "Type[IsingLayer]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "__class__", "type": "Type[BernoulliLayer]"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "self", "type": "Layer"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "modules", "type": "Dict[str, module]"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "config", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "layer_obj", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "constraints", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "penalties", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "penalties", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "param_name", "type": "nothing"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "penalties", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "self", "type": "Layer"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "Layer"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "self", "type": "Weights"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "self", "type": "Weights"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 298, "col_offset": 46, "nodeName": "n", "type": "int"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 300, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "batch_dot", "type": "Any"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "vis", "type": "Any"}, {"lineNumber": 318, "col_offset": 61, "nodeName": "hid", "type": "Any"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 342, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "len", "type": "Any"}, {"lineNumber": 361, "col_offset": 22, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 400, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 401, "col_offset": 60, "nodeName": "vis", "type": "Any"}, {"lineNumber": 402, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 403, "col_offset": 18, "nodeName": "be", "type": "Any"}, {"lineNumber": 404, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 426, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 428, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 428, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 429, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 429, "col_offset": 36, "nodeName": "phi", "type": "Any"}, {"lineNumber": 429, "col_offset": 43, "nodeName": "square", "type": "Any"}, {"lineNumber": 429, "col_offset": 53, "nodeName": "phi", "type": "Any"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 430, "col_offset": 23, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "scale", "type": "Any"}, {"lineNumber": 430, "col_offset": 43, "nodeName": "phi", "type": "Any"}, {"lineNumber": 450, "col_offset": 30, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 452, "col_offset": 13, "nodeName": "be", "type": "Any"}, {"lineNumber": 452, "col_offset": 20, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 453, "col_offset": 14, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 455, "col_offset": 34, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 456, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 458, "col_offset": 14, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 459, "col_offset": 14, "nodeName": "n", "type": "int"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 461, "col_offset": 37, "nodeName": "be", "type": "Any"}, {"lineNumber": 461, "col_offset": 44, "nodeName": "x2", "type": "Any"}, {"lineNumber": 481, "col_offset": 14, "nodeName": "be", "type": "Any"}, {"lineNumber": 481, "col_offset": 21, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 482, "col_offset": 23, "nodeName": "float_scalar", "type": "Any"}, {"lineNumber": 482, "col_offset": 58, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 482, "col_offset": 71, "nodeName": "var", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 483, "col_offset": 37, "nodeName": "be", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 504, "col_offset": 34, "nodeName": "be", "type": "Any"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 506, "col_offset": 39, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 507, "col_offset": 39, "nodeName": "beta", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 510, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 511, "col_offset": 35, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 512, "col_offset": 35, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 514, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 515, "col_offset": 38, "nodeName": "exp", "type": "Any"}, {"lineNumber": 516, "col_offset": 38, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 538, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 538, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 539, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 539, "col_offset": 28, "nodeName": "len", "type": "Any"}, {"lineNumber": 542, "col_offset": 19, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 543, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 543, "col_offset": 33, "nodeName": "v_scaled", "type": "Any"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 548, "col_offset": 35, "nodeName": "mean", "type": "Any"}, {"lineNumber": 548, "col_offset": 43, "nodeName": "diff", "type": "Any"}, {"lineNumber": 549, "col_offset": 29, "nodeName": "batch_dot", "type": "Any"}, {"lineNumber": 550, "col_offset": 29, "nodeName": "hid", "type": "Any"}, {"lineNumber": 552, "col_offset": 29, "nodeName": "vis", "type": "Any"}, {"lineNumber": 554, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 554, "col_offset": 37, "nodeName": "vis", "type": "Any"}, {"lineNumber": 555, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 555, "col_offset": 41, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 557, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 574, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 574, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 575, "col_offset": 30, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 575, "col_offset": 43, "nodeName": "scale", "type": "Any"}, {"lineNumber": 575, "col_offset": 50, "nodeName": "observations", "type": "Any"}, {"lineNumber": 591, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 606, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 621, "col_offset": 28, "nodeName": "rand", "type": "Any"}, {"lineNumber": 622, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 622, "col_offset": 78, "nodeName": "r", "type": "Any"}, {"lineNumber": 641, "col_offset": 16, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 643, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 667, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 667, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 685, "col_offset": 22, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 702, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 707, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 724, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 724, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 746, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 746, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 747, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 765, "col_offset": 30, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 767, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 767, "col_offset": 20, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 768, "col_offset": 13, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 769, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 771, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 811, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 813, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 813, "col_offset": 40, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 814, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 817, "col_offset": 36, "nodeName": "be", "type": "Any"}, {"lineNumber": 818, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 819, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 841, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 841, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 844, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 844, "col_offset": 33, "nodeName": "vis", "type": "Any"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 845, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 891, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 891, "col_offset": 23, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 906, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 906, "col_offset": 21, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 907, "col_offset": 12, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 907, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 907, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 927, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 929, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 953, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 953, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 971, "col_offset": 22, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 988, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 991, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 993, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 1010, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1010, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 1032, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1032, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 1033, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1051, "col_offset": 30, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1053, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 1053, "col_offset": 21, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1054, "col_offset": 13, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1055, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1057, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 1097, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1097, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 1099, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1099, "col_offset": 40, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1100, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 1103, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1103, "col_offset": 36, "nodeName": "be", "type": "Any"}, {"lineNumber": 1104, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1105, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1127, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1127, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 1130, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1130, "col_offset": 33, "nodeName": "vis", "type": "Any"}, {"lineNumber": 1131, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 1131, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 1162, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1177, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1177, "col_offset": 24, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1192, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 1192, "col_offset": 21, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1193, "col_offset": 12, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1193, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1193, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 1194, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1194, "col_offset": 31, "nodeName": "r", "type": "Any"}, {"lineNumber": 1194, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 1213, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1215, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 1216, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1216, "col_offset": 31, "nodeName": "r", "type": "Any"}, {"lineNumber": 1239, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1239, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 1257, "col_offset": 22, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1274, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 1277, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 1279, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 1296, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1296, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1318, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1318, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 1319, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 1319, "col_offset": 23, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 1337, "col_offset": 30, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1339, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1339, "col_offset": 22, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1340, "col_offset": 13, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1341, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 1343, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1343, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 1383, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1383, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1383, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 1383, "col_offset": 56, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1385, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1385, "col_offset": 39, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1386, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 1389, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1389, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 1390, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1391, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1413, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1413, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 1416, "col_offset": 24, "nodeName": "be", "type": "Any"}, {"lineNumber": 1417, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 1417, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 1461, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1461, "col_offset": 29, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1476, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1476, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1477, "col_offset": 28, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1497, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1499, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 1500, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 1500, "col_offset": 23, "nodeName": "r", "type": "Any"}, {"lineNumber": 1506, "col_offset": 18, "nodeName": "key", "type": "Any"}, {"lineNumber": 1508, "col_offset": 20, "nodeName": "lower", "type": "Any"}, {"lineNumber": 1511, "col_offset": 15, "nodeName": "BernoulliLayer", "type": "Type[BernoulliLayer]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "pk", "type": "nothing"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "penalties", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "ck", "type": "nothing"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "constraints", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "sys", "type": "module"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "__name__", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "constraints", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "self", "type": "Layer"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "randn", "type": "Any"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "layer", "type": "Weights"}, {"lineNumber": 245, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "layer", "type": "Weights"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "self", "type": "Weights"}, {"lineNumber": 300, "col_offset": 37, "nodeName": "self", "type": "Weights"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 318, "col_offset": 34, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 342, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 381, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 383, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 400, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "be", "type": "Any"}, {"lineNumber": 401, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 404, "col_offset": 21, "nodeName": "be", "type": "Any"}, {"lineNumber": 426, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 428, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 428, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 429, "col_offset": 43, "nodeName": "be", "type": "Any"}, {"lineNumber": 430, "col_offset": 23, "nodeName": "be", "type": "Any"}, {"lineNumber": 452, "col_offset": 20, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 453, "col_offset": 14, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 456, "col_offset": 38, "nodeName": "mean", "type": "Any"}, {"lineNumber": 456, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 459, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 481, "col_offset": 21, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 482, "col_offset": 23, "nodeName": "be", "type": "Any"}, {"lineNumber": 482, "col_offset": 41, "nodeName": "shrinkage", "type": "Any"}, {"lineNumber": 482, "col_offset": 58, "nodeName": "be", "type": "Any"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 506, "col_offset": 39, "nodeName": "be", "type": "Any"}, {"lineNumber": 508, "col_offset": 39, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 511, "col_offset": 35, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 512, "col_offset": 35, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 515, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 515, "col_offset": 45, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 516, "col_offset": 38, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 538, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 538, "col_offset": 24, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 539, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 539, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 543, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 546, "col_offset": 14, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 546, "col_offset": 51, "nodeName": "vis", "type": "Any"}, {"lineNumber": 548, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 549, "col_offset": 29, "nodeName": "be", "type": "Any"}, {"lineNumber": 551, "col_offset": 29, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 551, "col_offset": 42, "nodeName": "weights", "type": "Any"}, {"lineNumber": 557, "col_offset": 37, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 574, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 575, "col_offset": 30, "nodeName": "be", "type": "Any"}, {"lineNumber": 621, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 621, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 622, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 622, "col_offset": 41, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 641, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 641, "col_offset": 32, "nodeName": "rand", "type": "Any"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 667, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 667, "col_offset": 24, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 705, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 707, "col_offset": 12, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 707, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 724, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 724, "col_offset": 29, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 746, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 746, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 767, "col_offset": 20, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 769, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 769, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 813, "col_offset": 12, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 813, "col_offset": 40, "nodeName": "be", "type": "Any"}, {"lineNumber": 815, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 818, "col_offset": 36, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 819, "col_offset": 36, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 841, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 841, "col_offset": 24, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 844, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 845, "col_offset": 37, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 876, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 891, "col_offset": 23, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 906, "col_offset": 21, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 907, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 908, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 927, "col_offset": 16, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 927, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 927, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 929, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 929, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 930, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 946, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 953, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 953, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 991, "col_offset": 12, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 991, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 993, "col_offset": 12, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 993, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 1010, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 1010, "col_offset": 29, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1032, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1032, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1053, "col_offset": 21, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1055, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1055, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 1099, "col_offset": 12, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1099, "col_offset": 40, "nodeName": "be", "type": "Any"}, {"lineNumber": 1101, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1104, "col_offset": 36, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1105, "col_offset": 36, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1127, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1127, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1130, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 1131, "col_offset": 37, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1162, "col_offset": 31, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1177, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1192, "col_offset": 21, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1193, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 1213, "col_offset": 16, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1213, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1213, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 1215, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1215, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 1232, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1239, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1239, "col_offset": 24, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1277, "col_offset": 12, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1277, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 1279, "col_offset": 12, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1279, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 1296, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1318, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1318, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1319, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 1339, "col_offset": 22, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1341, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1341, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 1383, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 1385, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1385, "col_offset": 39, "nodeName": "be", "type": "Any"}, {"lineNumber": 1387, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1390, "col_offset": 36, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1391, "col_offset": 36, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1413, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1413, "col_offset": 24, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1417, "col_offset": 37, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1461, "col_offset": 29, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1476, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 1476, "col_offset": 31, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1477, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 1477, "col_offset": 23, "nodeName": "r", "type": "Any"}, {"lineNumber": 1477, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1497, "col_offset": 16, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1497, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1497, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 1499, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1499, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 1500, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 1508, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 1510, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 1513, "col_offset": 15, "nodeName": "ExponentialLayer", "type": "Type[ExponentialLayer]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "Layer"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "self", "type": "Layer"}, {"lineNumber": 116, "col_offset": 57, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 245, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 247, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 247, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "batch_outer", "type": "Any"}, {"lineNumber": 298, "col_offset": 34, "nodeName": "vis", "type": "Any"}, {"lineNumber": 298, "col_offset": 39, "nodeName": "hid", "type": "Any"}, {"lineNumber": 318, "col_offset": 34, "nodeName": "self", "type": "Weights"}, {"lineNumber": 381, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 381, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 383, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 383, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 383, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 401, "col_offset": 36, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 428, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 456, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 459, "col_offset": 18, "nodeName": "be", "type": "Any"}, {"lineNumber": 459, "col_offset": 26, "nodeName": "square", "type": "Any"}, {"lineNumber": 459, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 461, "col_offset": 49, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 508, "col_offset": 39, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 515, "col_offset": 45, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 546, "col_offset": 14, "nodeName": "be", "type": "Any"}, {"lineNumber": 546, "col_offset": 27, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 551, "col_offset": 29, "nodeName": "be", "type": "Any"}, {"lineNumber": 621, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 621, "col_offset": 47, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 622, "col_offset": 41, "nodeName": "be", "type": "Any"}, {"lineNumber": 622, "col_offset": 49, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 641, "col_offset": 32, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 641, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 641, "col_offset": 51, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 643, "col_offset": 32, "nodeName": "rand", "type": "Any"}, {"lineNumber": 643, "col_offset": 42, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 705, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 705, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 705, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 707, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 707, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 707, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 724, "col_offset": 29, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 746, "col_offset": 28, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 769, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 815, "col_offset": 40, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 876, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 908, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 908, "col_offset": 35, "nodeName": "r", "type": "Any"}, {"lineNumber": 908, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 927, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 929, "col_offset": 16, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 930, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 930, "col_offset": 35, "nodeName": "r", "type": "Any"}, {"lineNumber": 991, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 991, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 991, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 993, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 993, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 993, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 1010, "col_offset": 29, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1032, "col_offset": 28, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1055, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 1101, "col_offset": 40, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1162, "col_offset": 31, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1213, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 1215, "col_offset": 16, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1277, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1277, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 1277, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 1279, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1279, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1279, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 1318, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1341, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 1387, "col_offset": 40, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1476, "col_offset": 31, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1477, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 1497, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 1499, "col_offset": 16, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1510, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 1512, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 1515, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 459, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 461, "col_offset": 49, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 546, "col_offset": 27, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 621, "col_offset": 47, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 622, "col_offset": 49, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 641, "col_offset": 42, "nodeName": "be", "type": "Any"}, {"lineNumber": 643, "col_offset": 32, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 876, "col_offset": 35, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1512, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 876, "col_offset": 35, "nodeName": "self", "type": "IsingLayer"}]