[{"lineNumber": 14, "col_offset": 0, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "test_conversion", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "test_transpose", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "test_zeros", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "test_ones", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "test_diag", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "test_fill_diagonal", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "test_sign", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "test_clip", "type": "Callable[[], Any]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "test_clip_inplace", "type": "Callable[[], Any]"}, {"lineNumber": 204, "col_offset": 0, "nodeName": "test_tround", "type": "Callable[[], Any]"}, {"lineNumber": 217, "col_offset": 0, "nodeName": "test_flatten", "type": "Callable[[], Any]"}, {"lineNumber": 239, "col_offset": 0, "nodeName": "test_reshape", "type": "Callable[[], Any]"}, {"lineNumber": 252, "col_offset": 0, "nodeName": "test_mix_inplace", "type": "Callable[[], Any]"}, {"lineNumber": 269, "col_offset": 0, "nodeName": "test_square_mix_inplace", "type": "Callable[[], Any]"}, {"lineNumber": 286, "col_offset": 0, "nodeName": "test_sqrt_div", "type": "Callable[[], Any]"}, {"lineNumber": 301, "col_offset": 0, "nodeName": "test_normalize", "type": "Callable[[], Any]"}, {"lineNumber": 314, "col_offset": 0, "nodeName": "test_norm", "type": "Callable[[], Any]"}, {"lineNumber": 327, "col_offset": 0, "nodeName": "test_tmax", "type": "Callable[[], Any]"}, {"lineNumber": 361, "col_offset": 0, "nodeName": "test_tmin", "type": "Callable[[], Any]"}, {"lineNumber": 395, "col_offset": 0, "nodeName": "test_mean", "type": "Callable[[], Any]"}, {"lineNumber": 429, "col_offset": 0, "nodeName": "test_var", "type": "Callable[[], Any]"}, {"lineNumber": 463, "col_offset": 0, "nodeName": "test_std", "type": "Callable[[], Any]"}, {"lineNumber": 497, "col_offset": 0, "nodeName": "test_tsum", "type": "Callable[[], Any]"}, {"lineNumber": 531, "col_offset": 0, "nodeName": "test_tprod", "type": "Callable[[], Any]"}, {"lineNumber": 565, "col_offset": 0, "nodeName": "test_equal", "type": "Callable[[], Any]"}, {"lineNumber": 582, "col_offset": 0, "nodeName": "test_not_equal", "type": "Callable[[], Any]"}, {"lineNumber": 602, "col_offset": 0, "nodeName": "test_tabs", "type": "Callable[[], Any]"}, {"lineNumber": 613, "col_offset": 0, "nodeName": "test_exp", "type": "Callable[[], Any]"}, {"lineNumber": 624, "col_offset": 0, "nodeName": "test_log", "type": "Callable[[], Any]"}, {"lineNumber": 635, "col_offset": 0, "nodeName": "test_tanh", "type": "Callable[[], Any]"}, {"lineNumber": 646, "col_offset": 0, "nodeName": "test_expit", "type": "Callable[[], Any]"}, {"lineNumber": 657, "col_offset": 0, "nodeName": "test_reciprocal", "type": "Callable[[], Any]"}, {"lineNumber": 668, "col_offset": 0, "nodeName": "test_atanh", "type": "Callable[[], Any]"}, {"lineNumber": 680, "col_offset": 0, "nodeName": "test_sqrt", "type": "Callable[[], Any]"}, {"lineNumber": 691, "col_offset": 0, "nodeName": "test_square", "type": "Callable[[], Any]"}, {"lineNumber": 702, "col_offset": 0, "nodeName": "test_tpow", "type": "Callable[[], Any]"}, {"lineNumber": 714, "col_offset": 0, "nodeName": "test_cosh", "type": "Callable[[], Any]"}, {"lineNumber": 725, "col_offset": 0, "nodeName": "test_logaddexp", "type": "Callable[[], Any]"}, {"lineNumber": 739, "col_offset": 0, "nodeName": "test_logcosh", "type": "Callable[[], Any]"}, {"lineNumber": 750, "col_offset": 0, "nodeName": "test_acosh", "type": "Callable[[], Any]"}, {"lineNumber": 761, "col_offset": 0, "nodeName": "test_logit", "type": "Callable[[], Any]"}, {"lineNumber": 772, "col_offset": 0, "nodeName": "test_softplus", "type": "Callable[[], Any]"}, {"lineNumber": 783, "col_offset": 0, "nodeName": "test_cos", "type": "Callable[[], Any]"}, {"lineNumber": 794, "col_offset": 0, "nodeName": "test_sin", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "pytorchmat", "type": "numpy.ndarray"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "torchpymat", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "py_vs_torch", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "torch_vs_py", "type": "bool"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "py_torch_x", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "py_x_T", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "py_torch_x_T", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "torch_y_T", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "torch_py_y_T", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "py_zeros", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "torch_zeros", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "py_ones", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "torch_ones", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "py_vec", "type": "numpy.ndarray"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "py_mat", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "py_diag", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "torch_vec", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "torch_diag", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "py_mat", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "py_mult", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "torch_mult", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "py_sign", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "torch_sign", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "py_clipped", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "py_clipped", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "py_clipped", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "py_round", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "torch_round", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "scalar", "type": "float"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "py_scalar", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "torch_scalar", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "py_flatten", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "torch_flatten", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "newshape", "type": "Tuple[int, int]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "py_new", "type": "Any"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "torch_new", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "py_w", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "py_w", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "py_sqrt_div", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "torch_sqrt_div", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "torch_norm", "type": "float"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 512, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "py_eq", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "torch_eq", "type": "Any"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "py_torch_eq", "type": "numpy.ndarray"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "py_neq", "type": "Any"}, {"lineNumber": 593, "col_offset": 4, "nodeName": "torch_neq", "type": "Any"}, {"lineNumber": 594, "col_offset": 4, "nodeName": "py_torch_neq", "type": "numpy.ndarray"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 629, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 639, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 643, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 647, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 651, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 681, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 684, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 685, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 687, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 688, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 695, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 704, "col_offset": 4, "nodeName": "power", "type": "int"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 715, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 718, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 719, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 721, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 722, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 729, "col_offset": 4, "nodeName": "py_x_1", "type": "numpy.ndarray"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "py_x_2", "type": "numpy.ndarray"}, {"lineNumber": 732, "col_offset": 4, "nodeName": "torch_x_1", "type": "Any"}, {"lineNumber": 733, "col_offset": 4, "nodeName": "torch_x_2", "type": "Any"}, {"lineNumber": 735, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 740, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 743, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 744, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 746, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 751, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 757, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 762, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 765, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 768, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 787, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 799, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 801, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 802, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 806, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 16, "col_offset": 45, "nodeName": "torchmat", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 43, "nodeName": "pymat", "type": "Any"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "pymat", "type": "Any"}, {"lineNumber": 19, "col_offset": 44, "nodeName": "pytorchmat", "type": "numpy.ndarray"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 20, "col_offset": 40, "nodeName": "torchmat", "type": "Any"}, {"lineNumber": 20, "col_offset": 50, "nodeName": "torchpymat", "type": "Any"}, {"lineNumber": 22, "col_offset": 7, "nodeName": "py_vs_torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "torch_vs_py", "type": "bool"}, {"lineNumber": 24, "col_offset": 7, "nodeName": "py_vs_torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "py_torch_x", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "rand", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "transpose", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "py_x_T", "type": "Any"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "py_torch_x_T", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "rand", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "transpose", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "torch_y_T", "type": "Any"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "torch_py_y_T", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "zeros", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "zeros", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "py_zeros", "type": "Any"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "torch_zeros", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "ones", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "ones", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "py_ones", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "torch_ones", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "diagonal_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "py_vec", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "diag", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "py_mat", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "py_vec", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "py_diag", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "randn", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "diagonal_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 45, "nodeName": "torch_vec", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "diag", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "torch_vec", "type": "Any"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "torch_diag", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "n", "type": "int"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "identity", "type": "Callable[[int], Any]"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "n", "type": "int"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "py_mat", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "fill_diagonal", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "py_mat", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "py_mat", "type": "Any"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "py_mult", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "fill_diagonal", "type": "Callable[[Any, Union[float, int]], None]"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 132, "col_offset": 44, "nodeName": "torch_mult", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "py_mat", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "sign", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "sign", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "py_sign", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "torch_sign", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "py_clipped", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "py_clipped", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "py_clipped", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 196, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "tround", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "tround", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "py_round", "type": "Any"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "torch_round", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 222, "col_offset": 34, "nodeName": "scalar", "type": "float"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 40, "nodeName": "scalar", "type": "float"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "py_scalar", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "torch_scalar", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 234, "col_offset": 17, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 41, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "py_flatten", "type": "Any"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "torch_flatten", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 245, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "reshape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 39, "nodeName": "newshape", "type": "Tuple[int, int]"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "reshape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 248, "col_offset": 48, "nodeName": "newshape", "type": "Tuple[int, int]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "py_new", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "torch_new", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "float_scalar", "type": "Callable[[Any], Any]"}, {"lineNumber": 255, "col_offset": 34, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 261, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 261, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "mix_inplace", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 264, "col_offset": 26, "nodeName": "py_w", "type": "Any"}, {"lineNumber": 264, "col_offset": 32, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 264, "col_offset": 38, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "mix_inplace", "type": "Callable[[Union[float, int], Any, Any], None]"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 265, "col_offset": 38, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 265, "col_offset": 47, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "float_scalar", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 34, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 279, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "square_mix_inplace", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "py_w", "type": "Any"}, {"lineNumber": 281, "col_offset": 39, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 45, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "square_mix_inplace", "type": "Callable[[Union[float, int], Any, Any], None]"}, {"lineNumber": 282, "col_offset": 36, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 282, "col_offset": 45, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 282, "col_offset": 54, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 294, "col_offset": 40, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "sqrt_div", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 296, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "sqrt_div", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 297, "col_offset": 43, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 297, "col_offset": 52, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 17, "nodeName": "py_sqrt_div", "type": "Any"}, {"lineNumber": 299, "col_offset": 30, "nodeName": "torch_sqrt_div", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 307, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "normalize", "type": "Callable[[Any], Any]"}, {"lineNumber": 309, "col_offset": 34, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "normalize", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 40, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 318, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 319, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "norm", "type": "Callable[[Any], Any]"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 322, "col_offset": 17, "nodeName": "norm", "type": "Callable[[Any], float]"}, {"lineNumber": 322, "col_offset": 35, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 324, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "torch_norm", "type": "float"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 331, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 331, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 332, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 338, "col_offset": 28, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 343, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 344, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 344, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 347, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 348, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 349, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 352, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 352, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 353, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 354, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 354, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 357, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 357, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 359, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 359, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 365, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 366, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 369, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 372, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 372, "col_offset": 20, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 372, "col_offset": 28, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 376, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 376, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 377, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 381, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 383, "col_offset": 17, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 386, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 387, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 17, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 388, "col_offset": 25, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 391, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 392, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 393, "col_offset": 17, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 399, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 399, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 400, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 403, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 403, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 404, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 406, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 406, "col_offset": 20, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 410, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 411, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 411, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 412, "col_offset": 17, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 412, "col_offset": 26, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 416, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 417, "col_offset": 17, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 417, "col_offset": 26, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 420, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 421, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 421, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 422, "col_offset": 17, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 422, "col_offset": 26, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 425, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 426, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 427, "col_offset": 17, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 427, "col_offset": 26, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 433, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 433, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 434, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 437, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 437, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 438, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 440, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 440, "col_offset": 20, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 440, "col_offset": 28, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 444, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 445, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 445, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 446, "col_offset": 17, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 446, "col_offset": 25, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 449, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 449, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 450, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 451, "col_offset": 17, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 451, "col_offset": 25, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 454, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 454, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 455, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 456, "col_offset": 17, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 456, "col_offset": 25, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 459, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 459, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 460, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 461, "col_offset": 25, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 467, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 467, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 468, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 471, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 471, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 472, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 472, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 474, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 474, "col_offset": 20, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 474, "col_offset": 28, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 478, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 478, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 479, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 479, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 480, "col_offset": 17, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 480, "col_offset": 25, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 483, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 483, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 17, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 485, "col_offset": 25, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 488, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 488, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 489, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 489, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 490, "col_offset": 17, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 490, "col_offset": 25, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 493, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 493, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 494, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 494, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 495, "col_offset": 17, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 495, "col_offset": 25, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 501, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 501, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 502, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 505, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 505, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 506, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 506, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 508, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 508, "col_offset": 20, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 508, "col_offset": 29, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 512, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 512, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 513, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 513, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 514, "col_offset": 17, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 514, "col_offset": 26, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 517, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 517, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 518, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 518, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 519, "col_offset": 26, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 522, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 522, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 523, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 523, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 524, "col_offset": 17, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 524, "col_offset": 26, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 527, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 527, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 528, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 528, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 529, "col_offset": 17, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 529, "col_offset": 26, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 535, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 535, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 536, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 536, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 539, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 540, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 540, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 542, "col_offset": 20, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 542, "col_offset": 30, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 546, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 546, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 547, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 547, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 548, "col_offset": 17, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 548, "col_offset": 27, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 551, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 552, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 552, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 553, "col_offset": 17, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 553, "col_offset": 27, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 556, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 556, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 557, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 557, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 558, "col_offset": 17, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 558, "col_offset": 27, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 561, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 561, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 562, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 562, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 563, "col_offset": 17, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 563, "col_offset": 27, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 569, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 569, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 570, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 570, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 572, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 572, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 573, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 573, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 575, "col_offset": 12, "nodeName": "equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 575, "col_offset": 28, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 575, "col_offset": 34, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 576, "col_offset": 34, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 576, "col_offset": 43, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 577, "col_offset": 18, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 577, "col_offset": 46, "nodeName": "torch_eq", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 579, "col_offset": 30, "nodeName": "py_eq", "type": "Any"}, {"lineNumber": 579, "col_offset": 37, "nodeName": "py_torch_eq", "type": "numpy.ndarray"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 586, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 586, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 587, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 587, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 589, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 589, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 590, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 590, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 592, "col_offset": 13, "nodeName": "not_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 592, "col_offset": 33, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 592, "col_offset": 39, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 593, "col_offset": 16, "nodeName": "not_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 593, "col_offset": 39, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 593, "col_offset": 48, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 594, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 594, "col_offset": 47, "nodeName": "torch_neq", "type": "Any"}, {"lineNumber": 596, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 596, "col_offset": 30, "nodeName": "py_neq", "type": "Any"}, {"lineNumber": 596, "col_offset": 38, "nodeName": "py_torch_neq", "type": "numpy.ndarray"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 606, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 606, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 607, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 607, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 609, "col_offset": 11, "nodeName": "tabs", "type": "Callable[[Any], Any]"}, {"lineNumber": 609, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 610, "col_offset": 14, "nodeName": "tabs", "type": "Callable[[Any], Any]"}, {"lineNumber": 610, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 611, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 611, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 617, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 617, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 618, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 618, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 620, "col_offset": 11, "nodeName": "exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 620, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 621, "col_offset": 14, "nodeName": "exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 621, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 622, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 622, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 622, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 628, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 628, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 629, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 629, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 631, "col_offset": 11, "nodeName": "log", "type": "Callable[[Any], Any]"}, {"lineNumber": 631, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 632, "col_offset": 14, "nodeName": "log", "type": "Callable[[Any], Any]"}, {"lineNumber": 632, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 633, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 633, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 639, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 639, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 640, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 640, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 642, "col_offset": 11, "nodeName": "tanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 642, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 643, "col_offset": 14, "nodeName": "tanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 643, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 644, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 644, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 644, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 650, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 650, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 651, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 651, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 653, "col_offset": 11, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 653, "col_offset": 25, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 654, "col_offset": 14, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 654, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 655, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 655, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 661, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 661, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 662, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 662, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 664, "col_offset": 11, "nodeName": "reciprocal", "type": "Callable[[Any], Any]"}, {"lineNumber": 664, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 665, "col_offset": 14, "nodeName": "reciprocal", "type": "Callable[[Any], Any]"}, {"lineNumber": 665, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 666, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 666, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 672, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 672, "col_offset": 40, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 674, "col_offset": 11, "nodeName": "atanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 674, "col_offset": 25, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 675, "col_offset": 14, "nodeName": "atanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 675, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 678, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 678, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 678, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 684, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 684, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 685, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 685, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 687, "col_offset": 11, "nodeName": "sqrt", "type": "Callable[[Any], Any]"}, {"lineNumber": 687, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 688, "col_offset": 14, "nodeName": "sqrt", "type": "Callable[[Any], Any]"}, {"lineNumber": 688, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 689, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 689, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 695, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 696, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 696, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 698, "col_offset": 11, "nodeName": "square", "type": "Callable[[Any], Any]"}, {"lineNumber": 698, "col_offset": 26, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 699, "col_offset": 14, "nodeName": "square", "type": "Callable[[Any], Any]"}, {"lineNumber": 699, "col_offset": 32, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 700, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 700, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 706, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 707, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 707, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 708, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 708, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 710, "col_offset": 11, "nodeName": "tpow", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 710, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 710, "col_offset": 30, "nodeName": "power", "type": "int"}, {"lineNumber": 711, "col_offset": 14, "nodeName": "tpow", "type": "Callable[[Any, Union[float, int]], Any]"}, {"lineNumber": 711, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 711, "col_offset": 39, "nodeName": "power", "type": "int"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 712, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 712, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 717, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 718, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 718, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 719, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 719, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 721, "col_offset": 11, "nodeName": "cosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 721, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 722, "col_offset": 14, "nodeName": "cosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 722, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 723, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 723, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 723, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 728, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 729, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 729, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 730, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 730, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 732, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 732, "col_offset": 42, "nodeName": "py_x_1", "type": "numpy.ndarray"}, {"lineNumber": 733, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 733, "col_offset": 42, "nodeName": "py_x_2", "type": "numpy.ndarray"}, {"lineNumber": 735, "col_offset": 11, "nodeName": "logaddexp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 735, "col_offset": 29, "nodeName": "py_x_1", "type": "numpy.ndarray"}, {"lineNumber": 735, "col_offset": 37, "nodeName": "py_x_2", "type": "numpy.ndarray"}, {"lineNumber": 736, "col_offset": 14, "nodeName": "logaddexp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 736, "col_offset": 35, "nodeName": "torch_x_1", "type": "Any"}, {"lineNumber": 736, "col_offset": 46, "nodeName": "torch_x_2", "type": "Any"}, {"lineNumber": 737, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 737, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 737, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 743, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 743, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 744, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 744, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 746, "col_offset": 11, "nodeName": "logcosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 746, "col_offset": 27, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 747, "col_offset": 14, "nodeName": "logcosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 747, "col_offset": 33, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 748, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 748, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 753, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 755, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 755, "col_offset": 40, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 757, "col_offset": 11, "nodeName": "acosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 757, "col_offset": 25, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 758, "col_offset": 14, "nodeName": "acosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 758, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 759, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 759, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 759, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 765, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 765, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 766, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 766, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 768, "col_offset": 11, "nodeName": "logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 768, "col_offset": 25, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 769, "col_offset": 14, "nodeName": "logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 769, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 770, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 770, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 770, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 775, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 776, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 776, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 777, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 777, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 779, "col_offset": 11, "nodeName": "softplus", "type": "Callable[[Any], Any]"}, {"lineNumber": 779, "col_offset": 28, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 780, "col_offset": 14, "nodeName": "softplus", "type": "Callable[[Any], Any]"}, {"lineNumber": 780, "col_offset": 34, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 781, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 781, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 786, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 787, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 787, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 788, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 788, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 790, "col_offset": 11, "nodeName": "cos", "type": "Callable[[Any], Any]"}, {"lineNumber": 790, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 791, "col_offset": 14, "nodeName": "cos", "type": "Callable[[Any], Any]"}, {"lineNumber": 791, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 792, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 792, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 798, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 798, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 799, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 799, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 801, "col_offset": 11, "nodeName": "sin", "type": "Callable[[Any], Any]"}, {"lineNumber": 801, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 802, "col_offset": 14, "nodeName": "sin", "type": "Callable[[Any], Any]"}, {"lineNumber": 802, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 803, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 803, "col_offset": 17, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 803, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 19, "col_offset": 61, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 19, "col_offset": 72, "nodeName": "atol", "type": "Any"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 20, "col_offset": 67, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 20, "col_offset": 78, "nodeName": "atol", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "torch_vs_py", "type": "bool"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "torch_vs_py", "type": "bool"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "transpose", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 70, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "transpose", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 234, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 261, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 279, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 305, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 319, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 322, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 331, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 352, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 357, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 369, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 376, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 381, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 391, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 399, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 403, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 410, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 411, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 420, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 421, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 425, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 426, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 433, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 437, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 445, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 449, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 454, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 459, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 467, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 471, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 472, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 478, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 479, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 483, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 488, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 489, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 493, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 494, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 501, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 505, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 506, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 512, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 513, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 517, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 518, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 522, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 523, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 527, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 528, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 535, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 536, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 540, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 546, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 547, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 552, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 556, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 557, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 561, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 562, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 569, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 570, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 572, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 573, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 575, "col_offset": 12, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 577, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 586, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 587, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 589, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 590, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 592, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 593, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 594, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 596, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 606, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 607, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 609, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 610, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 617, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 618, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 620, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 621, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 628, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 629, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 631, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 632, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 639, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 640, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 642, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 643, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 650, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 651, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 653, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 654, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 661, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 662, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 664, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 665, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 672, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 674, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 675, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 684, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 685, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 687, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 688, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 695, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 696, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 698, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 699, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 706, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 707, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 708, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 710, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 711, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 717, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 718, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 719, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 721, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 722, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 728, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 729, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 730, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 732, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 733, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 735, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 736, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 743, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 744, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 746, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 747, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 753, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 754, "col_offset": 15, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 754, "col_offset": 28, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 755, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 757, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 758, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 765, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 766, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 768, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 769, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 775, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 776, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 777, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 779, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 780, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 786, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 787, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 788, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 790, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 791, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 798, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 799, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 801, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 802, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 807, "col_offset": 17, "nodeName": "__file__", "type": "str"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "py_vs_torch", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 32, "col_offset": 63, "nodeName": "name", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 671, "col_offset": 15, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 671, "col_offset": 28, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 754, "col_offset": 15, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 671, "col_offset": 15, "nodeName": "py_rand", "type": "module"}]