[{"lineNumber": 464, "col_offset": 0, "nodeName": "get", "type": "Callable[[Any], Any]"}, {"lineNumber": 4, "col_offset": 12, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "W", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 7, "col_offset": 8, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "penalties", "type": "Dict[nothing, nothing]"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "constraints", "type": "Dict[nothing, nothing]"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "param_name", "type": "nothing"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "constraints", "type": "Dict[nothing, nothing]"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "penalties", "type": "Dict[Any, Any]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "pen", "type": "Dict[nothing, nothing]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "v_scaled", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "r", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 327, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 417, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 439, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 442, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 466, "col_offset": 15, "nodeName": "GaussianLayer", "type": "Type[GaussianLayer]"}, {"lineNumber": 7, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 12, "col_offset": 31, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "self", "type": "Layer"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 19, "col_offset": 30, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "self", "type": "Layer"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "subtract_dicts_inplace", "type": "Any"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 32, "col_offset": 51, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "enforce_constraints", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Weights"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "vis", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "square", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "scale", "type": "Any"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 108, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "scale", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "exp", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 121, "col_offset": 53, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 62, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 125, "col_offset": 53, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 37, "nodeName": "log", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "dot", "type": "Any"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 132, "col_offset": 55, "nodeName": "weights", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "rescale", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "vis", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "square", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "rescale", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 211, "col_offset": 55, "nodeName": "len", "type": "Any"}, {"lineNumber": 224, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "logcosh", "type": "Any"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 232, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 233, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "atanh", "type": "Any"}, {"lineNumber": 235, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 240, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 240, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 240, "col_offset": 56, "nodeName": "weights", "type": "Any"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 246, "col_offset": 36, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 257, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 301, "col_offset": 55, "nodeName": "len", "type": "Any"}, {"lineNumber": 314, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "softplus", "type": "Any"}, {"lineNumber": 315, "col_offset": 27, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 319, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 319, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 322, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 323, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 325, "col_offset": 33, "nodeName": "logit", "type": "Any"}, {"lineNumber": 325, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 330, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 330, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 330, "col_offset": 56, "nodeName": "weights", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 336, "col_offset": 36, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 347, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "expit", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 368, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 391, "col_offset": 54, "nodeName": "len", "type": "Any"}, {"lineNumber": 404, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 408, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 409, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 409, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "mean", "type": "Callable[[], Any]"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 412, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 413, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 415, "col_offset": 33, "nodeName": "reciprocal", "type": "Any"}, {"lineNumber": 415, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 426, "col_offset": 35, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 436, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 436, "col_offset": 32, "nodeName": "vis", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 437, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 445, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "reciprocal", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "lower", "type": "Any"}, {"lineNumber": 468, "col_offset": 15, "nodeName": "IsingLayer", "type": "Type[IsingLayer]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "penalties", "type": "Dict[Any, Any]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "param_name", "type": "nothing"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "penalties", "type": "Dict[nothing, nothing]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "self", "type": "Layer"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Layer"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "self", "type": "Weights"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "n", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "batch_dot", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "vis", "type": "Any"}, {"lineNumber": 65, "col_offset": 61, "nodeName": "hid", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "len", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 90, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "be", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "phi", "type": "Any"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "square", "type": "Any"}, {"lineNumber": 109, "col_offset": 53, "nodeName": "phi", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "be", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "n", "type": "int"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 127, "col_offset": 37, "nodeName": "be", "type": "Any"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "x2", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "be", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 135, "col_offset": 39, "nodeName": "beta", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "exp", "type": "Any"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "len", "type": "Any"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "v_scaled", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "mean", "type": "Any"}, {"lineNumber": 159, "col_offset": 43, "nodeName": "diff", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "batch_dot", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "hid", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "vis", "type": "Any"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "vis", "type": "Any"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "scale", "type": "Any"}, {"lineNumber": 173, "col_offset": 50, "nodeName": "observations", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "rand", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 183, "col_offset": 78, "nodeName": "r", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 211, "col_offset": 55, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 224, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 240, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 242, "col_offset": 40, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 243, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 246, "col_offset": 36, "nodeName": "be", "type": "Any"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 248, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "vis", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 257, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 272, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 293, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 301, "col_offset": 55, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 314, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 319, "col_offset": 30, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 323, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 325, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 330, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 332, "col_offset": 40, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 333, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 336, "col_offset": 36, "nodeName": "be", "type": "Any"}, {"lineNumber": 337, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 338, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 343, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 346, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 346, "col_offset": 33, "nodeName": "vis", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 347, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 358, "col_offset": 24, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 362, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 363, "col_offset": 31, "nodeName": "r", "type": "Any"}, {"lineNumber": 363, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 370, "col_offset": 31, "nodeName": "r", "type": "Any"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 383, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "dot", "type": "Any"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 391, "col_offset": 54, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 404, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 409, "col_offset": 30, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 413, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 415, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 420, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 420, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 420, "col_offset": 56, "nodeName": "weights", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 422, "col_offset": 39, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 423, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 426, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 427, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 428, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 433, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 436, "col_offset": 24, "nodeName": "be", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 437, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 448, "col_offset": 29, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 451, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 452, "col_offset": 28, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 456, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 459, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 459, "col_offset": 23, "nodeName": "r", "type": "Any"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "key", "type": "Any"}, {"lineNumber": 467, "col_offset": 20, "nodeName": "lower", "type": "Any"}, {"lineNumber": 470, "col_offset": 15, "nodeName": "BernoulliLayer", "type": "Type[BernoulliLayer]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "Layer"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "constraint", "type": "Any"}, {"lineNumber": 16, "col_offset": 40, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "Layer"}, {"lineNumber": 23, "col_offset": 45, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "randn", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "self", "type": "Weights"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "be", "type": "Any"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "be", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "be", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "mean", "type": "Any"}, {"lineNumber": 122, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "be", "type": "Any"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 157, "col_offset": 51, "nodeName": "vis", "type": "Any"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "be", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 162, "col_offset": 42, "nodeName": "weights", "type": "Any"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "be", "type": "Any"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "rand", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 242, "col_offset": 40, "nodeName": "be", "type": "Any"}, {"lineNumber": 244, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 248, "col_offset": 36, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 257, "col_offset": 37, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 272, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 277, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 279, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 280, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 293, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 301, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 323, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 332, "col_offset": 40, "nodeName": "be", "type": "Any"}, {"lineNumber": 334, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 337, "col_offset": 36, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 338, "col_offset": 36, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 343, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 346, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 347, "col_offset": 37, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 358, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 367, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 369, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 383, "col_offset": 24, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 404, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 413, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 413, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 420, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 422, "col_offset": 39, "nodeName": "be", "type": "Any"}, {"lineNumber": 424, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 427, "col_offset": 36, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 428, "col_offset": 36, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 433, "col_offset": 24, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 437, "col_offset": 37, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 448, "col_offset": 29, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 451, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 451, "col_offset": 31, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 452, "col_offset": 23, "nodeName": "r", "type": "Any"}, {"lineNumber": 452, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 456, "col_offset": 16, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 456, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 456, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 458, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 459, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 467, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 469, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "ExponentialLayer", "type": "Type[ExponentialLayer]"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "self", "type": "Layer"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "param_name", "type": "nothing"}, {"lineNumber": 16, "col_offset": 40, "nodeName": "self", "type": "Layer"}, {"lineNumber": 16, "col_offset": 56, "nodeName": "param_name", "type": "nothing"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "penalties", "type": "Dict[Any, Any]"}, {"lineNumber": 23, "col_offset": 45, "nodeName": "self", "type": "Layer"}, {"lineNumber": 23, "col_offset": 61, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "batch_outer", "type": "Any"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "vis", "type": "Any"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "hid", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "self", "type": "Weights"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "be", "type": "Any"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "square", "type": "Any"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "be", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "be", "type": "Any"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 182, "col_offset": 47, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "be", "type": "Any"}, {"lineNumber": 183, "col_offset": 49, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "rand", "type": "Any"}, {"lineNumber": 189, "col_offset": 42, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 244, "col_offset": 40, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 273, "col_offset": 35, "nodeName": "r", "type": "Any"}, {"lineNumber": 273, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 280, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 280, "col_offset": 35, "nodeName": "r", "type": "Any"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 323, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 334, "col_offset": 40, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 404, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 413, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 424, "col_offset": 40, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 451, "col_offset": 31, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 456, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 469, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 471, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 474, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "self", "type": "Layer"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 182, "col_offset": 47, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 183, "col_offset": 49, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "be", "type": "Any"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 471, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "self", "type": "IsingLayer"}]