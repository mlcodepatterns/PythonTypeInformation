[{"lineNumber": 14, "col_offset": 0, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "test_conversion", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "test_transpose", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "test_zeros", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "test_ones", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "test_diag", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "test_fill_diagonal", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "test_sign", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "test_clip", "type": "Callable[[], Any]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "test_clip_inplace", "type": "Callable[[], Any]"}, {"lineNumber": 204, "col_offset": 0, "nodeName": "test_tround", "type": "Callable[[], Any]"}, {"lineNumber": 217, "col_offset": 0, "nodeName": "test_flatten", "type": "Callable[[], Any]"}, {"lineNumber": 239, "col_offset": 0, "nodeName": "test_reshape", "type": "Callable[[], Any]"}, {"lineNumber": 252, "col_offset": 0, "nodeName": "test_mix_inplace", "type": "Callable[[], Any]"}, {"lineNumber": 269, "col_offset": 0, "nodeName": "test_square_mix_inplace", "type": "Callable[[], Any]"}, {"lineNumber": 286, "col_offset": 0, "nodeName": "test_sqrt_div", "type": "Callable[[], Any]"}, {"lineNumber": 301, "col_offset": 0, "nodeName": "test_normalize", "type": "Callable[[], Any]"}, {"lineNumber": 314, "col_offset": 0, "nodeName": "test_norm", "type": "Callable[[], Any]"}, {"lineNumber": 327, "col_offset": 0, "nodeName": "test_tmax", "type": "Callable[[], Any]"}, {"lineNumber": 361, "col_offset": 0, "nodeName": "test_tmin", "type": "Callable[[], Any]"}, {"lineNumber": 395, "col_offset": 0, "nodeName": "test_mean", "type": "Callable[[], Any]"}, {"lineNumber": 429, "col_offset": 0, "nodeName": "test_var", "type": "Callable[[], Any]"}, {"lineNumber": 463, "col_offset": 0, "nodeName": "test_std", "type": "Callable[[], Any]"}, {"lineNumber": 497, "col_offset": 0, "nodeName": "test_tsum", "type": "Callable[[], Any]"}, {"lineNumber": 531, "col_offset": 0, "nodeName": "test_tprod", "type": "Callable[[], Any]"}, {"lineNumber": 565, "col_offset": 0, "nodeName": "test_equal", "type": "Callable[[], Any]"}, {"lineNumber": 582, "col_offset": 0, "nodeName": "test_not_equal", "type": "Callable[[], Any]"}, {"lineNumber": 599, "col_offset": 0, "nodeName": "test_greater", "type": "Callable[[], Any]"}, {"lineNumber": 616, "col_offset": 0, "nodeName": "test_greater_equal", "type": "Callable[[], Any]"}, {"lineNumber": 633, "col_offset": 0, "nodeName": "test_lesser", "type": "Callable[[], Any]"}, {"lineNumber": 650, "col_offset": 0, "nodeName": "test_lesser_equal", "type": "Callable[[], Any]"}, {"lineNumber": 667, "col_offset": 0, "nodeName": "test_tany", "type": "Callable[[], Any]"}, {"lineNumber": 718, "col_offset": 0, "nodeName": "test_tall", "type": "Callable[[], Any]"}, {"lineNumber": 769, "col_offset": 0, "nodeName": "test_maximum", "type": "Callable[[], Any]"}, {"lineNumber": 784, "col_offset": 0, "nodeName": "test_minimum", "type": "Callable[[], Any]"}, {"lineNumber": 799, "col_offset": 0, "nodeName": "test_argmax", "type": "Callable[[], Any]"}, {"lineNumber": 822, "col_offset": 0, "nodeName": "test_argmin", "type": "Callable[[], Any]"}, {"lineNumber": 845, "col_offset": 0, "nodeName": "test_dot", "type": "Callable[[], Any]"}, {"lineNumber": 892, "col_offset": 0, "nodeName": "test_outer", "type": "Callable[[], Any]"}, {"lineNumber": 907, "col_offset": 0, "nodeName": "test_python_broadcast", "type": "Callable[[], Any]"}, {"lineNumber": 953, "col_offset": 0, "nodeName": "test_broadcast", "type": "Callable[[], Any]"}, {"lineNumber": 1002, "col_offset": 0, "nodeName": "test_affine", "type": "Callable[[], Any]"}, {"lineNumber": 1046, "col_offset": 0, "nodeName": "test_quadratic", "type": "Callable[[], Any]"}, {"lineNumber": 1093, "col_offset": 0, "nodeName": "test_inv", "type": "Callable[[], Any]"}, {"lineNumber": 1106, "col_offset": 0, "nodeName": "test_batch_dot", "type": "Callable[[], Any]"}, {"lineNumber": 1129, "col_offset": 0, "nodeName": "test_batch_outer", "type": "Callable[[], Any]"}, {"lineNumber": 1149, "col_offset": 0, "nodeName": "test_repeat", "type": "Callable[[], Any]"}, {"lineNumber": 1162, "col_offset": 0, "nodeName": "test_stack", "type": "Callable[[], Any]"}, {"lineNumber": 1196, "col_offset": 0, "nodeName": "test_hstack", "type": "Callable[[], Any]"}, {"lineNumber": 1220, "col_offset": 0, "nodeName": "test_vstack", "type": "Callable[[], Any]"}, {"lineNumber": 1244, "col_offset": 0, "nodeName": "test_trange", "type": "Callable[[], Any]"}, {"lineNumber": 1267, "col_offset": 0, "nodeName": "test_euclidean_distance", "type": "Callable[[], Any]"}, {"lineNumber": 1283, "col_offset": 0, "nodeName": "test_squared_euclidean_distance", "type": "Callable[[], Any]"}, {"lineNumber": 1299, "col_offset": 0, "nodeName": "test_resample", "type": "Callable[[], Any]"}, {"lineNumber": 1315, "col_offset": 0, "nodeName": "test_fast_energy_distance", "type": "Callable[[], Any]"}, {"lineNumber": 1374, "col_offset": 0, "nodeName": "test_tabs", "type": "Callable[[], Any]"}, {"lineNumber": 1385, "col_offset": 0, "nodeName": "test_exp", "type": "Callable[[], Any]"}, {"lineNumber": 1396, "col_offset": 0, "nodeName": "test_log", "type": "Callable[[], Any]"}, {"lineNumber": 1407, "col_offset": 0, "nodeName": "test_tanh", "type": "Callable[[], Any]"}, {"lineNumber": 1418, "col_offset": 0, "nodeName": "test_expit", "type": "Callable[[], Any]"}, {"lineNumber": 1429, "col_offset": 0, "nodeName": "test_reciprocal", "type": "Callable[[], Any]"}, {"lineNumber": 1440, "col_offset": 0, "nodeName": "test_atanh", "type": "Callable[[], Any]"}, {"lineNumber": 1452, "col_offset": 0, "nodeName": "test_sqrt", "type": "Callable[[], Any]"}, {"lineNumber": 1463, "col_offset": 0, "nodeName": "test_square", "type": "Callable[[], Any]"}, {"lineNumber": 1474, "col_offset": 0, "nodeName": "test_tpow", "type": "Callable[[], Any]"}, {"lineNumber": 1486, "col_offset": 0, "nodeName": "test_cosh", "type": "Callable[[], Any]"}, {"lineNumber": 1497, "col_offset": 0, "nodeName": "test_logaddexp", "type": "Callable[[], Any]"}, {"lineNumber": 1511, "col_offset": 0, "nodeName": "test_logcosh", "type": "Callable[[], Any]"}, {"lineNumber": 1522, "col_offset": 0, "nodeName": "test_acosh", "type": "Callable[[], Any]"}, {"lineNumber": 1533, "col_offset": 0, "nodeName": "test_logit", "type": "Callable[[], Any]"}, {"lineNumber": 1544, "col_offset": 0, "nodeName": "test_softplus", "type": "Callable[[], Any]"}, {"lineNumber": 1555, "col_offset": 0, "nodeName": "test_cos", "type": "Callable[[], Any]"}, {"lineNumber": 1566, "col_offset": 0, "nodeName": "test_sin", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "pytorchmat", "type": "numpy.ndarray"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "torchpymat", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "py_vs_torch", "type": "bool"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "torch_vs_py", "type": "bool"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "py_torch_x", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "py_x_T", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "py_torch_x_T", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "torch_y_T", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "torch_py_y_T", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "py_zeros", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "torch_zeros", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "py_ones", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "torch_ones", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "py_vec", "type": "numpy.ndarray"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "py_diag", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "torch_vec", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "torch_diag", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "py_mult", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "torch_mult", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "py_sign", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "torch_sign", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "py_round", "type": "numpy.ndarray"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "torch_round", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "scalar", "type": "float"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "py_scalar", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "torch_scalar", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "py_flatten", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "torch_flatten", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "newshape", "type": "Tuple[int, int]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "py_new", "type": "numpy.ndarray"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "torch_new", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "py_w", "type": "float"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "py_w", "type": "float"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "py_sqrt_div", "type": "numpy.ndarray"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "torch_sqrt_div", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "py_norm", "type": "numpy.ndarray"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "py_norm", "type": "float"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "torch_norm", "type": "float"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 512, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "py_eq", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "torch_eq", "type": "Any"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "py_torch_eq", "type": "numpy.ndarray"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "py_neq", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 593, "col_offset": 4, "nodeName": "torch_neq", "type": "Any"}, {"lineNumber": 594, "col_offset": 4, "nodeName": "py_torch_neq", "type": "numpy.ndarray"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 623, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 624, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 643, "col_offset": 4, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 644, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 651, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 657, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 668, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 678, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 681, "col_offset": 4, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 687, "col_offset": 4, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 688, "col_offset": 4, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 695, "col_offset": 4, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 704, "col_offset": 4, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 719, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 722, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 723, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 728, "col_offset": 4, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 729, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 732, "col_offset": 4, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 733, "col_offset": 4, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 738, "col_offset": 4, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 739, "col_offset": 4, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 740, "col_offset": 4, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 746, "col_offset": 4, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 756, "col_offset": 4, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 762, "col_offset": 4, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 763, "col_offset": 4, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 770, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 785, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 800, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 803, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 804, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 816, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 826, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 827, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 839, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 847, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 848, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 851, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 856, "col_offset": 4, "nodeName": "py_dot", "type": "Any"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "torch_dot", "type": "Any"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 867, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 868, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 869, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 872, "col_offset": 4, "nodeName": "py_dot", "type": "Any"}, {"lineNumber": 873, "col_offset": 4, "nodeName": "torch_dot", "type": "Any"}, {"lineNumber": 878, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 882, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "py_dot", "type": "Any"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "torch_dot", "type": "Any"}, {"lineNumber": 893, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 894, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 897, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 898, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 899, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 902, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 903, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 908, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 909, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 912, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 913, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 916, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 917, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 919, "col_offset": 4, "nodeName": "numpy_product", "type": "Any"}, {"lineNumber": 920, "col_offset": 4, "nodeName": "broadcast_product", "type": "Any"}, {"lineNumber": 926, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 930, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 933, "col_offset": 4, "nodeName": "numpy_product", "type": "Any"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "broadcast_product", "type": "Any"}, {"lineNumber": 940, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 941, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 945, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "numpy_product", "type": "Any"}, {"lineNumber": 948, "col_offset": 4, "nodeName": "broadcast_product", "type": "Any"}, {"lineNumber": 954, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 955, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 959, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 962, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 963, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 965, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 966, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 968, "col_offset": 4, "nodeName": "py_broadcast", "type": "numpy.ndarray"}, {"lineNumber": 969, "col_offset": 4, "nodeName": "torch_broadcast", "type": "Any"}, {"lineNumber": 973, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 974, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 978, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 980, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 981, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 983, "col_offset": 4, "nodeName": "py_broadcast", "type": "numpy.ndarray"}, {"lineNumber": 984, "col_offset": 4, "nodeName": "torch_broadcast", "type": "Any"}, {"lineNumber": 988, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 989, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 992, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 993, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 995, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 996, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 998, "col_offset": 4, "nodeName": "py_broadcast", "type": "numpy.ndarray"}, {"lineNumber": 999, "col_offset": 4, "nodeName": "torch_broadcast", "type": "Any"}, {"lineNumber": 1004, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1005, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1006, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1007, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 1008, "col_offset": 4, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1011, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1012, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1013, "col_offset": 4, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1015, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1016, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1017, "col_offset": 4, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1019, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1020, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1025, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1026, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1027, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1028, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1029, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1030, "col_offset": 4, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1033, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1034, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1035, "col_offset": 4, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1037, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1038, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1039, "col_offset": 4, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1041, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1042, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1048, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1049, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1050, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1051, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 1052, "col_offset": 4, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1055, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1056, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1057, "col_offset": 4, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1059, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1060, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1061, "col_offset": 4, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1063, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1064, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1070, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1071, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1072, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1073, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1074, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1075, "col_offset": 4, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1078, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1082, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1083, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1084, "col_offset": 4, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1086, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1087, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1094, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1097, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1098, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1100, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1101, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1107, "col_offset": 4, "nodeName": "L", "type": "int"}, {"lineNumber": 1108, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1109, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1111, "col_offset": 4, "nodeName": "v_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1112, "col_offset": 4, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1113, "col_offset": 4, "nodeName": "h_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1116, "col_offset": 4, "nodeName": "py_v", "type": "numpy.ndarray"}, {"lineNumber": 1117, "col_offset": 4, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1118, "col_offset": 4, "nodeName": "py_h", "type": "numpy.ndarray"}, {"lineNumber": 1120, "col_offset": 4, "nodeName": "torch_v", "type": "Any"}, {"lineNumber": 1121, "col_offset": 4, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1122, "col_offset": 4, "nodeName": "torch_h", "type": "Any"}, {"lineNumber": 1124, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1125, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1130, "col_offset": 4, "nodeName": "L", "type": "int"}, {"lineNumber": 1131, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1132, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1134, "col_offset": 4, "nodeName": "v_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1135, "col_offset": 4, "nodeName": "h_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1138, "col_offset": 4, "nodeName": "py_v", "type": "numpy.ndarray"}, {"lineNumber": 1139, "col_offset": 4, "nodeName": "py_h", "type": "numpy.ndarray"}, {"lineNumber": 1141, "col_offset": 4, "nodeName": "torch_v", "type": "Any"}, {"lineNumber": 1142, "col_offset": 4, "nodeName": "torch_h", "type": "Any"}, {"lineNumber": 1144, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1145, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1150, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1151, "col_offset": 4, "nodeName": "n_repeats", "type": "int"}, {"lineNumber": 1154, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1155, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1157, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1158, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1164, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1167, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1168, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1170, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1171, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1175, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1176, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1181, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1183, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1184, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1186, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1187, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1191, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1192, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1198, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1201, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1202, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1204, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1205, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1210, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1212, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1213, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1215, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1216, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1222, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1225, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1226, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1228, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1229, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1234, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1236, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1237, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1239, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1240, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1245, "col_offset": 4, "nodeName": "start", "type": "int"}, {"lineNumber": 1246, "col_offset": 4, "nodeName": "stop", "type": "int"}, {"lineNumber": 1247, "col_offset": 4, "nodeName": "step", "type": "int"}, {"lineNumber": 1249, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1250, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1251, "col_offset": 4, "nodeName": "py_torch_mat", "type": "numpy.ndarray"}, {"lineNumber": 1256, "col_offset": 4, "nodeName": "start", "type": "int"}, {"lineNumber": 1257, "col_offset": 4, "nodeName": "stop", "type": "int"}, {"lineNumber": 1258, "col_offset": 4, "nodeName": "step", "type": "int"}, {"lineNumber": 1260, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1261, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1262, "col_offset": 4, "nodeName": "py_torch_mat", "type": "numpy.ndarray"}, {"lineNumber": 1268, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1271, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1272, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1274, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1275, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1277, "col_offset": 4, "nodeName": "py_dist", "type": "Any"}, {"lineNumber": 1278, "col_offset": 4, "nodeName": "torch_dist", "type": "float"}, {"lineNumber": 1284, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1287, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1288, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1290, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1291, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1293, "col_offset": 4, "nodeName": "py_dist", "type": "Any"}, {"lineNumber": 1294, "col_offset": 4, "nodeName": "torch_dist", "type": "float"}, {"lineNumber": 1300, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1301, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 1304, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1305, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1307, "col_offset": 4, "nodeName": "py_sample", "type": "Any"}, {"lineNumber": 1308, "col_offset": 4, "nodeName": "torch_sample", "type": "Any"}, {"lineNumber": 1316, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1317, "col_offset": 4, "nodeName": "downsample", "type": "int"}, {"lineNumber": 1323, "col_offset": 4, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 1324, "col_offset": 4, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 1325, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1326, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1351, "col_offset": 4, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 1352, "col_offset": 4, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 1353, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1354, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1375, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1378, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1379, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1381, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1382, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1386, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1389, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1390, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1392, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1393, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1397, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1400, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1401, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1403, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1404, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1408, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1411, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1412, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1414, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1415, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1419, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1422, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1423, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1425, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1426, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1430, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1433, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1434, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1436, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1437, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1441, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1443, "col_offset": 4, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 1444, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1446, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1447, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1453, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1456, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1457, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1459, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1460, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1464, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1467, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1468, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1470, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1471, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1475, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1476, "col_offset": 4, "nodeName": "power", "type": "int"}, {"lineNumber": 1479, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1480, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1482, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1483, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1487, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1490, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1491, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1493, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1494, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1498, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1501, "col_offset": 4, "nodeName": "py_x_1", "type": "numpy.ndarray"}, {"lineNumber": 1502, "col_offset": 4, "nodeName": "py_x_2", "type": "numpy.ndarray"}, {"lineNumber": 1504, "col_offset": 4, "nodeName": "torch_x_1", "type": "Any"}, {"lineNumber": 1505, "col_offset": 4, "nodeName": "torch_x_2", "type": "Any"}, {"lineNumber": 1507, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1508, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1512, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1515, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1516, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1518, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1519, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1523, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1526, "col_offset": 4, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 1527, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1529, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1530, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1534, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1537, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1538, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1540, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1541, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1545, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1548, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1549, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1551, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1552, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1556, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1559, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1560, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1562, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1563, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1567, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1570, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1571, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1573, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1574, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1578, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 16, "col_offset": 45, "nodeName": "torchmat", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 43, "nodeName": "pymat", "type": "Any"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "pymat", "type": "Any"}, {"lineNumber": 19, "col_offset": 44, "nodeName": "pytorchmat", "type": "numpy.ndarray"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 20, "col_offset": 40, "nodeName": "torchmat", "type": "Any"}, {"lineNumber": 20, "col_offset": 50, "nodeName": "torchpymat", "type": "Any"}, {"lineNumber": 22, "col_offset": 7, "nodeName": "py_vs_torch", "type": "bool"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "torch_vs_py", "type": "bool"}, {"lineNumber": 24, "col_offset": 7, "nodeName": "py_vs_torch", "type": "bool"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "py_torch_x", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "rand", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "transpose", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "py_x_T", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "py_torch_x_T", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "rand", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "transpose", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "torch_y_T", "type": "Any"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "torch_py_y_T", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "zeros", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "zeros", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "py_zeros", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "torch_zeros", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "ones", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "ones", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "py_ones", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "torch_ones", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "diagonal_matrix", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "py_vec", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "diag", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "py_vec", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "py_diag", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "randn", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "diagonal_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 45, "nodeName": "torch_vec", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "diag", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "torch_vec", "type": "Any"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "torch_diag", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "identity", "type": "Callable[[int], numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "n", "type": "int"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "identity", "type": "Callable[[int], Any]"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "n", "type": "int"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "fill_diagonal", "type": "Callable[[numpy.ndarray, Union[float, int]], numpy.ndarray]"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "py_mult", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "fill_diagonal", "type": "Callable[[Any, Union[float, int]], None]"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 132, "col_offset": 44, "nodeName": "torch_mult", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "sign", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "sign", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "py_sign", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "torch_sign", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "clip", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "clip", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "clip", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 196, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "tround", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "tround", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "py_round", "type": "numpy.ndarray"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "torch_round", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 222, "col_offset": 34, "nodeName": "scalar", "type": "float"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 40, "nodeName": "scalar", "type": "float"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "py_scalar", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "torch_scalar", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 234, "col_offset": 17, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 41, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "py_flatten", "type": "Any"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "torch_flatten", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 245, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "reshape", "type": "Callable[[numpy.ndarray, Any], numpy.ndarray]"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 39, "nodeName": "newshape", "type": "Tuple[int, int]"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "reshape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 248, "col_offset": 48, "nodeName": "newshape", "type": "Tuple[int, int]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "py_new", "type": "numpy.ndarray"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "torch_new", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "float_scalar", "type": "Callable[[Union[float, int]], float]"}, {"lineNumber": 255, "col_offset": 34, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 261, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 261, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "mix_inplace", "type": "Callable[[Union[float, int], numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 264, "col_offset": 26, "nodeName": "py_w", "type": "float"}, {"lineNumber": 264, "col_offset": 32, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 264, "col_offset": 38, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "mix_inplace", "type": "Callable[[Union[float, int], Any, Any], None]"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 265, "col_offset": 38, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 265, "col_offset": 47, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "float_scalar", "type": "Callable[[Union[float, int]], float]"}, {"lineNumber": 272, "col_offset": 34, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 279, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "square_mix_inplace", "type": "Callable[[Union[float, int], numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "py_w", "type": "float"}, {"lineNumber": 281, "col_offset": 39, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 45, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "square_mix_inplace", "type": "Callable[[Union[float, int], Any, Any], None]"}, {"lineNumber": 282, "col_offset": 36, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 282, "col_offset": 45, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 282, "col_offset": 54, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 294, "col_offset": 40, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "sqrt_div", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 296, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "sqrt_div", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 297, "col_offset": 43, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 297, "col_offset": 52, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 17, "nodeName": "py_sqrt_div", "type": "numpy.ndarray"}, {"lineNumber": 299, "col_offset": 30, "nodeName": "torch_sqrt_div", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 307, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "normalize", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 309, "col_offset": 34, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "normalize", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 40, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "py_norm", "type": "numpy.ndarray"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 318, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 319, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "norm", "type": "Callable[[numpy.ndarray], float]"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 322, "col_offset": 17, "nodeName": "norm", "type": "Callable[[Any], float]"}, {"lineNumber": 322, "col_offset": 35, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 324, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "py_norm", "type": "float"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "torch_norm", "type": "float"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 331, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 331, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 332, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 338, "col_offset": 28, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 343, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 344, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 344, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 347, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 348, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 349, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 352, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 352, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 353, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 354, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 354, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 357, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 357, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 359, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 359, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 365, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 366, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 369, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 372, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 372, "col_offset": 20, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 372, "col_offset": 28, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 376, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 376, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 377, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 381, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 383, "col_offset": 17, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 386, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 387, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 17, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 388, "col_offset": 25, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 391, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 392, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 393, "col_offset": 17, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 399, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 399, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 400, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 403, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 403, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 404, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 406, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 406, "col_offset": 20, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 410, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 411, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 411, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 412, "col_offset": 17, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 412, "col_offset": 26, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 416, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 417, "col_offset": 17, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 417, "col_offset": 26, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 420, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 421, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 421, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 422, "col_offset": 17, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 422, "col_offset": 26, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 425, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 426, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 427, "col_offset": 17, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 427, "col_offset": 26, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 433, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 433, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 434, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 437, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 437, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 438, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 440, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 440, "col_offset": 20, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 440, "col_offset": 28, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 444, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 445, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 445, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 446, "col_offset": 17, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 446, "col_offset": 25, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 449, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 449, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 450, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 451, "col_offset": 17, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 451, "col_offset": 25, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 454, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 454, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 455, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 456, "col_offset": 17, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 456, "col_offset": 25, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 459, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 459, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 460, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 461, "col_offset": 25, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 467, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 467, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 468, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 471, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 471, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 472, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 472, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 474, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 474, "col_offset": 20, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 474, "col_offset": 28, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 478, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 478, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 479, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 479, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 480, "col_offset": 17, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 480, "col_offset": 25, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 483, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 483, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 17, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 485, "col_offset": 25, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 488, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 488, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 489, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 489, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 490, "col_offset": 17, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 490, "col_offset": 25, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 493, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 493, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 494, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 494, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 495, "col_offset": 17, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 495, "col_offset": 25, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 501, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 501, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 502, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 505, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 505, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 506, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 506, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 508, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 508, "col_offset": 20, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 508, "col_offset": 29, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 512, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 512, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 513, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 513, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 514, "col_offset": 17, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 514, "col_offset": 26, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 517, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 517, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 518, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 518, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 519, "col_offset": 26, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 522, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 522, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 523, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 523, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 524, "col_offset": 17, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 524, "col_offset": 26, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 527, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 527, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 528, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 528, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 529, "col_offset": 17, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 529, "col_offset": 26, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 535, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 535, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 536, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 536, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 539, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 540, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 540, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 542, "col_offset": 20, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 542, "col_offset": 30, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 546, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 546, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 547, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 547, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 548, "col_offset": 17, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 548, "col_offset": 27, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 551, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 552, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 552, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 553, "col_offset": 17, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 553, "col_offset": 27, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 556, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 556, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 557, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 557, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 558, "col_offset": 17, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 558, "col_offset": 27, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 561, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 561, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 562, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 562, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 563, "col_offset": 17, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 563, "col_offset": 27, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 569, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 569, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 570, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 570, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 572, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 572, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 573, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 573, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 575, "col_offset": 12, "nodeName": "equal", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 575, "col_offset": 28, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 575, "col_offset": 34, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 576, "col_offset": 34, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 576, "col_offset": 43, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 577, "col_offset": 18, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 577, "col_offset": 46, "nodeName": "torch_eq", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 579, "col_offset": 30, "nodeName": "py_eq", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 579, "col_offset": 37, "nodeName": "py_torch_eq", "type": "numpy.ndarray"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 586, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 586, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 587, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 587, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 589, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 589, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 590, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 590, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 592, "col_offset": 13, "nodeName": "not_equal", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 592, "col_offset": 33, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 592, "col_offset": 39, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 593, "col_offset": 16, "nodeName": "not_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 593, "col_offset": 39, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 593, "col_offset": 48, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 594, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 594, "col_offset": 47, "nodeName": "torch_neq", "type": "Any"}, {"lineNumber": 596, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 596, "col_offset": 30, "nodeName": "py_neq", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 596, "col_offset": 38, "nodeName": "py_torch_neq", "type": "numpy.ndarray"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 603, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 603, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 604, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 604, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 606, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 606, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 607, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 607, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 609, "col_offset": 13, "nodeName": "greater", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 609, "col_offset": 31, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 609, "col_offset": 37, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 610, "col_offset": 16, "nodeName": "greater", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 610, "col_offset": 37, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 610, "col_offset": 46, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 611, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 611, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 613, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 613, "col_offset": 30, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 613, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 620, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 620, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 621, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 621, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 623, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 623, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 624, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 624, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 626, "col_offset": 13, "nodeName": "greater_equal", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 626, "col_offset": 37, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 626, "col_offset": 43, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "greater_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 627, "col_offset": 43, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 627, "col_offset": 52, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 628, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 628, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 630, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 630, "col_offset": 30, "nodeName": "py_res", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 630, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 637, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 637, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 638, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 638, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 640, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 640, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 641, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 641, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 643, "col_offset": 13, "nodeName": "lesser", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 643, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 643, "col_offset": 36, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 644, "col_offset": 16, "nodeName": "lesser", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 644, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 644, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 645, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 645, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 647, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 647, "col_offset": 30, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 647, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 654, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 654, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 655, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 655, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 657, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 657, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 658, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 658, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 660, "col_offset": 13, "nodeName": "lesser_equal", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 660, "col_offset": 36, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 660, "col_offset": 42, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 661, "col_offset": 16, "nodeName": "lesser_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 661, "col_offset": 42, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 661, "col_offset": 51, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 662, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 662, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 664, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 664, "col_offset": 30, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 664, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 671, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 671, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 672, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 672, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 674, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 674, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 675, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 675, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 677, "col_offset": 13, "nodeName": "lesser_equal", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 677, "col_offset": 36, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 677, "col_offset": 42, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 678, "col_offset": 16, "nodeName": "lesser_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 678, "col_offset": 42, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 678, "col_offset": 51, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 681, "col_offset": 13, "nodeName": "tany", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 681, "col_offset": 28, "nodeName": "py_res", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "tany", "type": "Callable[..., Any]"}, {"lineNumber": 682, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 683, "col_offset": 11, "nodeName": "py_any", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 683, "col_offset": 21, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 687, "col_offset": 13, "nodeName": "tany", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 687, "col_offset": 28, "nodeName": "py_res", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 688, "col_offset": 16, "nodeName": "tany", "type": "Callable[..., Any]"}, {"lineNumber": 688, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 689, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 689, "col_offset": 47, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 691, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 691, "col_offset": 30, "nodeName": "py_any", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 691, "col_offset": 38, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 695, "col_offset": 13, "nodeName": "tany", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 695, "col_offset": 28, "nodeName": "py_res", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "tany", "type": "Callable[..., Any]"}, {"lineNumber": 696, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 697, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 697, "col_offset": 47, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 699, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 699, "col_offset": 30, "nodeName": "py_any", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 699, "col_offset": 38, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 703, "col_offset": 13, "nodeName": "tany", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 703, "col_offset": 28, "nodeName": "py_res", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 704, "col_offset": 16, "nodeName": "tany", "type": "Callable[..., Any]"}, {"lineNumber": 704, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 705, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 705, "col_offset": 47, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 707, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 707, "col_offset": 30, "nodeName": "py_any", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 707, "col_offset": 38, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 711, "col_offset": 13, "nodeName": "tany", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 711, "col_offset": 28, "nodeName": "py_res", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 712, "col_offset": 16, "nodeName": "tany", "type": "Callable[..., Any]"}, {"lineNumber": 712, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 713, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 713, "col_offset": 47, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 715, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 715, "col_offset": 30, "nodeName": "py_any", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 715, "col_offset": 38, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 721, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 722, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 722, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 723, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 723, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 725, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 725, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 726, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 726, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 728, "col_offset": 13, "nodeName": "lesser_equal", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 728, "col_offset": 36, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 728, "col_offset": 42, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 729, "col_offset": 16, "nodeName": "lesser_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 729, "col_offset": 42, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 729, "col_offset": 51, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 732, "col_offset": 13, "nodeName": "tall", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 732, "col_offset": 28, "nodeName": "py_res", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 733, "col_offset": 16, "nodeName": "tall", "type": "Callable[..., Any]"}, {"lineNumber": 733, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 734, "col_offset": 11, "nodeName": "py_all", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 734, "col_offset": 21, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 738, "col_offset": 13, "nodeName": "tall", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 738, "col_offset": 28, "nodeName": "py_res", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 739, "col_offset": 16, "nodeName": "tall", "type": "Callable[..., Any]"}, {"lineNumber": 739, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 740, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 740, "col_offset": 47, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 742, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 742, "col_offset": 30, "nodeName": "py_all", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 742, "col_offset": 38, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 746, "col_offset": 13, "nodeName": "tall", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 746, "col_offset": 28, "nodeName": "py_res", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 747, "col_offset": 16, "nodeName": "tall", "type": "Callable[..., Any]"}, {"lineNumber": 747, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 748, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 748, "col_offset": 47, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 750, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 750, "col_offset": 30, "nodeName": "py_all", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 750, "col_offset": 38, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 754, "col_offset": 13, "nodeName": "tall", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 754, "col_offset": 28, "nodeName": "py_res", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 755, "col_offset": 16, "nodeName": "tall", "type": "Callable[..., Any]"}, {"lineNumber": 755, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 756, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 756, "col_offset": 47, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 758, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 758, "col_offset": 30, "nodeName": "py_all", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 758, "col_offset": 38, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 762, "col_offset": 13, "nodeName": "tall", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 762, "col_offset": 28, "nodeName": "py_res", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 763, "col_offset": 16, "nodeName": "tall", "type": "Callable[..., Any]"}, {"lineNumber": 763, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 764, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 764, "col_offset": 47, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 766, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 766, "col_offset": 30, "nodeName": "py_all", "type": "Union[numpy.ndarray, bool]"}, {"lineNumber": 766, "col_offset": 38, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 772, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 773, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 773, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 774, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 774, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 776, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 776, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 777, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 777, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 779, "col_offset": 13, "nodeName": "maximum", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 779, "col_offset": 31, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 779, "col_offset": 37, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 780, "col_offset": 16, "nodeName": "maximum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 780, "col_offset": 37, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 780, "col_offset": 46, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 782, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 782, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 782, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 787, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 788, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 788, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 789, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 789, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 791, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 791, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 792, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 792, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 794, "col_offset": 13, "nodeName": "minimum", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 794, "col_offset": 31, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 794, "col_offset": 37, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 795, "col_offset": 16, "nodeName": "minimum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 795, "col_offset": 37, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 795, "col_offset": 46, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 797, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 797, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 802, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 803, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 803, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 804, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 804, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 807, "col_offset": 13, "nodeName": "argmax", "type": "Callable[[numpy.ndarray, int], numpy.ndarray]"}, {"lineNumber": 807, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 808, "col_offset": 16, "nodeName": "argmax", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 808, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 809, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 809, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 811, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 811, "col_offset": 30, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 811, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 815, "col_offset": 13, "nodeName": "argmax", "type": "Callable[[numpy.ndarray, int], numpy.ndarray]"}, {"lineNumber": 815, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 816, "col_offset": 16, "nodeName": "argmax", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 816, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 817, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 817, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 819, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 819, "col_offset": 30, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 819, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 826, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 826, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 827, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 827, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 830, "col_offset": 13, "nodeName": "argmin", "type": "Callable[[numpy.ndarray, int], numpy.ndarray]"}, {"lineNumber": 830, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 831, "col_offset": 16, "nodeName": "argmin", "type": "Callable[..., Any]"}, {"lineNumber": 831, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 832, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 832, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 834, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 834, "col_offset": 30, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 834, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 838, "col_offset": 13, "nodeName": "argmin", "type": "Callable[[numpy.ndarray, int], numpy.ndarray]"}, {"lineNumber": 838, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 839, "col_offset": 16, "nodeName": "argmin", "type": "Callable[..., Any]"}, {"lineNumber": 839, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 840, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 840, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 842, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 842, "col_offset": 30, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 842, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 851, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 851, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 852, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 852, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 853, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 853, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 854, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 854, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 856, "col_offset": 13, "nodeName": "dot", "type": "Callable[[numpy.ndarray, numpy.ndarray], Any]"}, {"lineNumber": 856, "col_offset": 27, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 856, "col_offset": 33, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 857, "col_offset": 16, "nodeName": "dot", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 857, "col_offset": 33, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 857, "col_offset": 42, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 859, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 859, "col_offset": 20, "nodeName": "py_dot", "type": "Any"}, {"lineNumber": 859, "col_offset": 28, "nodeName": "torch_dot", "type": "Any"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 867, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 867, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 868, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 868, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 869, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 869, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 870, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 870, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 872, "col_offset": 13, "nodeName": "dot", "type": "Callable[[numpy.ndarray, numpy.ndarray], Any]"}, {"lineNumber": 872, "col_offset": 27, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 872, "col_offset": 33, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 873, "col_offset": 16, "nodeName": "dot", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 873, "col_offset": 33, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 873, "col_offset": 42, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 875, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 875, "col_offset": 17, "nodeName": "py_dot", "type": "Any"}, {"lineNumber": 875, "col_offset": 25, "nodeName": "torch_dot", "type": "Any"}, {"lineNumber": 881, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 882, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 882, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 883, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 883, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 884, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 884, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 885, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 885, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 887, "col_offset": 13, "nodeName": "dot", "type": "Callable[[numpy.ndarray, numpy.ndarray], Any]"}, {"lineNumber": 887, "col_offset": 27, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 887, "col_offset": 33, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 888, "col_offset": 16, "nodeName": "dot", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 888, "col_offset": 33, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 888, "col_offset": 42, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 890, "col_offset": 17, "nodeName": "py_dot", "type": "Any"}, {"lineNumber": 890, "col_offset": 25, "nodeName": "torch_dot", "type": "Any"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 897, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 897, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 898, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 898, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 899, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 899, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 900, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 900, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 902, "col_offset": 13, "nodeName": "outer", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 902, "col_offset": 29, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 902, "col_offset": 35, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 903, "col_offset": 16, "nodeName": "outer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 903, "col_offset": 35, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 903, "col_offset": 44, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 905, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 905, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 905, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 912, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 913, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 913, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 916, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 916, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 917, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 917, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 919, "col_offset": 20, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 919, "col_offset": 27, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 920, "col_offset": 58, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 922, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 922, "col_offset": 20, "nodeName": "numpy_product", "type": "Any"}, {"lineNumber": 922, "col_offset": 35, "nodeName": "broadcast_product", "type": "Any"}, {"lineNumber": 926, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 927, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 927, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 930, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 930, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 931, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 931, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 933, "col_offset": 20, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 933, "col_offset": 27, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 934, "col_offset": 58, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 936, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 936, "col_offset": 20, "nodeName": "numpy_product", "type": "Any"}, {"lineNumber": 936, "col_offset": 35, "nodeName": "broadcast_product", "type": "Any"}, {"lineNumber": 940, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 941, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 941, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 943, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 944, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 944, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 945, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 945, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 947, "col_offset": 20, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 947, "col_offset": 27, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 948, "col_offset": 58, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 950, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 950, "col_offset": 20, "nodeName": "numpy_product", "type": "Any"}, {"lineNumber": 950, "col_offset": 35, "nodeName": "broadcast_product", "type": "Any"}, {"lineNumber": 958, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 959, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 959, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 961, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 962, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 962, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 963, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 963, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 965, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 965, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 966, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 966, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 968, "col_offset": 19, "nodeName": "broadcast", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 968, "col_offset": 39, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 968, "col_offset": 45, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 969, "col_offset": 22, "nodeName": "broadcast", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 969, "col_offset": 45, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 969, "col_offset": 54, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 970, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 970, "col_offset": 17, "nodeName": "py_broadcast", "type": "numpy.ndarray"}, {"lineNumber": 970, "col_offset": 31, "nodeName": "torch_broadcast", "type": "Any"}, {"lineNumber": 973, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 974, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 974, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 977, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 977, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 978, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 978, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 980, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 980, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 981, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 981, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 983, "col_offset": 19, "nodeName": "broadcast", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 983, "col_offset": 39, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 983, "col_offset": 45, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 984, "col_offset": 22, "nodeName": "broadcast", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 984, "col_offset": 45, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 984, "col_offset": 54, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 985, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 985, "col_offset": 17, "nodeName": "py_broadcast", "type": "numpy.ndarray"}, {"lineNumber": 985, "col_offset": 31, "nodeName": "torch_broadcast", "type": "Any"}, {"lineNumber": 988, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 989, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 989, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 991, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 992, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 992, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 993, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 993, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 995, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 995, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 996, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 996, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 998, "col_offset": 19, "nodeName": "broadcast", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 998, "col_offset": 39, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 998, "col_offset": 45, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 999, "col_offset": 22, "nodeName": "broadcast", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 999, "col_offset": 45, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 999, "col_offset": 54, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1000, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1000, "col_offset": 17, "nodeName": "py_broadcast", "type": "numpy.ndarray"}, {"lineNumber": 1000, "col_offset": 31, "nodeName": "torch_broadcast", "type": "Any"}, {"lineNumber": 1006, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1007, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1008, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1008, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1010, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1011, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1011, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1012, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1012, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 1013, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1013, "col_offset": 25, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1015, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1015, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1016, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1016, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1017, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1017, "col_offset": 40, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1019, "col_offset": 13, "nodeName": "affine", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1019, "col_offset": 30, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1019, "col_offset": 36, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1019, "col_offset": 42, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1020, "col_offset": 16, "nodeName": "affine", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1020, "col_offset": 36, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1020, "col_offset": 45, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1020, "col_offset": 54, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1022, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1022, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1022, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1028, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1028, "col_offset": 27, "nodeName": "N", "type": "int"}, {"lineNumber": 1029, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1029, "col_offset": 27, "nodeName": "M", "type": "int"}, {"lineNumber": 1030, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1030, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1033, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1033, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1034, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1034, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1035, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1035, "col_offset": 25, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1037, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1037, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1038, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1038, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1039, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1039, "col_offset": 40, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1041, "col_offset": 13, "nodeName": "affine", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1041, "col_offset": 30, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1041, "col_offset": 36, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1041, "col_offset": 42, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1042, "col_offset": 16, "nodeName": "affine", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1042, "col_offset": 36, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1042, "col_offset": 45, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1042, "col_offset": 54, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1044, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1044, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1044, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1050, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1051, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1052, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1052, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1054, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1055, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1055, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1056, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1056, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 1057, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1057, "col_offset": 25, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1059, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1059, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1060, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1060, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1061, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1061, "col_offset": 40, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1063, "col_offset": 13, "nodeName": "quadratic", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1063, "col_offset": 33, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1063, "col_offset": 39, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1063, "col_offset": 45, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1064, "col_offset": 16, "nodeName": "quadratic", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1064, "col_offset": 39, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1064, "col_offset": 48, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1064, "col_offset": 57, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1066, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1066, "col_offset": 20, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1066, "col_offset": 28, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1073, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1073, "col_offset": 27, "nodeName": "N", "type": "int"}, {"lineNumber": 1074, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1074, "col_offset": 18, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1075, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1075, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1077, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1078, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1078, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1079, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1079, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1080, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1080, "col_offset": 25, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1082, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1082, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1083, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1083, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1084, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1084, "col_offset": 40, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1086, "col_offset": 13, "nodeName": "quadratic", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1086, "col_offset": 33, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1086, "col_offset": 39, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1086, "col_offset": 45, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1087, "col_offset": 16, "nodeName": "quadratic", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1087, "col_offset": 39, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1087, "col_offset": 48, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1087, "col_offset": 57, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1090, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1090, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1090, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1096, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1097, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1097, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1098, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1098, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1100, "col_offset": 13, "nodeName": "inv", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1100, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1101, "col_offset": 16, "nodeName": "inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 1101, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1104, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1104, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1104, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1111, "col_offset": 15, "nodeName": "L", "type": "int"}, {"lineNumber": 1111, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1112, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1112, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1113, "col_offset": 15, "nodeName": "L", "type": "int"}, {"lineNumber": 1113, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1115, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1116, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1116, "col_offset": 25, "nodeName": "v_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1117, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1117, "col_offset": 25, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1118, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1118, "col_offset": 25, "nodeName": "h_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1120, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1120, "col_offset": 40, "nodeName": "py_v", "type": "numpy.ndarray"}, {"lineNumber": 1121, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1121, "col_offset": 40, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1122, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1122, "col_offset": 40, "nodeName": "py_h", "type": "numpy.ndarray"}, {"lineNumber": 1124, "col_offset": 13, "nodeName": "batch_dot", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1124, "col_offset": 33, "nodeName": "py_v", "type": "numpy.ndarray"}, {"lineNumber": 1124, "col_offset": 39, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1124, "col_offset": 45, "nodeName": "py_h", "type": "numpy.ndarray"}, {"lineNumber": 1125, "col_offset": 16, "nodeName": "batch_dot", "type": "Callable[..., Any]"}, {"lineNumber": 1125, "col_offset": 39, "nodeName": "torch_v", "type": "Any"}, {"lineNumber": 1125, "col_offset": 48, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1125, "col_offset": 57, "nodeName": "torch_h", "type": "Any"}, {"lineNumber": 1127, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1127, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1127, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1134, "col_offset": 15, "nodeName": "L", "type": "int"}, {"lineNumber": 1134, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1135, "col_offset": 15, "nodeName": "L", "type": "int"}, {"lineNumber": 1135, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1137, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1138, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1138, "col_offset": 25, "nodeName": "v_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1139, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1139, "col_offset": 25, "nodeName": "h_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1141, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1141, "col_offset": 40, "nodeName": "py_v", "type": "numpy.ndarray"}, {"lineNumber": 1142, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1142, "col_offset": 40, "nodeName": "py_h", "type": "numpy.ndarray"}, {"lineNumber": 1144, "col_offset": 13, "nodeName": "batch_outer", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1144, "col_offset": 35, "nodeName": "py_v", "type": "numpy.ndarray"}, {"lineNumber": 1144, "col_offset": 41, "nodeName": "py_h", "type": "numpy.ndarray"}, {"lineNumber": 1145, "col_offset": 16, "nodeName": "batch_outer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1145, "col_offset": 41, "nodeName": "torch_v", "type": "Any"}, {"lineNumber": 1145, "col_offset": 50, "nodeName": "torch_h", "type": "Any"}, {"lineNumber": 1147, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1147, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1147, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1154, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1154, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1155, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1155, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1157, "col_offset": 13, "nodeName": "repeat", "type": "Callable[[numpy.ndarray, int], numpy.ndarray]"}, {"lineNumber": 1157, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1157, "col_offset": 36, "nodeName": "n_repeats", "type": "int"}, {"lineNumber": 1158, "col_offset": 16, "nodeName": "repeat", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 1158, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1158, "col_offset": 45, "nodeName": "n_repeats", "type": "int"}, {"lineNumber": 1160, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1160, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1160, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1166, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1167, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1167, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1168, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1168, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1170, "col_offset": 13, "nodeName": "stack", "type": "Callable[[Any, int], numpy.ndarray]"}, {"lineNumber": 1171, "col_offset": 16, "nodeName": "stack", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 1173, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1173, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1173, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1175, "col_offset": 13, "nodeName": "stack", "type": "Callable[[Any, int], numpy.ndarray]"}, {"lineNumber": 1176, "col_offset": 16, "nodeName": "stack", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 1178, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1178, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1178, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1183, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1183, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1184, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1184, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1186, "col_offset": 13, "nodeName": "stack", "type": "Callable[[Any, int], numpy.ndarray]"}, {"lineNumber": 1187, "col_offset": 16, "nodeName": "stack", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 1189, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1189, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1189, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1191, "col_offset": 13, "nodeName": "stack", "type": "Callable[[Any, int], numpy.ndarray]"}, {"lineNumber": 1192, "col_offset": 16, "nodeName": "stack", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 1194, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1194, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1194, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1200, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1201, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1201, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1202, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1202, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1204, "col_offset": 13, "nodeName": "hstack", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1205, "col_offset": 16, "nodeName": "hstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 1207, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1207, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1207, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1212, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1212, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1213, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1213, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1215, "col_offset": 13, "nodeName": "hstack", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1216, "col_offset": 16, "nodeName": "hstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 1218, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1218, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1218, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1224, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1225, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1225, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1226, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1226, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1228, "col_offset": 13, "nodeName": "vstack", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1229, "col_offset": 16, "nodeName": "vstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 1231, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1231, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1231, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1236, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1236, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1237, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1237, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1239, "col_offset": 13, "nodeName": "vstack", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1240, "col_offset": 16, "nodeName": "vstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 1242, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1242, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1242, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1249, "col_offset": 13, "nodeName": "trange", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1249, "col_offset": 30, "nodeName": "start", "type": "int"}, {"lineNumber": 1249, "col_offset": 37, "nodeName": "stop", "type": "int"}, {"lineNumber": 1250, "col_offset": 16, "nodeName": "trange", "type": "Callable[..., Any]"}, {"lineNumber": 1250, "col_offset": 36, "nodeName": "start", "type": "int"}, {"lineNumber": 1250, "col_offset": 43, "nodeName": "stop", "type": "int"}, {"lineNumber": 1251, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1251, "col_offset": 47, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1253, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1253, "col_offset": 20, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1253, "col_offset": 28, "nodeName": "py_torch_mat", "type": "numpy.ndarray"}, {"lineNumber": 1260, "col_offset": 13, "nodeName": "trange", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1260, "col_offset": 30, "nodeName": "start", "type": "int"}, {"lineNumber": 1260, "col_offset": 37, "nodeName": "stop", "type": "int"}, {"lineNumber": 1261, "col_offset": 16, "nodeName": "trange", "type": "Callable[..., Any]"}, {"lineNumber": 1261, "col_offset": 36, "nodeName": "start", "type": "int"}, {"lineNumber": 1261, "col_offset": 43, "nodeName": "stop", "type": "int"}, {"lineNumber": 1262, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1262, "col_offset": 47, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1264, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1264, "col_offset": 20, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1264, "col_offset": 28, "nodeName": "py_torch_mat", "type": "numpy.ndarray"}, {"lineNumber": 1270, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1271, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1271, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1272, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1272, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1274, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1274, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1275, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1275, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1277, "col_offset": 14, "nodeName": "euclidean_distance", "type": "Any"}, {"lineNumber": 1277, "col_offset": 43, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1277, "col_offset": 49, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1278, "col_offset": 17, "nodeName": "euclidean_distance", "type": "Callable[[Any, Any], float]"}, {"lineNumber": 1278, "col_offset": 49, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1278, "col_offset": 58, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1280, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1280, "col_offset": 20, "nodeName": "py_dist", "type": "Any"}, {"lineNumber": 1280, "col_offset": 29, "nodeName": "torch_dist", "type": "float"}, {"lineNumber": 1286, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1287, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1287, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1288, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1288, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1290, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1290, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1291, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1291, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1293, "col_offset": 14, "nodeName": "squared_euclidean_distance", "type": "Any"}, {"lineNumber": 1293, "col_offset": 51, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1293, "col_offset": 57, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1294, "col_offset": 17, "nodeName": "squared_euclidean_distance", "type": "Callable[[Any, Any], float]"}, {"lineNumber": 1294, "col_offset": 57, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1294, "col_offset": 66, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1296, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1296, "col_offset": 20, "nodeName": "py_dist", "type": "Any"}, {"lineNumber": 1296, "col_offset": 29, "nodeName": "torch_dist", "type": "float"}, {"lineNumber": 1303, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1304, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1304, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1305, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1305, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1307, "col_offset": 16, "nodeName": "resample", "type": "Any"}, {"lineNumber": 1307, "col_offset": 35, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1307, "col_offset": 43, "nodeName": "n", "type": "int"}, {"lineNumber": 1308, "col_offset": 19, "nodeName": "resample", "type": "Callable[..., Any]"}, {"lineNumber": 1308, "col_offset": 41, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1308, "col_offset": 52, "nodeName": "n", "type": "int"}, {"lineNumber": 1319, "col_offset": 4, "nodeName": "a_mean", "type": "int"}, {"lineNumber": 1319, "col_offset": 12, "nodeName": "a_scale", "type": "int"}, {"lineNumber": 1320, "col_offset": 4, "nodeName": "b_mean", "type": "float"}, {"lineNumber": 1320, "col_offset": 12, "nodeName": "b_scale", "type": "float"}, {"lineNumber": 1322, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1323, "col_offset": 11, "nodeName": "a_mean", "type": "int"}, {"lineNumber": 1324, "col_offset": 11, "nodeName": "b_mean", "type": "float"}, {"lineNumber": 1325, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1325, "col_offset": 40, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 1326, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1326, "col_offset": 40, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 1328, "col_offset": 14, "nodeName": "fast_energy_distance", "type": "Any"}, {"lineNumber": 1328, "col_offset": 45, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 1329, "col_offset": 45, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 1332, "col_offset": 17, "nodeName": "fast_energy_distance", "type": "Callable[..., float]"}, {"lineNumber": 1332, "col_offset": 51, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1333, "col_offset": 51, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1340, "col_offset": 11, "nodeName": "py_dist", "type": "Any"}, {"lineNumber": 1343, "col_offset": 11, "nodeName": "torch_dist", "type": "float"}, {"lineNumber": 1347, "col_offset": 4, "nodeName": "a_mean", "type": "int"}, {"lineNumber": 1347, "col_offset": 12, "nodeName": "a_scale", "type": "int"}, {"lineNumber": 1348, "col_offset": 4, "nodeName": "b_mean", "type": "int"}, {"lineNumber": 1348, "col_offset": 12, "nodeName": "b_scale", "type": "int"}, {"lineNumber": 1350, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1351, "col_offset": 11, "nodeName": "a_mean", "type": "int"}, {"lineNumber": 1352, "col_offset": 11, "nodeName": "b_mean", "type": "int"}, {"lineNumber": 1353, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1353, "col_offset": 40, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 1354, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1354, "col_offset": 40, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 1356, "col_offset": 14, "nodeName": "fast_energy_distance", "type": "Any"}, {"lineNumber": 1356, "col_offset": 45, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 1357, "col_offset": 45, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 1360, "col_offset": 17, "nodeName": "fast_energy_distance", "type": "Callable[..., float]"}, {"lineNumber": 1360, "col_offset": 51, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1361, "col_offset": 51, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1364, "col_offset": 11, "nodeName": "py_dist", "type": "Any"}, {"lineNumber": 1367, "col_offset": 11, "nodeName": "torch_dist", "type": "float"}, {"lineNumber": 1377, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1378, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1378, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1379, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1379, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1381, "col_offset": 11, "nodeName": "tabs", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1381, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1382, "col_offset": 14, "nodeName": "tabs", "type": "Callable[[Any], Any]"}, {"lineNumber": 1382, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1383, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1383, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1383, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1388, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1389, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1389, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1390, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1390, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1392, "col_offset": 11, "nodeName": "exp", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1392, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1393, "col_offset": 14, "nodeName": "exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 1393, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1394, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1394, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1394, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1399, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1400, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1400, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1401, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1401, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1403, "col_offset": 11, "nodeName": "log", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1403, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1404, "col_offset": 14, "nodeName": "log", "type": "Callable[[Any], Any]"}, {"lineNumber": 1404, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1405, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1405, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1405, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1410, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1411, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1411, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1412, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1412, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1414, "col_offset": 11, "nodeName": "tanh", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1414, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1415, "col_offset": 14, "nodeName": "tanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 1415, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1416, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1416, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1416, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1421, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1422, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1422, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1423, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1423, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1425, "col_offset": 11, "nodeName": "expit", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1425, "col_offset": 25, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1426, "col_offset": 14, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1426, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1427, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1427, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1427, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1432, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1433, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1433, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1434, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1434, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1436, "col_offset": 11, "nodeName": "reciprocal", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1436, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1437, "col_offset": 14, "nodeName": "reciprocal", "type": "Callable[[Any], Any]"}, {"lineNumber": 1437, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1438, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1438, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1438, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1442, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1444, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1444, "col_offset": 40, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 1446, "col_offset": 11, "nodeName": "atanh", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1446, "col_offset": 25, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 1447, "col_offset": 14, "nodeName": "atanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 1447, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1450, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1450, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1450, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1455, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1456, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1456, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1457, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1457, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1459, "col_offset": 11, "nodeName": "sqrt", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1459, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1460, "col_offset": 14, "nodeName": "sqrt", "type": "Callable[[Any], Any]"}, {"lineNumber": 1460, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1461, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1461, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1461, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1466, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1467, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1467, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1468, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1468, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1470, "col_offset": 11, "nodeName": "square", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1470, "col_offset": 26, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1471, "col_offset": 14, "nodeName": "square", "type": "Callable[[Any], Any]"}, {"lineNumber": 1471, "col_offset": 32, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1472, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1472, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1472, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1478, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1479, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1479, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1480, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1480, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1482, "col_offset": 11, "nodeName": "tpow", "type": "Callable[[numpy.ndarray, Union[float, int]], numpy.ndarray]"}, {"lineNumber": 1482, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1482, "col_offset": 30, "nodeName": "power", "type": "int"}, {"lineNumber": 1483, "col_offset": 14, "nodeName": "tpow", "type": "Callable[[Any, Union[float, int]], Any]"}, {"lineNumber": 1483, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1483, "col_offset": 39, "nodeName": "power", "type": "int"}, {"lineNumber": 1484, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1484, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1484, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1489, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1490, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1490, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1491, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1491, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1493, "col_offset": 11, "nodeName": "cosh", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1493, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1494, "col_offset": 14, "nodeName": "cosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 1494, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1495, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1495, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1495, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1500, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1501, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1501, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1502, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1502, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1504, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1504, "col_offset": 42, "nodeName": "py_x_1", "type": "numpy.ndarray"}, {"lineNumber": 1505, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1505, "col_offset": 42, "nodeName": "py_x_2", "type": "numpy.ndarray"}, {"lineNumber": 1507, "col_offset": 11, "nodeName": "logaddexp", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1507, "col_offset": 29, "nodeName": "py_x_1", "type": "numpy.ndarray"}, {"lineNumber": 1507, "col_offset": 37, "nodeName": "py_x_2", "type": "numpy.ndarray"}, {"lineNumber": 1508, "col_offset": 14, "nodeName": "logaddexp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1508, "col_offset": 35, "nodeName": "torch_x_1", "type": "Any"}, {"lineNumber": 1508, "col_offset": 46, "nodeName": "torch_x_2", "type": "Any"}, {"lineNumber": 1509, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1509, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1509, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1514, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1515, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1515, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1516, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1516, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1518, "col_offset": 11, "nodeName": "logcosh", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1518, "col_offset": 27, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1519, "col_offset": 14, "nodeName": "logcosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 1519, "col_offset": 33, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1520, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1520, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1520, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1525, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1527, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1527, "col_offset": 40, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 1529, "col_offset": 11, "nodeName": "acosh", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1529, "col_offset": 25, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 1530, "col_offset": 14, "nodeName": "acosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 1530, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1531, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1531, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1531, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1536, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1537, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1537, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1538, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1538, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1540, "col_offset": 11, "nodeName": "logit", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1540, "col_offset": 25, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1541, "col_offset": 14, "nodeName": "logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1541, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1542, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1542, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1542, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1547, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1548, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1548, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1549, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1549, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1551, "col_offset": 11, "nodeName": "softplus", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1551, "col_offset": 28, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1552, "col_offset": 14, "nodeName": "softplus", "type": "Callable[[Any], Any]"}, {"lineNumber": 1552, "col_offset": 34, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1553, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1553, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1553, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1558, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1559, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1559, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1560, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1560, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1562, "col_offset": 11, "nodeName": "cos", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1562, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1563, "col_offset": 14, "nodeName": "cos", "type": "Callable[[Any], Any]"}, {"lineNumber": 1563, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1564, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1564, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1564, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1569, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1570, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1570, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1571, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1571, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1573, "col_offset": 11, "nodeName": "sin", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1573, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1574, "col_offset": 14, "nodeName": "sin", "type": "Callable[[Any], Any]"}, {"lineNumber": 1574, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1575, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1575, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1575, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1579, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 19, "col_offset": 61, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 19, "col_offset": 72, "nodeName": "atol", "type": "Any"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 20, "col_offset": 67, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 20, "col_offset": 78, "nodeName": "atol", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "torch_vs_py", "type": "bool"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "torch_vs_py", "type": "bool"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "transpose", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 70, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "transpose", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 234, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 261, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 279, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 305, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 319, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 322, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 331, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 352, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 357, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 369, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 376, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 381, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 391, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 399, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 403, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 410, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 411, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 420, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 421, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 425, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 426, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 433, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 437, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 445, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 449, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 454, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 459, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 467, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 471, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 472, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 478, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 479, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 483, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 488, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 489, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 493, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 494, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 501, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 505, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 506, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 512, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 513, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 517, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 518, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 522, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 523, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 527, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 528, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 535, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 536, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 540, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 546, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 547, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 552, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 556, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 557, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 561, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 562, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 569, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 570, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 572, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 573, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 575, "col_offset": 12, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 577, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 586, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 587, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 589, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 590, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 592, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 593, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 594, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 596, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 603, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 604, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 606, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 607, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 609, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 610, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 611, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 613, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 620, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 621, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 623, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 624, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 626, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 628, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 630, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 637, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 638, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 640, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 641, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 643, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 644, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 645, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 647, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 654, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 655, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 657, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 658, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 660, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 661, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 662, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 664, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 671, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 672, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 674, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 675, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 677, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 678, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 681, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 687, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 688, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 689, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 691, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 695, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 697, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 699, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 703, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 704, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 705, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 707, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 711, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 712, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 713, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 715, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 721, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 722, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 723, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 725, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 726, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 728, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 729, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 732, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 733, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 738, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 739, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 740, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 742, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 746, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 747, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 748, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 750, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 754, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 755, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 756, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 758, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 762, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 763, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 764, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 766, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 772, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 773, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 774, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 776, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 777, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 779, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 780, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 787, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 788, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 789, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 791, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 792, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 794, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 795, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 802, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 803, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 804, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 807, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 808, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 809, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 811, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 815, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 816, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 817, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 819, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 826, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 827, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 830, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 831, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 832, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 834, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 838, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 839, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 840, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 842, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 851, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 852, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 853, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 854, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 856, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 857, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 867, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 868, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 869, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 870, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 872, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 873, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 881, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 882, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 883, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 884, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 885, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 887, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 888, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 897, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 898, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 899, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 900, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 902, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 903, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 916, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 917, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 920, "col_offset": 24, "nodeName": "broadcast", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 920, "col_offset": 44, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 920, "col_offset": 50, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 930, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 931, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 934, "col_offset": 24, "nodeName": "broadcast", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 934, "col_offset": 44, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 934, "col_offset": 50, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 943, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 944, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 945, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 948, "col_offset": 24, "nodeName": "broadcast", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 948, "col_offset": 44, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 948, "col_offset": 50, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 961, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 962, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 963, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 965, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 966, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 968, "col_offset": 19, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 969, "col_offset": 22, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 977, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 978, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 980, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 981, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 983, "col_offset": 19, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 984, "col_offset": 22, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 991, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 992, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 993, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 995, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 996, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 998, "col_offset": 19, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 999, "col_offset": 22, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1010, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1011, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1012, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1013, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1015, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1016, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1017, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1019, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1020, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1033, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1034, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1035, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1037, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1038, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1039, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1041, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1042, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1054, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1055, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1056, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1057, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1059, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1060, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1061, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1063, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1064, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1077, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1078, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1079, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1080, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1082, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1083, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1084, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1086, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1087, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1096, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1097, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1098, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1100, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1101, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1115, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1116, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1117, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1118, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1120, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1121, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1122, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1124, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1125, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1137, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1138, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1139, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1141, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1142, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1144, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1145, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1154, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1155, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1157, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1158, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1166, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1167, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1168, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1170, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1170, "col_offset": 30, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1170, "col_offset": 38, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1171, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1171, "col_offset": 36, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1171, "col_offset": 47, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1175, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1175, "col_offset": 30, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1175, "col_offset": 38, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1176, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1176, "col_offset": 36, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1176, "col_offset": 47, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1183, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1184, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1186, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1186, "col_offset": 30, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1186, "col_offset": 38, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1187, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1187, "col_offset": 36, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1187, "col_offset": 47, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1191, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1191, "col_offset": 30, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1191, "col_offset": 38, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1192, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1192, "col_offset": 36, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1192, "col_offset": 47, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1200, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1201, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1202, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1204, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1204, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1204, "col_offset": 39, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1205, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1205, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1205, "col_offset": 48, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1212, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1213, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1215, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1215, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1215, "col_offset": 39, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1216, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1216, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1216, "col_offset": 48, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1224, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1225, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1226, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1228, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1228, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1228, "col_offset": 39, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1229, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1229, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1229, "col_offset": 48, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1236, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1237, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1239, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1239, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1239, "col_offset": 39, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1240, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1240, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1240, "col_offset": 48, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1249, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1249, "col_offset": 48, "nodeName": "step", "type": "int"}, {"lineNumber": 1250, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1250, "col_offset": 54, "nodeName": "step", "type": "int"}, {"lineNumber": 1251, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1260, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1260, "col_offset": 48, "nodeName": "step", "type": "int"}, {"lineNumber": 1261, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1261, "col_offset": 54, "nodeName": "step", "type": "int"}, {"lineNumber": 1262, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1270, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1271, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1272, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1274, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1275, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1277, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1278, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1286, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1287, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1288, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1290, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1291, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1293, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1294, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1303, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1304, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1305, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1307, "col_offset": 16, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1308, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1312, "col_offset": 11, "nodeName": "shape", "type": "Callable[[numpy.ndarray], Any]"}, {"lineNumber": 1312, "col_offset": 27, "nodeName": "py_sample", "type": "Any"}, {"lineNumber": 1312, "col_offset": 41, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 1312, "col_offset": 60, "nodeName": "torch_sample", "type": "Any"}, {"lineNumber": 1322, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1323, "col_offset": 20, "nodeName": "a_scale", "type": "int"}, {"lineNumber": 1324, "col_offset": 20, "nodeName": "b_scale", "type": "float"}, {"lineNumber": 1325, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1326, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1328, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1330, "col_offset": 56, "nodeName": "downsample", "type": "int"}, {"lineNumber": 1332, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1334, "col_offset": 62, "nodeName": "downsample", "type": "int"}, {"lineNumber": 1350, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1351, "col_offset": 20, "nodeName": "a_scale", "type": "int"}, {"lineNumber": 1352, "col_offset": 20, "nodeName": "b_scale", "type": "int"}, {"lineNumber": 1353, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1354, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1356, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1358, "col_offset": 56, "nodeName": "downsample", "type": "int"}, {"lineNumber": 1360, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1362, "col_offset": 62, "nodeName": "downsample", "type": "int"}, {"lineNumber": 1377, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1378, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1379, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1381, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1382, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1388, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1389, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1390, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1392, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1393, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1399, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1400, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1401, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1403, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1404, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1410, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1411, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1412, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1414, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1415, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1421, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1422, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1423, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1425, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1426, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1432, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1433, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1434, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1436, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1437, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1442, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1444, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1446, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1447, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1455, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1456, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1457, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1459, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1460, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1466, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1467, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1468, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1470, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1471, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1478, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1479, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1480, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1482, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1483, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1489, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1490, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1491, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1493, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1494, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1500, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1501, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1502, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1504, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1505, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1507, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1508, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1514, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1515, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1516, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1518, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1519, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1525, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1526, "col_offset": 15, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1526, "col_offset": 28, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1527, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1529, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1530, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1536, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1537, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1538, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1540, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1541, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1547, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1548, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1549, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1551, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1552, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1558, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1559, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1560, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1562, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1563, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1569, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1570, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1571, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1573, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 1574, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 1579, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 1579, "col_offset": 17, "nodeName": "__file__", "type": "str"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "py_vs_torch", "type": "bool"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 32, "col_offset": 63, "nodeName": "name", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 920, "col_offset": 24, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 934, "col_offset": 24, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 948, "col_offset": 24, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1312, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1312, "col_offset": 41, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1323, "col_offset": 30, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1323, "col_offset": 44, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1324, "col_offset": 30, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1324, "col_offset": 44, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1351, "col_offset": 30, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1351, "col_offset": 44, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1352, "col_offset": 30, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1352, "col_offset": 44, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1443, "col_offset": 15, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1443, "col_offset": 28, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1526, "col_offset": 15, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1323, "col_offset": 30, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1324, "col_offset": 30, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1351, "col_offset": 30, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1352, "col_offset": 30, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1443, "col_offset": 15, "nodeName": "py_rand", "type": "module"}]