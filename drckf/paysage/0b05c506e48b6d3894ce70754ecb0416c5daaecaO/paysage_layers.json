[{"lineNumber": 1519, "col_offset": 0, "nodeName": "get", "type": "Callable[[Any], Any]"}, {"lineNumber": 8, "col_offset": 12, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "W", "type": "Callable[[Any], Any]"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 652, "col_offset": 17, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 941, "col_offset": 21, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 1230, "col_offset": 23, "nodeName": "Layer", "type": "Type[Layer]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "penalties", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "constraints", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "layer_obj", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "constraints", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "pen", "type": "Dict[Any, Any]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "pen", "type": "Dict[nothing, nothing]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[nothing], List[str], str, Any]]"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[nothing], List[str], str, Any]]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "layer", "type": "Weights"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "layer", "type": "Weights"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 362, "col_offset": 35, "nodeName": "len", "type": "Any"}, {"lineNumber": 363, "col_offset": 37, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 464, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "v_scaled", "type": "Any"}, {"lineNumber": 553, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 563, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 649, "col_offset": 15, "nodeName": "r", "type": "Any"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 667, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 669, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 691, "col_offset": 35, "nodeName": "len", "type": "Any"}, {"lineNumber": 692, "col_offset": 37, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 693, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 713, "col_offset": 15, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 778, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 817, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 855, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 869, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 915, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 956, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 956, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 957, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 958, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 958, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 979, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 980, "col_offset": 35, "nodeName": "len", "type": "Any"}, {"lineNumber": 981, "col_offset": 37, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 982, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 996, "col_offset": 8, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 997, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 1002, "col_offset": 15, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 1040, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 1058, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 1059, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1061, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1062, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1063, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1067, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1067, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1106, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 1144, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1158, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 1203, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 1204, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 1245, "col_offset": 8, "nodeName": "len", "type": "Any"}, {"lineNumber": 1245, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 1246, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1247, "col_offset": 8, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1247, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1268, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 1269, "col_offset": 35, "nodeName": "len", "type": "Any"}, {"lineNumber": 1270, "col_offset": 37, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1271, "col_offset": 15, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 1285, "col_offset": 8, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1286, "col_offset": 8, "nodeName": "sample_size", "type": "Any"}, {"lineNumber": 1291, "col_offset": 15, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1329, "col_offset": 8, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 1347, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 1348, "col_offset": 8, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1350, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1351, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1352, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1356, "col_offset": 8, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1356, "col_offset": 27, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1395, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 1433, "col_offset": 15, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1447, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 1490, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 1521, "col_offset": 15, "nodeName": "GaussianLayer", "type": "Type[GaussianLayer]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "__name__", "type": "str"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "config", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "constraint", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "self", "type": "Layer"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "penalty", "type": "Dict[Any, Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "subtract_dicts_inplace", "type": "Any"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 186, "col_offset": 51, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "enforce_constraints", "type": "Callable[[], Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "Weights"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[nothing], List[str], str, Any]]"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "self", "type": "Weights"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "cls", "type": "Type[Weights]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "vis", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 361, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 362, "col_offset": 35, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 363, "col_offset": 37, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 378, "col_offset": 16, "nodeName": "cls", "type": "Type[GaussianLayer]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 379, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 380, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 382, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 382, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 401, "col_offset": 17, "nodeName": "vis", "type": "Any"}, {"lineNumber": 402, "col_offset": 17, "nodeName": "square", "type": "Any"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "result", "type": "Any"}, {"lineNumber": 403, "col_offset": 18, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 403, "col_offset": 31, "nodeName": "scale", "type": "Any"}, {"lineNumber": 403, "col_offset": 38, "nodeName": "vis", "type": "Any"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 429, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 431, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 451, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 451, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 453, "col_offset": 13, "nodeName": "exp", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 456, "col_offset": 34, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 456, "col_offset": 53, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 457, "col_offset": 62, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 459, "col_offset": 14, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 459, "col_offset": 33, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 460, "col_offset": 53, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 462, "col_offset": 37, "nodeName": "log", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 482, "col_offset": 14, "nodeName": "exp", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "mix_inplace", "type": "Any"}, {"lineNumber": 483, "col_offset": 53, "nodeName": "var", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 484, "col_offset": 37, "nodeName": "log", "type": "Any"}, {"lineNumber": 484, "col_offset": 44, "nodeName": "var", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 505, "col_offset": 34, "nodeName": "dot", "type": "Any"}, {"lineNumber": 506, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 509, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 514, "col_offset": 35, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 518, "col_offset": 38, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 546, "col_offset": 19, "nodeName": "rescale", "type": "Callable[[Any], Any]"}, {"lineNumber": 546, "col_offset": 32, "nodeName": "vis", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 549, "col_offset": 15, "nodeName": "square", "type": "Any"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 553, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 560, "col_offset": 28, "nodeName": "rescale", "type": "Callable[[Any], Any]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 562, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 579, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 580, "col_offset": 15, "nodeName": "observations", "type": "Any"}, {"lineNumber": 596, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 647, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 669, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 690, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 691, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 691, "col_offset": 35, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 692, "col_offset": 37, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 707, "col_offset": 16, "nodeName": "cls", "type": "Type[IsingLayer]"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 708, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 709, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 709, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 709, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 711, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 711, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 711, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 751, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 752, "col_offset": 15, "nodeName": "logcosh", "type": "Any"}, {"lineNumber": 752, "col_offset": 26, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 769, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 769, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 770, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 770, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 772, "col_offset": 12, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 773, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 773, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 774, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 776, "col_offset": 33, "nodeName": "atanh", "type": "Any"}, {"lineNumber": 776, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 816, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 816, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 817, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 820, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 825, "col_offset": 36, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 852, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 853, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 853, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 899, "col_offset": 15, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 914, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 915, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 935, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 936, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 954, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 956, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 957, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 958, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 958, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 979, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 980, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 980, "col_offset": 35, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 981, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 981, "col_offset": 37, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 996, "col_offset": 16, "nodeName": "cls", "type": "Type[BernoulliLayer]"}, {"lineNumber": 997, "col_offset": 8, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 997, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 998, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 998, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 998, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 1000, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 1000, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 1000, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 1040, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 1041, "col_offset": 15, "nodeName": "softplus", "type": "Any"}, {"lineNumber": 1041, "col_offset": 27, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 1058, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1058, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 1059, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 1059, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1061, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 1062, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1062, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1063, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1065, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1065, "col_offset": 33, "nodeName": "logit", "type": "Any"}, {"lineNumber": 1065, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 1067, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1105, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1105, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1106, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1109, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 1114, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1114, "col_offset": 36, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1141, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1142, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 1142, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1173, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 1188, "col_offset": 15, "nodeName": "expit", "type": "Any"}, {"lineNumber": 1203, "col_offset": 12, "nodeName": "expit", "type": "Any"}, {"lineNumber": 1204, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1205, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 1224, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 1225, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 1227, "col_offset": 15, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 1243, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 1245, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1246, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1247, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1247, "col_offset": 20, "nodeName": "be", "type": "Any"}, {"lineNumber": 1268, "col_offset": 22, "nodeName": "get_base_config", "type": "Callable[[], Any]"}, {"lineNumber": 1269, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 1269, "col_offset": 35, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1270, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Union[Dict[nothing, nothing], List[str], str, Any, int]]"}, {"lineNumber": 1270, "col_offset": 37, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1285, "col_offset": 16, "nodeName": "cls", "type": "Type[ExponentialLayer]"}, {"lineNumber": 1286, "col_offset": 8, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1286, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 1287, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 1287, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 1287, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 1289, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 1289, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 1289, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 1307, "col_offset": 15, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1307, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 1329, "col_offset": 59, "nodeName": "phi", "type": "Any"}, {"lineNumber": 1347, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1347, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 1348, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 1348, "col_offset": 30, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1350, "col_offset": 12, "nodeName": "mean", "type": "Callable[[], Any]"}, {"lineNumber": 1351, "col_offset": 13, "nodeName": "sample_size", "type": "int"}, {"lineNumber": 1351, "col_offset": 32, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1352, "col_offset": 41, "nodeName": "new_sample_size", "type": "int"}, {"lineNumber": 1354, "col_offset": 8, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1354, "col_offset": 33, "nodeName": "reciprocal", "type": "Any"}, {"lineNumber": 1354, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 1356, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1394, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1395, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1398, "col_offset": 11, "nodeName": "beta", "type": "Any"}, {"lineNumber": 1403, "col_offset": 8, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1403, "col_offset": 35, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1430, "col_offset": 8, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1430, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1430, "col_offset": 32, "nodeName": "vis", "type": "Any"}, {"lineNumber": 1431, "col_offset": 8, "nodeName": "add_dicts_inplace", "type": "Any"}, {"lineNumber": 1431, "col_offset": 29, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 1460, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 1475, "col_offset": 15, "nodeName": "reciprocal", "type": "Any"}, {"lineNumber": 1490, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1511, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 1512, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 1520, "col_offset": 18, "nodeName": "lower", "type": "Any"}, {"lineNumber": 1523, "col_offset": 15, "nodeName": "IsingLayer", "type": "Type[IsingLayer]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "__class__", "type": "Type[BernoulliLayer]"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "self", "type": "Layer"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "modules", "type": "Dict[str, module]"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "config", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "layer_obj", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "constraints", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "penalties", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "penalties", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "param_name", "type": "nothing"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "penalties", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "self", "type": "Layer"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "Layer"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "self", "type": "Weights"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "self", "type": "Weights"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 298, "col_offset": 46, "nodeName": "n", "type": "int"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 300, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "batch_dot", "type": "Any"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "vis", "type": "Any"}, {"lineNumber": 318, "col_offset": 61, "nodeName": "hid", "type": "Any"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 342, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "len", "type": "Any"}, {"lineNumber": 361, "col_offset": 22, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 400, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 401, "col_offset": 60, "nodeName": "vis", "type": "Any"}, {"lineNumber": 402, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 403, "col_offset": 18, "nodeName": "be", "type": "Any"}, {"lineNumber": 404, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 426, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 429, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 429, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 430, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "phi", "type": "Any"}, {"lineNumber": 430, "col_offset": 43, "nodeName": "square", "type": "Any"}, {"lineNumber": 430, "col_offset": 53, "nodeName": "phi", "type": "Any"}, {"lineNumber": 431, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 431, "col_offset": 23, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 431, "col_offset": 36, "nodeName": "scale", "type": "Any"}, {"lineNumber": 431, "col_offset": 43, "nodeName": "phi", "type": "Any"}, {"lineNumber": 451, "col_offset": 30, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 453, "col_offset": 13, "nodeName": "be", "type": "Any"}, {"lineNumber": 453, "col_offset": 20, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 454, "col_offset": 14, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 456, "col_offset": 34, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 457, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 459, "col_offset": 14, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 460, "col_offset": 14, "nodeName": "n", "type": "int"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 462, "col_offset": 37, "nodeName": "be", "type": "Any"}, {"lineNumber": 462, "col_offset": 44, "nodeName": "x2", "type": "Any"}, {"lineNumber": 482, "col_offset": 14, "nodeName": "be", "type": "Any"}, {"lineNumber": 482, "col_offset": 21, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 483, "col_offset": 23, "nodeName": "float_scalar", "type": "Any"}, {"lineNumber": 483, "col_offset": 58, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 483, "col_offset": 71, "nodeName": "var", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 484, "col_offset": 37, "nodeName": "be", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 505, "col_offset": 34, "nodeName": "be", "type": "Any"}, {"lineNumber": 505, "col_offset": 41, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 505, "col_offset": 58, "nodeName": "weights", "type": "Any"}, {"lineNumber": 506, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 506, "col_offset": 30, "nodeName": "weights", "type": "Any"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 507, "col_offset": 39, "nodeName": "dot", "type": "Any"}, {"lineNumber": 510, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 510, "col_offset": 39, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 511, "col_offset": 39, "nodeName": "beta", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 514, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 515, "col_offset": 35, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 516, "col_offset": 35, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 518, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 519, "col_offset": 38, "nodeName": "exp", "type": "Any"}, {"lineNumber": 520, "col_offset": 38, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 542, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 542, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 543, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 543, "col_offset": 28, "nodeName": "len", "type": "Any"}, {"lineNumber": 546, "col_offset": 19, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 547, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 547, "col_offset": 33, "nodeName": "v_scaled", "type": "Any"}, {"lineNumber": 549, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "vis", "type": "Any"}, {"lineNumber": 552, "col_offset": 35, "nodeName": "mean", "type": "Any"}, {"lineNumber": 552, "col_offset": 43, "nodeName": "diff", "type": "Any"}, {"lineNumber": 553, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 553, "col_offset": 27, "nodeName": "hid", "type": "Any"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 560, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 560, "col_offset": 41, "nodeName": "derivs", "type": "Dict[str, Any]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 562, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 579, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 579, "col_offset": 23, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 580, "col_offset": 30, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 580, "col_offset": 43, "nodeName": "scale", "type": "Any"}, {"lineNumber": 580, "col_offset": 50, "nodeName": "observations", "type": "Any"}, {"lineNumber": 596, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 626, "col_offset": 28, "nodeName": "rand", "type": "Any"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 627, "col_offset": 78, "nodeName": "r", "type": "Any"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 648, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 672, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 672, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 690, "col_offset": 22, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 707, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 712, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 729, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 729, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 751, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 751, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 752, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 770, "col_offset": 30, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 772, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 772, "col_offset": 20, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 773, "col_offset": 13, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 774, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 776, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 816, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 816, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 816, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 816, "col_offset": 59, "nodeName": "weights", "type": "Any"}, {"lineNumber": 817, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 817, "col_offset": 30, "nodeName": "weights", "type": "Any"}, {"lineNumber": 818, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 818, "col_offset": 40, "nodeName": "dot", "type": "Any"}, {"lineNumber": 821, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 821, "col_offset": 40, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 822, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 825, "col_offset": 36, "nodeName": "be", "type": "Any"}, {"lineNumber": 826, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 827, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 849, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 849, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 852, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 852, "col_offset": 33, "nodeName": "vis", "type": "Any"}, {"lineNumber": 853, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 853, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 899, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 899, "col_offset": 23, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 914, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 914, "col_offset": 21, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 915, "col_offset": 12, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 915, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 915, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 935, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 937, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 961, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 961, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 979, "col_offset": 22, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 996, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 999, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 1001, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 1018, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1018, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 1040, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1040, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 1041, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1059, "col_offset": 30, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1061, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 1061, "col_offset": 21, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1062, "col_offset": 13, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1063, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 1065, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1065, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 1105, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1105, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 1105, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 1105, "col_offset": 59, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1106, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1106, "col_offset": 30, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1107, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1107, "col_offset": 40, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1110, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1110, "col_offset": 40, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1111, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 1114, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1114, "col_offset": 36, "nodeName": "be", "type": "Any"}, {"lineNumber": 1115, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1116, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1138, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1138, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 1141, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1141, "col_offset": 33, "nodeName": "vis", "type": "Any"}, {"lineNumber": 1142, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 1142, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 1173, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1188, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1188, "col_offset": 24, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1203, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 1203, "col_offset": 21, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1204, "col_offset": 12, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1204, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1204, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 1205, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1205, "col_offset": 31, "nodeName": "r", "type": "Any"}, {"lineNumber": 1205, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 1224, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1226, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 1227, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1227, "col_offset": 31, "nodeName": "r", "type": "Any"}, {"lineNumber": 1250, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1250, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 1268, "col_offset": 22, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1285, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 1288, "col_offset": 12, "nodeName": "add_penalty", "type": "Callable[[Any], Any]"}, {"lineNumber": 1290, "col_offset": 12, "nodeName": "add_constraint", "type": "Callable[[Any], Any]"}, {"lineNumber": 1307, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1307, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1329, "col_offset": 15, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1329, "col_offset": 52, "nodeName": "phi", "type": "Any"}, {"lineNumber": 1330, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 1330, "col_offset": 23, "nodeName": "logZ", "type": "Any"}, {"lineNumber": 1348, "col_offset": 30, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1350, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1350, "col_offset": 22, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1351, "col_offset": 13, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1352, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 1354, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1354, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 1394, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1394, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1395, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1395, "col_offset": 30, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1396, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1396, "col_offset": 39, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1399, "col_offset": 12, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1399, "col_offset": 39, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 1400, "col_offset": 40, "nodeName": "beta", "type": "Any"}, {"lineNumber": 1403, "col_offset": 8, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1403, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 1404, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1405, "col_offset": 36, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1427, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1427, "col_offset": 24, "nodeName": "len", "type": "Any"}, {"lineNumber": 1430, "col_offset": 24, "nodeName": "be", "type": "Any"}, {"lineNumber": 1431, "col_offset": 8, "nodeName": "be", "type": "Any"}, {"lineNumber": 1431, "col_offset": 37, "nodeName": "get_penalty_gradients", "type": "Callable[[], Any]"}, {"lineNumber": 1475, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1475, "col_offset": 29, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1490, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1490, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1491, "col_offset": 28, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1511, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1513, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 1514, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 1514, "col_offset": 23, "nodeName": "r", "type": "Any"}, {"lineNumber": 1520, "col_offset": 18, "nodeName": "key", "type": "Any"}, {"lineNumber": 1522, "col_offset": 20, "nodeName": "lower", "type": "Any"}, {"lineNumber": 1525, "col_offset": 15, "nodeName": "BernoulliLayer", "type": "Type[BernoulliLayer]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "pk", "type": "nothing"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "penalties", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "ck", "type": "nothing"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "constraints", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "sys", "type": "module"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "__name__", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "constraints", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "int_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "self", "type": "Layer"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "randn", "type": "Any"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "layer", "type": "Weights"}, {"lineNumber": 245, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "layer", "type": "Weights"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "self", "type": "Weights"}, {"lineNumber": 300, "col_offset": 37, "nodeName": "self", "type": "Weights"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 318, "col_offset": 34, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 342, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 381, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "layer", "type": "GaussianLayer"}, {"lineNumber": 383, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 400, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "be", "type": "Any"}, {"lineNumber": 401, "col_offset": 36, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 404, "col_offset": 21, "nodeName": "be", "type": "Any"}, {"lineNumber": 426, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 429, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 429, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 430, "col_offset": 43, "nodeName": "be", "type": "Any"}, {"lineNumber": 431, "col_offset": 23, "nodeName": "be", "type": "Any"}, {"lineNumber": 453, "col_offset": 20, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 454, "col_offset": 14, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 457, "col_offset": 38, "nodeName": "mean", "type": "Any"}, {"lineNumber": 457, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 460, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 482, "col_offset": 21, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 483, "col_offset": 23, "nodeName": "be", "type": "Any"}, {"lineNumber": 483, "col_offset": 41, "nodeName": "shrinkage", "type": "Any"}, {"lineNumber": 483, "col_offset": 58, "nodeName": "be", "type": "Any"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 507, "col_offset": 39, "nodeName": "be", "type": "Any"}, {"lineNumber": 507, "col_offset": 46, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 507, "col_offset": 63, "nodeName": "weights", "type": "Any"}, {"lineNumber": 510, "col_offset": 12, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 510, "col_offset": 39, "nodeName": "be", "type": "Any"}, {"lineNumber": 512, "col_offset": 39, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 515, "col_offset": 35, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 516, "col_offset": 35, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 519, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 519, "col_offset": 45, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 520, "col_offset": 38, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 542, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 542, "col_offset": 24, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 543, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 543, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 547, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 550, "col_offset": 14, "nodeName": "broadcast", "type": "Any"}, {"lineNumber": 550, "col_offset": 51, "nodeName": "vis", "type": "Any"}, {"lineNumber": 552, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 554, "col_offset": 33, "nodeName": "batch_dot", "type": "Any"}, {"lineNumber": 557, "col_offset": 33, "nodeName": "vis", "type": "Any"}, {"lineNumber": 559, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 559, "col_offset": 41, "nodeName": "vis", "type": "Any"}, {"lineNumber": 562, "col_offset": 37, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 579, "col_offset": 23, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 580, "col_offset": 30, "nodeName": "be", "type": "Any"}, {"lineNumber": 626, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 626, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 627, "col_offset": 41, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 646, "col_offset": 32, "nodeName": "rand", "type": "Any"}, {"lineNumber": 648, "col_offset": 16, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 672, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 672, "col_offset": 24, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 710, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 712, "col_offset": 12, "nodeName": "layer", "type": "IsingLayer"}, {"lineNumber": 712, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 729, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 729, "col_offset": 29, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 751, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 751, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 772, "col_offset": 20, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 774, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 774, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 818, "col_offset": 12, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 818, "col_offset": 40, "nodeName": "be", "type": "Any"}, {"lineNumber": 818, "col_offset": 47, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 818, "col_offset": 64, "nodeName": "weights", "type": "Any"}, {"lineNumber": 821, "col_offset": 12, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 821, "col_offset": 40, "nodeName": "be", "type": "Any"}, {"lineNumber": 823, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 826, "col_offset": 36, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 827, "col_offset": 36, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 849, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 849, "col_offset": 24, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 852, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 853, "col_offset": 37, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 884, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 899, "col_offset": 23, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 914, "col_offset": 21, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 915, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 916, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 935, "col_offset": 16, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 935, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 935, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 937, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 937, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 938, "col_offset": 19, "nodeName": "float_tensor", "type": "Any"}, {"lineNumber": 954, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 961, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 961, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 999, "col_offset": 12, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 999, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 1001, "col_offset": 12, "nodeName": "layer", "type": "BernoulliLayer"}, {"lineNumber": 1001, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 1018, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 1018, "col_offset": 29, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1040, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1040, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1061, "col_offset": 21, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1063, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1063, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 1107, "col_offset": 12, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1107, "col_offset": 40, "nodeName": "be", "type": "Any"}, {"lineNumber": 1107, "col_offset": 47, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 1107, "col_offset": 64, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1110, "col_offset": 12, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1110, "col_offset": 40, "nodeName": "be", "type": "Any"}, {"lineNumber": 1112, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1115, "col_offset": 36, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1116, "col_offset": 36, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1138, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1138, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1141, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 1142, "col_offset": 37, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1173, "col_offset": 31, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1188, "col_offset": 24, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1203, "col_offset": 21, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1204, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 1224, "col_offset": 16, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1224, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1224, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 1226, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1226, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 1243, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1250, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1250, "col_offset": 24, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1288, "col_offset": 12, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1288, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 1290, "col_offset": 12, "nodeName": "layer", "type": "ExponentialLayer"}, {"lineNumber": 1290, "col_offset": 34, "nodeName": "k", "type": "Any"}, {"lineNumber": 1307, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1329, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1329, "col_offset": 28, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 1330, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 1350, "col_offset": 22, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1352, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1352, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 1394, "col_offset": 35, "nodeName": "be", "type": "Any"}, {"lineNumber": 1394, "col_offset": 42, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 1394, "col_offset": 59, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1396, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1396, "col_offset": 39, "nodeName": "be", "type": "Any"}, {"lineNumber": 1396, "col_offset": 46, "nodeName": "scaled_units", "type": "Any"}, {"lineNumber": 1396, "col_offset": 63, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1399, "col_offset": 12, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1399, "col_offset": 39, "nodeName": "be", "type": "Any"}, {"lineNumber": 1401, "col_offset": 40, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1404, "col_offset": 36, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1405, "col_offset": 36, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1427, "col_offset": 15, "nodeName": "be", "type": "Any"}, {"lineNumber": 1427, "col_offset": 24, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1431, "col_offset": 37, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1475, "col_offset": 29, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1490, "col_offset": 22, "nodeName": "be", "type": "Any"}, {"lineNumber": 1490, "col_offset": 31, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1491, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 1491, "col_offset": 23, "nodeName": "r", "type": "Any"}, {"lineNumber": 1491, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1511, "col_offset": 16, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1511, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1511, "col_offset": 35, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 1513, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1513, "col_offset": 26, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 1514, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 1522, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 1524, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 1527, "col_offset": 15, "nodeName": "ExponentialLayer", "type": "Type[ExponentialLayer]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "Layer"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "self", "type": "Layer"}, {"lineNumber": 116, "col_offset": 57, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "be", "type": "Any"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 245, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 247, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 247, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "batch_outer", "type": "Any"}, {"lineNumber": 298, "col_offset": 34, "nodeName": "vis", "type": "Any"}, {"lineNumber": 298, "col_offset": 39, "nodeName": "hid", "type": "Any"}, {"lineNumber": 318, "col_offset": 34, "nodeName": "self", "type": "Weights"}, {"lineNumber": 381, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 381, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 383, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 383, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 383, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 401, "col_offset": 36, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 429, "col_offset": 28, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 457, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 460, "col_offset": 18, "nodeName": "be", "type": "Any"}, {"lineNumber": 460, "col_offset": 26, "nodeName": "square", "type": "Any"}, {"lineNumber": 460, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 462, "col_offset": 49, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 507, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 507, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 512, "col_offset": 39, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 519, "col_offset": 45, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 550, "col_offset": 14, "nodeName": "be", "type": "Any"}, {"lineNumber": 550, "col_offset": 27, "nodeName": "int_params", "type": "Dict[str, Any]"}, {"lineNumber": 554, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 555, "col_offset": 33, "nodeName": "hid", "type": "Any"}, {"lineNumber": 556, "col_offset": 33, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 626, "col_offset": 38, "nodeName": "be", "type": "Any"}, {"lineNumber": 626, "col_offset": 47, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 627, "col_offset": 41, "nodeName": "be", "type": "Any"}, {"lineNumber": 627, "col_offset": 49, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 646, "col_offset": 32, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 646, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 646, "col_offset": 51, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 648, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 648, "col_offset": 32, "nodeName": "rand", "type": "Any"}, {"lineNumber": 648, "col_offset": 42, "nodeName": "array_or_shape", "type": "Any"}, {"lineNumber": 710, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 710, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 710, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 712, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 712, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 712, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 729, "col_offset": 29, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 751, "col_offset": 28, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 774, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 818, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 818, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 823, "col_offset": 40, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 884, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 916, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 916, "col_offset": 35, "nodeName": "r", "type": "Any"}, {"lineNumber": 916, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 935, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 937, "col_offset": 16, "nodeName": "self", "type": "IsingLayer"}, {"lineNumber": 938, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 938, "col_offset": 35, "nodeName": "r", "type": "Any"}, {"lineNumber": 999, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 999, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 999, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 1001, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1001, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1001, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 1018, "col_offset": 29, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1040, "col_offset": 28, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1063, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 1107, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 1107, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 1112, "col_offset": 40, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1173, "col_offset": 31, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1224, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 1226, "col_offset": 16, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 1288, "col_offset": 34, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1288, "col_offset": 42, "nodeName": "penalties", "type": "Any"}, {"lineNumber": 1288, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 1290, "col_offset": 37, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1290, "col_offset": 45, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1290, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 1329, "col_offset": 28, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1352, "col_offset": 17, "nodeName": "be", "type": "Any"}, {"lineNumber": 1396, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 1396, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 1401, "col_offset": 40, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1490, "col_offset": 31, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1491, "col_offset": 16, "nodeName": "be", "type": "Any"}, {"lineNumber": 1511, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 1513, "col_offset": 16, "nodeName": "self", "type": "ExponentialLayer"}, {"lineNumber": 1524, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 1526, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 1529, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "self", "type": "BernoulliLayer"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "be", "type": "Any"}, {"lineNumber": 460, "col_offset": 26, "nodeName": "be", "type": "Any"}, {"lineNumber": 462, "col_offset": 49, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 550, "col_offset": 27, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 555, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 556, "col_offset": 33, "nodeName": "be", "type": "Any"}, {"lineNumber": 556, "col_offset": 46, "nodeName": "weights", "type": "Any"}, {"lineNumber": 626, "col_offset": 47, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 627, "col_offset": 49, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 646, "col_offset": 42, "nodeName": "be", "type": "Any"}, {"lineNumber": 648, "col_offset": 32, "nodeName": "self", "type": "GaussianLayer"}, {"lineNumber": 884, "col_offset": 35, "nodeName": "ext_params", "type": "Dict[str, Any]"}, {"lineNumber": 1526, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 556, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 884, "col_offset": 35, "nodeName": "self", "type": "IsingLayer"}]