[{"lineNumber": 15, "col_offset": 0, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "test_conversion", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "test_indexing", "type": "Callable[[], Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "test_transpose", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "test_unsqueeze", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "test_zeros", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "test_ones", "type": "Callable[[], Any]"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "test_diag", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "test_fill_diagonal", "type": "Callable[[], Any]"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "test_scatter", "type": "Callable[[], Any]"}, {"lineNumber": 193, "col_offset": 0, "nodeName": "test_index_select", "type": "Callable[[], Any]"}, {"lineNumber": 214, "col_offset": 0, "nodeName": "test_sign", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 0, "nodeName": "test_clip", "type": "Callable[[], Any]"}, {"lineNumber": 249, "col_offset": 0, "nodeName": "test_clip_inplace", "type": "Callable[[], Any]"}, {"lineNumber": 281, "col_offset": 0, "nodeName": "test_tclip", "type": "Callable[[], Any]"}, {"lineNumber": 310, "col_offset": 0, "nodeName": "test_tclip_inplace", "type": "Callable[[], Any]"}, {"lineNumber": 348, "col_offset": 0, "nodeName": "test_tround", "type": "Callable[[], Any]"}, {"lineNumber": 361, "col_offset": 0, "nodeName": "test_flatten", "type": "Callable[[], Any]"}, {"lineNumber": 383, "col_offset": 0, "nodeName": "test_reshape", "type": "Callable[[], Any]"}, {"lineNumber": 396, "col_offset": 0, "nodeName": "test_mix_inplace", "type": "Callable[[], Any]"}, {"lineNumber": 431, "col_offset": 0, "nodeName": "test_mix", "type": "Callable[[], Any]"}, {"lineNumber": 467, "col_offset": 0, "nodeName": "test_square_mix_inplace", "type": "Callable[[], Any]"}, {"lineNumber": 502, "col_offset": 0, "nodeName": "test_sqrt_div", "type": "Callable[[], Any]"}, {"lineNumber": 517, "col_offset": 0, "nodeName": "test_normalize", "type": "Callable[[], Any]"}, {"lineNumber": 530, "col_offset": 0, "nodeName": "test_norm", "type": "Callable[[], Any]"}, {"lineNumber": 554, "col_offset": 0, "nodeName": "test_tmax", "type": "Callable[[], Any]"}, {"lineNumber": 588, "col_offset": 0, "nodeName": "test_tmin", "type": "Callable[[], Any]"}, {"lineNumber": 622, "col_offset": 0, "nodeName": "test_mean", "type": "Callable[[], Any]"}, {"lineNumber": 656, "col_offset": 0, "nodeName": "test_center", "type": "Callable[[], Any]"}, {"lineNumber": 673, "col_offset": 0, "nodeName": "test_var", "type": "Callable[[], Any]"}, {"lineNumber": 707, "col_offset": 0, "nodeName": "test_std", "type": "Callable[[], Any]"}, {"lineNumber": 741, "col_offset": 0, "nodeName": "test_cov", "type": "Callable[[], Any]"}, {"lineNumber": 757, "col_offset": 0, "nodeName": "test_tsum", "type": "Callable[[], Any]"}, {"lineNumber": 791, "col_offset": 0, "nodeName": "test_tprod", "type": "Callable[[], Any]"}, {"lineNumber": 825, "col_offset": 0, "nodeName": "test_equal", "type": "Callable[[], Any]"}, {"lineNumber": 842, "col_offset": 0, "nodeName": "test_not_equal", "type": "Callable[[], Any]"}, {"lineNumber": 859, "col_offset": 0, "nodeName": "test_greater", "type": "Callable[[], Any]"}, {"lineNumber": 876, "col_offset": 0, "nodeName": "test_greater_equal", "type": "Callable[[], Any]"}, {"lineNumber": 893, "col_offset": 0, "nodeName": "test_lesser", "type": "Callable[[], Any]"}, {"lineNumber": 910, "col_offset": 0, "nodeName": "test_lesser_equal", "type": "Callable[[], Any]"}, {"lineNumber": 927, "col_offset": 0, "nodeName": "test_tany", "type": "Callable[[], Any]"}, {"lineNumber": 978, "col_offset": 0, "nodeName": "test_tall", "type": "Callable[[], Any]"}, {"lineNumber": 1029, "col_offset": 0, "nodeName": "test_maximum", "type": "Callable[[], Any]"}, {"lineNumber": 1044, "col_offset": 0, "nodeName": "test_minimum", "type": "Callable[[], Any]"}, {"lineNumber": 1059, "col_offset": 0, "nodeName": "test_argsort", "type": "Callable[[], Any]"}, {"lineNumber": 1073, "col_offset": 0, "nodeName": "test_sort", "type": "Callable[[], Any]"}, {"lineNumber": 1087, "col_offset": 0, "nodeName": "test_argmax", "type": "Callable[[], Any]"}, {"lineNumber": 1110, "col_offset": 0, "nodeName": "test_argmin", "type": "Callable[[], Any]"}, {"lineNumber": 1133, "col_offset": 0, "nodeName": "test_dot", "type": "Callable[[], Any]"}, {"lineNumber": 1182, "col_offset": 0, "nodeName": "test_outer", "type": "Callable[[], Any]"}, {"lineNumber": 1197, "col_offset": 0, "nodeName": "test_python_broadcast", "type": "Callable[[], Any]"}, {"lineNumber": 1243, "col_offset": 0, "nodeName": "test_broadcast", "type": "Callable[[], Any]"}, {"lineNumber": 1292, "col_offset": 0, "nodeName": "test_add", "type": "Callable[[], Any]"}, {"lineNumber": 1356, "col_offset": 0, "nodeName": "test_add_", "type": "Callable[[], Any]"}, {"lineNumber": 1420, "col_offset": 0, "nodeName": "test_subtract", "type": "Callable[[], Any]"}, {"lineNumber": 1484, "col_offset": 0, "nodeName": "test_subtract_", "type": "Callable[[], Any]"}, {"lineNumber": 1548, "col_offset": 0, "nodeName": "test_multiply", "type": "Callable[[], Any]"}, {"lineNumber": 1612, "col_offset": 0, "nodeName": "test_multiply_", "type": "Callable[[], Any]"}, {"lineNumber": 1676, "col_offset": 0, "nodeName": "test_divide", "type": "Callable[[], Any]"}, {"lineNumber": 1740, "col_offset": 0, "nodeName": "test_divide_", "type": "Callable[[], Any]"}, {"lineNumber": 1804, "col_offset": 0, "nodeName": "test_affine", "type": "Callable[[], Any]"}, {"lineNumber": 1848, "col_offset": 0, "nodeName": "test_quadratic", "type": "Callable[[], Any]"}, {"lineNumber": 1895, "col_offset": 0, "nodeName": "test_inv", "type": "Callable[[], Any]"}, {"lineNumber": 1908, "col_offset": 0, "nodeName": "test_pinv", "type": "Callable[[], Any]"}, {"lineNumber": 1921, "col_offset": 0, "nodeName": "test_qr", "type": "Callable[[], Any]"}, {"lineNumber": 1935, "col_offset": 0, "nodeName": "test_logdet", "type": "Callable[[], Any]"}, {"lineNumber": 1948, "col_offset": 0, "nodeName": "test_batch_dot", "type": "Callable[[], Any]"}, {"lineNumber": 1971, "col_offset": 0, "nodeName": "test_batch_outer", "type": "Callable[[], Any]"}, {"lineNumber": 1991, "col_offset": 0, "nodeName": "test_repeat", "type": "Callable[[], Any]"}, {"lineNumber": 2004, "col_offset": 0, "nodeName": "test_stack", "type": "Callable[[], Any]"}, {"lineNumber": 2038, "col_offset": 0, "nodeName": "test_hstack", "type": "Callable[[], Any]"}, {"lineNumber": 2062, "col_offset": 0, "nodeName": "test_vstack", "type": "Callable[[], Any]"}, {"lineNumber": 2086, "col_offset": 0, "nodeName": "test_trange", "type": "Callable[[], Any]"}, {"lineNumber": 2109, "col_offset": 0, "nodeName": "test_pdist", "type": "Callable[[], Any]"}, {"lineNumber": 2127, "col_offset": 0, "nodeName": "test_energy_distance", "type": "Callable[[], Any]"}, {"lineNumber": 2176, "col_offset": 0, "nodeName": "test_tabs", "type": "Callable[[], Any]"}, {"lineNumber": 2187, "col_offset": 0, "nodeName": "test_exp", "type": "Callable[[], Any]"}, {"lineNumber": 2198, "col_offset": 0, "nodeName": "test_log", "type": "Callable[[], Any]"}, {"lineNumber": 2209, "col_offset": 0, "nodeName": "test_tanh", "type": "Callable[[], Any]"}, {"lineNumber": 2220, "col_offset": 0, "nodeName": "test_expit", "type": "Callable[[], Any]"}, {"lineNumber": 2231, "col_offset": 0, "nodeName": "test_softmax", "type": "Callable[[], Any]"}, {"lineNumber": 2242, "col_offset": 0, "nodeName": "test_reciprocal", "type": "Callable[[], Any]"}, {"lineNumber": 2253, "col_offset": 0, "nodeName": "test_atanh", "type": "Callable[[], Any]"}, {"lineNumber": 2265, "col_offset": 0, "nodeName": "test_sqrt", "type": "Callable[[], Any]"}, {"lineNumber": 2276, "col_offset": 0, "nodeName": "test_square", "type": "Callable[[], Any]"}, {"lineNumber": 2287, "col_offset": 0, "nodeName": "test_tpow", "type": "Callable[[], Any]"}, {"lineNumber": 2299, "col_offset": 0, "nodeName": "test_cosh", "type": "Callable[[], Any]"}, {"lineNumber": 2310, "col_offset": 0, "nodeName": "test_logaddexp", "type": "Callable[[], Any]"}, {"lineNumber": 2324, "col_offset": 0, "nodeName": "test_logcosh", "type": "Callable[[], Any]"}, {"lineNumber": 2335, "col_offset": 0, "nodeName": "test_acosh", "type": "Callable[[], Any]"}, {"lineNumber": 2346, "col_offset": 0, "nodeName": "test_logit", "type": "Callable[[], Any]"}, {"lineNumber": 2357, "col_offset": 0, "nodeName": "test_softplus", "type": "Callable[[], Any]"}, {"lineNumber": 2368, "col_offset": 0, "nodeName": "test_cos", "type": "Callable[[], Any]"}, {"lineNumber": 2379, "col_offset": 0, "nodeName": "test_sin", "type": "Callable[[], Any]"}, {"lineNumber": 2390, "col_offset": 0, "nodeName": "test_erf", "type": "Callable[[], Any]"}, {"lineNumber": 2403, "col_offset": 0, "nodeName": "test_erfinv", "type": "Callable[[], Any]"}, {"lineNumber": 2416, "col_offset": 0, "nodeName": "test_normal_cdf", "type": "Callable[[], Any]"}, {"lineNumber": 2429, "col_offset": 0, "nodeName": "test_normal_inverse_cdf", "type": "Callable[[], Any]"}, {"lineNumber": 2442, "col_offset": 0, "nodeName": "test_normal_pdf", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "pytorchmat", "type": "numpy.ndarray"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "torchpymat", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "py_vs_torch", "type": "bool"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "torch_vs_py", "type": "bool"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "py_torch_x", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "index", "type": "List[int]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "py_index", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "torch_index", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "py_subset", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "torch_subset", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "py_x_T", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "py_torch_x_T", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "torch_y_T", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "torch_py_y_T", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "py_x_col", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "torch_x_col", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "py_x_row", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "torch_x_row", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "py_zeros", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "torch_zeros", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "py_ones", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "torch_ones", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "py_vec", "type": "numpy.ndarray"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "py_diag", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "torch_vec", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "torch_diag", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "py_mult", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "torch_mult", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "value", "type": "float"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "py_inds", "type": "List[int]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "torch_inds", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "py_inds", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "torch_inds", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "py_select", "type": "numpy.ndarray"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "torch_select", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "py_select", "type": "numpy.ndarray"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "torch_select", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "py_sign", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "torch_sign", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "py_round", "type": "numpy.ndarray"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "torch_round", "type": "Any"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "scalar", "type": "float"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "py_scalar", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "torch_scalar", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "py_flatten", "type": "Any"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "torch_flatten", "type": "Any"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "newshape", "type": "Tuple[int, int]"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "py_new", "type": "numpy.ndarray"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "torch_new", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "py_w", "type": "float"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "torch_w", "type": "Any"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "py_w", "type": "numpy.ndarray"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "py_w", "type": "float"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "torch_w", "type": "Any"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "py_w", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "py_w", "type": "float"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "torch_w", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "py_w", "type": "numpy.ndarray"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 509, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 510, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 512, "col_offset": 4, "nodeName": "py_sqrt_div", "type": "numpy.ndarray"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "torch_sqrt_div", "type": "Any"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 525, "col_offset": 4, "nodeName": "py_norm", "type": "numpy.ndarray"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 580, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 593, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 597, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 623, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 643, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 647, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 657, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "py_centered", "type": "numpy.ndarray"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "torch_centered", "type": "Any"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "py_centered", "type": "numpy.ndarray"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "torch_centered", "type": "Any"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 678, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 681, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 688, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 704, "col_offset": 4, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 715, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 716, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 722, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 723, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 728, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 732, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 733, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 737, "col_offset": 4, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 738, "col_offset": 4, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "shape_x", "type": "Tuple[int, int]"}, {"lineNumber": 743, "col_offset": 4, "nodeName": "shape_y", "type": "Tuple[int, int]"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 751, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 753, "col_offset": 4, "nodeName": "py_cov", "type": "numpy.ndarray"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "torch_cov", "type": "Any"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 761, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 762, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 765, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 772, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 778, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 782, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 787, "col_offset": 4, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 799, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 800, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 816, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 821, "col_offset": 4, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 822, "col_offset": 4, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 826, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 829, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 835, "col_offset": 4, "nodeName": "py_eq", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "torch_eq", "type": "Any"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "py_torch_eq", "type": "numpy.ndarray"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 846, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 847, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 849, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "py_neq", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "torch_neq", "type": "Any"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "py_torch_neq", "type": "numpy.ndarray"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 867, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 869, "col_offset": 4, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 871, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 877, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 881, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 886, "col_offset": 4, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 894, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 897, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 898, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 901, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 903, "col_offset": 4, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 904, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 905, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 911, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 917, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 918, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 920, "col_offset": 4, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 921, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 922, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 928, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 937, "col_offset": 4, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 938, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 941, "col_offset": 4, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 948, "col_offset": 4, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 949, "col_offset": 4, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 955, "col_offset": 4, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 956, "col_offset": 4, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 963, "col_offset": 4, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 964, "col_offset": 4, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 965, "col_offset": 4, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 971, "col_offset": 4, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 972, "col_offset": 4, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 973, "col_offset": 4, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 979, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 983, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 985, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 986, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 988, "col_offset": 4, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 989, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 992, "col_offset": 4, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 993, "col_offset": 4, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 998, "col_offset": 4, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 999, "col_offset": 4, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 1000, "col_offset": 4, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 1006, "col_offset": 4, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 1007, "col_offset": 4, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 1008, "col_offset": 4, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 1014, "col_offset": 4, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 1015, "col_offset": 4, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 1016, "col_offset": 4, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 1022, "col_offset": 4, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 1023, "col_offset": 4, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 1024, "col_offset": 4, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 1030, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1033, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1034, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1036, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1037, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1039, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1040, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1045, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1048, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1049, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1051, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1052, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1054, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1055, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1060, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1063, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1064, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1066, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1067, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1068, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 1074, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1077, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1078, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1081, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1082, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 1088, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1091, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1092, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1095, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1096, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1097, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 1103, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1104, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1105, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 1111, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1114, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1115, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1118, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1119, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1120, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 1126, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1127, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1128, "col_offset": 4, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 1135, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1136, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 1139, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1140, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1141, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1142, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1144, "col_offset": 4, "nodeName": "py_dot", "type": "Any"}, {"lineNumber": 1145, "col_offset": 4, "nodeName": "torch_dot", "type": "Any"}, {"lineNumber": 1151, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1152, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 1155, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1156, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1157, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1158, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1160, "col_offset": 4, "nodeName": "py_dot", "type": "Any"}, {"lineNumber": 1161, "col_offset": 4, "nodeName": "torch_dot", "type": "Any"}, {"lineNumber": 1167, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1168, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1171, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1172, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1173, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1174, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1176, "col_offset": 4, "nodeName": "py_dot", "type": "Any"}, {"lineNumber": 1177, "col_offset": 4, "nodeName": "torch_dot", "type": "Any"}, {"lineNumber": 1183, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1184, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 1187, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1188, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1189, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1190, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1192, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1193, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1198, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1199, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1202, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1203, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1206, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1207, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1209, "col_offset": 4, "nodeName": "numpy_product", "type": "Any"}, {"lineNumber": 1210, "col_offset": 4, "nodeName": "broadcast_product", "type": "Any"}, {"lineNumber": 1216, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1217, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1220, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1221, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1223, "col_offset": 4, "nodeName": "numpy_product", "type": "Any"}, {"lineNumber": 1224, "col_offset": 4, "nodeName": "broadcast_product", "type": "Any"}, {"lineNumber": 1230, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1231, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1234, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1235, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1237, "col_offset": 4, "nodeName": "numpy_product", "type": "Any"}, {"lineNumber": 1238, "col_offset": 4, "nodeName": "broadcast_product", "type": "Any"}, {"lineNumber": 1244, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1245, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1248, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1249, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1252, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1253, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1255, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1256, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1258, "col_offset": 4, "nodeName": "py_broadcast", "type": "numpy.ndarray"}, {"lineNumber": 1259, "col_offset": 4, "nodeName": "torch_broadcast", "type": "Any"}, {"lineNumber": 1263, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1264, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1267, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1268, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1270, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1271, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1273, "col_offset": 4, "nodeName": "py_broadcast", "type": "numpy.ndarray"}, {"lineNumber": 1274, "col_offset": 4, "nodeName": "torch_broadcast", "type": "Any"}, {"lineNumber": 1278, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1279, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1282, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1283, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1285, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1286, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1288, "col_offset": 4, "nodeName": "py_broadcast", "type": "numpy.ndarray"}, {"lineNumber": 1289, "col_offset": 4, "nodeName": "torch_broadcast", "type": "Any"}, {"lineNumber": 1293, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1294, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1297, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1298, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1301, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1302, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1304, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1305, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1307, "col_offset": 4, "nodeName": "py_add", "type": "numpy.ndarray"}, {"lineNumber": 1308, "col_offset": 4, "nodeName": "torch_add", "type": "Any"}, {"lineNumber": 1312, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1313, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1316, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1317, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1319, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1320, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1322, "col_offset": 4, "nodeName": "py_add", "type": "numpy.ndarray"}, {"lineNumber": 1323, "col_offset": 4, "nodeName": "torch_add", "type": "Any"}, {"lineNumber": 1327, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1328, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1331, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1332, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1334, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1335, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1337, "col_offset": 4, "nodeName": "py_add", "type": "numpy.ndarray"}, {"lineNumber": 1338, "col_offset": 4, "nodeName": "torch_add", "type": "Any"}, {"lineNumber": 1342, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1343, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1346, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1347, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1349, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1350, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1352, "col_offset": 4, "nodeName": "py_add", "type": "numpy.ndarray"}, {"lineNumber": 1353, "col_offset": 4, "nodeName": "torch_add", "type": "Any"}, {"lineNumber": 1357, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1358, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1361, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1362, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1365, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1366, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1368, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1369, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1376, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1377, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1380, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1381, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1383, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1384, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1391, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1392, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1395, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1396, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1398, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1399, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1406, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1407, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1410, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1411, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1413, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1414, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1421, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1422, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1425, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1426, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1429, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1430, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1432, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1433, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1435, "col_offset": 4, "nodeName": "py_subtract", "type": "numpy.ndarray"}, {"lineNumber": 1436, "col_offset": 4, "nodeName": "torch_subtract", "type": "Any"}, {"lineNumber": 1440, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1441, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1444, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1445, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1447, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1448, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1450, "col_offset": 4, "nodeName": "py_subtact", "type": "numpy.ndarray"}, {"lineNumber": 1451, "col_offset": 4, "nodeName": "torch_subtract", "type": "Any"}, {"lineNumber": 1455, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1456, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1459, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1460, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1462, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1463, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1465, "col_offset": 4, "nodeName": "py_subtract", "type": "numpy.ndarray"}, {"lineNumber": 1466, "col_offset": 4, "nodeName": "torch_subtract", "type": "Any"}, {"lineNumber": 1470, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1471, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1474, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1475, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1477, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1478, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1480, "col_offset": 4, "nodeName": "py_subtract", "type": "numpy.ndarray"}, {"lineNumber": 1481, "col_offset": 4, "nodeName": "torch_subtract", "type": "Any"}, {"lineNumber": 1485, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1486, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1489, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1490, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1493, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1494, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1496, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1497, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1504, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1505, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1508, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1509, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1511, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1512, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1519, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1520, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1523, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1524, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1526, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1527, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1534, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1535, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1538, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1539, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1541, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1542, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1549, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1550, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1553, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1554, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1557, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1558, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1560, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1561, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1563, "col_offset": 4, "nodeName": "py_multiply", "type": "numpy.ndarray"}, {"lineNumber": 1564, "col_offset": 4, "nodeName": "torch_multiply", "type": "Any"}, {"lineNumber": 1568, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1569, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1572, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1573, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1575, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1576, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1578, "col_offset": 4, "nodeName": "py_multiply", "type": "numpy.ndarray"}, {"lineNumber": 1579, "col_offset": 4, "nodeName": "torch_multiply", "type": "Any"}, {"lineNumber": 1583, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1584, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1587, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1588, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1590, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1591, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1593, "col_offset": 4, "nodeName": "py_multiply", "type": "numpy.ndarray"}, {"lineNumber": 1594, "col_offset": 4, "nodeName": "torch_multiply", "type": "Any"}, {"lineNumber": 1598, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1599, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1602, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1603, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1605, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1606, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1608, "col_offset": 4, "nodeName": "py_multiply", "type": "numpy.ndarray"}, {"lineNumber": 1609, "col_offset": 4, "nodeName": "torch_multiply", "type": "Any"}, {"lineNumber": 1613, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1614, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1617, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1618, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1621, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1622, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1624, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1625, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1632, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1633, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1636, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1637, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1639, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1640, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1647, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1648, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1651, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1652, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1654, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1655, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1662, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1663, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1666, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1667, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1669, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1670, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1677, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1678, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1681, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1682, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1685, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1686, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1688, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1689, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1691, "col_offset": 4, "nodeName": "py_divide", "type": "numpy.ndarray"}, {"lineNumber": 1692, "col_offset": 4, "nodeName": "torch_divide", "type": "Any"}, {"lineNumber": 1696, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1697, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1700, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1701, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1703, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1704, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1706, "col_offset": 4, "nodeName": "py_divide", "type": "numpy.ndarray"}, {"lineNumber": 1707, "col_offset": 4, "nodeName": "torch_divide", "type": "Any"}, {"lineNumber": 1711, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1712, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1715, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1716, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1718, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1719, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1721, "col_offset": 4, "nodeName": "py_divide", "type": "numpy.ndarray"}, {"lineNumber": 1722, "col_offset": 4, "nodeName": "torch_divide", "type": "Any"}, {"lineNumber": 1726, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1727, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1730, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1731, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1733, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1734, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1736, "col_offset": 4, "nodeName": "py_divide", "type": "numpy.ndarray"}, {"lineNumber": 1737, "col_offset": 4, "nodeName": "torch_divide", "type": "Any"}, {"lineNumber": 1741, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1742, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1745, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1746, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1749, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1750, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1752, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1753, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1760, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1761, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1764, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1765, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1767, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1768, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1775, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1776, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1779, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1780, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1782, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1783, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1790, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1791, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1794, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1795, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1797, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1798, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1806, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1807, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1808, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1809, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 1810, "col_offset": 4, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1813, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1814, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1815, "col_offset": 4, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1817, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1818, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1819, "col_offset": 4, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1821, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1822, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1827, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1828, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1829, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1830, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1831, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1832, "col_offset": 4, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1835, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1836, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1837, "col_offset": 4, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1839, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1840, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1841, "col_offset": 4, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1843, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1844, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1850, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1851, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1852, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1853, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 1854, "col_offset": 4, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1857, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1858, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1859, "col_offset": 4, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1861, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1862, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1863, "col_offset": 4, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1865, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1866, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1872, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1873, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1874, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1875, "col_offset": 4, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1876, "col_offset": 4, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1877, "col_offset": 4, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1880, "col_offset": 4, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1881, "col_offset": 4, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1882, "col_offset": 4, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1884, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1885, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1886, "col_offset": 4, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1888, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1889, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1896, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1899, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1900, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1902, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1903, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1909, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1912, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1913, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1915, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1916, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1922, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1925, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1926, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1928, "col_offset": 4, "nodeName": "py_res", "type": "Any"}, {"lineNumber": 1929, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1932, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 1936, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1939, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1940, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1942, "col_offset": 4, "nodeName": "py_res", "type": "float"}, {"lineNumber": 1943, "col_offset": 4, "nodeName": "torch_res", "type": "float"}, {"lineNumber": 1949, "col_offset": 4, "nodeName": "L", "type": "int"}, {"lineNumber": 1950, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1951, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1953, "col_offset": 4, "nodeName": "v_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1954, "col_offset": 4, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1955, "col_offset": 4, "nodeName": "h_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1958, "col_offset": 4, "nodeName": "py_v", "type": "numpy.ndarray"}, {"lineNumber": 1959, "col_offset": 4, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1960, "col_offset": 4, "nodeName": "py_h", "type": "numpy.ndarray"}, {"lineNumber": 1962, "col_offset": 4, "nodeName": "torch_v", "type": "Any"}, {"lineNumber": 1963, "col_offset": 4, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1964, "col_offset": 4, "nodeName": "torch_h", "type": "Any"}, {"lineNumber": 1966, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1967, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1972, "col_offset": 4, "nodeName": "L", "type": "int"}, {"lineNumber": 1973, "col_offset": 4, "nodeName": "N", "type": "int"}, {"lineNumber": 1974, "col_offset": 4, "nodeName": "M", "type": "int"}, {"lineNumber": 1976, "col_offset": 4, "nodeName": "v_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1977, "col_offset": 4, "nodeName": "h_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1980, "col_offset": 4, "nodeName": "py_v", "type": "numpy.ndarray"}, {"lineNumber": 1981, "col_offset": 4, "nodeName": "py_h", "type": "numpy.ndarray"}, {"lineNumber": 1983, "col_offset": 4, "nodeName": "torch_v", "type": "Any"}, {"lineNumber": 1984, "col_offset": 4, "nodeName": "torch_h", "type": "Any"}, {"lineNumber": 1986, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1987, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1992, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1993, "col_offset": 4, "nodeName": "n_repeats", "type": "int"}, {"lineNumber": 1996, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1997, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1999, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2000, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2006, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 2009, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2010, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2012, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2013, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2017, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2018, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2023, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2025, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2026, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2028, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2029, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2033, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2034, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2040, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 2043, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2044, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2046, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2047, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2052, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2054, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2055, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2057, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2058, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2064, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 2067, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2068, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2070, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2071, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2076, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2078, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2079, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2081, "col_offset": 4, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2082, "col_offset": 4, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2087, "col_offset": 4, "nodeName": "start", "type": "int"}, {"lineNumber": 2088, "col_offset": 4, "nodeName": "stop", "type": "int"}, {"lineNumber": 2089, "col_offset": 4, "nodeName": "step", "type": "int"}, {"lineNumber": 2091, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2092, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2093, "col_offset": 4, "nodeName": "py_torch_mat", "type": "numpy.ndarray"}, {"lineNumber": 2098, "col_offset": 4, "nodeName": "start", "type": "int"}, {"lineNumber": 2099, "col_offset": 4, "nodeName": "stop", "type": "int"}, {"lineNumber": 2100, "col_offset": 4, "nodeName": "step", "type": "int"}, {"lineNumber": 2102, "col_offset": 4, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2103, "col_offset": 4, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2104, "col_offset": 4, "nodeName": "py_torch_mat", "type": "numpy.ndarray"}, {"lineNumber": 2110, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2117, "col_offset": 4, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 2118, "col_offset": 4, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 2119, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 2120, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 2122, "col_offset": 4, "nodeName": "py_dist", "type": "numpy.ndarray"}, {"lineNumber": 2123, "col_offset": 4, "nodeName": "torch_dist", "type": "Any"}, {"lineNumber": 2128, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2134, "col_offset": 4, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 2135, "col_offset": 4, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 2136, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 2137, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 2139, "col_offset": 4, "nodeName": "py_dist", "type": "float"}, {"lineNumber": 2140, "col_offset": 4, "nodeName": "torch_dist", "type": "float"}, {"lineNumber": 2156, "col_offset": 4, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 2157, "col_offset": 4, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 2158, "col_offset": 4, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 2159, "col_offset": 4, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 2161, "col_offset": 4, "nodeName": "py_dist", "type": "float"}, {"lineNumber": 2162, "col_offset": 4, "nodeName": "torch_dist", "type": "float"}, {"lineNumber": 2177, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2180, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2181, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2183, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2184, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2188, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2191, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2192, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2194, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2195, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2199, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2202, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2203, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2205, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2206, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2210, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2213, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2214, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2216, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2217, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2221, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2224, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2225, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2227, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2228, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2232, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2235, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2236, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2238, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2239, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2243, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2246, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2247, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2249, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2250, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2254, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2256, "col_offset": 4, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 2257, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2259, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2260, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2266, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2269, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2270, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2272, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2273, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2277, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2280, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2281, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2283, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2284, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2288, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2289, "col_offset": 4, "nodeName": "power", "type": "int"}, {"lineNumber": 2292, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2293, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2295, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2296, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2300, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2303, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2304, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2306, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2307, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2311, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2314, "col_offset": 4, "nodeName": "py_x_1", "type": "numpy.ndarray"}, {"lineNumber": 2315, "col_offset": 4, "nodeName": "py_x_2", "type": "numpy.ndarray"}, {"lineNumber": 2317, "col_offset": 4, "nodeName": "torch_x_1", "type": "Any"}, {"lineNumber": 2318, "col_offset": 4, "nodeName": "torch_x_2", "type": "Any"}, {"lineNumber": 2320, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2321, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2325, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2328, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2329, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2331, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2332, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2336, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2339, "col_offset": 4, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 2340, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2342, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2343, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2347, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2350, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2351, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2353, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2354, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2358, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2361, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2362, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2364, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2365, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2369, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2372, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2373, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2375, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2376, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2380, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2383, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2384, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2386, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2387, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2391, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2394, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2395, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2397, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2398, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2404, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2407, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2408, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2410, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2411, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2417, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2420, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2421, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2423, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2424, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2430, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2433, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2434, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2436, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2437, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2443, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2446, "col_offset": 4, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2447, "col_offset": 4, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2449, "col_offset": 4, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2450, "col_offset": 4, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2456, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 17, "col_offset": 45, "nodeName": "torchmat", "type": "Any"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 43, "nodeName": "pymat", "type": "Any"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "pymat", "type": "Any"}, {"lineNumber": 20, "col_offset": 44, "nodeName": "pytorchmat", "type": "numpy.ndarray"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 21, "col_offset": 40, "nodeName": "torchmat", "type": "Any"}, {"lineNumber": 21, "col_offset": 50, "nodeName": "torchpymat", "type": "Any"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "py_vs_torch", "type": "bool"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "torch_vs_py", "type": "bool"}, {"lineNumber": 25, "col_offset": 7, "nodeName": "py_vs_torch", "type": "bool"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "py_torch_x", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "rand", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "torch_py_y", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "int_tensor", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "index", "type": "List[int]"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "int_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 42, "nodeName": "index", "type": "List[int]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "py_subset", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "torch_subset", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "transpose", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "py_x_T", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "py_torch_x_T", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "rand", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "transpose", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "torch_y_T", "type": "Any"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "torch_py_y_T", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "unsqueeze", "type": "Callable[[numpy.ndarray, int], numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "unsqueeze", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "unsqueeze", "type": "Callable[[numpy.ndarray, int], numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "unsqueeze", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "py_x_col", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "torch_x_col", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "py_x_row", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "torch_x_row", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "zeros", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "zeros", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "py_zeros", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "torch_zeros", "type": "Any"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "ones", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "ones", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "py_ones", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "torch_ones", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "diagonal_matrix", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "py_vec", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "diag", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "py_vec", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "py_diag", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "randn", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "diagonal_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "torch_vec", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "diag", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "torch_vec", "type": "Any"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "torch_diag", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "identity", "type": "Callable[[int], numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "n", "type": "int"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "identity", "type": "Callable[[int], Any]"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "n", "type": "int"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "fill_diagonal_", "type": "Callable[[numpy.ndarray, Union[float, int]], numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 37, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "py_mult", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "fill_diagonal_", "type": "Callable[[Any, Union[float, int]], None]"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 170, "col_offset": 43, "nodeName": "fill_value", "type": "float"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "torch_mult", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "zeros", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "zeros", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "int_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "py_inds", "type": "List[int]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "scatter_", "type": "Callable[[numpy.ndarray, numpy.ndarray, Union[float, int]], numpy.ndarray]"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "py_inds", "type": "List[int]"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "value", "type": "float"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "scatter_", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 189, "col_offset": 37, "nodeName": "torch_inds", "type": "Any"}, {"lineNumber": 189, "col_offset": 49, "nodeName": "value", "type": "float"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 198, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "int_tensor", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "int_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 41, "nodeName": "py_inds", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "index_select", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 39, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 205, "col_offset": 47, "nodeName": "py_inds", "type": "Any"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "index_select", "type": "Callable[..., Any]"}, {"lineNumber": 206, "col_offset": 45, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 206, "col_offset": 56, "nodeName": "torch_inds", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "py_select", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "torch_select", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "index_select", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 210, "col_offset": 39, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 210, "col_offset": 47, "nodeName": "py_inds", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "index_select", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 211, "col_offset": 56, "nodeName": "torch_inds", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "py_select", "type": "numpy.ndarray"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "torch_select", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 219, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 222, "col_offset": 14, "nodeName": "sign", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "sign", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "py_sign", "type": "numpy.ndarray"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "torch_sign", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "clip", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 235, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "clip", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 240, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 241, "col_offset": 20, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 245, "col_offset": 17, "nodeName": "clip", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 29, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 254, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 255, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 264, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 264, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 273, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 273, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 274, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "clip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 30, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 42, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 42, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "tclip", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 296, "col_offset": 33, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 296, "col_offset": 41, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 296, "col_offset": 49, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "tclip", "type": "Callable[..., Any]"}, {"lineNumber": 297, "col_offset": 39, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 297, "col_offset": 50, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 297, "col_offset": 61, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 301, "col_offset": 17, "nodeName": "tclip", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 301, "col_offset": 41, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "tclip", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 39, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 302, "col_offset": 50, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 303, "col_offset": 17, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 303, "col_offset": 29, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 306, "col_offset": 17, "nodeName": "tclip", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 306, "col_offset": 33, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "tclip", "type": "Callable[..., Any]"}, {"lineNumber": 307, "col_offset": 39, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 308, "col_offset": 17, "nodeName": "py_clipped", "type": "numpy.ndarray"}, {"lineNumber": 308, "col_offset": 29, "nodeName": "torch_clipped", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 315, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 316, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 42, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 322, "col_offset": 42, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "tclip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 325, "col_offset": 36, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 325, "col_offset": 44, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "tclip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 326, "col_offset": 31, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 326, "col_offset": 42, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 326, "col_offset": 53, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 331, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 331, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 332, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "tclip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 334, "col_offset": 36, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "tclip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 31, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 335, "col_offset": 42, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 337, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 340, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 340, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 341, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "tclip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 343, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "tclip_inplace", "type": "Callable[..., None]"}, {"lineNumber": 344, "col_offset": 31, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 346, "col_offset": 17, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 346, "col_offset": 25, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 353, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 353, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 354, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 354, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "tround", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 356, "col_offset": 32, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 357, "col_offset": 18, "nodeName": "tround", "type": "Callable[[Any], Any]"}, {"lineNumber": 357, "col_offset": 38, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 359, "col_offset": 17, "nodeName": "py_round", "type": "numpy.ndarray"}, {"lineNumber": 359, "col_offset": 27, "nodeName": "torch_round", "type": "Any"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 366, "col_offset": 34, "nodeName": "scalar", "type": "float"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 40, "nodeName": "scalar", "type": "float"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "py_scalar", "type": "Any"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "torch_scalar", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 375, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 375, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 376, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 378, "col_offset": 35, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 379, "col_offset": 20, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 379, "col_offset": 41, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 17, "nodeName": "py_flatten", "type": "Any"}, {"lineNumber": 381, "col_offset": 29, "nodeName": "torch_flatten", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 389, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 391, "col_offset": 13, "nodeName": "reshape", "type": "Callable[[numpy.ndarray, Any], numpy.ndarray]"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 391, "col_offset": 39, "nodeName": "newshape", "type": "Tuple[int, int]"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "reshape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 392, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 392, "col_offset": 48, "nodeName": "newshape", "type": "Tuple[int, int]"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 394, "col_offset": 17, "nodeName": "py_new", "type": "numpy.ndarray"}, {"lineNumber": 394, "col_offset": 25, "nodeName": "torch_new", "type": "Any"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "float_scalar", "type": "Callable[[Union[float, int]], float]"}, {"lineNumber": 401, "col_offset": 34, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 404, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 405, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 407, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 408, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 408, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "mix_inplace", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "py_w", "type": "float"}, {"lineNumber": 410, "col_offset": 32, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 410, "col_offset": 38, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "mix_inplace", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 411, "col_offset": 29, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 411, "col_offset": 38, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 411, "col_offset": 47, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 413, "col_offset": 17, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 413, "col_offset": 23, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 416, "col_offset": 14, "nodeName": "rand", "type": "Callable[[Any], Any]"}, {"lineNumber": 416, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 417, "col_offset": 11, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 417, "col_offset": 39, "nodeName": "torch_w", "type": "Any"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 420, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 420, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 421, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 423, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 423, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 424, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 424, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "mix_inplace", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 426, "col_offset": 26, "nodeName": "py_w", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 32, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 38, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "mix_inplace", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 427, "col_offset": 29, "nodeName": "torch_w", "type": "Any"}, {"lineNumber": 427, "col_offset": 38, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 427, "col_offset": 47, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 429, "col_offset": 17, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 429, "col_offset": 23, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 436, "col_offset": 11, "nodeName": "float_scalar", "type": "Callable[[Union[float, int]], float]"}, {"lineNumber": 436, "col_offset": 34, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 439, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 440, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 442, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 442, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 443, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 443, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "mix_inplace", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 445, "col_offset": 26, "nodeName": "py_w", "type": "float"}, {"lineNumber": 445, "col_offset": 32, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 445, "col_offset": 38, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "mix_inplace", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 446, "col_offset": 29, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 446, "col_offset": 38, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 446, "col_offset": 47, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 448, "col_offset": 17, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 448, "col_offset": 23, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 451, "col_offset": 14, "nodeName": "rand", "type": "Callable[[Any], Any]"}, {"lineNumber": 451, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 452, "col_offset": 11, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 452, "col_offset": 39, "nodeName": "torch_w", "type": "Any"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 455, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 456, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 456, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 458, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 458, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 459, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 459, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "mix_inplace", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 461, "col_offset": 26, "nodeName": "py_w", "type": "numpy.ndarray"}, {"lineNumber": 461, "col_offset": 32, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 461, "col_offset": 38, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "mix_inplace", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 462, "col_offset": 29, "nodeName": "torch_w", "type": "Any"}, {"lineNumber": 462, "col_offset": 38, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 462, "col_offset": 47, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 464, "col_offset": 17, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 464, "col_offset": 23, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 472, "col_offset": 11, "nodeName": "float_scalar", "type": "Callable[[Union[float, int]], float]"}, {"lineNumber": 472, "col_offset": 34, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 475, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 475, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 476, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 476, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 478, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 478, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 479, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 479, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "square_mix_inplace", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 481, "col_offset": 33, "nodeName": "py_w", "type": "float"}, {"lineNumber": 481, "col_offset": 39, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 481, "col_offset": 45, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "square_mix_inplace", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 482, "col_offset": 36, "nodeName": "torch_w", "type": "float"}, {"lineNumber": 482, "col_offset": 45, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 482, "col_offset": 54, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 17, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 484, "col_offset": 23, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 487, "col_offset": 14, "nodeName": "rand", "type": "Callable[[Any], Any]"}, {"lineNumber": 487, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 488, "col_offset": 11, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 488, "col_offset": 39, "nodeName": "torch_w", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 491, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 491, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 492, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 492, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 494, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 494, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 495, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 495, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "square_mix_inplace", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 497, "col_offset": 33, "nodeName": "py_w", "type": "numpy.ndarray"}, {"lineNumber": 497, "col_offset": 39, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 497, "col_offset": 45, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "square_mix_inplace", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 498, "col_offset": 36, "nodeName": "torch_w", "type": "Any"}, {"lineNumber": 498, "col_offset": 45, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 498, "col_offset": 54, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 500, "col_offset": 17, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 500, "col_offset": 23, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 506, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 506, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 509, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 509, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 510, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 510, "col_offset": 40, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 512, "col_offset": 18, "nodeName": "sqrt_div", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 512, "col_offset": 37, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 512, "col_offset": 43, "nodeName": "py_y", "type": "Any"}, {"lineNumber": 513, "col_offset": 21, "nodeName": "sqrt_div", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 513, "col_offset": 43, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 513, "col_offset": 52, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 515, "col_offset": 17, "nodeName": "py_sqrt_div", "type": "numpy.ndarray"}, {"lineNumber": 515, "col_offset": 30, "nodeName": "torch_sqrt_div", "type": "Any"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 521, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 521, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 523, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 523, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 525, "col_offset": 14, "nodeName": "normalize", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 525, "col_offset": 34, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 526, "col_offset": 17, "nodeName": "normalize", "type": "Callable[[Any], Any]"}, {"lineNumber": 526, "col_offset": 40, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 528, "col_offset": 17, "nodeName": "py_norm", "type": "numpy.ndarray"}, {"lineNumber": 528, "col_offset": 26, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 534, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 534, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 535, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 535, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 538, "col_offset": 14, "nodeName": "norm", "type": "Callable[..., Any]"}, {"lineNumber": 538, "col_offset": 29, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 539, "col_offset": 17, "nodeName": "norm", "type": "Callable[..., Any]"}, {"lineNumber": 539, "col_offset": 35, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 541, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 541, "col_offset": 20, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 541, "col_offset": 29, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 545, "col_offset": 14, "nodeName": "norm", "type": "Callable[..., Any]"}, {"lineNumber": 545, "col_offset": 29, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 546, "col_offset": 17, "nodeName": "norm", "type": "Callable[..., Any]"}, {"lineNumber": 546, "col_offset": 35, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 547, "col_offset": 17, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 547, "col_offset": 26, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 550, "col_offset": 14, "nodeName": "norm", "type": "Callable[..., Any]"}, {"lineNumber": 550, "col_offset": 29, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 551, "col_offset": 17, "nodeName": "norm", "type": "Callable[..., Any]"}, {"lineNumber": 551, "col_offset": 35, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 552, "col_offset": 17, "nodeName": "py_norm", "type": "Any"}, {"lineNumber": 552, "col_offset": 26, "nodeName": "torch_norm", "type": "Any"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 558, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 558, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 559, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 562, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 562, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 563, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 563, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 565, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 565, "col_offset": 20, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 565, "col_offset": 28, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 569, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 569, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 570, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 570, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 571, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 574, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 574, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 575, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 575, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 576, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 576, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 579, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 579, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 580, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 580, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 581, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 581, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 584, "col_offset": 13, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 584, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 585, "col_offset": 16, "nodeName": "tmax", "type": "Callable[..., Any]"}, {"lineNumber": 585, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 586, "col_offset": 17, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 586, "col_offset": 25, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 592, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 592, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 593, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 593, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 596, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 596, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 597, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 599, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 599, "col_offset": 20, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 599, "col_offset": 28, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 603, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 603, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 604, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 604, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 605, "col_offset": 17, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 605, "col_offset": 25, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 608, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 608, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 609, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 609, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 610, "col_offset": 17, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 610, "col_offset": 25, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 613, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 613, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 614, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 614, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 615, "col_offset": 17, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 615, "col_offset": 25, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 618, "col_offset": 13, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 618, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 619, "col_offset": 16, "nodeName": "tmin", "type": "Callable[..., Any]"}, {"lineNumber": 619, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 620, "col_offset": 17, "nodeName": "py_min", "type": "Any"}, {"lineNumber": 620, "col_offset": 25, "nodeName": "torch_min", "type": "Any"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 626, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 626, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 627, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 630, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 630, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 631, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 631, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 633, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 633, "col_offset": 20, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 633, "col_offset": 29, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 637, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 637, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 638, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 638, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 639, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 639, "col_offset": 17, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 639, "col_offset": 26, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 642, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 642, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 643, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 643, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 644, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 644, "col_offset": 17, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 644, "col_offset": 26, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 647, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 647, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 648, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 648, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 649, "col_offset": 17, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 649, "col_offset": 26, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 652, "col_offset": 14, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 652, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 653, "col_offset": 17, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 653, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 654, "col_offset": 17, "nodeName": "py_mean", "type": "Any"}, {"lineNumber": 654, "col_offset": 26, "nodeName": "torch_mean", "type": "Any"}, {"lineNumber": 659, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 660, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 660, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 661, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 661, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 664, "col_offset": 18, "nodeName": "center", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 664, "col_offset": 35, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 665, "col_offset": 21, "nodeName": "center", "type": "Callable[..., Any]"}, {"lineNumber": 665, "col_offset": 41, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 666, "col_offset": 17, "nodeName": "py_centered", "type": "numpy.ndarray"}, {"lineNumber": 666, "col_offset": 30, "nodeName": "torch_centered", "type": "Any"}, {"lineNumber": 669, "col_offset": 18, "nodeName": "center", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 669, "col_offset": 35, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 670, "col_offset": 21, "nodeName": "center", "type": "Callable[..., Any]"}, {"lineNumber": 670, "col_offset": 41, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 671, "col_offset": 17, "nodeName": "py_centered", "type": "numpy.ndarray"}, {"lineNumber": 671, "col_offset": 30, "nodeName": "torch_centered", "type": "Any"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 677, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 677, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 678, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 678, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 681, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 681, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 682, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 684, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 684, "col_offset": 20, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 684, "col_offset": 28, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 688, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 688, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 689, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 689, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 690, "col_offset": 17, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 690, "col_offset": 25, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 693, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 693, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 694, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 694, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 695, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 695, "col_offset": 17, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 698, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 698, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 699, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 699, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 700, "col_offset": 17, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 700, "col_offset": 25, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 703, "col_offset": 13, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 703, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 704, "col_offset": 16, "nodeName": "var", "type": "Callable[..., Any]"}, {"lineNumber": 704, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 705, "col_offset": 17, "nodeName": "py_var", "type": "Any"}, {"lineNumber": 705, "col_offset": 25, "nodeName": "torch_var", "type": "Any"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 711, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 711, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 712, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 712, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 715, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 715, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 716, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 716, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 718, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 718, "col_offset": 20, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 718, "col_offset": 28, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 722, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 722, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 723, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 723, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 724, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 724, "col_offset": 17, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 724, "col_offset": 25, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 727, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 727, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 728, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 728, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 729, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 729, "col_offset": 17, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 729, "col_offset": 25, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 732, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 732, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 733, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 733, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 734, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 734, "col_offset": 17, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 734, "col_offset": 25, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 737, "col_offset": 13, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 737, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 738, "col_offset": 16, "nodeName": "std", "type": "Callable[..., Any]"}, {"lineNumber": 738, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 739, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 739, "col_offset": 17, "nodeName": "py_std", "type": "Any"}, {"lineNumber": 739, "col_offset": 25, "nodeName": "torch_std", "type": "Any"}, {"lineNumber": 745, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 747, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 747, "col_offset": 25, "nodeName": "shape_x", "type": "Tuple[int, int]"}, {"lineNumber": 748, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 748, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 750, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 750, "col_offset": 25, "nodeName": "shape_y", "type": "Tuple[int, int]"}, {"lineNumber": 751, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 751, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 753, "col_offset": 13, "nodeName": "cov", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 753, "col_offset": 27, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 753, "col_offset": 33, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 754, "col_offset": 16, "nodeName": "cov", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 754, "col_offset": 33, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 754, "col_offset": 42, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 755, "col_offset": 17, "nodeName": "py_cov", "type": "numpy.ndarray"}, {"lineNumber": 755, "col_offset": 25, "nodeName": "torch_cov", "type": "Any"}, {"lineNumber": 760, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 761, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 761, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 762, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 762, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 765, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 765, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 766, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 766, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 768, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 768, "col_offset": 20, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 768, "col_offset": 29, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 772, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 772, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 773, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 773, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 774, "col_offset": 17, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 774, "col_offset": 26, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 777, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 777, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 778, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 778, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 779, "col_offset": 17, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 779, "col_offset": 26, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 782, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 782, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 783, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 783, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 784, "col_offset": 17, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 784, "col_offset": 26, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 787, "col_offset": 14, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 787, "col_offset": 29, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 788, "col_offset": 17, "nodeName": "tsum", "type": "Callable[..., Any]"}, {"lineNumber": 788, "col_offset": 35, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 789, "col_offset": 17, "nodeName": "py_tsum", "type": "Any"}, {"lineNumber": 789, "col_offset": 26, "nodeName": "torch_tsum", "type": "Any"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 795, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 795, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 796, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 796, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 799, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 799, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 800, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 800, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 802, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 802, "col_offset": 20, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 802, "col_offset": 30, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 806, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 806, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 807, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 807, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 808, "col_offset": 17, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 808, "col_offset": 27, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 811, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 811, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 812, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 812, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 813, "col_offset": 17, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 813, "col_offset": 27, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 816, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 816, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 817, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 817, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 818, "col_offset": 17, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 818, "col_offset": 27, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 821, "col_offset": 15, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 821, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 822, "col_offset": 18, "nodeName": "tprod", "type": "Callable[..., Any]"}, {"lineNumber": 822, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 823, "col_offset": 17, "nodeName": "py_tprod", "type": "Any"}, {"lineNumber": 823, "col_offset": 27, "nodeName": "torch_tprod", "type": "Any"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 829, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 829, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 830, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 830, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 832, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 832, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 833, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 833, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 835, "col_offset": 12, "nodeName": "equal", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 835, "col_offset": 28, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 835, "col_offset": 34, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 836, "col_offset": 15, "nodeName": "equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 836, "col_offset": 34, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 836, "col_offset": 43, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 837, "col_offset": 18, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 837, "col_offset": 46, "nodeName": "torch_eq", "type": "Any"}, {"lineNumber": 839, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 839, "col_offset": 30, "nodeName": "py_eq", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 839, "col_offset": 37, "nodeName": "py_torch_eq", "type": "numpy.ndarray"}, {"lineNumber": 845, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 846, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 846, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 847, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 847, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 849, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 849, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 850, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 850, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 852, "col_offset": 13, "nodeName": "not_equal", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 852, "col_offset": 33, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 852, "col_offset": 39, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 853, "col_offset": 16, "nodeName": "not_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 853, "col_offset": 39, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 853, "col_offset": 48, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 854, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 854, "col_offset": 47, "nodeName": "torch_neq", "type": "Any"}, {"lineNumber": 856, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 856, "col_offset": 30, "nodeName": "py_neq", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 856, "col_offset": 38, "nodeName": "py_torch_neq", "type": "numpy.ndarray"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 863, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 863, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 864, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 864, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 866, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 866, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 867, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 867, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 869, "col_offset": 13, "nodeName": "greater", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 869, "col_offset": 31, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 869, "col_offset": 37, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 870, "col_offset": 16, "nodeName": "greater", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 870, "col_offset": 37, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 870, "col_offset": 46, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 871, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 871, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 873, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 873, "col_offset": 30, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 873, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 880, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 880, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 881, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 881, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 883, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 883, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 884, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 884, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 886, "col_offset": 13, "nodeName": "greater_equal", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 886, "col_offset": 37, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 886, "col_offset": 43, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 887, "col_offset": 16, "nodeName": "greater_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 887, "col_offset": 43, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 887, "col_offset": 52, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 888, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 888, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 890, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 890, "col_offset": 30, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 890, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 897, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 897, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 898, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 898, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 900, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 900, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 901, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 901, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 903, "col_offset": 13, "nodeName": "lesser", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 903, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 903, "col_offset": 36, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 904, "col_offset": 16, "nodeName": "lesser", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 904, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 904, "col_offset": 45, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 905, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 905, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 907, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 907, "col_offset": 30, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 907, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 913, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 914, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 914, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 915, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 915, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 917, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 917, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 918, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 918, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 920, "col_offset": 13, "nodeName": "lesser_equal", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 920, "col_offset": 36, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 920, "col_offset": 42, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 921, "col_offset": 16, "nodeName": "lesser_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 921, "col_offset": 42, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 921, "col_offset": 51, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 922, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 922, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 924, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 924, "col_offset": 30, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 924, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 930, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 931, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 931, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 932, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 932, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 934, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 934, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 935, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 935, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 937, "col_offset": 13, "nodeName": "lesser_equal", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 937, "col_offset": 36, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 937, "col_offset": 42, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 938, "col_offset": 16, "nodeName": "lesser_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 938, "col_offset": 42, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 938, "col_offset": 51, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 941, "col_offset": 13, "nodeName": "tany", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 941, "col_offset": 28, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 942, "col_offset": 16, "nodeName": "tany", "type": "Callable[..., Any]"}, {"lineNumber": 942, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 943, "col_offset": 11, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 943, "col_offset": 21, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 947, "col_offset": 13, "nodeName": "tany", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 947, "col_offset": 28, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 948, "col_offset": 16, "nodeName": "tany", "type": "Callable[..., Any]"}, {"lineNumber": 948, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 949, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 949, "col_offset": 47, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 951, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 951, "col_offset": 30, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 951, "col_offset": 38, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 955, "col_offset": 13, "nodeName": "tany", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 955, "col_offset": 28, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 956, "col_offset": 16, "nodeName": "tany", "type": "Callable[..., Any]"}, {"lineNumber": 956, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 957, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 957, "col_offset": 47, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 959, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 959, "col_offset": 30, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 959, "col_offset": 38, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 963, "col_offset": 13, "nodeName": "tany", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 963, "col_offset": 28, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 964, "col_offset": 16, "nodeName": "tany", "type": "Callable[..., Any]"}, {"lineNumber": 964, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 965, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 965, "col_offset": 47, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 967, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 967, "col_offset": 30, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 967, "col_offset": 38, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 971, "col_offset": 13, "nodeName": "tany", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 971, "col_offset": 28, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 972, "col_offset": 16, "nodeName": "tany", "type": "Callable[..., Any]"}, {"lineNumber": 972, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 973, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 973, "col_offset": 47, "nodeName": "torch_any", "type": "Any"}, {"lineNumber": 975, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 975, "col_offset": 30, "nodeName": "py_any", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 975, "col_offset": 38, "nodeName": "py_torch_any", "type": "numpy.ndarray"}, {"lineNumber": 981, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 982, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 982, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 983, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 983, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 985, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 985, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 986, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 986, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 988, "col_offset": 13, "nodeName": "lesser_equal", "type": "Callable[[numpy.ndarray, numpy.ndarray], Union[bool, numpy.ndarray]]"}, {"lineNumber": 988, "col_offset": 36, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 988, "col_offset": 42, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 989, "col_offset": 16, "nodeName": "lesser_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 989, "col_offset": 42, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 989, "col_offset": 51, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 992, "col_offset": 13, "nodeName": "tall", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 992, "col_offset": 28, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 993, "col_offset": 16, "nodeName": "tall", "type": "Callable[..., Any]"}, {"lineNumber": 993, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 994, "col_offset": 11, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 994, "col_offset": 21, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 998, "col_offset": 13, "nodeName": "tall", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 998, "col_offset": 28, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 999, "col_offset": 16, "nodeName": "tall", "type": "Callable[..., Any]"}, {"lineNumber": 999, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1000, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1000, "col_offset": 47, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 1002, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 1002, "col_offset": 30, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 1002, "col_offset": 38, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 1006, "col_offset": 13, "nodeName": "tall", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 1006, "col_offset": 28, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 1007, "col_offset": 16, "nodeName": "tall", "type": "Callable[..., Any]"}, {"lineNumber": 1007, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1008, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1008, "col_offset": 47, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 1010, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 1010, "col_offset": 30, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 1010, "col_offset": 38, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 1014, "col_offset": 13, "nodeName": "tall", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 1014, "col_offset": 28, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 1015, "col_offset": 16, "nodeName": "tall", "type": "Callable[..., Any]"}, {"lineNumber": 1015, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1016, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1016, "col_offset": 47, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 1018, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 1018, "col_offset": 30, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 1018, "col_offset": 38, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 1022, "col_offset": 13, "nodeName": "tall", "type": "Callable[..., Union[bool, numpy.ndarray]]"}, {"lineNumber": 1022, "col_offset": 28, "nodeName": "py_res", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 1023, "col_offset": 16, "nodeName": "tall", "type": "Callable[..., Any]"}, {"lineNumber": 1023, "col_offset": 34, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1024, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1024, "col_offset": 47, "nodeName": "torch_all", "type": "Any"}, {"lineNumber": 1026, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 1026, "col_offset": 30, "nodeName": "py_all", "type": "Union[bool, numpy.ndarray]"}, {"lineNumber": 1026, "col_offset": 38, "nodeName": "py_torch_all", "type": "numpy.ndarray"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1033, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1033, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1034, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1034, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1036, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1036, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1037, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1037, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1039, "col_offset": 13, "nodeName": "maximum", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1039, "col_offset": 31, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1039, "col_offset": 37, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1040, "col_offset": 16, "nodeName": "maximum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1040, "col_offset": 37, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1040, "col_offset": 46, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1042, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1042, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1042, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1047, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1048, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1048, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1049, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1049, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1051, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1051, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1052, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1052, "col_offset": 40, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1054, "col_offset": 13, "nodeName": "minimum", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1054, "col_offset": 31, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1054, "col_offset": 37, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "minimum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1055, "col_offset": 37, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1055, "col_offset": 46, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 1057, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1057, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1057, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1062, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1063, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1063, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1064, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1064, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1066, "col_offset": 13, "nodeName": "argsort", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1066, "col_offset": 31, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1067, "col_offset": 16, "nodeName": "argsort", "type": "Callable[..., Any]"}, {"lineNumber": 1067, "col_offset": 37, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1068, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1068, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1070, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 1070, "col_offset": 30, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1070, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 1076, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1077, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1077, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1078, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1078, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1080, "col_offset": 13, "nodeName": "sort", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1080, "col_offset": 28, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1081, "col_offset": 16, "nodeName": "sort", "type": "Callable[..., Any]"}, {"lineNumber": 1081, "col_offset": 34, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1082, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1082, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1084, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 1084, "col_offset": 30, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1084, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 1090, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1091, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1091, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1092, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1092, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1095, "col_offset": 13, "nodeName": "argmax", "type": "Callable[[numpy.ndarray, int], numpy.ndarray]"}, {"lineNumber": 1095, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1096, "col_offset": 16, "nodeName": "argmax", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 1096, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1097, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1097, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1099, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 1099, "col_offset": 30, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1099, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 1103, "col_offset": 13, "nodeName": "argmax", "type": "Callable[[numpy.ndarray, int], numpy.ndarray]"}, {"lineNumber": 1103, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1104, "col_offset": 16, "nodeName": "argmax", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 1104, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1105, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1105, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1107, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 1107, "col_offset": 30, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1107, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 1113, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1114, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1114, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1115, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1115, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1118, "col_offset": 13, "nodeName": "argmin", "type": "Callable[[numpy.ndarray, int], numpy.ndarray]"}, {"lineNumber": 1118, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1119, "col_offset": 16, "nodeName": "argmin", "type": "Callable[..., Any]"}, {"lineNumber": 1119, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1120, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1120, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1122, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 1122, "col_offset": 30, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1122, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 1126, "col_offset": 13, "nodeName": "argmin", "type": "Callable[[numpy.ndarray, int], numpy.ndarray]"}, {"lineNumber": 1126, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1127, "col_offset": 16, "nodeName": "argmin", "type": "Callable[..., Any]"}, {"lineNumber": 1127, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 1128, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1128, "col_offset": 47, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1130, "col_offset": 11, "nodeName": "allclose", "type": "Callable[..., bool]"}, {"lineNumber": 1130, "col_offset": 30, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1130, "col_offset": 38, "nodeName": "py_torch_res", "type": "numpy.ndarray"}, {"lineNumber": 1138, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1139, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1139, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1140, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1140, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 1141, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1141, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1142, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1142, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1144, "col_offset": 13, "nodeName": "dot", "type": "Callable[[numpy.ndarray, numpy.ndarray], Any]"}, {"lineNumber": 1144, "col_offset": 27, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1144, "col_offset": 33, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1145, "col_offset": 16, "nodeName": "dot", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1145, "col_offset": 33, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1145, "col_offset": 42, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1147, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1147, "col_offset": 20, "nodeName": "py_dot", "type": "Any"}, {"lineNumber": 1147, "col_offset": 28, "nodeName": "torch_dot", "type": "Any"}, {"lineNumber": 1154, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1155, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1155, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1156, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1156, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 1157, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1157, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1158, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1158, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1160, "col_offset": 13, "nodeName": "dot", "type": "Callable[[numpy.ndarray, numpy.ndarray], Any]"}, {"lineNumber": 1160, "col_offset": 27, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1160, "col_offset": 33, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1161, "col_offset": 16, "nodeName": "dot", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1161, "col_offset": 33, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1161, "col_offset": 42, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1164, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1164, "col_offset": 17, "nodeName": "py_dot", "type": "Any"}, {"lineNumber": 1164, "col_offset": 25, "nodeName": "torch_dot", "type": "Any"}, {"lineNumber": 1170, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1171, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1171, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1172, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1172, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1173, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1173, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1174, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1174, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1176, "col_offset": 13, "nodeName": "dot", "type": "Callable[[numpy.ndarray, numpy.ndarray], Any]"}, {"lineNumber": 1176, "col_offset": 27, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1176, "col_offset": 33, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1177, "col_offset": 16, "nodeName": "dot", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1177, "col_offset": 33, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1177, "col_offset": 42, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1180, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1180, "col_offset": 17, "nodeName": "py_dot", "type": "Any"}, {"lineNumber": 1180, "col_offset": 25, "nodeName": "torch_dot", "type": "Any"}, {"lineNumber": 1186, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1187, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1187, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1188, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1188, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 1189, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1189, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1190, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1190, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1192, "col_offset": 13, "nodeName": "outer", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1192, "col_offset": 29, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1192, "col_offset": 35, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1193, "col_offset": 16, "nodeName": "outer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1193, "col_offset": 35, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1193, "col_offset": 44, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1195, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1195, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1195, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1202, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1203, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1203, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1205, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1206, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1206, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1207, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1207, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1209, "col_offset": 20, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1209, "col_offset": 27, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1210, "col_offset": 58, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1212, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1212, "col_offset": 20, "nodeName": "numpy_product", "type": "Any"}, {"lineNumber": 1212, "col_offset": 35, "nodeName": "broadcast_product", "type": "Any"}, {"lineNumber": 1216, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1217, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1217, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1219, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1220, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1220, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1221, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1221, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1223, "col_offset": 20, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1223, "col_offset": 27, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1224, "col_offset": 58, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1226, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1226, "col_offset": 20, "nodeName": "numpy_product", "type": "Any"}, {"lineNumber": 1226, "col_offset": 35, "nodeName": "broadcast_product", "type": "Any"}, {"lineNumber": 1230, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1231, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1231, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1233, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1234, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1234, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1235, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1235, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1237, "col_offset": 20, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1237, "col_offset": 27, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1238, "col_offset": 58, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1240, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1240, "col_offset": 20, "nodeName": "numpy_product", "type": "Any"}, {"lineNumber": 1240, "col_offset": 35, "nodeName": "broadcast_product", "type": "Any"}, {"lineNumber": 1248, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1249, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1249, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1251, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1252, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1252, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1253, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1253, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1255, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1255, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1256, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1256, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1258, "col_offset": 19, "nodeName": "broadcast", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1258, "col_offset": 39, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1258, "col_offset": 45, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1259, "col_offset": 22, "nodeName": "broadcast", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1259, "col_offset": 45, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1259, "col_offset": 54, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1260, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1260, "col_offset": 17, "nodeName": "py_broadcast", "type": "numpy.ndarray"}, {"lineNumber": 1260, "col_offset": 31, "nodeName": "torch_broadcast", "type": "Any"}, {"lineNumber": 1263, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1264, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1264, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1266, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1267, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1267, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1268, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1268, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1270, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1270, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1271, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1271, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1273, "col_offset": 19, "nodeName": "broadcast", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1273, "col_offset": 39, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1273, "col_offset": 45, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1274, "col_offset": 22, "nodeName": "broadcast", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1274, "col_offset": 45, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1274, "col_offset": 54, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1275, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1275, "col_offset": 17, "nodeName": "py_broadcast", "type": "numpy.ndarray"}, {"lineNumber": 1275, "col_offset": 31, "nodeName": "torch_broadcast", "type": "Any"}, {"lineNumber": 1278, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1279, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1279, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1281, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1282, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1282, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1283, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1283, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1285, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1285, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1286, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1286, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1288, "col_offset": 19, "nodeName": "broadcast", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1288, "col_offset": 39, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1288, "col_offset": 45, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1289, "col_offset": 22, "nodeName": "broadcast", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1289, "col_offset": 45, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1289, "col_offset": 54, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1290, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1290, "col_offset": 17, "nodeName": "py_broadcast", "type": "numpy.ndarray"}, {"lineNumber": 1290, "col_offset": 31, "nodeName": "torch_broadcast", "type": "Any"}, {"lineNumber": 1297, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1298, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1298, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1300, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1301, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1301, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1302, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1302, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1304, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1304, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1305, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1305, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1307, "col_offset": 13, "nodeName": "add", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1307, "col_offset": 27, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1307, "col_offset": 33, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1308, "col_offset": 16, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1308, "col_offset": 33, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1308, "col_offset": 42, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1309, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1309, "col_offset": 17, "nodeName": "py_add", "type": "numpy.ndarray"}, {"lineNumber": 1309, "col_offset": 25, "nodeName": "torch_add", "type": "Any"}, {"lineNumber": 1312, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1313, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1313, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1315, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1316, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1316, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1317, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1317, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1319, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1319, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1320, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1320, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1322, "col_offset": 13, "nodeName": "add", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1322, "col_offset": 27, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1322, "col_offset": 33, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1323, "col_offset": 16, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1323, "col_offset": 33, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1323, "col_offset": 42, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1324, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1324, "col_offset": 17, "nodeName": "py_add", "type": "numpy.ndarray"}, {"lineNumber": 1324, "col_offset": 25, "nodeName": "torch_add", "type": "Any"}, {"lineNumber": 1327, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1328, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1328, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1330, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1331, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1331, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1332, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1332, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1334, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1334, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1335, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1335, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1337, "col_offset": 13, "nodeName": "add", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1337, "col_offset": 27, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1337, "col_offset": 33, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1338, "col_offset": 16, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1338, "col_offset": 33, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1338, "col_offset": 42, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1339, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1339, "col_offset": 17, "nodeName": "py_add", "type": "numpy.ndarray"}, {"lineNumber": 1339, "col_offset": 25, "nodeName": "torch_add", "type": "Any"}, {"lineNumber": 1342, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1342, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1343, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1343, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1345, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1346, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1346, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1347, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1347, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1349, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1349, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1350, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1350, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1352, "col_offset": 13, "nodeName": "add", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1352, "col_offset": 27, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1352, "col_offset": 33, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1353, "col_offset": 16, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1353, "col_offset": 33, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1353, "col_offset": 42, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1354, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1354, "col_offset": 17, "nodeName": "py_add", "type": "numpy.ndarray"}, {"lineNumber": 1354, "col_offset": 25, "nodeName": "torch_add", "type": "Any"}, {"lineNumber": 1361, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1362, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1362, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1364, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1365, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1365, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1366, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1366, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1368, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1368, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1369, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1369, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1371, "col_offset": 4, "nodeName": "add_", "type": "Callable[[numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 1371, "col_offset": 19, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1371, "col_offset": 25, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1372, "col_offset": 4, "nodeName": "add_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1372, "col_offset": 22, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1372, "col_offset": 31, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1373, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1373, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1373, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1376, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1377, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1377, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1379, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1380, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1380, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1381, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1381, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1383, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1383, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1384, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1384, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1386, "col_offset": 4, "nodeName": "add_", "type": "Callable[[numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 1386, "col_offset": 19, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1386, "col_offset": 25, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1387, "col_offset": 4, "nodeName": "add_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1387, "col_offset": 22, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1387, "col_offset": 31, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1388, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1388, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1388, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1391, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1392, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1392, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1394, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1395, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1395, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1396, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1396, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1398, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1398, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1399, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1399, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1401, "col_offset": 4, "nodeName": "add_", "type": "Callable[[numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 1401, "col_offset": 19, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1401, "col_offset": 25, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1402, "col_offset": 4, "nodeName": "add_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1402, "col_offset": 22, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1402, "col_offset": 31, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1403, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1403, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1403, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1406, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1406, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1407, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1407, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1409, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1410, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1410, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1411, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1411, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1413, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1413, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1414, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1414, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1416, "col_offset": 4, "nodeName": "add_", "type": "Callable[[numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 1416, "col_offset": 19, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1416, "col_offset": 25, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1417, "col_offset": 4, "nodeName": "add_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1417, "col_offset": 22, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1417, "col_offset": 31, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1418, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1418, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1418, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1425, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1426, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1426, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1428, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1429, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1429, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1430, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1430, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1432, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1432, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1433, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1433, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1435, "col_offset": 18, "nodeName": "subtract", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1435, "col_offset": 37, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1435, "col_offset": 43, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1436, "col_offset": 21, "nodeName": "subtract", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1436, "col_offset": 43, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1436, "col_offset": 52, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1437, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1437, "col_offset": 17, "nodeName": "py_subtract", "type": "numpy.ndarray"}, {"lineNumber": 1437, "col_offset": 30, "nodeName": "torch_subtract", "type": "Any"}, {"lineNumber": 1440, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1441, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1441, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1443, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1444, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1444, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1445, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1445, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1447, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1447, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1448, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1448, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1450, "col_offset": 17, "nodeName": "subtract", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1450, "col_offset": 36, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1450, "col_offset": 42, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1451, "col_offset": 21, "nodeName": "subtract", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1451, "col_offset": 43, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1451, "col_offset": 52, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1452, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1452, "col_offset": 17, "nodeName": "py_subtact", "type": "numpy.ndarray"}, {"lineNumber": 1452, "col_offset": 29, "nodeName": "torch_subtract", "type": "Any"}, {"lineNumber": 1455, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1456, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1456, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1458, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1459, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1459, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1460, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1460, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1462, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1462, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1463, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1463, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1465, "col_offset": 18, "nodeName": "subtract", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1465, "col_offset": 37, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1465, "col_offset": 43, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1466, "col_offset": 21, "nodeName": "subtract", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1466, "col_offset": 43, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1466, "col_offset": 52, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1467, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1467, "col_offset": 17, "nodeName": "py_subtract", "type": "numpy.ndarray"}, {"lineNumber": 1467, "col_offset": 30, "nodeName": "torch_subtract", "type": "Any"}, {"lineNumber": 1470, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1470, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1471, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1471, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1473, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1474, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1474, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1475, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1475, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1477, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1477, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1478, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1478, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1480, "col_offset": 18, "nodeName": "subtract", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1480, "col_offset": 37, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1480, "col_offset": 43, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1481, "col_offset": 21, "nodeName": "subtract", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1481, "col_offset": 43, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1481, "col_offset": 52, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1482, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1482, "col_offset": 17, "nodeName": "py_subtract", "type": "numpy.ndarray"}, {"lineNumber": 1482, "col_offset": 30, "nodeName": "torch_subtract", "type": "Any"}, {"lineNumber": 1489, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1490, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1490, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1492, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1493, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1493, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1494, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1494, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1496, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1496, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1497, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1497, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1499, "col_offset": 4, "nodeName": "subtract_", "type": "Callable[[numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 1499, "col_offset": 24, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1499, "col_offset": 30, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1500, "col_offset": 4, "nodeName": "subtract_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1500, "col_offset": 27, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1500, "col_offset": 36, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1501, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1501, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1501, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1504, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1505, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1505, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1507, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1508, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1508, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1509, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1509, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1511, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1511, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1512, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1512, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1514, "col_offset": 4, "nodeName": "subtract_", "type": "Callable[[numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 1514, "col_offset": 24, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1514, "col_offset": 30, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1515, "col_offset": 4, "nodeName": "subtract_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1515, "col_offset": 27, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1515, "col_offset": 36, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1516, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1516, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1516, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1519, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1520, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1520, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1522, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1523, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1523, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1524, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1524, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1526, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1526, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1527, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1527, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1529, "col_offset": 4, "nodeName": "subtract_", "type": "Callable[[numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 1529, "col_offset": 24, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1529, "col_offset": 30, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1530, "col_offset": 4, "nodeName": "subtract_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1530, "col_offset": 27, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1530, "col_offset": 36, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1531, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1531, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1531, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1534, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1534, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1535, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1535, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1537, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1538, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1538, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1539, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1539, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1541, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1541, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1542, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1542, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1544, "col_offset": 4, "nodeName": "subtract_", "type": "Callable[[numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 1544, "col_offset": 24, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1544, "col_offset": 30, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1545, "col_offset": 4, "nodeName": "subtract_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1545, "col_offset": 27, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1545, "col_offset": 36, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1546, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1546, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1546, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1553, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1554, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1554, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1556, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1557, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1557, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1558, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1558, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1560, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1560, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1561, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1561, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1563, "col_offset": 18, "nodeName": "multiply", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1563, "col_offset": 37, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1563, "col_offset": 43, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1564, "col_offset": 21, "nodeName": "multiply", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1564, "col_offset": 43, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1564, "col_offset": 52, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1565, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1565, "col_offset": 17, "nodeName": "py_multiply", "type": "numpy.ndarray"}, {"lineNumber": 1565, "col_offset": 30, "nodeName": "torch_multiply", "type": "Any"}, {"lineNumber": 1568, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1569, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1569, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1571, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1572, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1572, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1573, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1573, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1575, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1575, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1576, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1576, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1578, "col_offset": 18, "nodeName": "multiply", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1578, "col_offset": 37, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1578, "col_offset": 43, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1579, "col_offset": 21, "nodeName": "multiply", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1579, "col_offset": 43, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1579, "col_offset": 52, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1580, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1580, "col_offset": 17, "nodeName": "py_multiply", "type": "numpy.ndarray"}, {"lineNumber": 1580, "col_offset": 30, "nodeName": "torch_multiply", "type": "Any"}, {"lineNumber": 1583, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1584, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1584, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1586, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1587, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1587, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1588, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1588, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1590, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1590, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1591, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1591, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1593, "col_offset": 18, "nodeName": "multiply", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1593, "col_offset": 37, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1593, "col_offset": 43, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1594, "col_offset": 21, "nodeName": "multiply", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1594, "col_offset": 43, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1594, "col_offset": 52, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1595, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1595, "col_offset": 17, "nodeName": "py_multiply", "type": "numpy.ndarray"}, {"lineNumber": 1595, "col_offset": 30, "nodeName": "torch_multiply", "type": "Any"}, {"lineNumber": 1598, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1598, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1599, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1599, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1601, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1602, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1602, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1603, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1603, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1605, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1605, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1606, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1606, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1608, "col_offset": 18, "nodeName": "multiply", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1608, "col_offset": 37, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1608, "col_offset": 43, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1609, "col_offset": 21, "nodeName": "multiply", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1609, "col_offset": 43, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1609, "col_offset": 52, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1610, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1610, "col_offset": 17, "nodeName": "py_multiply", "type": "numpy.ndarray"}, {"lineNumber": 1610, "col_offset": 30, "nodeName": "torch_multiply", "type": "Any"}, {"lineNumber": 1617, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1618, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1618, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1620, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1621, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1621, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1622, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1622, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1624, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1624, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1625, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1625, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1627, "col_offset": 4, "nodeName": "multiply_", "type": "Callable[[numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 1627, "col_offset": 24, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1627, "col_offset": 30, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1628, "col_offset": 4, "nodeName": "multiply_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1628, "col_offset": 27, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1628, "col_offset": 36, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1629, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1629, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1629, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1632, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1633, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1633, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1635, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1636, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1636, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1637, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1637, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1639, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1639, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1640, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1640, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1642, "col_offset": 4, "nodeName": "multiply_", "type": "Callable[[numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 1642, "col_offset": 24, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1642, "col_offset": 30, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1643, "col_offset": 4, "nodeName": "multiply_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1643, "col_offset": 27, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1643, "col_offset": 36, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1644, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1644, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1644, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1647, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1648, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1648, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1650, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1651, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1651, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1652, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1652, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1654, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1654, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1655, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1655, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1657, "col_offset": 4, "nodeName": "multiply_", "type": "Callable[[numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 1657, "col_offset": 24, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1657, "col_offset": 30, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1658, "col_offset": 4, "nodeName": "multiply_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1658, "col_offset": 27, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1658, "col_offset": 36, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1659, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1659, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1659, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1662, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1662, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1663, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1663, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1665, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1666, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1666, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1667, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1667, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1669, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1669, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1670, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1670, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1672, "col_offset": 4, "nodeName": "multiply_", "type": "Callable[[numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 1672, "col_offset": 24, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1672, "col_offset": 30, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1673, "col_offset": 4, "nodeName": "multiply_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1673, "col_offset": 27, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1673, "col_offset": 36, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1674, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1674, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1674, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1681, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1682, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1682, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1684, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1685, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1685, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1686, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1686, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1688, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1688, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1689, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1689, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1691, "col_offset": 16, "nodeName": "divide", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1691, "col_offset": 33, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1691, "col_offset": 39, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1692, "col_offset": 19, "nodeName": "divide", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1692, "col_offset": 39, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1692, "col_offset": 48, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1693, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1693, "col_offset": 17, "nodeName": "py_divide", "type": "numpy.ndarray"}, {"lineNumber": 1693, "col_offset": 28, "nodeName": "torch_divide", "type": "Any"}, {"lineNumber": 1696, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1697, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1697, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1699, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1700, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1700, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1701, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1701, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1703, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1703, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1704, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1704, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1706, "col_offset": 16, "nodeName": "divide", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1706, "col_offset": 33, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1706, "col_offset": 39, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1707, "col_offset": 19, "nodeName": "divide", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1707, "col_offset": 39, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1707, "col_offset": 48, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1708, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1708, "col_offset": 17, "nodeName": "py_divide", "type": "numpy.ndarray"}, {"lineNumber": 1708, "col_offset": 28, "nodeName": "torch_divide", "type": "Any"}, {"lineNumber": 1711, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1712, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1712, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1714, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1715, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1715, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1716, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1716, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1718, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1718, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1719, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1719, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1721, "col_offset": 16, "nodeName": "divide", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1721, "col_offset": 33, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1721, "col_offset": 39, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1722, "col_offset": 19, "nodeName": "divide", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1722, "col_offset": 39, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1722, "col_offset": 48, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1723, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1723, "col_offset": 17, "nodeName": "py_divide", "type": "numpy.ndarray"}, {"lineNumber": 1723, "col_offset": 28, "nodeName": "torch_divide", "type": "Any"}, {"lineNumber": 1726, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1726, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1727, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1727, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1729, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1730, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1730, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1731, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1731, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1733, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1733, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1734, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1734, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1736, "col_offset": 16, "nodeName": "divide", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1736, "col_offset": 33, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1736, "col_offset": 39, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1737, "col_offset": 19, "nodeName": "divide", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1737, "col_offset": 39, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1737, "col_offset": 48, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1738, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1738, "col_offset": 17, "nodeName": "py_divide", "type": "numpy.ndarray"}, {"lineNumber": 1738, "col_offset": 28, "nodeName": "torch_divide", "type": "Any"}, {"lineNumber": 1745, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1746, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1746, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1748, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1749, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1749, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1750, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1750, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1752, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1752, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1753, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1753, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1755, "col_offset": 4, "nodeName": "divide_", "type": "Callable[[numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 1755, "col_offset": 22, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1755, "col_offset": 28, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1756, "col_offset": 4, "nodeName": "divide_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1756, "col_offset": 25, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1756, "col_offset": 34, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1757, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1757, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1757, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1760, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1761, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1761, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1763, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1764, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1764, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1765, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1765, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1767, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1767, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1768, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1768, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1770, "col_offset": 4, "nodeName": "divide_", "type": "Callable[[numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 1770, "col_offset": 22, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1770, "col_offset": 28, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1771, "col_offset": 4, "nodeName": "divide_", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 1771, "col_offset": 25, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1771, "col_offset": 34, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1772, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1772, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1772, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1775, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1776, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1776, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1778, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1779, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1779, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1780, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1780, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1782, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1782, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1783, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1783, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1785, "col_offset": 4, "nodeName": "divide", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1785, "col_offset": 21, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1785, "col_offset": 27, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1786, "col_offset": 4, "nodeName": "divide", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1786, "col_offset": 24, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1786, "col_offset": 33, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1787, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1787, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1787, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1790, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1790, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1791, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1791, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1793, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1794, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1794, "col_offset": 24, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1795, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1795, "col_offset": 24, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1797, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1797, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1798, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1798, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1800, "col_offset": 4, "nodeName": "divide", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1800, "col_offset": 21, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1800, "col_offset": 27, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1801, "col_offset": 4, "nodeName": "divide", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1801, "col_offset": 24, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1801, "col_offset": 33, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1802, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1802, "col_offset": 17, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1802, "col_offset": 23, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1808, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1809, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1810, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1810, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1812, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1813, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1813, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1814, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1814, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 1815, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1815, "col_offset": 25, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1817, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1817, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1818, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1818, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1819, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1819, "col_offset": 40, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1821, "col_offset": 13, "nodeName": "affine", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1821, "col_offset": 30, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1821, "col_offset": 36, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1821, "col_offset": 42, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1822, "col_offset": 16, "nodeName": "affine", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1822, "col_offset": 36, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1822, "col_offset": 45, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1822, "col_offset": 54, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1824, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1824, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1824, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1830, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1830, "col_offset": 27, "nodeName": "N", "type": "int"}, {"lineNumber": 1831, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1831, "col_offset": 27, "nodeName": "M", "type": "int"}, {"lineNumber": 1832, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1832, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1834, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1835, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1835, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1836, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1836, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1837, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1837, "col_offset": 25, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1839, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1839, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1840, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1840, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1841, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1841, "col_offset": 40, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1843, "col_offset": 13, "nodeName": "affine", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1843, "col_offset": 30, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1843, "col_offset": 36, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1843, "col_offset": 42, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1844, "col_offset": 16, "nodeName": "affine", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1844, "col_offset": 36, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1844, "col_offset": 45, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1844, "col_offset": 54, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1846, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1846, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1846, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1852, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1853, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1854, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1854, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1856, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1857, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1857, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int]"}, {"lineNumber": 1858, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1858, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int]"}, {"lineNumber": 1859, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1859, "col_offset": 25, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1861, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1861, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1862, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1862, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1863, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1863, "col_offset": 40, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1865, "col_offset": 13, "nodeName": "quadratic", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1865, "col_offset": 33, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1865, "col_offset": 39, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1865, "col_offset": 45, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1866, "col_offset": 16, "nodeName": "quadratic", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1866, "col_offset": 39, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1866, "col_offset": 48, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1866, "col_offset": 57, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1868, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1868, "col_offset": 20, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1868, "col_offset": 28, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1875, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1875, "col_offset": 27, "nodeName": "N", "type": "int"}, {"lineNumber": 1876, "col_offset": 15, "nodeName": "M", "type": "int"}, {"lineNumber": 1876, "col_offset": 18, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1877, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1877, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1879, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1880, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1880, "col_offset": 25, "nodeName": "a_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1881, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1881, "col_offset": 25, "nodeName": "b_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1882, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1882, "col_offset": 25, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1884, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1884, "col_offset": 40, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1885, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1885, "col_offset": 40, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1886, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1886, "col_offset": 40, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1888, "col_offset": 13, "nodeName": "quadratic", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1888, "col_offset": 33, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1888, "col_offset": 39, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1888, "col_offset": 45, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1889, "col_offset": 16, "nodeName": "quadratic", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1889, "col_offset": 39, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 1889, "col_offset": 48, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 1889, "col_offset": 57, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1892, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1892, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1892, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1898, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1899, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1899, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1900, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1900, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1902, "col_offset": 13, "nodeName": "inv", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1902, "col_offset": 27, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1903, "col_offset": 16, "nodeName": "inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 1903, "col_offset": 33, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1906, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1906, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1906, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1911, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1912, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1912, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1913, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1913, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1915, "col_offset": 13, "nodeName": "pinv", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1915, "col_offset": 28, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1916, "col_offset": 16, "nodeName": "pinv", "type": "Callable[[Any], Any]"}, {"lineNumber": 1916, "col_offset": 34, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1919, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1919, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1919, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1924, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1925, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1925, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1926, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1926, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1928, "col_offset": 13, "nodeName": "qr", "type": "Callable[[numpy.ndarray], Any]"}, {"lineNumber": 1928, "col_offset": 26, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1929, "col_offset": 16, "nodeName": "qr", "type": "Callable[[Any], Any]"}, {"lineNumber": 1929, "col_offset": 32, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1932, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1938, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1939, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1939, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1940, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1940, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1942, "col_offset": 13, "nodeName": "logdet", "type": "Callable[[numpy.ndarray], float]"}, {"lineNumber": 1942, "col_offset": 30, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 1943, "col_offset": 16, "nodeName": "logdet", "type": "Callable[[Any], float]"}, {"lineNumber": 1943, "col_offset": 36, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 1946, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 1946, "col_offset": 20, "nodeName": "py_res", "type": "float"}, {"lineNumber": 1946, "col_offset": 28, "nodeName": "torch_res", "type": "float"}, {"lineNumber": 1953, "col_offset": 15, "nodeName": "L", "type": "int"}, {"lineNumber": 1953, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1954, "col_offset": 15, "nodeName": "N", "type": "int"}, {"lineNumber": 1954, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1955, "col_offset": 15, "nodeName": "L", "type": "int"}, {"lineNumber": 1955, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1957, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1958, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1958, "col_offset": 25, "nodeName": "v_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1959, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1959, "col_offset": 25, "nodeName": "W_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1960, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1960, "col_offset": 25, "nodeName": "h_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1962, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1962, "col_offset": 40, "nodeName": "py_v", "type": "numpy.ndarray"}, {"lineNumber": 1963, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1963, "col_offset": 40, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1964, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1964, "col_offset": 40, "nodeName": "py_h", "type": "numpy.ndarray"}, {"lineNumber": 1966, "col_offset": 13, "nodeName": "batch_dot", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1966, "col_offset": 33, "nodeName": "py_v", "type": "numpy.ndarray"}, {"lineNumber": 1966, "col_offset": 39, "nodeName": "py_W", "type": "numpy.ndarray"}, {"lineNumber": 1966, "col_offset": 45, "nodeName": "py_h", "type": "numpy.ndarray"}, {"lineNumber": 1967, "col_offset": 16, "nodeName": "batch_dot", "type": "Callable[..., Any]"}, {"lineNumber": 1967, "col_offset": 39, "nodeName": "torch_v", "type": "Any"}, {"lineNumber": 1967, "col_offset": 48, "nodeName": "torch_W", "type": "Any"}, {"lineNumber": 1967, "col_offset": 57, "nodeName": "torch_h", "type": "Any"}, {"lineNumber": 1969, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1969, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1969, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1976, "col_offset": 15, "nodeName": "L", "type": "int"}, {"lineNumber": 1976, "col_offset": 18, "nodeName": "N", "type": "int"}, {"lineNumber": 1977, "col_offset": 15, "nodeName": "L", "type": "int"}, {"lineNumber": 1977, "col_offset": 18, "nodeName": "M", "type": "int"}, {"lineNumber": 1979, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1980, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1980, "col_offset": 25, "nodeName": "v_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1981, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1981, "col_offset": 25, "nodeName": "h_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1983, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1983, "col_offset": 40, "nodeName": "py_v", "type": "numpy.ndarray"}, {"lineNumber": 1984, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1984, "col_offset": 40, "nodeName": "py_h", "type": "numpy.ndarray"}, {"lineNumber": 1986, "col_offset": 13, "nodeName": "batch_outer", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1986, "col_offset": 35, "nodeName": "py_v", "type": "numpy.ndarray"}, {"lineNumber": 1986, "col_offset": 41, "nodeName": "py_h", "type": "numpy.ndarray"}, {"lineNumber": 1987, "col_offset": 16, "nodeName": "batch_outer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1987, "col_offset": 41, "nodeName": "torch_v", "type": "Any"}, {"lineNumber": 1987, "col_offset": 50, "nodeName": "torch_h", "type": "Any"}, {"lineNumber": 1989, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1989, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 1989, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 1995, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 1996, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 1996, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 1997, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 1997, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1999, "col_offset": 13, "nodeName": "repeat", "type": "Callable[[numpy.ndarray, int], numpy.ndarray]"}, {"lineNumber": 1999, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 1999, "col_offset": 36, "nodeName": "n_repeats", "type": "int"}, {"lineNumber": 2000, "col_offset": 16, "nodeName": "repeat", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 2000, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2000, "col_offset": 45, "nodeName": "n_repeats", "type": "int"}, {"lineNumber": 2002, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2002, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2002, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2008, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2009, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2009, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 2010, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2010, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2012, "col_offset": 13, "nodeName": "stack", "type": "Callable[[Any, int], numpy.ndarray]"}, {"lineNumber": 2013, "col_offset": 16, "nodeName": "stack", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 2015, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2015, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2015, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2017, "col_offset": 13, "nodeName": "stack", "type": "Callable[[Any, int], numpy.ndarray]"}, {"lineNumber": 2018, "col_offset": 16, "nodeName": "stack", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 2020, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2020, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2020, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2025, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2025, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2026, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2026, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2028, "col_offset": 13, "nodeName": "stack", "type": "Callable[[Any, int], numpy.ndarray]"}, {"lineNumber": 2029, "col_offset": 16, "nodeName": "stack", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 2031, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2031, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2031, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2033, "col_offset": 13, "nodeName": "stack", "type": "Callable[[Any, int], numpy.ndarray]"}, {"lineNumber": 2034, "col_offset": 16, "nodeName": "stack", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 2036, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2036, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2036, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2042, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2043, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2043, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 2044, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2044, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2046, "col_offset": 13, "nodeName": "hstack", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2047, "col_offset": 16, "nodeName": "hstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 2049, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2049, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2049, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2054, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2054, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2055, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2055, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2057, "col_offset": 13, "nodeName": "hstack", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2058, "col_offset": 16, "nodeName": "hstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 2060, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2060, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2060, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2066, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2067, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2067, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 2068, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2068, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2070, "col_offset": 13, "nodeName": "vstack", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2071, "col_offset": 16, "nodeName": "vstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 2073, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2073, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2073, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2078, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2078, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2079, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2079, "col_offset": 42, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2081, "col_offset": 13, "nodeName": "vstack", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2082, "col_offset": 16, "nodeName": "vstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 2084, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2084, "col_offset": 17, "nodeName": "py_res", "type": "numpy.ndarray"}, {"lineNumber": 2084, "col_offset": 25, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2091, "col_offset": 13, "nodeName": "trange", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2091, "col_offset": 30, "nodeName": "start", "type": "int"}, {"lineNumber": 2091, "col_offset": 37, "nodeName": "stop", "type": "int"}, {"lineNumber": 2092, "col_offset": 16, "nodeName": "trange", "type": "Callable[..., Any]"}, {"lineNumber": 2092, "col_offset": 36, "nodeName": "start", "type": "int"}, {"lineNumber": 2092, "col_offset": 43, "nodeName": "stop", "type": "int"}, {"lineNumber": 2093, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2093, "col_offset": 47, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2095, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 2095, "col_offset": 20, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2095, "col_offset": 28, "nodeName": "py_torch_mat", "type": "numpy.ndarray"}, {"lineNumber": 2102, "col_offset": 13, "nodeName": "trange", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2102, "col_offset": 30, "nodeName": "start", "type": "int"}, {"lineNumber": 2102, "col_offset": 37, "nodeName": "stop", "type": "int"}, {"lineNumber": 2103, "col_offset": 16, "nodeName": "trange", "type": "Callable[..., Any]"}, {"lineNumber": 2103, "col_offset": 36, "nodeName": "start", "type": "int"}, {"lineNumber": 2103, "col_offset": 43, "nodeName": "stop", "type": "int"}, {"lineNumber": 2104, "col_offset": 19, "nodeName": "to_numpy_array", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2104, "col_offset": 47, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2106, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 2106, "col_offset": 20, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2106, "col_offset": 28, "nodeName": "py_torch_mat", "type": "numpy.ndarray"}, {"lineNumber": 2113, "col_offset": 4, "nodeName": "a_mean", "type": "int"}, {"lineNumber": 2113, "col_offset": 12, "nodeName": "a_scale", "type": "int"}, {"lineNumber": 2114, "col_offset": 4, "nodeName": "b_mean", "type": "int"}, {"lineNumber": 2114, "col_offset": 12, "nodeName": "b_scale", "type": "int"}, {"lineNumber": 2116, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2117, "col_offset": 11, "nodeName": "a_mean", "type": "int"}, {"lineNumber": 2118, "col_offset": 11, "nodeName": "b_mean", "type": "int"}, {"lineNumber": 2119, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2119, "col_offset": 40, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 2120, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2120, "col_offset": 40, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 2122, "col_offset": 14, "nodeName": "pdist", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2122, "col_offset": 30, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 2122, "col_offset": 36, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 2123, "col_offset": 17, "nodeName": "pdist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2123, "col_offset": 36, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 2123, "col_offset": 45, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 2125, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2125, "col_offset": 17, "nodeName": "py_dist", "type": "numpy.ndarray"}, {"lineNumber": 2125, "col_offset": 26, "nodeName": "torch_dist", "type": "Any"}, {"lineNumber": 2130, "col_offset": 4, "nodeName": "a_mean", "type": "int"}, {"lineNumber": 2130, "col_offset": 12, "nodeName": "a_scale", "type": "int"}, {"lineNumber": 2131, "col_offset": 4, "nodeName": "b_mean", "type": "float"}, {"lineNumber": 2131, "col_offset": 12, "nodeName": "b_scale", "type": "float"}, {"lineNumber": 2133, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2134, "col_offset": 11, "nodeName": "a_mean", "type": "int"}, {"lineNumber": 2135, "col_offset": 11, "nodeName": "b_mean", "type": "float"}, {"lineNumber": 2136, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2136, "col_offset": 40, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 2137, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2137, "col_offset": 40, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 2139, "col_offset": 14, "nodeName": "energy_distance", "type": "Callable[[numpy.ndarray, numpy.ndarray], float]"}, {"lineNumber": 2139, "col_offset": 40, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 2139, "col_offset": 46, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 2140, "col_offset": 17, "nodeName": "energy_distance", "type": "Callable[[Any, Any], float]"}, {"lineNumber": 2140, "col_offset": 46, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 2140, "col_offset": 55, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 2142, "col_offset": 11, "nodeName": "py_dist", "type": "float"}, {"lineNumber": 2145, "col_offset": 11, "nodeName": "torch_dist", "type": "float"}, {"lineNumber": 2148, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 2148, "col_offset": 20, "nodeName": "py_dist", "type": "float"}, {"lineNumber": 2148, "col_offset": 29, "nodeName": "torch_dist", "type": "float"}, {"lineNumber": 2152, "col_offset": 4, "nodeName": "a_mean", "type": "int"}, {"lineNumber": 2152, "col_offset": 12, "nodeName": "a_scale", "type": "int"}, {"lineNumber": 2153, "col_offset": 4, "nodeName": "b_mean", "type": "int"}, {"lineNumber": 2153, "col_offset": 12, "nodeName": "b_scale", "type": "int"}, {"lineNumber": 2155, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2156, "col_offset": 11, "nodeName": "a_mean", "type": "int"}, {"lineNumber": 2157, "col_offset": 11, "nodeName": "b_mean", "type": "int"}, {"lineNumber": 2158, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2158, "col_offset": 40, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 2159, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2159, "col_offset": 40, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 2161, "col_offset": 14, "nodeName": "energy_distance", "type": "Callable[[numpy.ndarray, numpy.ndarray], float]"}, {"lineNumber": 2161, "col_offset": 40, "nodeName": "py_a", "type": "Any"}, {"lineNumber": 2161, "col_offset": 46, "nodeName": "py_b", "type": "Any"}, {"lineNumber": 2162, "col_offset": 17, "nodeName": "energy_distance", "type": "Callable[[Any, Any], float]"}, {"lineNumber": 2162, "col_offset": 46, "nodeName": "torch_a", "type": "Any"}, {"lineNumber": 2162, "col_offset": 55, "nodeName": "torch_b", "type": "Any"}, {"lineNumber": 2164, "col_offset": 11, "nodeName": "py_dist", "type": "float"}, {"lineNumber": 2167, "col_offset": 11, "nodeName": "torch_dist", "type": "float"}, {"lineNumber": 2170, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 2170, "col_offset": 20, "nodeName": "py_dist", "type": "float"}, {"lineNumber": 2170, "col_offset": 29, "nodeName": "torch_dist", "type": "float"}, {"lineNumber": 2179, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2180, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2180, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2181, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2181, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2183, "col_offset": 11, "nodeName": "tabs", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2183, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2184, "col_offset": 14, "nodeName": "tabs", "type": "Callable[[Any], Any]"}, {"lineNumber": 2184, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2185, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2185, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2185, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2190, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2191, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2191, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2192, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2192, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2194, "col_offset": 11, "nodeName": "exp", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2194, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2195, "col_offset": 14, "nodeName": "exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 2195, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2196, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2196, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2196, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2201, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2202, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2202, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2203, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2203, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2205, "col_offset": 11, "nodeName": "log", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2205, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2206, "col_offset": 14, "nodeName": "log", "type": "Callable[[Any], Any]"}, {"lineNumber": 2206, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2207, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2207, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2207, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2212, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2213, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2213, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2214, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2214, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2216, "col_offset": 11, "nodeName": "tanh", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2216, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2217, "col_offset": 14, "nodeName": "tanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 2217, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2218, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2218, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2218, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2223, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2224, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2224, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2225, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2225, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2227, "col_offset": 11, "nodeName": "expit", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2227, "col_offset": 25, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2228, "col_offset": 14, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 2228, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2229, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2229, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2229, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2234, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2235, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2235, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2236, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2236, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2238, "col_offset": 11, "nodeName": "softmax", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2238, "col_offset": 27, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2239, "col_offset": 14, "nodeName": "softmax", "type": "Callable[[Any], Any]"}, {"lineNumber": 2239, "col_offset": 33, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2240, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2240, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2240, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2245, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2246, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2246, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2247, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2247, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2249, "col_offset": 11, "nodeName": "reciprocal", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2249, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2250, "col_offset": 14, "nodeName": "reciprocal", "type": "Callable[[Any], Any]"}, {"lineNumber": 2250, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2251, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2251, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2251, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2255, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2257, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2257, "col_offset": 40, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 2259, "col_offset": 11, "nodeName": "atanh", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2259, "col_offset": 25, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 2260, "col_offset": 14, "nodeName": "atanh", "type": "Callable[[Any], Any]"}, {"lineNumber": 2260, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2263, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2263, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2263, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2268, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2269, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2269, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2270, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2270, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2272, "col_offset": 11, "nodeName": "sqrt", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2272, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2273, "col_offset": 14, "nodeName": "sqrt", "type": "Callable[[Any], Any]"}, {"lineNumber": 2273, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2274, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2274, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2274, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2279, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2280, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2280, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2281, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2281, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2283, "col_offset": 11, "nodeName": "square", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2283, "col_offset": 26, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2284, "col_offset": 14, "nodeName": "square", "type": "Callable[[Any], Any]"}, {"lineNumber": 2284, "col_offset": 32, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2285, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2285, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2285, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2291, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2292, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2292, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2293, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2293, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2295, "col_offset": 11, "nodeName": "tpow", "type": "Callable[[numpy.ndarray, Union[float, int]], numpy.ndarray]"}, {"lineNumber": 2295, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2295, "col_offset": 30, "nodeName": "power", "type": "int"}, {"lineNumber": 2296, "col_offset": 14, "nodeName": "tpow", "type": "Callable[[Any, Union[float, int]], Any]"}, {"lineNumber": 2296, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2296, "col_offset": 39, "nodeName": "power", "type": "int"}, {"lineNumber": 2297, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2297, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2297, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2302, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2303, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2303, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2304, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2304, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2306, "col_offset": 11, "nodeName": "cosh", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2306, "col_offset": 24, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2307, "col_offset": 14, "nodeName": "cosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 2307, "col_offset": 30, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2308, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2308, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2308, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2313, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2314, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2314, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2315, "col_offset": 13, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2315, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2317, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2317, "col_offset": 42, "nodeName": "py_x_1", "type": "numpy.ndarray"}, {"lineNumber": 2318, "col_offset": 16, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2318, "col_offset": 42, "nodeName": "py_x_2", "type": "numpy.ndarray"}, {"lineNumber": 2320, "col_offset": 11, "nodeName": "logaddexp", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2320, "col_offset": 29, "nodeName": "py_x_1", "type": "numpy.ndarray"}, {"lineNumber": 2320, "col_offset": 37, "nodeName": "py_x_2", "type": "numpy.ndarray"}, {"lineNumber": 2321, "col_offset": 14, "nodeName": "logaddexp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2321, "col_offset": 35, "nodeName": "torch_x_1", "type": "Any"}, {"lineNumber": 2321, "col_offset": 46, "nodeName": "torch_x_2", "type": "Any"}, {"lineNumber": 2322, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2322, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2322, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2327, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2328, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2328, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2329, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2329, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2331, "col_offset": 11, "nodeName": "logcosh", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2331, "col_offset": 27, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2332, "col_offset": 14, "nodeName": "logcosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 2332, "col_offset": 33, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2333, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2333, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2333, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2338, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2340, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2340, "col_offset": 40, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 2342, "col_offset": 11, "nodeName": "acosh", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2342, "col_offset": 25, "nodeName": "py_x", "type": "Any"}, {"lineNumber": 2343, "col_offset": 14, "nodeName": "acosh", "type": "Callable[[Any], Any]"}, {"lineNumber": 2343, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2344, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2344, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2344, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2349, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2350, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2350, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2351, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2351, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2353, "col_offset": 11, "nodeName": "logit", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2353, "col_offset": 25, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2354, "col_offset": 14, "nodeName": "logit", "type": "Callable[[Any], Any]"}, {"lineNumber": 2354, "col_offset": 31, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2355, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2355, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2355, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2360, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2361, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2361, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2362, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2362, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2364, "col_offset": 11, "nodeName": "softplus", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2364, "col_offset": 28, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2365, "col_offset": 14, "nodeName": "softplus", "type": "Callable[[Any], Any]"}, {"lineNumber": 2365, "col_offset": 34, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2366, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2366, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2366, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2371, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2372, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2372, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2373, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2373, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2375, "col_offset": 11, "nodeName": "cos", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2375, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2376, "col_offset": 14, "nodeName": "cos", "type": "Callable[[Any], Any]"}, {"lineNumber": 2376, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2377, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2377, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2377, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2382, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2383, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2383, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2384, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2384, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2386, "col_offset": 11, "nodeName": "sin", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2386, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2387, "col_offset": 14, "nodeName": "sin", "type": "Callable[[Any], Any]"}, {"lineNumber": 2387, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2388, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2388, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2388, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2393, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2394, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2394, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2395, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2395, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2397, "col_offset": 11, "nodeName": "erf", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2397, "col_offset": 23, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2398, "col_offset": 14, "nodeName": "erf", "type": "Callable[[Any], Any]"}, {"lineNumber": 2398, "col_offset": 29, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2401, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2401, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2401, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2406, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2407, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2407, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2408, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2408, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2410, "col_offset": 11, "nodeName": "erfinv", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2410, "col_offset": 26, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2411, "col_offset": 14, "nodeName": "erfinv", "type": "Callable[[Any], Any]"}, {"lineNumber": 2411, "col_offset": 32, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2414, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2414, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2414, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2419, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2420, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2420, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2421, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2421, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2423, "col_offset": 11, "nodeName": "normal_cdf", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2423, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2424, "col_offset": 14, "nodeName": "normal_cdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 2424, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2427, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2427, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2427, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2432, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2433, "col_offset": 11, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2433, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2434, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2434, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2436, "col_offset": 11, "nodeName": "normal_inverse_cdf", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2436, "col_offset": 38, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2437, "col_offset": 14, "nodeName": "normal_inverse_cdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 2437, "col_offset": 44, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2440, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2440, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2440, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2445, "col_offset": 4, "nodeName": "set_seed", "type": "Callable[..., None]"}, {"lineNumber": 2446, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2446, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2447, "col_offset": 14, "nodeName": "float_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 2447, "col_offset": 40, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2449, "col_offset": 11, "nodeName": "normal_pdf", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 2449, "col_offset": 30, "nodeName": "py_x", "type": "numpy.ndarray"}, {"lineNumber": 2450, "col_offset": 14, "nodeName": "normal_pdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 2450, "col_offset": 36, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 2453, "col_offset": 4, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 2453, "col_offset": 17, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 2453, "col_offset": 23, "nodeName": "torch_y", "type": "Any"}, {"lineNumber": 2457, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 20, "col_offset": 61, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 20, "col_offset": 72, "nodeName": "atol", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 21, "col_offset": 67, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 21, "col_offset": 78, "nodeName": "atol", "type": "Any"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "torch_vs_py", "type": "bool"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 27, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "torch_vs_py", "type": "bool"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "py_index", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "torch_index", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "transpose", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 70, "nodeName": "torch_x", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "transpose", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 65, "nodeName": "py_y", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "shape", "type": "Callable[[numpy.ndarray], Any]"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "py_x_col", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "shape", "type": "Callable[[numpy.ndarray], Any]"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "torch_x_col", "type": "Any"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "n", "type": "int"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "n", "type": "int"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "n", "type": "int"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "n", "type": "int"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 222, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 241, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 245, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 264, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 273, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 286, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 289, "col_offset": 13, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 301, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 306, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 306, "col_offset": 47, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 307, "col_offset": 56, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 315, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 318, "col_offset": 13, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 321, "col_offset": 13, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 321, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 331, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 340, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 343, "col_offset": 42, "nodeName": "py_max", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 344, "col_offset": 48, "nodeName": "torch_max", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 353, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 354, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 357, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 375, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 379, "col_offset": 20, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 391, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 408, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 416, "col_offset": 14, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 417, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 420, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 423, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 424, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 436, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 440, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 442, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 443, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 451, "col_offset": 14, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 452, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 456, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 458, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 459, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 472, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 475, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 476, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 478, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 479, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 487, "col_offset": 14, "nodeName": "torch_rand", "type": "module"}, {"lineNumber": 488, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 491, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 492, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 494, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 495, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 506, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 507, "col_offset": 11, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 507, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 509, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 510, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 512, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 513, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 521, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 523, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 525, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 526, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 534, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 535, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 538, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 539, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 545, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 546, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 550, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 551, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 558, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 562, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 563, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 569, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 570, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 574, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 575, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 579, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 580, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 584, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 585, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 592, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 593, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 596, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 603, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 604, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 608, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 609, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 613, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 614, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 618, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 619, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 626, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 630, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 631, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 637, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 638, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 642, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 643, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 647, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 648, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 652, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 653, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 659, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 660, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 661, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 664, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 665, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 669, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 670, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 677, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 678, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 681, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 688, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 689, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 693, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 694, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 698, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 699, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 703, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 704, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 711, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 712, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 715, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 716, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 722, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 723, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 727, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 728, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 732, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 733, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 737, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 738, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 745, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 747, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 748, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 750, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 751, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 753, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 754, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 760, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 761, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 762, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 765, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 766, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 772, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 773, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 777, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 778, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 782, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 783, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 787, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 788, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 795, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 796, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 799, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 800, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 806, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 807, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 811, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 812, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 816, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 817, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 821, "col_offset": 15, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 822, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 829, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 830, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 832, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 833, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 835, "col_offset": 12, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 836, "col_offset": 15, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 837, "col_offset": 18, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 839, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 845, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 846, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 847, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 849, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 850, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 852, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 853, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 854, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 856, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 863, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 864, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 866, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 867, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 869, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 870, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 871, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 873, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 880, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 881, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 883, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 884, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 886, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 887, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 888, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 890, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 897, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 898, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 900, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 901, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 903, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 904, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 905, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 907, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 913, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 914, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 915, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 917, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 918, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 920, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 921, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 922, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 924, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 930, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 931, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 932, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 934, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 935, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 937, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 938, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 941, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 942, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 947, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 948, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 949, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 951, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 955, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 956, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 957, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 959, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 963, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 964, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 965, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 967, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 971, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 972, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 973, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 975, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 981, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 982, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 983, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 985, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 986, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 988, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 989, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 992, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 993, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 998, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 999, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1000, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1002, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1006, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1007, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1008, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1010, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1014, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1015, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1016, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1018, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1022, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1023, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1024, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1026, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1033, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1034, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1036, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1037, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1039, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1040, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1047, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1048, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1049, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1051, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1052, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1054, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1062, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1063, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1064, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1066, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1067, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1068, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1070, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1076, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1077, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1078, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1080, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1081, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1082, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1084, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1090, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1091, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1092, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1095, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1096, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1097, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1099, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1103, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1104, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1105, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1107, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1113, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1114, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1115, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1118, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1119, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1120, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1122, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1126, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1127, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1128, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1130, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1138, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1139, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1140, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1141, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1142, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1144, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1145, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1154, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1155, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1156, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1157, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1158, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1160, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1161, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1170, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1171, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1172, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1173, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1174, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1176, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1177, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1186, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1187, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1188, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1189, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1190, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1192, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1193, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1205, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1206, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1207, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1210, "col_offset": 24, "nodeName": "broadcast", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1210, "col_offset": 44, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1210, "col_offset": 50, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1219, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1220, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1221, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1224, "col_offset": 24, "nodeName": "broadcast", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1224, "col_offset": 44, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1224, "col_offset": 50, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1233, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1234, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1235, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1238, "col_offset": 24, "nodeName": "broadcast", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1238, "col_offset": 44, "nodeName": "py_a", "type": "numpy.ndarray"}, {"lineNumber": 1238, "col_offset": 50, "nodeName": "py_b", "type": "numpy.ndarray"}, {"lineNumber": 1251, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1252, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1253, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1255, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1256, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1258, "col_offset": 19, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1259, "col_offset": 22, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1266, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1267, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1268, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1270, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1271, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1273, "col_offset": 19, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1274, "col_offset": 22, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1281, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1282, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1283, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1285, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1286, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1288, "col_offset": 19, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1289, "col_offset": 22, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1300, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1301, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1302, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1304, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1305, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1307, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1308, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1315, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1316, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1317, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1319, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1320, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1322, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1323, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1330, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1331, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1332, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1334, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1335, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1337, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1338, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1345, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1346, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1347, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1349, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1350, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1352, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1353, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1364, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1365, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1366, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1368, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1369, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1371, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1372, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1379, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1380, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1381, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1383, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1384, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1386, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1387, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1394, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1395, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1396, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1398, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1399, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1401, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1402, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1409, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1410, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1411, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1413, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1414, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1416, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1417, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1428, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1429, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1430, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1432, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1433, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1435, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1436, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1443, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1444, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1445, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1447, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1448, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1450, "col_offset": 17, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1451, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1458, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1459, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1460, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1462, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1463, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1465, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1466, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1473, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1474, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1475, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1477, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1478, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1480, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1481, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1492, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1493, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1494, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1496, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1497, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1499, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1500, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1507, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1508, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1509, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1511, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1512, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1514, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1515, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1522, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1523, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1524, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1526, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1527, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1529, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1530, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1537, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1538, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1539, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1541, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1542, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1544, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1545, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1556, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1557, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1558, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1560, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1561, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1563, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1564, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1571, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1572, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1573, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1575, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1576, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1578, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1579, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1586, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1587, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1588, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1590, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1591, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1593, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1594, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1601, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1602, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1603, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1605, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1606, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1608, "col_offset": 18, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1609, "col_offset": 21, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1620, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1621, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1622, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1624, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1625, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1627, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1628, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1635, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1636, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1637, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1639, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1640, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1642, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1643, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1650, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1651, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1652, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1654, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1655, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1657, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1658, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1665, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1666, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1667, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1669, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1670, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1672, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1673, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1684, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1685, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1686, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1688, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1689, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1691, "col_offset": 16, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1692, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1699, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1700, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1701, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1703, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1704, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1706, "col_offset": 16, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1707, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1714, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1715, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1716, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1718, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1719, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1721, "col_offset": 16, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1722, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1729, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1730, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1731, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1733, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1734, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1736, "col_offset": 16, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1737, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1748, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1749, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1750, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1752, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1753, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1755, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1756, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1763, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1764, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1765, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1767, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1768, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1770, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1771, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1778, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1779, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1780, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1782, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1783, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1785, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1786, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1793, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1794, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1795, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1797, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1798, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1800, "col_offset": 4, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1801, "col_offset": 4, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1812, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1813, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1814, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1815, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1817, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1818, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1819, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1821, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1822, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1834, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1835, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1836, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1837, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1839, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1840, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1841, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1843, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1844, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1856, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1857, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1858, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1859, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1861, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1862, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1863, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1865, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1866, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1879, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1880, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1881, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1882, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1884, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1885, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1886, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1888, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1889, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1898, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1899, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1900, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1902, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1903, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1911, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1912, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1913, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1915, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1916, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1924, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1925, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1926, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1928, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1929, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1933, "col_offset": 8, "nodeName": "assert_close", "type": "Callable[..., Any]"}, {"lineNumber": 1938, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1939, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1940, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1942, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1943, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1957, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1958, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1959, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1960, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1962, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1963, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1964, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1966, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1967, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1979, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1980, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1981, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1983, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1984, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1986, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1987, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1995, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1996, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1997, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1999, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 2000, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2008, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2009, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2010, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2012, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 2012, "col_offset": 30, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2012, "col_offset": 38, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2013, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2013, "col_offset": 36, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2013, "col_offset": 47, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2017, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 2017, "col_offset": 30, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2017, "col_offset": 38, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2018, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2018, "col_offset": 36, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2018, "col_offset": 47, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2025, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2026, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2028, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 2028, "col_offset": 30, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2028, "col_offset": 38, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2029, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2029, "col_offset": 36, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2029, "col_offset": 47, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2033, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 2033, "col_offset": 30, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2033, "col_offset": 38, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2034, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2034, "col_offset": 36, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2034, "col_offset": 47, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2042, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2043, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2044, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2046, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 2046, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2046, "col_offset": 39, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2047, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2047, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2047, "col_offset": 48, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2054, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2055, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2057, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 2057, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2057, "col_offset": 39, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2058, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2058, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2058, "col_offset": 48, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2066, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2067, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2068, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2070, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 2070, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2070, "col_offset": 39, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2071, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2071, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2071, "col_offset": 48, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2078, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2079, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2081, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 2081, "col_offset": 31, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2081, "col_offset": 39, "nodeName": "py_mat", "type": "numpy.ndarray"}, {"lineNumber": 2082, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2082, "col_offset": 37, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2082, "col_offset": 48, "nodeName": "torch_mat", "type": "Any"}, {"lineNumber": 2091, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 2091, "col_offset": 48, "nodeName": "step", "type": "int"}, {"lineNumber": 2092, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2092, "col_offset": 54, "nodeName": "step", "type": "int"}, {"lineNumber": 2093, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2102, "col_offset": 13, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 2102, "col_offset": 48, "nodeName": "step", "type": "int"}, {"lineNumber": 2103, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2103, "col_offset": 54, "nodeName": "step", "type": "int"}, {"lineNumber": 2104, "col_offset": 19, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2116, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2117, "col_offset": 20, "nodeName": "a_scale", "type": "int"}, {"lineNumber": 2118, "col_offset": 20, "nodeName": "b_scale", "type": "int"}, {"lineNumber": 2119, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2120, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2122, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 2123, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2133, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2134, "col_offset": 20, "nodeName": "a_scale", "type": "int"}, {"lineNumber": 2135, "col_offset": 20, "nodeName": "b_scale", "type": "float"}, {"lineNumber": 2136, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2137, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2139, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 2140, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2155, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2156, "col_offset": 20, "nodeName": "a_scale", "type": "int"}, {"lineNumber": 2157, "col_offset": 20, "nodeName": "b_scale", "type": "int"}, {"lineNumber": 2158, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2159, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2161, "col_offset": 14, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 2162, "col_offset": 17, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2179, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2180, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2181, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2183, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2184, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2190, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2191, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2192, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2194, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2195, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2201, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2202, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2203, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2205, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2206, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2212, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2213, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2214, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2216, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2217, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2223, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2224, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2225, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2227, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2228, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2234, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2235, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2236, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2238, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2239, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2245, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2246, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2247, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2249, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2250, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2255, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2257, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2259, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2260, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2268, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2269, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2270, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2272, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2273, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2279, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2280, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2281, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2283, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2284, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2291, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2292, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2293, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2295, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2296, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2302, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2303, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2304, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2306, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2307, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2313, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2314, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2315, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2317, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2318, "col_offset": 16, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2320, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2321, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2327, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2328, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2329, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2331, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2332, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2338, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2339, "col_offset": 15, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2339, "col_offset": 28, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2340, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2342, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2343, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2349, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2350, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2351, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2353, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2354, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2360, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2361, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2362, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2364, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2365, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2371, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2372, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2373, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2375, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2376, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2382, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2383, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2384, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2386, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2387, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2393, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2394, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2395, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2397, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2398, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2406, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2407, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2408, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2410, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2411, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2419, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2420, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2421, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2423, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2424, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2432, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2433, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2434, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2436, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2437, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2445, "col_offset": 4, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2446, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2447, "col_offset": 14, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 2449, "col_offset": 11, "nodeName": "py_func", "type": "module"}, {"lineNumber": 2450, "col_offset": 14, "nodeName": "torch_func", "type": "module"}, {"lineNumber": 2457, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 2457, "col_offset": 17, "nodeName": "__file__", "type": "str"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "py_vs_torch", "type": "bool"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 30, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 33, "col_offset": 63, "nodeName": "name", "type": "Any"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 120, "col_offset": 65, "nodeName": "transpose", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 88, "nodeName": "torch_x_row", "type": "Any"}, {"lineNumber": 289, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 318, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 321, "col_offset": 13, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 507, "col_offset": 11, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 1210, "col_offset": 24, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1224, "col_offset": 24, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1238, "col_offset": 24, "nodeName": "py_matrix", "type": "module"}, {"lineNumber": 1933, "col_offset": 21, "nodeName": "py_res", "type": "Any"}, {"lineNumber": 1933, "col_offset": 32, "nodeName": "torch_res", "type": "Any"}, {"lineNumber": 2117, "col_offset": 30, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2117, "col_offset": 44, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2118, "col_offset": 30, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2118, "col_offset": 44, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2134, "col_offset": 30, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2134, "col_offset": 44, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2135, "col_offset": 30, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2135, "col_offset": 44, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2156, "col_offset": 30, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2156, "col_offset": 44, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2157, "col_offset": 30, "nodeName": "randn", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2157, "col_offset": 44, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2256, "col_offset": 15, "nodeName": "rand", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 2256, "col_offset": 28, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 2339, "col_offset": 15, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "py_x_row", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 65, "nodeName": "torch_matrix", "type": "module"}, {"lineNumber": 1933, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 1933, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 2117, "col_offset": 30, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2118, "col_offset": 30, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2134, "col_offset": 30, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2135, "col_offset": 30, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2156, "col_offset": 30, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2157, "col_offset": 30, "nodeName": "py_rand", "type": "module"}, {"lineNumber": 2256, "col_offset": 15, "nodeName": "py_rand", "type": "module"}]