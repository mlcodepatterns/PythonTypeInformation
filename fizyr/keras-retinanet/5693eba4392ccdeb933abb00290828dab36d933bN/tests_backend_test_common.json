[{"lineNumber": 26, "col_offset": 0, "nodeName": "test_bbox_transform_inv", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "test_shift", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "disable_tensorflow_v2_behavior", "type": "Callable[[], None]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "stride", "type": "int"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "backend", "type": "module"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "variable", "type": "Any"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "boxes", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "variable", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "deltas", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "bbox_transform_inv", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 56, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 62, "col_offset": 63, "nodeName": "deltas", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "eval", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "result", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "result", "type": "Any"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "shift", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "stride", "type": "int"}, {"lineNumber": 124, "col_offset": 58, "nodeName": "anchors", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "eval", "type": "Any"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "result", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 127, "col_offset": 42, "nodeName": "expected", "type": "List[List[int]]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "keras_retinanet", "type": "module"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "backend", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "backend", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "backend", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "backend", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "keras", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "keras_retinanet", "type": "module"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "keras", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "floatx", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "keras_retinanet", "type": "module"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "keras", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "backend", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "keras", "type": "Any"}]