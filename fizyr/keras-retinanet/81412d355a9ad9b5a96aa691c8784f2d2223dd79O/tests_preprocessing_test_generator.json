[{"lineNumber": 24, "col_offset": 22, "nodeName": "Generator", "type": "Type[keras_retinanet.preprocessing.generator.Generator]"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "num_classes_", "type": "Any"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "image", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "num_classes_", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "image", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "expected_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "expected_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "annotations_group_0", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "annotations_group_1", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "input_image", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "expected_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "input_image", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "expected_annotations_group", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "annotations_group_0", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "annotations_group_1", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "annotations_group_2", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "input_image", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "expected_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "SimpleGenerator"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "SimpleGenerator"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "SimpleGenerator"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "self", "type": "SimpleGenerator"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "self", "type": "SimpleGenerator"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "SimpleGenerator", "type": "Type[SimpleGenerator]"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "load_annotations_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "expected_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 60, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "SimpleGenerator", "type": "Type[SimpleGenerator]"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "load_annotations_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "load_annotations_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 76, "col_offset": 65, "nodeName": "annotations_group_0", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "annotations_group_1", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "SimpleGenerator", "type": "Type[SimpleGenerator]"}, {"lineNumber": 97, "col_offset": 43, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "load_annotations_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "expected_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 103, "col_offset": 60, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "SimpleGenerator", "type": "Type[SimpleGenerator]"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "load_annotations_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "load_annotations_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "load_annotations_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 160, "col_offset": 65, "nodeName": "annotations_group_0", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 161, "col_offset": 65, "nodeName": "annotations_group_1", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 162, "col_offset": 65, "nodeName": "annotations_group_2", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "SimpleGenerator", "type": "Type[SimpleGenerator]"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "unique", "type": "Any"}, {"lineNumber": 187, "col_offset": 53, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 187, "col_offset": 118, "nodeName": "labels", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "self", "type": "SimpleGenerator"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "self", "type": "SimpleGenerator"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "image_index", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 56, "col_offset": 68, "nodeName": "groups", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 73, "col_offset": 70, "nodeName": "groups", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 74, "col_offset": 70, "nodeName": "groups", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 98, "col_offset": 68, "nodeName": "groups", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "image_group", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "filter_annotations", "type": "Callable"}, {"lineNumber": 101, "col_offset": 96, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 148, "col_offset": 70, "nodeName": "groups", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "image_group", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "annotations_group_0", "type": "Any"}, {"lineNumber": 150, "col_offset": 47, "nodeName": "filter_annotations", "type": "Callable"}, {"lineNumber": 150, "col_offset": 98, "nodeName": "annotations_group_0", "type": "Any"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 152, "col_offset": 70, "nodeName": "groups", "type": "Any"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "image_group", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "annotations_group_1", "type": "Any"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "filter_annotations", "type": "Callable"}, {"lineNumber": 154, "col_offset": 98, "nodeName": "annotations_group_1", "type": "Any"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 156, "col_offset": 70, "nodeName": "groups", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "image_group", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "annotations_group_2", "type": "Any"}, {"lineNumber": 158, "col_offset": 47, "nodeName": "filter_annotations", "type": "Callable"}, {"lineNumber": 158, "col_offset": 98, "nodeName": "annotations_group_2", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 52, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 180, "col_offset": 74, "nodeName": "input_image", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "next", "type": "Callable[[], Any]"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "SimpleGenerator", "type": "Type[SimpleGenerator]"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "self", "type": "SimpleGenerator"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 68, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 70, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 74, "col_offset": 70, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "expected_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "expected_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 68, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 101, "col_offset": 82, "nodeName": "input_image", "type": "Any"}, {"lineNumber": 101, "col_offset": 115, "nodeName": "groups", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 70, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 150, "col_offset": 47, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 150, "col_offset": 84, "nodeName": "input_image", "type": "Any"}, {"lineNumber": 150, "col_offset": 119, "nodeName": "groups", "type": "Any"}, {"lineNumber": 152, "col_offset": 70, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 154, "col_offset": 84, "nodeName": "input_image", "type": "Any"}, {"lineNumber": 154, "col_offset": 119, "nodeName": "groups", "type": "Any"}, {"lineNumber": 156, "col_offset": 70, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 158, "col_offset": 47, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 158, "col_offset": 84, "nodeName": "input_image", "type": "Any"}, {"lineNumber": 158, "col_offset": 119, "nodeName": "groups", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "expected_annotations_group", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "expected_annotations_group", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "expected_annotations_group", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "labels_batch", "type": "Any"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "labels_batch", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "labels", "type": "Any"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 101, "col_offset": 115, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 150, "col_offset": 119, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 154, "col_offset": 119, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 158, "col_offset": 119, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "floatx", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "backend", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "keras", "type": "Any"}]