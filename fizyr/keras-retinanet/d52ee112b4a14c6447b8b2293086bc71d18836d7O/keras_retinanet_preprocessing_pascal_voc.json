[{"lineNumber": 57, "col_offset": 24, "nodeName": "Iterator", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "image", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "voc_classes", "type": "Dict[str, int]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "set_name", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "set_name", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "classes", "type": "Any"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "classes", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "image_names", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "image_data_generator", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "image_data_generator", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "image_extension", "type": "Any"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "image_extension", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "skip_truncated", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "skip_truncated", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "skip_difficult", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "skip_difficult", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "image_min_side", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "image_min_side", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "image_max_side", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "image_max_side", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "labels", "type": "Dict[Any, Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "tree", "type": "xml.etree.ElementTree.ElementTree"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "root", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "width", "type": "float"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "height", "type": "float"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "o", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "path", "type": "str"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "boxes_batch", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "boxes_batch", "type": "Any"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "image_scale", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "image_batch", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "regression_targets", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "regression_batch", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "labels_batch", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "labels_batch", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "image_batch", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "image_batch", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "image_data", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "keras", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "key", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "seed", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 93, "col_offset": 71, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 93, "col_offset": 83, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 93, "col_offset": 92, "nodeName": "seed", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "parse", "type": "Callable[..., xml.etree.ElementTree.ElementTree]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "getroot", "type": "Callable[[], xml.etree.ElementTree.Element]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "text", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "text", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "iter", "type": "Callable[..., Generator[xml.etree.ElementTree.Element, None, None]]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "box", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "bndbox", "type": "Optional[xml.etree.ElementTree.Element]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "imread", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "path", "type": "str"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "IMREAD_COLOR", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "image_scale", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "resize_image", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 131, "col_offset": 78, "nodeName": "image", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "append", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "boxes_batch", "type": "Any"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "boxes_batch", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "astype", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "image_batch", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "boxes_batch", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "random_transform_batch", "type": "Callable"}, {"lineNumber": 145, "col_offset": 94, "nodeName": "image_batch", "type": "Any"}, {"lineNumber": 145, "col_offset": 107, "nodeName": "boxes_batch", "type": "Any"}, {"lineNumber": 145, "col_offset": 120, "nodeName": "image_data_generator", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "regression_targets", "type": "Any"}, {"lineNumber": 148, "col_offset": 37, "nodeName": "anchor_targets", "type": "Any"}, {"lineNumber": 148, "col_offset": 52, "nodeName": "image", "type": "Any"}, {"lineNumber": 149, "col_offset": 37, "nodeName": "append", "type": "Any"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "regression_targets", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "regression_targets", "type": "Any"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 153, "col_offset": 42, "nodeName": "labels", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "labels_batch", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "preprocess_input", "type": "Callable"}, {"lineNumber": 157, "col_offset": 75, "nodeName": "image_batch", "type": "Any"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "standardize", "type": "Any"}, {"lineNumber": 158, "col_offset": 60, "nodeName": "image_batch", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "image", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "image_scale", "type": "Any"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "boxes_batch", "type": "Any"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "image_batch", "type": "Any"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "regression_batch", "type": "Any"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "labels_batch", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "lock", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "load_image", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "l", "type": "str"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "classes", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "labels", "type": "Dict[Any, Any]"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 52, "nodeName": "image_names", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "ET", "type": "module"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "tree", "type": "xml.etree.ElementTree.ElementTree"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "root", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "skip_truncated", "type": "Any"}, {"lineNumber": 108, "col_offset": 49, "nodeName": "skip_difficult", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "classes", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "box", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "classes", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "box", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "box", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "box", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "box", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "boxes", "type": "Any"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "box", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 129, "col_offset": 90, "nodeName": "image_extension", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "image", "type": "module"}, {"lineNumber": 131, "col_offset": 94, "nodeName": "image_min_side", "type": "Any"}, {"lineNumber": 131, "col_offset": 124, "nodeName": "image_max_side", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "parse_annotations", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 59, "nodeName": "floatx", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "image", "type": "module"}, {"lineNumber": 145, "col_offset": 120, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 148, "col_offset": 59, "nodeName": "boxes_batch", "type": "Any"}, {"lineNumber": 149, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 67, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 149, "col_offset": 82, "nodeName": "labels", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "image", "type": "module"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "image_data_generator", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "selection", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "_", "type": "Any"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "next", "type": "Callable"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "index_generator", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "selection", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 178, "col_offset": 37, "nodeName": "selection", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "image_data", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "l", "type": "str"}, {"lineNumber": 76, "col_offset": 56, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "PascalVocIterator", "type": "Type[PascalVocIterator]"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 93, "col_offset": 52, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "floatx", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 98, "col_offset": 67, "nodeName": "filename", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "text", "type": "Any"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "text", "type": "Any"}, {"lineNumber": 108, "col_offset": 49, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "o", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 129, "col_offset": 58, "nodeName": "image_names", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 90, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "preprocessing", "type": "module"}, {"lineNumber": 131, "col_offset": 94, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 131, "col_offset": 124, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 134, "col_offset": 48, "nodeName": "floatx", "type": "Any"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 135, "col_offset": 60, "nodeName": "image_names", "type": "List[str]"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "image", "type": "Any"}, {"lineNumber": 142, "col_offset": 59, "nodeName": "backend", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "preprocessing", "type": "module"}, {"lineNumber": 149, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "preprocessing", "type": "module"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "image_data", "type": "Dict[str, Any]"}, {"lineNumber": 180, "col_offset": 75, "nodeName": "image_data", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "backend", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "floatx", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "o", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 115, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 115, "col_offset": 83, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 115, "col_offset": 95, "nodeName": "classes", "type": "Any"}, {"lineNumber": 129, "col_offset": 58, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 129, "col_offset": 75, "nodeName": "image_index", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "keras_retinanet", "type": "module"}, {"lineNumber": 134, "col_offset": 48, "nodeName": "backend", "type": "Any"}, {"lineNumber": 135, "col_offset": 60, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 135, "col_offset": 77, "nodeName": "image_index", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 59, "nodeName": "keras", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "keras_retinanet", "type": "module"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "keras_retinanet", "type": "module"}, {"lineNumber": 76, "col_offset": 56, "nodeName": "open", "type": "Callable"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "time", "type": "module"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "keras", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "backend", "type": "Any"}, {"lineNumber": 115, "col_offset": 95, "nodeName": "self", "type": "PascalVocIterator"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "find", "type": "Callable[..., Optional[xml.etree.ElementTree.Element]]"}, {"lineNumber": 134, "col_offset": 48, "nodeName": "keras", "type": "Any"}, {"lineNumber": 76, "col_offset": 61, "nodeName": "join", "type": "Callable"}, {"lineNumber": 76, "col_offset": 74, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "root", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "root", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "o", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "o", "type": "xml.etree.ElementTree.Element"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "keras", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "bndbox", "type": "Optional[xml.etree.ElementTree.Element]"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "bndbox", "type": "Optional[xml.etree.ElementTree.Element]"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "bndbox", "type": "Optional[xml.etree.ElementTree.Element]"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "bndbox", "type": "Optional[xml.etree.ElementTree.Element]"}, {"lineNumber": 76, "col_offset": 61, "nodeName": "path", "type": "module"}, {"lineNumber": 76, "col_offset": 105, "nodeName": "set_name", "type": "Any"}, {"lineNumber": 76, "col_offset": 61, "nodeName": "os", "type": "module"}]