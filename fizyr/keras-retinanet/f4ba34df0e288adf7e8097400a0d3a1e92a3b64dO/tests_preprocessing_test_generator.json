[{"lineNumber": 24, "col_offset": 22, "nodeName": "Generator", "type": "Type[keras_retinanet.preprocessing.generator.Generator]"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "expected_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "expected_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "annotations_group_0", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "annotations_group_1", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "SimpleGenerator"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "SimpleGenerator", "type": "Type[SimpleGenerator]"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "load_annotations_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "expected_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 60, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "SimpleGenerator", "type": "Type[SimpleGenerator]"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "load_annotations_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "load_annotations_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 68, "col_offset": 65, "nodeName": "annotations_group_0", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 69, "col_offset": 65, "nodeName": "annotations_group_1", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "SimpleGenerator", "type": "Type[SimpleGenerator]"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "expected_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 60, "nodeName": "annotations_group", "type": "Any"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "SimpleGenerator", "type": "Type[SimpleGenerator]"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "input_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "annotations_group_0", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "annotations_group_1", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "annotations_group_2", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 133, "col_offset": 65, "nodeName": "annotations_group_0", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 134, "col_offset": 65, "nodeName": "annotations_group_1", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 135, "col_offset": 65, "nodeName": "annotations_group_2", "type": "Any"}, {"lineNumber": 27, "col_offset": 46, "nodeName": "ImageDataGenerator", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "self", "type": "SimpleGenerator"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "self", "type": "SimpleGenerator"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "image_index", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 48, "col_offset": 68, "nodeName": "groups", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 65, "col_offset": 70, "nodeName": "groups", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 66, "col_offset": 70, "nodeName": "groups", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "load_annotations_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "load_annotations_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "load_annotations_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "load_annotations_group", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "SimpleGenerator", "type": "Type[SimpleGenerator]"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "self", "type": "SimpleGenerator"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 68, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 70, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 66, "col_offset": 70, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "expected_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "expected_annotations_group", "type": "List[numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 88, "col_offset": 72, "nodeName": "groups", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 127, "col_offset": 74, "nodeName": "groups", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 129, "col_offset": 74, "nodeName": "groups", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 131, "col_offset": 74, "nodeName": "groups", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "expected_annotations_group", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "expected_annotations_group", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "expected_annotations_group", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 72, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 127, "col_offset": 74, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 129, "col_offset": 74, "nodeName": "simple_generator", "type": "SimpleGenerator"}, {"lineNumber": 131, "col_offset": 74, "nodeName": "simple_generator", "type": "SimpleGenerator"}]