[{"lineNumber": 12, "col_offset": 0, "nodeName": "_weights_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "get_per_param_options", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "classname", "type": "Any"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "with_decay", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "without_decay", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "n_param_module", "type": "int"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "n_param_lists", "type": "int"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "n_elem_module", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "n_elem_lists", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "per_param_options", "type": "List[Union[Dict[str, Union[Any, List[Any]]], Dict[str, Union[float, List[Any]]]]]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "per_param_options", "type": "List[Union[Dict[str, Union[Any, List[Any]]], Dict[str, Union[float, List[Any]]]]]"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 237, "col_offset": 43, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 253, "col_offset": 9, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 277, "col_offset": 9, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 309, "col_offset": 9, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 14, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "wd", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "idx_m", "type": "int"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "n_param_module", "type": "int"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "n_param_lists", "type": "int"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "n_elem_module", "type": "Any"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "n_elem_lists", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "betas", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "betas", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "gpu_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "init_weights", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "init_weights", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "lr", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "nn_class", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "nn_class", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "nn_kwargs", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "nn_kwargs", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "weight_decay", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "weight_decay", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "count_iter", "type": "int"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "init_weights", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "out_str", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "gpu_ids", "type": "Union[List[Union[int, List[Any]]], int, List[Any]]"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "gpu_ids", "type": "Union[List[Union[int, List[Any]]], int, List[Any]]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "curr_gpu_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "gpu_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "count_iter", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "no_optim", "type": "bool"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "signal", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "count_iter", "type": "int"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "augs", "type": "List[Optional[List[Callable[[numpy.ndarray], numpy.ndarray]]]]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "y_hat_mean", "type": "None"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "aug", "type": "Optional[List[Callable[[numpy.ndarray], numpy.ndarray]]]"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "augs", "type": "List[Optional[List[Callable[[numpy.ndarray], numpy.ndarray]]]]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "y_hat_mean", "type": "Any"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 237, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "tta", "type": "bool"}, {"lineNumber": 253, "col_offset": 9, "nodeName": "torch", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "loss_sum", "type": "int"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "iterator", "type": "Iterator[Any]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "y_hat", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "evaluation", "type": "Union[float, Any]"}, {"lineNumber": 337, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 14, "col_offset": 7, "nodeName": "classname", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "normal_", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "name_m", "type": "Any"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "module_sub", "type": "Any"}, {"lineNumber": 31, "col_offset": 49, "nodeName": "named_modules", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "module_sub", "type": "Any"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "_BatchNorm", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "name_param", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "param", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "with_decay", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "without_decay", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "with_decay", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "wd", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "without_decay", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 83, "col_offset": 66, "nodeName": "gpu_ids", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "nn_module", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "nn_class", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "_init_model", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "fnet_model_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "fnet_model_posargs", "type": "Any"}, {"lineNumber": 103, "col_offset": 58, "nodeName": "get_args", "type": "Callable[[], Tuple[Dict[Any, Any], Any]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "self", "type": "Model"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "to", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "device", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "out_str", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "fnet_model_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "fnet_model_posargs", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "count_iter", "type": "int"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "gpu_ids", "type": "Union[int, List[Any]]"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "gpu_ids", "type": "List[Union[int, List[Any]]]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "to", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "device", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "self", "type": "Model"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "to_gpu", "type": "Callable[[Union[int, List[Any]]], Any]"}, {"lineNumber": 179, "col_offset": 55, "nodeName": "path_save", "type": "str"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "to_gpu", "type": "Callable[[Union[int, List[Any]]], Any]"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "curr_gpu_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 182, "col_offset": 48, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "optimizer", "type": "None"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "signal", "type": "Any"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "target", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "signal", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "output", "type": "Any"}, {"lineNumber": 202, "col_offset": 38, "nodeName": "target", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "x_aug", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "y_hat", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "y_hat_mean", "type": "Any"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "y_hat", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "augs", "type": "List[Optional[List[Callable[[numpy.ndarray], numpy.ndarray]]]]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "y_hat_mean", "type": "Any"}, {"lineNumber": 237, "col_offset": 26, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "_predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "network", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "network", "type": "Any"}, {"lineNumber": 296, "col_offset": 22, "nodeName": "net", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "to", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "y_hat", "type": "Any"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "y_hat", "type": "Any"}, {"lineNumber": 301, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 307, "col_offset": 22, "nodeName": "Iterator", "type": "Any"}, {"lineNumber": 308, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "loss_sum", "type": "float"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "loss_sum", "type": "Union[float, int]"}, {"lineNumber": 336, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 359, "col_offset": 11, "nodeName": "metric", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "metric", "type": "Callable[[Any, Any], float]"}, {"lineNumber": 360, "col_offset": 21, "nodeName": "corr_coef", "type": "Callable[[Any, Any], float]"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 361, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 362, "col_offset": 21, "nodeName": "metric", "type": "Union[Callable[[Any, Any], float], Any]"}, {"lineNumber": 362, "col_offset": 28, "nodeName": "y", "type": "Any"}, {"lineNumber": 362, "col_offset": 31, "nodeName": "y_hat", "type": "Any"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "evaluation", "type": "Union[float, Any]"}, {"lineNumber": 363, "col_offset": 27, "nodeName": "y_hat", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "find", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "normal_", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 31, "col_offset": 49, "nodeName": "module", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "batchnorm", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "module_sub", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "name_param", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "numel", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "numel", "type": "Any"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "p", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "str_to_class", "type": "Callable[[str], Any]"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "criterion_class", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "gpu_ids", "type": "Any"}, {"lineNumber": 83, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "gpu_ids", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "self", "type": "Model"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "nn_module", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "device", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "self", "type": "Model"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "fnet_model_kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "str_to_class", "type": "Callable[[str], Any]"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "nn_class", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "nn_kwargs", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "apply", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "_weights_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "self", "type": "Model"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "optim", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "get_per_param_options", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "lr", "type": "Any"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "betas", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "self", "type": "Model"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "period", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "linesep", "type": "str"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "__qualname__", "type": "str"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "self", "type": "Model"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "self", "type": "Model"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "self", "type": "Model"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "Union", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "gpu_ids", "type": "Union[int, List[Any]]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "device", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "device", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "self", "type": "Model"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "self", "type": "Model"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "move_optim", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "device", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "isdir", "type": "Callable[[Union[str, bytes, _PathLike[str], _PathLike[bytes]]], bool]"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "path_save", "type": "str"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "retry_if_oserror", "type": "Callable[[Callable[..., Any]], Callable[..., Any]]"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "save", "type": "Any"}, {"lineNumber": 179, "col_offset": 37, "nodeName": "get_state", "type": "Callable[[], Any]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 184, "col_offset": 33, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "self", "type": "Model"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "state", "type": "Dict[Any, Any]"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "self", "type": "Model"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 194, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 194, "col_offset": 66, "nodeName": "device", "type": "Any"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 195, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 195, "col_offset": 66, "nodeName": "device", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "gpu_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 197, "col_offset": 43, "nodeName": "net", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "self", "type": "Model"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "self", "type": "Model"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "flip_y", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "flip_x", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "flip_y", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 214, "col_offset": 21, "nodeName": "flip_x", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "copy", "type": "Any"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "aug", "type": "Optional[List[Callable[[numpy.ndarray], numpy.ndarray]]]"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "trans", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "aug", "type": "Optional[List[Callable[[numpy.ndarray], numpy.ndarray]]]"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "aug", "type": "Optional[List[Callable[[numpy.ndarray], numpy.ndarray]]]"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "trans", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "aug", "type": "Optional[List[Callable[[numpy.ndarray], numpy.ndarray]]]"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "y_hat_mean", "type": "None"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "y_hat_mean", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 233, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 237, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 239, "col_offset": 56, "nodeName": "device", "type": "Any"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "gpu_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 241, "col_offset": 21, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 241, "col_offset": 43, "nodeName": "net", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "self", "type": "Model"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "_predict_tta", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "self", "type": "Model"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "gpu_ids", "type": "Union[int, List[Union[int, List[Any]]], List[Any], Any]"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 294, "col_offset": 44, "nodeName": "net", "type": "Any"}, {"lineNumber": 296, "col_offset": 22, "nodeName": "self", "type": "Model"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "network", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 298, "col_offset": 23, "nodeName": "float32", "type": "Any"}, {"lineNumber": 298, "col_offset": 45, "nodeName": "device", "type": "Any"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "self", "type": "Model"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "network", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "test_on_batch", "type": "Callable[[Any, Any], float]"}, {"lineNumber": 329, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 329, "col_offset": 28, "nodeName": "iterator", "type": "Iterator[Any]"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "self", "type": "Model"}, {"lineNumber": 361, "col_offset": 36, "nodeName": "tta", "type": "bool"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "classname", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "modules", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "module_sub", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "param", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "name_param", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "module", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "p", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "with_decay", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "without_decay", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "gpu_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "self", "type": "Model"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "self", "type": "Model"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "self", "type": "Model"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "weight_decay", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "self", "type": "Model"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "self", "type": "Model"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "LambdaLR", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "__module__", "type": "str"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "__class__", "type": "Type[Model]"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "net", "type": "Any"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "gpu_ids", "type": "Union[List[Union[int, List[Any]]], int, List[Any]]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "gpu_ids", "type": "Union[List[Union[int, List[Any]]], int, List[Any]]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "self", "type": "Model"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "self", "type": "Model"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 179, "col_offset": 37, "nodeName": "self", "type": "Model"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 194, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 194, "col_offset": 66, "nodeName": "self", "type": "Model"}, {"lineNumber": 195, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 195, "col_offset": 66, "nodeName": "self", "type": "Model"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "self", "type": "Model"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 197, "col_offset": 43, "nodeName": "self", "type": "Model"}, {"lineNumber": 197, "col_offset": 64, "nodeName": "gpu_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "x_aug", "type": "numpy.ndarray"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "y_hat", "type": "numpy.ndarray"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 228, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 233, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 239, "col_offset": 56, "nodeName": "self", "type": "Model"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "self", "type": "Model"}, {"lineNumber": 241, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 241, "col_offset": 43, "nodeName": "self", "type": "Model"}, {"lineNumber": 241, "col_offset": 64, "nodeName": "gpu_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "self", "type": "Model"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "self", "type": "Model"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 294, "col_offset": 44, "nodeName": "self", "type": "Model"}, {"lineNumber": 294, "col_offset": 65, "nodeName": "gpu_ids", "type": "Union[int, List[Union[int, List[Any]]], List[Any], Any]"}, {"lineNumber": 298, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 298, "col_offset": 45, "nodeName": "self", "type": "Model"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "self", "type": "Model"}, {"lineNumber": 328, "col_offset": 44, "nodeName": "item", "type": "Any"}, {"lineNumber": 328, "col_offset": 52, "nodeName": "kwargs", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "named_children", "type": "Any"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "without_decay", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "with_decay", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "param", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "module", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "self", "type": "Model"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "self", "type": "Model"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "self", "type": "Model"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "self", "type": "Model"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "self", "type": "Model"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "self", "type": "Model"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "StepLR", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 130, "col_offset": 36, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "self", "type": "Model"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "self", "type": "Model"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "self", "type": "Model"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "self", "type": "Model"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "self", "type": "Model"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "self", "type": "Model"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "self", "type": "Model"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 197, "col_offset": 64, "nodeName": "self", "type": "Model"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "trans", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 222, "col_offset": 34, "nodeName": "x_aug", "type": "Any"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "_predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "trans", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "y_hat", "type": "Any"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 38, "nodeName": "y_hat", "type": "Any"}, {"lineNumber": 228, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 241, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 241, "col_offset": 64, "nodeName": "self", "type": "Model"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "module", "type": "Any"}, {"lineNumber": 246, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 294, "col_offset": 65, "nodeName": "self", "type": "Model"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "network", "type": "Any"}, {"lineNumber": 300, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "module_sub", "type": "Any"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "without_decay", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "optim", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "self", "type": "Model"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "self", "type": "Model"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "self", "type": "Model"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "self", "type": "Model"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "copy", "type": "Any"}, {"lineNumber": 228, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "optim", "type": "Any"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "x_aug", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "torch", "type": "Any"}]