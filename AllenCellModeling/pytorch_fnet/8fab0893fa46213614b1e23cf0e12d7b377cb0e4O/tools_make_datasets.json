[{"lineNumber": 23, "col_offset": 0, "nodeName": "shuffle_split_df", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "filter_df", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "STRUCT_CHOICES", "type": "Tuple[str, str, str, str, str, str, str, str, str, str, str]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "path_csv_rejects", "type": "str"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "paths_rejects", "type": "List[nothing]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "masks", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "n_masks", "type": "int"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 74, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "opts", "type": "argparse.Namespace"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "name_target", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "struct", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "tag", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "path_master_csv", "type": "str"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "col_path_czi", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "dict_rename", "type": "Dict[str, str]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "path_all_csv", "type": "str"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "path_train_csv", "type": "str"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "path_test_csv", "type": "str"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "no_shuffle", "type": "bool"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "df_all_shuf", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "df_all_shuf", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "df_all", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "df_test", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "df_all_shuf", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "df_train", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "df_train", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "df_test", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "df_train", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "df_test", "type": "Any"}, {"lineNumber": 46, "col_offset": 7, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "path_csv_rejects", "type": "str"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "df_rejects", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "paths_rejects", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 51, "col_offset": 7, "nodeName": "target", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "mask_combi", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "names_masks", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "opts", "type": "argparse.Namespace"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "opts", "type": "argparse.Namespace"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "replace", "type": "Any"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "drop_duplicates", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "columns", "type": "Any"}, {"lineNumber": 89, "col_offset": 9, "nodeName": "assign", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "filter_df", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "df", "type": "Any"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "struct", "type": "Any"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "struct", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "col_name_target", "type": "str"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "loc", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "col_name_target", "type": "str"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "rename", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "df_target_train", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "df_target_test", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "shuffle_split_df", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "path_all_csv", "type": "str"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "path_all_csv", "type": "str"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "path_train_csv", "type": "str"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "path_train_csv", "type": "str"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "path_test_csv", "type": "str"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "path_test_csv", "type": "str"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "reset_index", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "df_all_shuf", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "idx_split", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "df_all_shuf", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "df_all_shuf", "type": "Any"}, {"lineNumber": 46, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "path_csv_rejects", "type": "str"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "df_rejects", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "masks", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "target", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "masks", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "n_masks", "type": "int"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "mask_combi", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "df", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "min_elements", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "STRUCT_CHOICES", "type": "Tuple[str, str, str, str, str, str, str, str, str, str, str]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "df", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "sep", "type": "str"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "df", "type": "Any"}, {"lineNumber": 89, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "values", "type": "Any"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "opts", "type": "argparse.Namespace"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "opts", "type": "argparse.Namespace"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "struct", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "col_name_target", "type": "str"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "col_name_target", "type": "str"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "dict_rename", "type": "Dict[str, str]"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 114, "col_offset": 75, "nodeName": "shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "tag", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "tag", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "tag", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "df_target_train", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "df_target_test", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "idx_split", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "idx_split", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "idx_split", "type": "Any"}, {"lineNumber": 46, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "pd", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "masks", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "masks", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "masks", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "mask_combi", "type": "Any"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "lower", "type": "Any"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "path_master_csv", "type": "str"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "df", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "path", "type": "module"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "col_path_czi", "type": "Any"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "opts", "type": "argparse.Namespace"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "filter_df", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "df", "type": "Any"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "df_target_train", "type": "Any"}, {"lineNumber": 114, "col_offset": 75, "nodeName": "df_target_test", "type": "Any"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "sample", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "round", "type": "Callable"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "isin", "type": "Any"}, {"lineNumber": 50, "col_offset": 54, "nodeName": "paths_rejects", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "contains", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "masks", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "masks", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "masks", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "masks", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "masks", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "masks", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "names_masks", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 77, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 69, "col_offset": 81, "nodeName": "names_masks", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "name_target", "type": "Any"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "os", "type": "module"}, {"lineNumber": 100, "col_offset": 70, "nodeName": "col_name_target", "type": "str"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "df_all", "type": "Any"}, {"lineNumber": 35, "col_offset": 47, "nodeName": "_percent_test", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "str", "type": "Any"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "contains", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "contains", "type": "Any"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "contains", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "masks", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "df_target_all", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "df_all_shuf", "type": "Any"}, {"lineNumber": 35, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "df", "type": "Any"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "str", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "str", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "contains", "type": "Any"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "str", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "contains", "type": "Any"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "lower", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "str", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "str", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "str", "type": "Any"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "lower", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "lower", "type": "Any"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "lower", "type": "Any"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "str", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "str", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "lower", "type": "Any"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "str", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "lower", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "df", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "str", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "str", "type": "Any"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "df", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "df", "type": "Any"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "df", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "df", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "df", "type": "Any"}]