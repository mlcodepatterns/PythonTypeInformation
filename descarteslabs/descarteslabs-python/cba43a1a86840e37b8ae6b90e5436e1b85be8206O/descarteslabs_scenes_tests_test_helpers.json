[{"lineNumber": 9, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 9, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "geom", "type": "Dict[str, Union[str, Tuple[Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]]]]"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "__geo_interface__", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 63, "nodeName": "__geo_interface__", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "polygon_from_bounds", "type": "Callable[[Any], Dict[str, Union[str, Tuple[Tuple[Tuple[Any, Any], Tuple[Any, Any], Tuple[Any, Any], Tuple[Any, Any], Tuple[Any, Any]]]]]]"}, {"lineNumber": 23, "col_offset": 54, "nodeName": "bounds", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "valid_latlon_bounds", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "valid_latlon_bounds", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "valid_latlon_bounds", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "is_geographic_crs", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "is_geographic_crs", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "is_geographic_crs", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "is_geographic_crs", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "is_geographic_crs", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "is_geographic_crs", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "is_wgs84_crs", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "is_wgs84_crs", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "is_wgs84_crs", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "is_wgs84_crs", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "is_wgs84_crs", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "is_wgs84_crs", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "is_wgs84_crs", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestSimpleHelpers"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "is_wgs84_crs", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "box", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 23, "col_offset": 63, "nodeName": "box", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 33, "col_offset": 51, "nodeName": "dedent", "type": "Callable[[str], str]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "dedent", "type": "Callable[[str], str]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "dedent", "type": "Callable[[str], str]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "dedent", "type": "Callable[[str], str]"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "_helpers", "type": "module"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "dedent", "type": "Callable[[str], str]"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 22, "col_offset": 53, "nodeName": "bounds", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 23, "col_offset": 63, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 23, "col_offset": 85, "nodeName": "bounds", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 33, "col_offset": 51, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 23, "col_offset": 63, "nodeName": "shapely", "type": "Any"}]