[{"lineNumber": 7, "col_offset": 0, "nodeName": "_delayed_numpy_ufuncs", "type": "Callable[[], Any]"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "NumPyMixin", "type": "Any"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "Primitive", "type": "Any"}, {"lineNumber": 11, "col_offset": 11, "nodeName": "numpy_ufuncs", "type": "module"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "_pytype", "type": "Type[bool]"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "logical_not", "type": "descarteslabs.workflows.types.numpy.numpy_ufuncs.ufunc"}, {"lineNumber": 55, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "equal", "type": "descarteslabs.workflows.types.numpy.numpy_ufuncs.ufunc"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "other", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "not_equal", "type": "descarteslabs.workflows.types.numpy.numpy_ufuncs.ufunc"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 55, "nodeName": "other", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "logical_and", "type": "descarteslabs.workflows.types.numpy.numpy_ufuncs.ufunc"}, {"lineNumber": 67, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 57, "nodeName": "other", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "logical_or", "type": "descarteslabs.workflows.types.numpy.numpy_ufuncs.ufunc"}, {"lineNumber": 71, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 56, "nodeName": "other", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "logical_xor", "type": "descarteslabs.workflows.types.numpy.numpy_ufuncs.ufunc"}, {"lineNumber": 75, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 57, "nodeName": "other", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "logical_and", "type": "descarteslabs.workflows.types.numpy.numpy_ufuncs.ufunc"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "other", "type": "Any"}, {"lineNumber": 79, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "logical_or", "type": "descarteslabs.workflows.types.numpy.numpy_ufuncs.ufunc"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "other", "type": "Any"}, {"lineNumber": 83, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "logical_xor", "type": "descarteslabs.workflows.types.numpy.numpy_ufuncs.ufunc"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "other", "type": "Any"}, {"lineNumber": 87, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "_delayed_numpy_ufuncs", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "_delayed_numpy_ufuncs", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "_delayed_numpy_ufuncs", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "_delayed_numpy_ufuncs", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "_delayed_numpy_ufuncs", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "_delayed_numpy_ufuncs", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "_delayed_numpy_ufuncs", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "_delayed_numpy_ufuncs", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "_delayed_numpy_ufuncs", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "self", "type": "Any"}]