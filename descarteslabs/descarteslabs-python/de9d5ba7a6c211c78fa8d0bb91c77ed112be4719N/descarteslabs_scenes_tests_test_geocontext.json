[{"lineNumber": 324, "col_offset": 0, "nodeName": "run_threadsafe_experiment", "type": "Callable[..., Any]"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "GeoContext", "type": "Any"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 353, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "__slots__", "type": "Tuple[str, str]"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "unittest", "type": "module"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "p", "type": "multiprocessing.context.Process"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "errors", "type": "Any"}, {"lineNumber": 353, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "foo", "type": "Any"}, {"lineNumber": 17, "col_offset": 19, "nodeName": "foo", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "_bar", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "bar", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "simple", "type": "SimpleContext"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "r", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "simple", "type": "SimpleContext"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "simple2", "type": "SimpleContext"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "simple_diff", "type": "SimpleContext"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "not_simple", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "simple", "type": "SimpleContext"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "simple_copy", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "bounds_wgs84", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "resolution", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "bounds_wgs84", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "resolution", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "crs", "type": "str"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "align_pixels", "type": "bool"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "raster_params", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "raster_params", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "ctx2", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "ctx3", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "geom", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "envelope", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "geom_overlaps", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "ctx_overlap", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "ctx_updated", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "geom_doesnt_overlap", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "ctx_doesnt_overlap_updated", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "geom", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "envelope", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "ctx_no_update_bounds", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "ctx_update_bounds", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "mock_raster_instance", "type": "Any"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 302, "col_offset": 51, "nodeName": "dltile_dict", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "tile", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "conn_ours", "type": "multiprocessing.connection.Connection"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "conn_theirs", "type": "multiprocessing.connection.Connection"}, {"lineNumber": 326, "col_offset": 29, "nodeName": "Pipe", "type": "Callable[..., Tuple[multiprocessing.connection.Connection, multiprocessing.connection.Connection]]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "future", "type": "concurrent.futures._base.Future[Any]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "Process", "type": "Type[multiprocessing.context.Process]"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "start", "type": "Callable[[], None]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "join", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 7, "nodeName": "exitcode", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "errors", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "errors", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "errors", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "errors", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "SimpleContext"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "SimpleContext"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "SimpleContext", "type": "Type[SimpleContext]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "simple", "type": "SimpleContext"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "r", "type": "str"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "expected", "type": "str"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "SimpleContext", "type": "Type[SimpleContext]"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "SimpleContext", "type": "Type[SimpleContext]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "SimpleContext", "type": "Type[SimpleContext]"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "GeoContext", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "simple", "type": "SimpleContext"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "simple", "type": "SimpleContext"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "simple", "type": "SimpleContext"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "simple2", "type": "SimpleContext"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "simple", "type": "SimpleContext"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "simple_diff", "type": "SimpleContext"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "simple", "type": "SimpleContext"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "not_simple", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "SimpleContext", "type": "Type[SimpleContext]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "simple", "type": "SimpleContext"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "_geometry_lock_", "type": "Any"}, {"lineNumber": 42, "col_offset": 49, "nodeName": "_geometry_lock_", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "simple", "type": "SimpleContext"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "simple_copy", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "collection", "type": "Dict[str, Union[List[Dict[str, Union[Dict[str, Union[str, Tuple[Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]]]], str]]], str]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "resolution", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "bounds_wgs84", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "bounds_crs", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 71, "col_offset": 44, "nodeName": "GeometryCollection", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "geom", "type": "Dict[str, Union[str, Tuple[Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]]]]"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "resolution", "type": "int"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "crs", "type": "str"}, {"lineNumber": 91, "col_offset": 52, "nodeName": "align_pixels", "type": "bool"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "geom", "type": "Dict[str, Union[str, Tuple[Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]]]]"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "resolution", "type": "int"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "crs", "type": "str"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "align_pixels", "type": "bool"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "bounds_wgs84", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "raster_params", "type": "Any"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "expected", "type": "Dict[str, Optional[Union[Tuple[float, float, float, float], bool, str, int, Dict[str, Union[str, Tuple[Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]]]]]]]"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "assign", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "align_pixels", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "assign", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "translate", "type": "Any"}, {"lineNumber": 129, "col_offset": 51, "nodeName": "geom", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "assign", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 132, "col_offset": 45, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "assign", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "translate", "type": "Any"}, {"lineNumber": 137, "col_offset": 57, "nodeName": "geom", "type": "Any"}, {"lineNumber": 140, "col_offset": 37, "nodeName": "assign", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 141, "col_offset": 60, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "bounds_crs", "type": "Any"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "assign", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "bounds_crs", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "assign", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "bounds_crs", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 169, "col_offset": 53, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "warning", "type": "warnings.WarningMessage"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "crs", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "bounds_crs", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "cls", "type": "Type[TestDLTIle]"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "mock_raster", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "dltile", "type": "Any"}, {"lineNumber": 302, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "from_key", "type": "Any"}, {"lineNumber": 304, "col_offset": 42, "nodeName": "key", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 305, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "key", "type": "Any"}, {"lineNumber": 307, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "resolution", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "pad", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "tilesize", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "crs", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "bounds_crs", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "raster_params", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "geotrans", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "proj4", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "wkt", "type": "Any"}, {"lineNumber": 326, "col_offset": 29, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 332, "col_offset": 14, "nodeName": "geoctx_factory", "type": "Any"}, {"lineNumber": 333, "col_offset": 95, "nodeName": "executor", "type": "concurrent.futures.thread.ThreadPoolExecutor"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "futures", "type": "List[concurrent.futures._base.Future[Any]]"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "as_completed", "type": "Callable"}, {"lineNumber": 337, "col_offset": 54, "nodeName": "futures", "type": "List[concurrent.futures._base.Future[Any]]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "send", "type": "Any"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 342, "col_offset": 39, "nodeName": "threadsafe_test", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "p", "type": "multiprocessing.context.Process"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "p", "type": "multiprocessing.context.Process"}, {"lineNumber": 345, "col_offset": 7, "nodeName": "p", "type": "multiprocessing.context.Process"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "recv", "type": "Callable[[], Any]"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "DLTile", "type": "Any"}, {"lineNumber": 402, "col_offset": 17, "nodeName": "run_threadsafe_experiment", "type": "Callable[..., Any]"}, {"lineNumber": 402, "col_offset": 43, "nodeName": "aoi_factory", "type": "Callable[[], Any]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "errors", "type": "Any"}, {"lineNumber": 406, "col_offset": 17, "nodeName": "run_threadsafe_experiment", "type": "Callable[..., Any]"}, {"lineNumber": 406, "col_offset": 43, "nodeName": "aoi_factory", "type": "Callable[[], Any]"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "errors", "type": "Any"}, {"lineNumber": 410, "col_offset": 17, "nodeName": "run_threadsafe_experiment", "type": "Callable[..., Any]"}, {"lineNumber": 410, "col_offset": 43, "nodeName": "dltile_factory", "type": "Callable[[], Any]"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 411, "col_offset": 25, "nodeName": "errors", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestGeoContext"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestGeoContext"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestGeoContext"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestGeoContext"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestGeoContext"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "copy", "type": "module"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestGeoContext"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "simple", "type": "SimpleContext"}, {"lineNumber": 42, "col_offset": 49, "nodeName": "simple_copy", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestGeoContext"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, Union[str, Tuple[Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]]]], str]]"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, Union[str, Tuple[Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]]]], str]]"}, {"lineNumber": 63, "col_offset": 43, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, Union[str, Tuple[Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]]]], str]]"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "resolution", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 71, "col_offset": 44, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "__geo_interface__", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 73, "col_offset": 65, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, Union[str, Tuple[Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]]]], str]]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "geom", "type": "Dict[str, Union[str, List[List[List[float]]]]]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "ctx2", "type": "Any"}, {"lineNumber": 117, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 63, "nodeName": "geom", "type": "Dict[str, Union[str, List[List[List[float]]]]]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "ctx2", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "ctx2", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "ctx2", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "ctx2", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "ctx3", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "buffer", "type": "Any"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "geom", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "affinity", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "intersects", "type": "Any"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "geom_overlaps", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "geom_overlaps", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "ctx_overlap", "type": "Any"}, {"lineNumber": 132, "col_offset": 45, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "geom_overlaps", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "ctx_updated", "type": "Any"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "geom_overlaps", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "affinity", "type": "Any"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "assign", "type": "Any"}, {"lineNumber": 140, "col_offset": 37, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 140, "col_offset": 57, "nodeName": "geom_doesnt_overlap", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "ctx_doesnt_overlap_updated", "type": "Any"}, {"lineNumber": 141, "col_offset": 60, "nodeName": "geom_doesnt_overlap", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "assign", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "buffer", "type": "Any"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 151, "col_offset": 51, "nodeName": "geom", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "ctx_no_update_bounds", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 154, "col_offset": 48, "nodeName": "geom", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "ctx_update_bounds", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 162, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "bounds_crs", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "w", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 240, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 258, "col_offset": 13, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 258, "col_offset": 37, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "AOI", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "mock_raster_instance", "type": "Any"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "DLTile", "type": "Any"}, {"lineNumber": 304, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "dltile", "type": "Any"}, {"lineNumber": 305, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 307, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 315, "col_offset": 22, "nodeName": "key", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 333, "col_offset": 13, "nodeName": "ThreadPoolExecutor", "type": "Type[concurrent.futures.thread.ThreadPoolExecutor]"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "futures", "type": "module"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "conn", "type": "Any"}, {"lineNumber": 342, "col_offset": 62, "nodeName": "geoctx_factory", "type": "Callable[[], Any]"}, {"lineNumber": 342, "col_offset": 78, "nodeName": "property", "type": "str"}, {"lineNumber": 342, "col_offset": 88, "nodeName": "conn_theirs", "type": "multiprocessing.connection.Connection"}, {"lineNumber": 342, "col_offset": 101, "nodeName": "n", "type": "int"}, {"lineNumber": 346, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 346, "col_offset": 52, "nodeName": "exitcode", "type": "Any"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "conn_ours", "type": "multiprocessing.connection.Connection"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 402, "col_offset": 43, "nodeName": "self", "type": "TestShapelyThreadSafe"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "self", "type": "TestShapelyThreadSafe"}, {"lineNumber": 406, "col_offset": 43, "nodeName": "self", "type": "TestShapelyThreadSafe"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "self", "type": "TestShapelyThreadSafe"}, {"lineNumber": 410, "col_offset": 43, "nodeName": "self", "type": "TestShapelyThreadSafe"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "self", "type": "TestShapelyThreadSafe"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "SimpleContext", "type": "Type[SimpleContext]"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "self", "type": "SimpleContext"}, {"lineNumber": 71, "col_offset": 44, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "__geo_interface__", "type": "Any"}, {"lineNumber": 117, "col_offset": 40, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "geom", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "geom_doesnt_overlap", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "geom", "type": "Any"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 175, "col_offset": 72, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 76, "nodeName": "message", "type": "Warning"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "box", "type": "Any"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "box", "type": "Any"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 258, "col_offset": 13, "nodeName": "self", "type": "TestAOI"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "geocontext", "type": "module"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "mock_raster_instance", "type": "Any"}, {"lineNumber": 315, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 333, "col_offset": 13, "nodeName": "futures", "type": "module"}, {"lineNumber": 334, "col_offset": 23, "nodeName": "submit", "type": "Callable"}, {"lineNumber": 334, "col_offset": 75, "nodeName": "i", "type": "int"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "concurrent", "type": "module"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "exception", "type": "Callable[..., Optional[BaseException]]"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 346, "col_offset": 52, "nodeName": "p", "type": "multiprocessing.context.Process"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 117, "col_offset": 40, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "Point", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "Point", "type": "Any"}, {"lineNumber": 175, "col_offset": 76, "nodeName": "warning", "type": "warnings.WarningMessage"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "box", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 333, "col_offset": 13, "nodeName": "concurrent", "type": "module"}, {"lineNumber": 333, "col_offset": 63, "nodeName": "cpu_count", "type": "Callable[[], int]"}, {"lineNumber": 334, "col_offset": 23, "nodeName": "executor", "type": "concurrent.futures.thread.ThreadPoolExecutor"}, {"lineNumber": 334, "col_offset": 80, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 334, "col_offset": 86, "nodeName": "n", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "future", "type": "concurrent.futures._base.Future[Any]"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "errors", "type": "List[str]"}, {"lineNumber": 339, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 333, "col_offset": 63, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 334, "col_offset": 47, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 334, "col_offset": 55, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 334, "col_offset": 60, "nodeName": "property", "type": "Any"}, {"lineNumber": 339, "col_offset": 53, "nodeName": "exception", "type": "Callable[..., Optional[BaseException]]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 339, "col_offset": 53, "nodeName": "future", "type": "concurrent.futures._base.Future[Any]"}]