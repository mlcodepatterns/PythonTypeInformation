[{"lineNumber": 19, "col_offset": 0, "nodeName": "test_client_health", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "test_client_health_default_retry_false_predicate", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "test_wrap_stub_with_default_retry", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "test_wrap_stub_with_retry_as_kwarg", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "test_wrap_stub_args_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "test_close", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "test_context_manager", "type": "Callable[[], Any]"}, {"lineNumber": 11, "col_offset": 19, "nodeName": "RpcError", "type": "Any"}, {"lineNumber": 11, "col_offset": 19, "nodeName": "grpc", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "side_effect", "type": "List[Union[TypeError, bool]]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "retry", "type": "mock.Mock"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "f", "type": "mock.Mock"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "f", "type": "mock.Mock"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "mock_channel", "type": "mock.Mock"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "_channel", "type": "mock.Mock"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "mock_channel", "type": "mock.Mock"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "_code", "type": "Any"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "code", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "_code", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "Check", "type": "Any"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "Client", "type": "Any"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "Check", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "Client", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "wrap_stub", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "f", "type": "mock.Mock"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "wrap_stub", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "f", "type": "mock.Mock"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "Client", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "_channel", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "_channel", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "Client", "type": "Any"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "close", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "FakeRpcError"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "self", "type": "FakeRpcError"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "health", "type": "Any"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "Check", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 29, "col_offset": 43, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "health", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "mock", "type": "module"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "wrap_stub", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "retry", "type": "mock.Mock"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "retry", "type": "mock.Mock"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "mock", "type": "module"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "f", "type": "mock.Mock"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "mock", "type": "module"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "Retry", "type": "Type[descarteslabs.common.retry.retry.Retry]"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "f", "type": "mock.Mock"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "mock", "type": "module"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "object", "type": "Callable[..., mock._patch]"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "client", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "client", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "client_", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "stub", "type": "Any"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "stub", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "client", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "Check", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "mock", "type": "module"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "Retry", "type": "Type[descarteslabs.common.retry.retry.Retry]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "mock_channel", "type": "mock.Mock"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "client_", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "client", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "mock", "type": "module"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "stub", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "mock", "type": "module"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "mock", "type": "module"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "Check", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "stub", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "stub", "type": "Any"}]