[{"lineNumber": 11, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "namespace", "type": "str"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "__name__", "type": "str"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self_type", "type": "Type[BandsMixin]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "delayed_func", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "result_type", "type": "Any"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "bands", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "_from_apply", "type": "Any"}, {"lineNumber": 48, "col_offset": 72, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 78, "nodeName": "bands", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "bands", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "bands", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "_from_apply", "type": "Any"}, {"lineNumber": 92, "col_offset": 69, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 75, "nodeName": "new_names", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "_from_apply", "type": "Any"}, {"lineNumber": 98, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 68, "nodeName": "new_positional_names", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "self", "type": "BandsMixin"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "_delay", "type": "Any"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "func", "type": "Any"}, {"lineNumber": 132, "col_offset": 51, "nodeName": "Str", "type": "Any"}, {"lineNumber": 132, "col_offset": 56, "nodeName": "self_type", "type": "Type[BandsMixin]"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "delayed_func", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "result_type", "type": "Any"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "self_type", "type": "Type[BandsMixin]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "result_type", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "_from_apply", "type": "Any"}, {"lineNumber": 138, "col_offset": 52, "nodeName": "self", "type": "BandsMixin"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "delayed_func", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "_from_apply", "type": "Any"}, {"lineNumber": 144, "col_offset": 42, "nodeName": "distance", "type": "Any"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "self", "type": "BandsMixin"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "abc", "type": "module"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "bands", "type": "Any"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "bands", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "_from_apply", "type": "Any"}, {"lineNumber": 41, "col_offset": 71, "nodeName": "self", "type": "BandsMixin"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "_pick_bands_list", "type": "Any"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "bands", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 48, "col_offset": 60, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "six", "type": "module"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "new_positional_names", "type": "Tuple[Any, ...]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "_rename_bands_positionally", "type": "Any"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "new_positional_names", "type": "Tuple[Any, ...]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "_rename_bands", "type": "Any"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "new_names", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 92, "col_offset": 57, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 98, "col_offset": 50, "nodeName": "namespace", "type": "Any"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "Function", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "result_type", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "six", "type": "module"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "split", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "self", "type": "BandsMixin"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 41, "col_offset": 59, "nodeName": "namespace", "type": "str"}, {"lineNumber": 41, "col_offset": 78, "nodeName": "bands", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "self", "type": "BandsMixin"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "bands", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "pick_bands", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "band", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "band", "type": "Any"}, {"lineNumber": 65, "col_offset": 55, "nodeName": "bands", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "new_positional_names", "type": "Tuple[Any, ...]"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "new_names", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "self", "type": "BandsMixin"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "self", "type": "BandsMixin"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "bands", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "self", "type": "BandsMixin"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "Str", "type": "Any"}, {"lineNumber": 136, "col_offset": 36, "nodeName": "result_type", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 39, "col_offset": 74, "nodeName": "bands", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "band", "type": "Any"}, {"lineNumber": 36, "col_offset": 68, "nodeName": "band", "type": "Any"}, {"lineNumber": 36, "col_offset": 76, "nodeName": "bands", "type": "Any"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "six", "type": "module"}, {"lineNumber": 36, "col_offset": 57, "nodeName": "Str", "type": "Any"}]