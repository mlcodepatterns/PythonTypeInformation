[{"lineNumber": 14, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 14, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "bounds_wgs84", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "bounds_wrong_number", "type": "Tuple[float, float]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "bounds_wrong_type", "type": "Dict[Any, Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "bounds_point", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "geoj", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "geoj", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "geoj", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "as_shapely", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "__geo_interface__", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "as_shapely", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "obj", "type": "mock.Mock"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "__geo_interface__", "type": "Any"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "__geo_interface__", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "as_shapely", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "unhelpful", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "as_shapely", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "bounds_wgs84", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "check_valid_bounds", "type": "Callable[[Any], None]"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "bounds_wgs84", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "as_geojson_geometry", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "geoj", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "Polygon", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "geoj", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "as_geojson_geometry", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, str], Dict[str, Union[List[List[List[float]]], str]], str]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "geoj", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "Polygon", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "geoj", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "as_geojson_geometry", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "fc", "type": "Dict[str, Union[List[Dict[str, Union[Dict[str, str], Dict[str, Union[List[List[List[float]]], str]], str]]], str]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "geoj", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "GeometryCollection", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "geoj", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "gc", "type": "Dict[str, Union[List[Dict[str, Union[List[List[List[float]]], str]]], str]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "as_geojson_geometry", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "as_geojson_geometry", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "as_geojson_geometry", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "as_geojson_geometry", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "as_geojson_geometry", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "box", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "geometry_like_to_shapely", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "as_shapely", "type": "Any"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "Polygon", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "as_shapely", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "box", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "geometry_like_to_shapely", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "as_shapely", "type": "Any"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "Polygon", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "as_shapely", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "buffer", "type": "Any"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "obj", "type": "mock.Mock"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "geometry_like_to_shapely", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "obj", "type": "mock.Mock"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "as_shapely", "type": "Any"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "Polygon", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "as_shapely", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "geometry_like_to_shapely", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 46, "nodeName": "fc", "type": "Dict[str, Union[List[Dict[str, Any]], str]]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "as_shapely", "type": "Any"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "GeometryCollection", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "as_shapely", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "bounds_wgs84", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "bounds_wgs84", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "bounds_wgs84", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "bounds_wgs84", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "check_valid_bounds", "type": "Callable[[Any], None]"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "bounds_wrong_order", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "check_valid_bounds", "type": "Callable[[Any], None]"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "bounds_wrong_number", "type": "Tuple[float, float]"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "check_valid_bounds", "type": "Callable[[Any], None]"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "bounds_wrong_type", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "check_valid_bounds", "type": "Callable[[Any], None]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "bounds_point", "type": "Tuple[float, float, float, float]"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, str], Dict[str, Union[List[List[List[float]]], str]], str]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "geojson", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, str], Dict[str, Union[List[List[List[float]]], str]], str]]"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "geojson", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, str], Dict[str, Union[List[List[List[float]]], str]], str]]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, str], Dict[str, Union[List[List[List[float]]], str]], str]]"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, str], Dict[str, Union[List[List[List[float]]], str]], str]]"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, str], Dict[str, Union[List[List[List[float]]], str]], str]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "geojson", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "mock", "type": "module"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "geometry_like_to_shapely", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "unhelpful", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "Point", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "buffer", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "GeometryCollection", "type": "Any"}, {"lineNumber": 144, "col_offset": 73, "nodeName": "shapes", "type": "Tuple[Any, Any]"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, str], Dict[str, Union[List[List[List[float]]], str]], str]]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, str], Dict[str, Union[List[List[List[float]]], str]], str]]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, str], Dict[str, Union[List[List[List[float]]], str]], str]]"}, {"lineNumber": 87, "col_offset": 50, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, str], Dict[str, Union[List[List[List[float]]], str]], str]]"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, str], Dict[str, Union[List[List[List[float]]], str]], str]]"}, {"lineNumber": 97, "col_offset": 55, "nodeName": "feature", "type": "Dict[str, Union[Dict[str, str], Dict[str, Union[List[List[List[float]]], str]], str]]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "Point", "type": "Any"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "shapes", "type": "Tuple[Any, Any]"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 87, "col_offset": 50, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 97, "col_offset": 55, "nodeName": "self", "type": "ShapelySupportTest"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "Point", "type": "Any"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "shapely", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "geometry", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "shapely", "type": "Any"}]