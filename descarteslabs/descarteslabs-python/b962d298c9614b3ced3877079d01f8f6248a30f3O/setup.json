[{"lineNumber": 37, "col_offset": 0, "nodeName": "check_setuptools", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "do_setup", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "_docstring_re", "type": "Pattern[str]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "DOCLINES", "type": "List[str]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "_version_re", "type": "Pattern[str]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 23, "col_offset": 49, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 24, "col_offset": 48, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 31, "col_offset": 54, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "version", "type": "str"}, {"lineNumber": 124, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 23, "col_offset": 49, "nodeName": "re", "type": "module"}, {"lineNumber": 24, "col_offset": 5, "nodeName": "open", "type": "Callable"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "group", "type": "Callable"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "re", "type": "module"}, {"lineNumber": 31, "col_offset": 5, "nodeName": "open", "type": "Callable"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "RequirementParseError", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "setup", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "check_setuptools", "type": "Callable[[], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "do_setup", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "literal_eval", "type": "Callable[[Union[str, _ast.AST]], Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "pkg_resources", "type": "module"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "version", "type": "str"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "search", "type": "Callable"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "ast", "type": "module"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "group", "type": "Callable"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "parse_requirements", "type": "Callable[[Union[str, Iterable[str]]], Generator[pkg_resources.Requirement, None, None]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "DOCLINES", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "version", "type": "str"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "find_packages", "type": "Any"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "_docstring_re", "type": "Pattern[str]"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "pkg_resources", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "DOCLINES", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "search", "type": "Callable"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "read", "type": "Callable"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "_version_re", "type": "Pattern[str]"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "read", "type": "Callable"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "f", "type": "BinaryIO"}]