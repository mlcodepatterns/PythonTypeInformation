[{"lineNumber": 56, "col_offset": 0, "nodeName": "test_wrap_stub_with_default_retry", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "test_wrap_stub_with_kwarg", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "test_wrap_stub_args_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "test_metadata_header", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "test_close", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "test_context_manager", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "RpcError", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "code", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "grpc", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "side_effect", "type": "List[Union[TypeError, bool]]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "retry", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "default_metadata", "type": "Tuple[Tuple[str, str]]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str], Tuple[str, str]]]]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "mock_channel", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "_channel", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "mock_channel", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "_code", "type": "Any"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "code", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "_code", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "Check", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "Check", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "Check", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "wrap_stub", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "f", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "wrap_stub", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "f", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "wrap_stub", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "f", "type": "Any"}, {"lineNumber": 104, "col_offset": 36, "nodeName": "default_metadata", "type": "Tuple[Tuple[str, str]]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "wrap_stub", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "f", "type": "Any"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "default_metadata", "type": "Tuple[Tuple[str, str]]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "wrap_stub", "type": "Any"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "f", "type": "Any"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "default_metadata", "type": "Tuple[Tuple[str, str]]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "_channel", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "_channel", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "close", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "FakeRpcError"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "self", "type": "FakeRpcError"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "health", "type": "Any"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "Check", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "health", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "Check", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "health", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "mock", "type": "Any"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "wrap_stub", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "retry", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "retry", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "Retry", "type": "Type[descarteslabs.common.retry.retry.Retry]"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "Retry", "type": "Type[descarteslabs.common.retry.retry.Retry]"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "Retry", "type": "Type[descarteslabs.common.retry.retry.Retry]"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 116, "col_offset": 69, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "Retry", "type": "Type[descarteslabs.common.retry.retry.Retry]"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 135, "col_offset": 39, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str], Tuple[str, str]]]]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "mock", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 157, "col_offset": 9, "nodeName": "object", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "client", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "client", "type": "Any"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "client_", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "stub", "type": "Any"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "stub", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "stub", "type": "Any"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "client", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "Check", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "mock", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "Retry", "type": "Type[descarteslabs.common.retry.retry.Retry]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "mock_channel", "type": "Any"}, {"lineNumber": 157, "col_offset": 9, "nodeName": "patch", "type": "Any"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "client_", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "client", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "mock", "type": "Any"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "stub", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "mock", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "stub", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "mock", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 157, "col_offset": 9, "nodeName": "mock", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "Check", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "Check", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "stub", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "stub", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "stub", "type": "Any"}]