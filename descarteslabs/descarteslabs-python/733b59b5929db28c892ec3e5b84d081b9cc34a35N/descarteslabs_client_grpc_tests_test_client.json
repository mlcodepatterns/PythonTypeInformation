[{"lineNumber": 67, "col_offset": 0, "nodeName": "test_wrap_stub_with_default_retry", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "test_wrap_stub_with_kwarg", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "test_wrap_stub_args_kwargs", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "test_metadata_header", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 0, "nodeName": "test_add_api_metadata_header_merge", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 0, "nodeName": "test_close", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 0, "nodeName": "test_context_manager", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 19, "nodeName": "RpcError", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "code", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 11, "col_offset": 19, "nodeName": "grpc", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "side_effect", "type": "List[Union[TypeError, bool]]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "retry", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "default_metadata", "type": "Tuple[Tuple[str, str]]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str], Tuple[str, str]]]]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "stub_callable", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "stub", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "stub", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "mock_channel", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "_channel", "type": "Any"}, {"lineNumber": 192, "col_offset": 22, "nodeName": "mock_channel", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "_code", "type": "Any"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "code", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "_code", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "Check", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "Check", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "USER_AGENT_HEADER", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "Check", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "USER_AGENT_HEADER", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "Check", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "_wrap_stub", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "retry", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "_wrap_stub", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "_wrap_stub", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "_wrap_stub", "type": "Any"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "default_metadata", "type": "Tuple[Tuple[str, str]]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "_wrap_stub", "type": "Any"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 135, "col_offset": 44, "nodeName": "default_metadata", "type": "Tuple[Tuple[str, str]]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "_wrap_stub", "type": "Any"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 146, "col_offset": 44, "nodeName": "default_metadata", "type": "Tuple[Tuple[str, str]]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str], Tuple[str, str]]]]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "_initialize", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "stub_callable", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "_add_stub", "type": "Any"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "stub_callable", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "_add_api", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "_channel", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "_channel", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "GrpcClient", "type": "Any"}, {"lineNumber": 207, "col_offset": 47, "nodeName": "close", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "FakeRpcError"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "self", "type": "FakeRpcError"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "health", "type": "Any"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "Check", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "health", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "Check", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "health", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "Check", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "health", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "mock", "type": "Any"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "client", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "retry", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "client", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "client", "type": "Any"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "Retry", "type": "Type[descarteslabs.common.retry.retry.Retry]"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "client", "type": "Any"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "Retry", "type": "Type[descarteslabs.common.retry.retry.Retry]"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 130, "col_offset": 39, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "client", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "Retry", "type": "Type[descarteslabs.common.retry.retry.Retry]"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 136, "col_offset": 69, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str]]]]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "mock", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "client", "type": "Any"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "Retry", "type": "Type[descarteslabs.common.retry.retry.Retry]"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 147, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "args", "type": "Tuple[int]"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "kwargs_w_header", "type": "Dict[str, Union[str, Tuple[Tuple[str, str], Tuple[str, str]]]]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "mock", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "mock", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "api", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "Bar", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "mock", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 207, "col_offset": 9, "nodeName": "object", "type": "Any"}, {"lineNumber": 207, "col_offset": 27, "nodeName": "client", "type": "Any"}, {"lineNumber": 208, "col_offset": 13, "nodeName": "client", "type": "Any"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "client_", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "stub", "type": "Any"}, {"lineNumber": 23, "col_offset": 37, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "stub", "type": "Any"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "stub", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "client", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "stub", "type": "Any"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "client", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "Check", "type": "Any"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "mock", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "Retry", "type": "Type[descarteslabs.common.retry.retry.Retry]"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "stub", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "USER_AGENT_HEADER", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "mock_channel", "type": "Any"}, {"lineNumber": 207, "col_offset": 9, "nodeName": "patch", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "client_", "type": "Any"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "client", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 23, "col_offset": 37, "nodeName": "mock", "type": "Any"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "stub", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "mock", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "stub", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "mock", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "stub", "type": "Any"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "mock", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "mock", "type": "Any"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "mock", "type": "Any"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "mock", "type": "Any"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "mock", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "mock", "type": "Any"}, {"lineNumber": 207, "col_offset": 9, "nodeName": "mock", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "Check", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "Check", "type": "Any"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "Check", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "Check", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "stub", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "stub", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "stub", "type": "Any"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "stub", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "stub", "type": "Any"}]