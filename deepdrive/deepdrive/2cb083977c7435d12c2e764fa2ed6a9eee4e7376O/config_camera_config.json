[{"lineNumber": 16, "col_offset": 0, "nodeName": "log", "type": "Union[logging.Logger, logging.PlaceHolder]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "DEFAULT_BASE_COLOR_CAM", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 16, "col_offset": 6, "nodeName": "get_log", "type": "Callable[..., Union[logging.Logger, logging.PlaceHolder]]"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "DEFAULT_CAM", "type": "Any"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "DEFAULT_BASE_COLOR_CAM", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "BASE_COLOR", "type": "unicode"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "rigs", "type": "Dict[unicode, Union[List[List[Any]], List[Union[List[Any], List[Dict[Any, Any]]]], List[List[Dict[Any, Any]]]]]"}, {"lineNumber": 16, "col_offset": 6, "nodeName": "logs", "type": "module"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "c", "type": "module"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "ViewMode", "type": "Type[sim.view_mode.ViewMode]"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "DEFAULT_BASE_COLOR_CAM", "type": "Any"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "DEFAULT_CAM", "type": "Any"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "DEFAULT_CAM", "type": "Any"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "c", "type": "module"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "c", "type": "module"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}]