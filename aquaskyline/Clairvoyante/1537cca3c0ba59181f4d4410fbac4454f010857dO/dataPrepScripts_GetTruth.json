[{"lineNumber": 4, "col_offset": 0, "nodeName": "OutputVariant", "type": "Callable[[Any], Any]"}, {"lineNumber": 5, "col_offset": 4, "nodeName": "vcf_fn", "type": "Any"}, {"lineNumber": 5, "col_offset": 13, "nodeName": "vcf_fn", "type": "Any"}, {"lineNumber": 6, "col_offset": 4, "nodeName": "var_fn", "type": "Any"}, {"lineNumber": 6, "col_offset": 13, "nodeName": "var_fn", "type": "Any"}, {"lineNumber": 7, "col_offset": 4, "nodeName": "ctgName", "type": "Any"}, {"lineNumber": 7, "col_offset": 14, "nodeName": "ctgName", "type": "Any"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "var_fp", "type": "TextIO"}, {"lineNumber": 26, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 5, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 6, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 7, "col_offset": 14, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 9, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 9, "col_offset": 18, "nodeName": "var_fn", "type": "Any"}, {"lineNumber": 11, "col_offset": 30, "nodeName": "vcf_fp", "type": "TextIO"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "row", "type": "str"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "OutputVariant", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 11, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "vcf_fn", "type": "Any"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "last", "type": "str"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "varType", "type": "List[str]"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "varType", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "p1", "type": "int"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "p2", "type": "int"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 33, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "vcf_fp", "type": "TextIO"}, {"lineNumber": 13, "col_offset": 18, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "ctgName", "type": "Any"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "p1", "type": "str"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "p2", "type": "str"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "p1", "type": "str"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "p2", "type": "str"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "p1", "type": "int"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "p2", "type": "int"}, {"lineNumber": 24, "col_offset": 62, "nodeName": "p1", "type": "int"}, {"lineNumber": 24, "col_offset": 66, "nodeName": "p2", "type": "int"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 23, "col_offset": 33, "nodeName": "p1", "type": "int"}, {"lineNumber": 23, "col_offset": 38, "nodeName": "p2", "type": "int"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "p1", "type": "int"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "p2", "type": "int"}, {"lineNumber": 23, "col_offset": 47, "nodeName": "p2", "type": "int"}, {"lineNumber": 23, "col_offset": 51, "nodeName": "p1", "type": "int"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "var_fp", "type": "TextIO"}, {"lineNumber": 24, "col_offset": 30, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 38, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 46, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 54, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 18, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 13, "col_offset": 18, "nodeName": "row", "type": "str"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "last", "type": "str"}]