[{"lineNumber": 25, "col_offset": 0, "nodeName": "safe_eval_success_mock", "type": "Callable[..., Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "this_directory", "type": "str"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 11, "col_offset": 33, "nodeName": "__file__", "type": "str"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "append", "type": "Callable"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "this_directory", "type": "str"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "queue", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "put", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "datamanager", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "tmp", "type": "str"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "scenario_mock", "type": "unittest.mock.Mock"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "wallclock_limit", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "algo_runs_timelimit", "type": "int"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "ta_run_limit", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "scenario", "type": "unittest.mock.Mock"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "scenario_mock", "type": "unittest.mock.Mock"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "stats", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "safe_eval", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "safe_eval_success_mock", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "wallclock_limit", "type": "int"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "ta_runs", "type": "int"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "return_value", "type": "None"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "side_effect", "type": "Type[MemoryError]"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "MemoryError", "type": "Type[MemoryError]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "side_effect", "type": "Any"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "TimeoutException", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "side_effect", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "wallclock_limit", "type": "int"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "info", "type": "Dict[Any, Any]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "cv", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "cv", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "cv", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "cv", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "REGRESSION", "type": "int"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "cv", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "REGRESSION", "type": "int"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "cv", "type": "Any"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "queue", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "SUCCESS", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "get_multiclass_classification_datamanager", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "get_multiclass_classification_datamanager", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "scenario_mock", "type": "unittest.mock.Mock"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "scenario_mock", "type": "unittest.mock.Mock"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "scenario_mock", "type": "unittest.mock.Mock"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "Stats", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "scenario_mock", "type": "unittest.mock.Mock"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "start_timing", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 65, "col_offset": 57, "nodeName": "fill_memory", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "safe_eval", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "exit_status", "type": "Any"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "MemorylimitException", "type": "Any"}, {"lineNumber": 74, "col_offset": 65, "nodeName": "run_over_time", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "safe_eval", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "exit_status", "type": "Any"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "TimeoutException", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "pynisher_mock", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "run", "type": "Callable[..., Tuple[Any, Any, float, Any]]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "SUCCESS", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "run", "type": "Callable[..., Tuple[Any, Any, float, Any]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 100, "col_offset": 76, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "FirstRunCrashedException", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "start", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "start", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 123, "col_offset": 76, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "pynisher_mock", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "run", "type": "Callable[..., Tuple[Any, Any, float, Any]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "CRASHED", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "pynisher_mock", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "run", "type": "Callable[..., Tuple[Any, Any, float, Any]]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "MEMOUT", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "pynisher_mock", "type": "Any"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "pynisher", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "run", "type": "Callable[..., Tuple[Any, Any, float, Any]]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "TIMEOUT", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 162, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "queue", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "pynisher_mock", "type": "Any"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "run", "type": "Callable[..., Tuple[Any, Any, float, Any]]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "SUCCESS", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "queue", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "eval_houldout_mock", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "start", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "SUCCESS", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "get_splitter", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 30, "nodeName": "cv", "type": "Any"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "StratifiedShuffleSplit", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "get_splitter", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 30, "nodeName": "cv", "type": "Any"}, {"lineNumber": 214, "col_offset": 34, "nodeName": "ShuffleSplit", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "get_splitter", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "cv", "type": "Any"}, {"lineNumber": 221, "col_offset": 34, "nodeName": "StratifiedKFold", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "get_splitter", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 30, "nodeName": "cv", "type": "Any"}, {"lineNumber": 228, "col_offset": 34, "nodeName": "StratifiedKFold", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 231, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "info", "type": "Dict[Any, Any]"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "get_splitter", "type": "Callable[[Any], Any]"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "cv", "type": "Any"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "ShuffleSplit", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 238, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "info", "type": "Dict[Any, Any]"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "ExecuteTaFuncWithQueue", "type": "Type[autosklearn.evaluation.ExecuteTaFuncWithQueue]"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "get_splitter", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 30, "nodeName": "cv", "type": "Any"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "KFold", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "StatusType", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "logging", "type": "module"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "mock", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "stats", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "tmp", "type": "str"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "tmp", "type": "str"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 62, "col_offset": 63, "nodeName": "float64", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "enforce_limits", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "safe_eval", "type": "Any"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "pynisher", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "enforce_limits", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "safe_eval", "type": "Any"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "pynisher", "type": "Any"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "logger", "type": "Any"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "stats", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "StatusType", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "logger", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "stats", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "logger", "type": "Any"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "stats", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "logger", "type": "Any"}, {"lineNumber": 119, "col_offset": 42, "nodeName": "stats", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "logger", "type": "Any"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "stats", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "StatusType", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 143, "col_offset": 43, "nodeName": "logger", "type": "Any"}, {"lineNumber": 144, "col_offset": 42, "nodeName": "stats", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "StatusType", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 156, "col_offset": 43, "nodeName": "logger", "type": "Any"}, {"lineNumber": 157, "col_offset": 42, "nodeName": "stats", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "StatusType", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "put", "type": "Any"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "logger", "type": "Any"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "stats", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "StatusType", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "info", "type": "Tuple[Any, Any, float, Any]"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "put", "type": "Any"}, {"lineNumber": 188, "col_offset": 43, "nodeName": "logger", "type": "Any"}, {"lineNumber": 189, "col_offset": 42, "nodeName": "stats", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "info", "type": "Any"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "StatusType", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "info", "type": "Any"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 199, "col_offset": 49, "nodeName": "stats", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "mock", "type": "module"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "AbstractDataManager", "type": "Type[autosklearn.data.abstract_data_manager.AbstractDataManager]"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "BINARY_CLASSIFICATION", "type": "int"}, {"lineNumber": 205, "col_offset": 69, "nodeName": "ta_args", "type": "Dict[Any, Any]"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "cross_validation", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 69, "nodeName": "ta_args", "type": "Dict[Any, Any]"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 214, "col_offset": 34, "nodeName": "cross_validation", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 38, "nodeName": "ta_args", "type": "Dict[Any, Any]"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 221, "col_offset": 34, "nodeName": "cross_validation", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 38, "nodeName": "ta_args", "type": "Dict[Any, Any]"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 228, "col_offset": 34, "nodeName": "cross_validation", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 231, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 233, "col_offset": 69, "nodeName": "ta_args", "type": "Dict[Any, Any]"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "cross_validation", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 238, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "D", "type": "unittest.mock.Mock"}, {"lineNumber": 241, "col_offset": 38, "nodeName": "ta_args", "type": "Dict[Any, Any]"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "ta", "type": "autosklearn.evaluation.ExecuteTaFuncWithQueue"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "cross_validation", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 62, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "pynisher", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "time", "type": "module"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "pynisher", "type": "Any"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "BackendMock", "type": "Type[BackendMock]"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 44, "nodeName": "BackendMock", "type": "Type[BackendMock]"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "BackendMock", "type": "Type[BackendMock]"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "BackendMock", "type": "Type[BackendMock]"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "BackendMock", "type": "Type[BackendMock]"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "BackendMock", "type": "Type[BackendMock]"}, {"lineNumber": 143, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 44, "nodeName": "BackendMock", "type": "Type[BackendMock]"}, {"lineNumber": 156, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "queue", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "SUCCESS", "type": "Any"}, {"lineNumber": 170, "col_offset": 44, "nodeName": "BackendMock", "type": "Type[BackendMock]"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "queue", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "SUCCESS", "type": "Any"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "BackendMock", "type": "Type[BackendMock]"}, {"lineNumber": 188, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 31, "nodeName": "BackendMock", "type": "Type[BackendMock]"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 199, "col_offset": 49, "nodeName": "self", "type": "EvaluationTest"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "unittest", "type": "module"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 214, "col_offset": 34, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 221, "col_offset": 34, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 228, "col_offset": 34, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "pynisher_mock", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "pynisher_mock", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "pynisher_mock", "type": "Any"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "pynisher_mock", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "StatusType", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "StatusType", "type": "Any"}, {"lineNumber": 184, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "np", "type": "module"}]