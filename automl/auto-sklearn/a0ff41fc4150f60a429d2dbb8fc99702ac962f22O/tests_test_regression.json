[{"lineNumber": 1, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "regressors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "_regressors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "r", "type": "str"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "regressors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "regressors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "_regressors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "regressors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "_preprocessors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "conditions", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "hyperparameters", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "default", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "cls", "type": "ParamSklearn.regression.ParamSklearnRegressor"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "X_test_", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "prediction_", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "cls_predict", "type": "mock.Mock"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "pipeline_", "type": "mock.Mock"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "cls_predict", "type": "mock.Mock"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "default", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "cls", "type": "ParamSklearn.regression.ParamSklearnRegressor"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "X_test_", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "prediction_", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "cls_predict", "type": "mock.Mock"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "pipeline_", "type": "mock.Mock"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "cls_predict", "type": "mock.Mock"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "regression_components", "type": "module"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "props", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "inp", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "inp", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "regression_components", "type": "module"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "preprocessing_components", "type": "module"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "cs", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "default", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "auto", "type": "ParamSklearn.regression.ParamSklearnRegressor"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "auto", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "model_score", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "get_hyperparameter_search_space", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "cs", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "get_conditions", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "get_hyperparameters", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "get_hyperparameter_search_space", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "get_hyperparameter_search_space", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "get_hyperparameter_search_space", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "get_hyperparameter_search_space", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "get_hyperparameter_search_space", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "get_hyperparameter_search_space", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "get_hyperparameter_search_space", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "get_default_configuration", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "ParamSklearnRegressor", "type": "Type[ParamSklearn.regression.ParamSklearnRegressor]"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "default", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "Y_test", "type": "Any"}, {"lineNumber": 194, "col_offset": 43, "nodeName": "get_dataset", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "predict", "type": "Any"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "X_test_", "type": "Any"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "cls", "type": "ParamSklearn.regression.ParamSklearnRegressor"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "predict", "type": "Any"}, {"lineNumber": 200, "col_offset": 33, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "prediction_", "type": "Any"}, {"lineNumber": 203, "col_offset": 47, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "get_hyperparameter_search_space", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "get_default_configuration", "type": "Any"}, {"lineNumber": 209, "col_offset": 14, "nodeName": "ParamSklearnRegressor", "type": "Type[ParamSklearn.regression.ParamSklearnRegressor]"}, {"lineNumber": 209, "col_offset": 36, "nodeName": "default", "type": "Any"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "get_dataset", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "predict", "type": "Any"}, {"lineNumber": 215, "col_offset": 34, "nodeName": "X_test_", "type": "Any"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "cls", "type": "ParamSklearn.regression.ParamSklearnRegressor"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "predict", "type": "Any"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 221, "col_offset": 34, "nodeName": "prediction_", "type": "Any"}, {"lineNumber": 221, "col_offset": 47, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 225, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 233, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "RegressorChoice", "type": "Type[ParamSklearn.components.regression.RegressorChoice]"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "get_properties", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "props", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "props", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "props", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "props", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "inp", "type": "Any"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "output", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "props", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 52, "nodeName": "props", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "props", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "props", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "regressors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "ParamSklearnRegressionAlgorithm", "type": "Type[ParamSklearn.components.base.ParamSklearnRegressionAlgorithm]"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "__bases__", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "ParamSklearnPreprocessingAlgorithm", "type": "Type[ParamSklearn.components.base.ParamSklearnPreprocessingAlgorithm]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "__bases__", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "get_hyperparameter_search_space", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "get_default_configuration", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "Y_test", "type": "Any"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "get_dataset", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "ParamSklearnRegressor", "type": "Type[ParamSklearn.regression.ParamSklearnRegressor]"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "default", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "fit", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "predict", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "Y_test", "type": "Any"}, {"lineNumber": 79, "col_offset": 56, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 80, "col_offset": 56, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "score", "type": "Any"}, {"lineNumber": 81, "col_offset": 60, "nodeName": "Y_test", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "model_score", "type": "Any"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "ParamSklearnRegressor", "type": "Type[ParamSklearn.regression.ParamSklearnRegressor]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "cs", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "cs", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "hyperparameters", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 90, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 55, "nodeName": "conditions", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "ParamSklearnRegressor", "type": "Type[ParamSklearn.regression.ParamSklearnRegressor]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "get_hyperparameter", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "ParamSklearnRegressor", "type": "Type[ParamSklearn.regression.ParamSklearnRegressor]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 101, "col_offset": 46, "nodeName": "cs", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "ParamSklearnRegressor", "type": "Type[ParamSklearn.regression.ParamSklearnRegressor]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "get_hyperparameter", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "ParamSklearnRegressor", "type": "Type[ParamSklearn.regression.ParamSklearnRegressor]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 110, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "cs", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "ParamSklearnRegressor", "type": "Type[ParamSklearn.regression.ParamSklearnRegressor]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "ParamSklearnRegressor", "type": "Type[ParamSklearn.regression.ParamSklearnRegressor]"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "ParamSklearnRegressor", "type": "Type[ParamSklearn.regression.ParamSklearnRegressor]"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "cs", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "cls", "type": "ParamSklearn.regression.ParamSklearnRegressor"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "cls", "type": "ParamSklearn.regression.ParamSklearnRegressor"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "mock", "type": "module"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "pipeline_", "type": "Any"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "cls", "type": "ParamSklearn.regression.ParamSklearnRegressor"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "predict", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "ParamSklearnRegressor", "type": "Type[ParamSklearn.regression.ParamSklearnRegressor]"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "cs", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "cls", "type": "ParamSklearn.regression.ParamSklearnRegressor"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "cls", "type": "ParamSklearn.regression.ParamSklearnRegressor"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "mock", "type": "module"}, {"lineNumber": 216, "col_offset": 38, "nodeName": "pipeline_", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "cls", "type": "ParamSklearn.regression.ParamSklearnRegressor"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "predict", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "regressors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "regression_components", "type": "module"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "i", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "PREDICTIONS", "type": "int"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "props", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "props", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "props", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "props", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "regressors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "ParamSklearnRegressor", "type": "Type[ParamSklearn.regression.ParamSklearnRegressor]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "cs", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "auto", "type": "ParamSklearn.regression.ParamSklearnRegressor"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "auto", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 77, "col_offset": 53, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "auto", "type": "Any"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "hyperparameters", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "cs", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "cs", "type": "Any"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "cls", "type": "ParamSklearn.regression.ParamSklearnRegressor"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "cls_predict", "type": "mock.Mock"}, {"lineNumber": 216, "col_offset": 38, "nodeName": "cls", "type": "ParamSklearn.regression.ParamSklearnRegressor"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "cls_predict", "type": "mock.Mock"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "r", "type": "str"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "regressors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "self", "type": "TestParamSKlearnRegressor"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "SPARSE", "type": "int"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "DENSE", "type": "int"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "SIGNED_DATA", "type": "int"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "UNSIGNED_DATA", "type": "int"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "key", "type": "str"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "regressors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "key", "type": "str"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "copy", "type": "module"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "copy", "type": "module"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "r", "type": "str"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "key", "type": "str"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "key", "type": "str"}]