[{"lineNumber": 77, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 9, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 9, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "ips", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "tds", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "dense1_1h", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "dense1", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "dense1_1h", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 49, "nodeName": "dense1", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "dense1_1h_minimum_fraction", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 60, "nodeName": "dense1", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "dense1_1h_minimum_fraction", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 66, "nodeName": "dense1", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "dense2_1h", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "dense2", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "dense2_1h", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "dense2", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "dense2_1h_minimum_fraction", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 60, "nodeName": "dense2", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "dense2_1h_minimum_fraction", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 66, "nodeName": "dense2", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "dense2_partial_1h", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "dense2", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 38, "nodeName": "dense2_partial_1h", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 57, "nodeName": "dense2", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "dense3_1h", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "dense3", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "dense3_1h", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "dense3", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 54, "nodeName": "sparse1", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 60, "nodeName": "sparse1", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 114, "col_offset": 42, "nodeName": "sparse1", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "sparse1", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 63, "nodeName": "sparse1", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 54, "nodeName": "sparse2", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 60, "nodeName": "sparse2", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 136, "col_offset": 42, "nodeName": "sparse2", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "sparse2", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 58, "nodeName": "sparse2_csr", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 64, "nodeName": "sparse2_csr", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "dense2", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "dense2_1h_minimum_fraction_as_sparse", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 70, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "dense2_1h_minimum_fraction_as_sparse", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 76, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "OneHotEncoder", "type": "Type[autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder]"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "fit_transform", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 158, "col_offset": 46, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "OneHotEncoder", "type": "Type[autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 167, "col_offset": 46, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "OneHotEncoder", "type": "Type[autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder]"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "fit_transform", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 177, "col_offset": 44, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "OneHotEncoder", "type": "Type[autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 184, "col_offset": 44, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 188, "col_offset": 14, "nodeName": "OneHotEncoder", "type": "Type[autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "todense", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "input", "type": "Any"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "OneHotEncoder", "type": "Type[autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "ips", "type": "Any"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 199, "col_offset": 38, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "todense", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "todense", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "todense", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "todense", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "todense", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "todense", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "todense", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "todense", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "categorical_features", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "minimum_fraction", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "copy", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 158, "col_offset": 46, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "astype", "type": "Any"}, {"lineNumber": 159, "col_offset": 50, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "todense", "type": "Any"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "categorical_features", "type": "Any"}, {"lineNumber": 164, "col_offset": 46, "nodeName": "minimum_fraction", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "ohe2", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "ohe2", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "copy", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 167, "col_offset": 46, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "todense", "type": "Any"}, {"lineNumber": 173, "col_offset": 49, "nodeName": "categorical_features", "type": "Any"}, {"lineNumber": 174, "col_offset": 59, "nodeName": "minimum_fraction", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "copy", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 50, "nodeName": "categorical_features", "type": "Any"}, {"lineNumber": 180, "col_offset": 60, "nodeName": "minimum_fraction", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "ohe2", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "ohe2", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "copy", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 192, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoderTest"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "sparse1_1h", "type": "Any"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "sparse1_1h", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "sparse1_paratial_1h", "type": "Any"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "sparse2_1h", "type": "Any"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "sparse2_1h", "type": "Any"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "sparse2_csr_1h", "type": "Any"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "sparse2_csr_1h", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "input", "type": "Any"}, {"lineNumber": 158, "col_offset": 46, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "input", "type": "Any"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "input", "type": "Any"}, {"lineNumber": 167, "col_offset": 46, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "input", "type": "Any"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "input", "type": "Any"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "input", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "tds", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}]