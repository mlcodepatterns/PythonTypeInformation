[{"lineNumber": 10, "col_offset": 0, "nodeName": "this_directory", "type": "str"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 10, "col_offset": 17, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 10, "col_offset": 33, "nodeName": "__file__", "type": "str"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "append", "type": "Callable"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "this_directory", "type": "str"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 10, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "this_directory", "type": "str"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "success", "type": "bool"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "to_test", "type": "Tuple[Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int]]"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "to_test", "type": "Tuple[Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "to_test", "type": "Tuple[Tuple[float, int, int], Tuple[float, float, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, float, int], Tuple[int, float, int]]"}, {"lineNumber": 136, "col_offset": 64, "nodeName": "to_test", "type": "Tuple[Tuple[float, int, int], Tuple[float, float, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, float, int], Tuple[int, float, int]]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "fixture", "type": "str"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "d1", "type": "str"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "d2", "type": "str"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "d3", "type": "str"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "SAVE2DISC", "type": "bool"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "d2", "type": "str"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "ensemble", "type": "Optional[autosklearn.ensembles.ensemble_selection.EnsembleSelection]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "y_valid", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "y_valid_d2", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "SAVE2DISC", "type": "bool"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "ensbuilder", "type": "EnsembleBuilderMemMock"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "SAVE2DISC", "type": "bool"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "ensemble", "type": "autosklearn.ensembles.ensemble_selection.EnsembleSelection"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "per_model_pred", "type": "numpy.ndarray"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "weights_", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "pred", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "truth", "type": "numpy.ndarray"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "per_model_pred", "type": "numpy.ndarray"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "weights_", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "pred", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "truth", "type": "numpy.ndarray"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "per_model_pred", "type": "numpy.ndarray"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "weights_", "type": "Any"}, {"lineNumber": 10, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "this_directory", "type": "str"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "BackendMock", "type": "Type[BackendMock]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "read_ensemble_preds", "type": "Callable[[], bool]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "success", "type": "bool"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "fixture", "type": "str"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "performance_range_threshold", "type": "Any"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "exp", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "performance_range_threshold", "type": "Any"}, {"lineNumber": 136, "col_offset": 41, "nodeName": "ensemble_nbest", "type": "Any"}, {"lineNumber": 136, "col_offset": 57, "nodeName": "exp", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "read_ensemble_preds", "type": "Callable[[], bool]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "fixture", "type": "str"}, {"lineNumber": 203, "col_offset": 21, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "read_ensemble_preds", "type": "Callable[[], bool]"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "get_valid_test_preds", "type": "Callable[[List[Any]], Tuple[List[Any], List[Any]]]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "read_ensemble_preds", "type": "Callable[[], bool]"}, {"lineNumber": 256, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "fit_ensemble", "type": "Callable[[List[Any]], Optional[autosklearn.ensembles.ensemble_selection.EnsembleSelection]]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 14, "nodeName": "ensemble", "type": "Optional[autosklearn.ensembles.ensemble_selection.EnsembleSelection]"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "n_sel_valid", "type": "List[Any]"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "n_sel_test", "type": "List[Any]"}, {"lineNumber": 267, "col_offset": 34, "nodeName": "get_valid_test_preds", "type": "Callable[[List[Any]], Tuple[List[Any], List[Any]]]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "n_sel_valid", "type": "List[Any]"}, {"lineNumber": 271, "col_offset": 38, "nodeName": "n_sel_test", "type": "List[Any]"}, {"lineNumber": 273, "col_offset": 18, "nodeName": "predict", "type": "Callable[[str, autosklearn.ensembles.abstract_ensemble.AbstractEnsemble, List[Any], int, int], Any]"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "predict", "type": "Callable[[str, autosklearn.ensembles.abstract_ensemble.AbstractEnsemble, List[Any], int, int], Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 290, "col_offset": 45, "nodeName": "y_valid", "type": "Any"}, {"lineNumber": 290, "col_offset": 54, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 296, "col_offset": 45, "nodeName": "y_valid", "type": "Any"}, {"lineNumber": 296, "col_offset": 54, "nodeName": "y_valid_d2", "type": "Any"}, {"lineNumber": 300, "col_offset": 21, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "main", "type": "Callable[..., Optional[Tuple[Any, Any]]]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 316, "col_offset": 29, "nodeName": "last_hash", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "y_true_ensemble", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "EnsembleBuilderMemMock", "type": "Type[EnsembleBuilderMemMock]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "ensbuilder", "type": "EnsembleBuilderMemMock"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "run", "type": "Callable[[], None]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "ensemble_nbest", "type": "Union[float, int]"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "EnsembleSelection", "type": "Type[autosklearn.ensembles.ensemble_selection.EnsembleSelection]"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "ensemble", "type": "autosklearn.ensembles.ensemble_selection.EnsembleSelection"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 366, "col_offset": 32, "nodeName": "per_model_pred", "type": "numpy.ndarray"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "ensemble", "type": "autosklearn.ensembles.ensemble_selection.EnsembleSelection"}, {"lineNumber": 382, "col_offset": 15, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 382, "col_offset": 32, "nodeName": "per_model_pred", "type": "numpy.ndarray"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 388, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "ensemble", "type": "autosklearn.ensembles.ensemble_selection.EnsembleSelection"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "__file__", "type": "str"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "load", "type": "Any"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "roc_auc", "type": "autosklearn.metrics._ThresholdScorer"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "read_ensemble_preds", "type": "Callable[[], bool]"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "fixture", "type": "str"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 162, "col_offset": 45, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 165, "col_offset": 44, "nodeName": "roc_auc", "type": "autosklearn.metrics._ThresholdScorer"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 203, "col_offset": 45, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 206, "col_offset": 44, "nodeName": "roc_auc", "type": "autosklearn.metrics._ThresholdScorer"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 229, "col_offset": 54, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "roc_auc", "type": "autosklearn.metrics._ThresholdScorer"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 256, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 262, "col_offset": 31, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 264, "col_offset": 57, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 267, "col_offset": 34, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 267, "col_offset": 80, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 270, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "n_sel_valid", "type": "List[Any]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 273, "col_offset": 18, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "ensemble", "type": "Optional[autosklearn.ensembles.ensemble_selection.EnsembleSelection]"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "n_sel_valid", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "ensemble", "type": "Optional[autosklearn.ensembles.ensemble_selection.EnsembleSelection]"}, {"lineNumber": 283, "col_offset": 26, "nodeName": "n_sel_test", "type": "List[Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "roc_auc", "type": "autosklearn.metrics._ThresholdScorer"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 315, "col_offset": 29, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 316, "col_offset": 29, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 320, "col_offset": 52, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 323, "col_offset": 51, "nodeName": "roc_auc", "type": "autosklearn.metrics._ThresholdScorer"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "ensbuilder", "type": "EnsembleBuilderMemMock"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "ensbuilder", "type": "EnsembleBuilderMemMock"}, {"lineNumber": 353, "col_offset": 44, "nodeName": "accuracy", "type": "autosklearn.metrics._PredictScorer"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "ensemble", "type": "autosklearn.ensembles.ensemble_selection.EnsembleSelection"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "EnsembleSelectionTest"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 369, "col_offset": 36, "nodeName": "pred", "type": "Any"}, {"lineNumber": 369, "col_offset": 42, "nodeName": "truth", "type": "numpy.ndarray"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 382, "col_offset": 15, "nodeName": "ensemble", "type": "autosklearn.ensembles.ensemble_selection.EnsembleSelection"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "self", "type": "EnsembleSelectionTest"}, {"lineNumber": 385, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 385, "col_offset": 36, "nodeName": "pred", "type": "Any"}, {"lineNumber": 385, "col_offset": 42, "nodeName": "truth", "type": "numpy.ndarray"}, {"lineNumber": 388, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 400, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 401, "col_offset": 29, "nodeName": "per_model_pred", "type": "numpy.ndarray"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "roc_auc", "type": "autosklearn.metrics._ThresholdScorer"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "ensemble_nbest", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "models_in_disc", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "roc_auc", "type": "autosklearn.metrics._ThresholdScorer"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "performance_range_threshold", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "roc_auc", "type": "autosklearn.metrics._ThresholdScorer"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "ensemble_nbest", "type": "Any"}, {"lineNumber": 145, "col_offset": 44, "nodeName": "performance_range_threshold", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 45, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "filename", "type": "str"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "filename", "type": "str"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "filename", "type": "str"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 203, "col_offset": 45, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 232, "col_offset": 52, "nodeName": "Y_VALID", "type": "int"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 233, "col_offset": 52, "nodeName": "Y_TEST", "type": "int"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 234, "col_offset": 52, "nodeName": "Y_VALID", "type": "int"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 235, "col_offset": 52, "nodeName": "Y_TEST", "type": "int"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 238, "col_offset": 55, "nodeName": "Y_VALID", "type": "int"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 239, "col_offset": 55, "nodeName": "Y_TEST", "type": "int"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 256, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 277, "col_offset": 24, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 295, "col_offset": 47, "nodeName": "Y_VALID", "type": "int"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 315, "col_offset": 29, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 320, "col_offset": 52, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 385, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "self", "type": "EnsembleSelectionTest"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "ensemble", "type": "autosklearn.ensembles.ensemble_selection.EnsembleSelection"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "self", "type": "BackendMock"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "filename", "type": "str"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "filename", "type": "str"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 232, "col_offset": 48, "nodeName": "d1", "type": "str"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 233, "col_offset": 48, "nodeName": "d1", "type": "str"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 234, "col_offset": 48, "nodeName": "d3", "type": "str"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 235, "col_offset": 48, "nodeName": "d3", "type": "str"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 238, "col_offset": 51, "nodeName": "d2", "type": "str"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 239, "col_offset": 51, "nodeName": "d2", "type": "str"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 295, "col_offset": 43, "nodeName": "d2", "type": "str"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "os", "type": "module"}]