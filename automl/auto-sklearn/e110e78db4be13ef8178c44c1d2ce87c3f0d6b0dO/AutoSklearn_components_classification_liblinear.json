[{"lineNumber": 11, "col_offset": 20, "nodeName": "AutoSklearnClassificationAlgorithm", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "fit", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "predict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "handles_missing_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "handles_nominal_features", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "handles_numeric_features", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "handles_non_binary_classes", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "get_meta_information", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "get_hyperparameter_search_space", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "get_all_accepted_hyperparameter_names", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "loss", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "C", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "C", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "dual", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "dual", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "estimator", "type": "None"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "C", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "dual", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "cs", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "dual", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "dual", "type": "bool"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "C", "type": "float"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "LinearSVC", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "Y", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "predict", "type": "Any"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "UniformFloatHyperparameter", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "Constant", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "add_hyperparameter", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "add_hyperparameter", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "loss", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "add_hyperparameter", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "C", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "add_hyperparameter", "type": "Any"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "dual", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "ForbiddenAndConjunction", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "ForbiddenAndConjunction", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "add_forbidden_clause", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "penalty_and_loss", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "add_forbidden_clause", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "constant_penalty_and_loss", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "dual", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "dual", "type": "bool"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "svm", "type": "Any"}, {"lineNumber": 33, "col_offset": 55, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 34, "col_offset": 52, "nodeName": "loss", "type": "Any"}, {"lineNumber": 34, "col_offset": 65, "nodeName": "C", "type": "float"}, {"lineNumber": 35, "col_offset": 60, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "ForbiddenEqualsClause", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "ForbiddenEqualsClause", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "ForbiddenEqualsClause", "type": "Any"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "dual", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "ForbiddenEqualsClause", "type": "Any"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "ForbiddenEqualsClause", "type": "Any"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 34, "col_offset": 52, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 34, "col_offset": 65, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 35, "col_offset": 60, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "LibLinear_SVC"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "self", "type": "LibLinear_SVC"}]