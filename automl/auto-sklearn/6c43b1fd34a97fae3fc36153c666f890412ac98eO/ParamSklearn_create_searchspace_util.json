[{"lineNumber": 10, "col_offset": 0, "nodeName": "get_match_array", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "_get_idx_to_keep", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "sanitize_arrays", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "add_forbidden", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "preprocessors_list", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "estimator_list", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "matches", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "matches", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "keep_row", "type": "List[int]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "keep_col", "type": "List[int]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "preproc_list", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "est_list", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "new_est", "type": "Dict[Any, Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "est_list", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "new_preproc", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "preproc_list", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "conf_space", "type": "Any"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "pidx", "type": "int"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "p", "type": "Any"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "preprocessors_list", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "p_in", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "p_out", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "idx", "type": "int"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "idx", "type": "int"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "keep_col", "type": "List[int]"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "keep_row", "type": "List[int]"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "keep_col", "type": "List[int]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "keep_row", "type": "List[int]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "_get_idx_to_keep", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 42, "nodeName": "m", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "m", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "preproc_list", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "est_list", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "new_preproc", "type": "Dict[Any, Any]"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "new_est", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "est_type", "type": "Any"}, {"lineNumber": 85, "col_offset": 73, "nodeName": "est_type", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "pdx", "type": "int"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "p", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "preproc_list", "type": "Any"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "preprocessors", "type": "Any"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "cidx", "type": "int"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "c", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "estimator_list", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "c_in", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "idx", "type": "int"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "idx", "type": "int"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "preprocessors_list", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "estimators_list", "type": "Any"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "preprocessors_list", "type": "Any"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "p", "type": "int"}, {"lineNumber": 69, "col_offset": 51, "nodeName": "keep_row", "type": "List[int]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "estimators_list", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "p", "type": "int"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "keep_col", "type": "List[int]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "new_est", "type": "Dict[Any, Any]"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "new_preproc", "type": "Dict[Any, Any]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "preprocessors", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "new_preproc", "type": "Dict[Any, Any]"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "new_est", "type": "Dict[Any, Any]"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "cdx", "type": "int"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "c", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "est_list", "type": "Any"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "preprocessors", "type": "Any"}, {"lineNumber": 18, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 18, "col_offset": 48, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "get_properties", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "get_properties", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "p_out", "type": "Any"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "INPUT", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "keys", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "keys", "type": "Any"}, {"lineNumber": 67, "col_offset": 10, "nodeName": "keep_row", "type": "List[int]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "keep_col", "type": "List[int]"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "p", "type": "int"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "p", "type": "int"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "m", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "m", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "SPARSE", "type": "Any"}, {"lineNumber": 24, "col_offset": 38, "nodeName": "p_in", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "get_properties", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "sum", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 55, "col_offset": 52, "nodeName": "sum", "type": "Any"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "preprocessors", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "matches", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "matches", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "matches", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "preprocessors", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "preprocessors", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "DENSE", "type": "Any"}, {"lineNumber": 26, "col_offset": 41, "nodeName": "p_in", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "matches", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "p_out", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "DENSE", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "DENSE", "type": "Any"}, {"lineNumber": 40, "col_offset": 45, "nodeName": "c_in", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "matches", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "m", "type": "Any"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 59, "nodeName": "m", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "m", "type": "Any"}, {"lineNumber": 55, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 59, "nodeName": "m", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "add_forbidden_clause", "type": "Any"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "estimators", "type": "Any"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "SPARSE", "type": "Any"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "c_in", "type": "Any"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "DENSE", "type": "Any"}, {"lineNumber": 33, "col_offset": 49, "nodeName": "c_in", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "p_out", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "SPARSE", "type": "Any"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "SPARSE", "type": "Any"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "c_in", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "matches", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "pdx", "type": "int"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "pdx", "type": "int"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "cdx", "type": "int"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "conf_space", "type": "Any"}, {"lineNumber": 93, "col_offset": 52, "nodeName": "ForbiddenAndConjunction", "type": "Any"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "c", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "pidx", "type": "int"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "cidx", "type": "int"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "pidx", "type": "int"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "cidx", "type": "int"}, {"lineNumber": 54, "col_offset": 61, "nodeName": "idx", "type": "int"}, {"lineNumber": 55, "col_offset": 64, "nodeName": "idx", "type": "int"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "ForbiddenEqualsClause", "type": "Any"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "c", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "ForbiddenEqualsClause", "type": "Any"}, {"lineNumber": 97, "col_offset": 45, "nodeName": "p", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "pidx", "type": "int"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "cidx", "type": "int"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "get_hyperparameter", "type": "Any"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "est_type", "type": "Any"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "get_hyperparameter", "type": "Any"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "conf_space", "type": "Any"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "conf_space", "type": "Any"}]