[{"lineNumber": 39, "col_offset": 0, "nodeName": "get_last_result", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "metric", "type": "Any"}, {"lineNumber": 21, "col_offset": 7, "nodeName": "all_scoring_functions", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "score", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "get_metric", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "metric", "type": "Any"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "task_type", "type": "Any"}, {"lineNumber": 18, "col_offset": 7, "nodeName": "task_type", "type": "Any"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "TASK_TYPES", "type": "List[int]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "score", "type": "Dict[Any, Any]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "metric_", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 19, "col_offset": 34, "nodeName": "task_type", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "task_type", "type": "Any"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "REGRESSION_TASKS", "type": "List[int]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "get_all_known_metrics", "type": "Callable[[Any], Generator[Any, Any, None]]"}, {"lineNumber": 27, "col_offset": 45, "nodeName": "task_type", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "task_type", "type": "Any"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "REGRESSION_TASKS", "type": "List[int]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "calculate_score", "type": "Any"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "solution", "type": "Any"}, {"lineNumber": 34, "col_offset": 49, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "rval", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "Empty", "type": "Type[queue.Empty]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "rval", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "sanitize_array", "type": "Callable"}, {"lineNumber": 25, "col_offset": 40, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "score", "type": "Dict[Any, Any]"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "calculate_score", "type": "Any"}, {"lineNumber": 28, "col_offset": 58, "nodeName": "solution", "type": "Any"}, {"lineNumber": 28, "col_offset": 68, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "sanitize_array", "type": "Callable"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "metric", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "queue", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "stack", "type": "List[Any]"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "metric_", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "queue_", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "metric_", "type": "Any"}]