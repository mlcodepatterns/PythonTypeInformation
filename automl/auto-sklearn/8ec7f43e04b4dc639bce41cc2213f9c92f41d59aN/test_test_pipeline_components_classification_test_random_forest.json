[{"lineNumber": 12, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "cls", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "randint", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "targets", "type": "Any"}, {"lineNumber": 15, "col_offset": 35, "nodeName": "_test_classifier", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 15, "col_offset": 52, "nodeName": "RandomForest", "type": "Type[autosklearn.pipeline.components.classification.random_forest.RandomForest]"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "targets", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "_test_classifier", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 21, "col_offset": 52, "nodeName": "RandomForest", "type": "Type[autosklearn.pipeline.components.classification.random_forest.RandomForest]"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "_test_classifier_iterative_fit", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 29, "col_offset": 47, "nodeName": "RandomForest", "type": "Type[autosklearn.pipeline.components.classification.random_forest.RandomForest]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "_test_classifier", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 36, "col_offset": 52, "nodeName": "RandomForest", "type": "Type[autosklearn.pipeline.components.classification.random_forest.RandomForest]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "_test_classifier", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 44, "col_offset": 52, "nodeName": "RandomForest", "type": "Type[autosklearn.pipeline.components.classification.random_forest.RandomForest]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "_test_classifier_predict_proba", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "RandomForest", "type": "Type[autosklearn.pipeline.components.classification.random_forest.RandomForest]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "ensemble", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "cls", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "self", "type": "RandomForestComponentTest"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 17, "col_offset": 47, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 17, "col_offset": 60, "nodeName": "targets", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "self", "type": "RandomForestComponentTest"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 23, "col_offset": 66, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 24, "col_offset": 66, "nodeName": "targets", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "self", "type": "RandomForestComponentTest"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 32, "col_offset": 52, "nodeName": "targets", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "RandomForestComponentTest"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "targets", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "RandomForestComponentTest"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "accuracy_score", "type": "Any"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "targets", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "RandomForestComponentTest"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "RandomForestComponentTest"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "average_precision_score", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "targets", "type": "Any"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "sklearn", "type": "Any"}]