[{"lineNumber": 80, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 23, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "input_copy", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "input_copy", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "ips", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "tds", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "X_test_", "type": "Any"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "_fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "dense1_1h", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "dense1", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "_fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "dense1_1h", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "dense1", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "dense1_1h_minimum_fraction", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 61, "nodeName": "dense1", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "_fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "dense1_1h_minimum_fraction", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 67, "nodeName": "dense1", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "dense2_1h", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "dense2", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "dense2_1h", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "dense2", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "_fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "dense2_1h_minimum_fraction", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 61, "nodeName": "dense2", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "dense2_1h_minimum_fraction", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 67, "nodeName": "dense2", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "_fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "dense2_partial_1h", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 52, "nodeName": "dense2", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "_fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "dense2_partial_1h", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 58, "nodeName": "dense2", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "dense3_1h", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "dense3", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "dense3_1h", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 50, "nodeName": "dense3", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "_fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 55, "nodeName": "sparse1", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 61, "nodeName": "sparse1", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "_fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "sparse1", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "_fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "expected", "type": "Any"}, {"lineNumber": 119, "col_offset": 49, "nodeName": "sparse1", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "_fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 64, "nodeName": "sparse1", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "_fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 55, "nodeName": "sparse2", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "_fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 61, "nodeName": "sparse2", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "_fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "expected", "type": "Any"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "sparse2", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "_fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "expected", "type": "Any"}, {"lineNumber": 141, "col_offset": 49, "nodeName": "sparse2", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "_fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 59, "nodeName": "sparse2_csr", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "_fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 65, "nodeName": "sparse2_csr", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "dense2", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "_fit_then_transform", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "dense2_1h_minimum_fraction_as_sparse", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 71, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "_fit_then_transform_dense", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "dense2_1h_minimum_fraction_as_sparse", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 77, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "copy", "type": "Any"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "OneHotEncoder", "type": "Type[autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "fit_transform", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "input", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 162, "col_offset": 46, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "_check_arrays_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "input", "type": "Any"}, {"lineNumber": 165, "col_offset": 40, "nodeName": "input_copy", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "OneHotEncoder", "type": "Type[autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "input", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "input", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "_check_arrays_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "input", "type": "Any"}, {"lineNumber": 174, "col_offset": 40, "nodeName": "input_copy", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "copy", "type": "Any"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "OneHotEncoder", "type": "Type[autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder]"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "fit_transform", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 43, "nodeName": "input", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 184, "col_offset": 44, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "_check_arrays_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 185, "col_offset": 33, "nodeName": "input", "type": "Any"}, {"lineNumber": 185, "col_offset": 40, "nodeName": "input_copy", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "OneHotEncoder", "type": "Type[autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "input", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "input", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 191, "col_offset": 46, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 192, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 192, "col_offset": 44, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "_check_arrays_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "input", "type": "Any"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "input_copy", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "a1", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "a1", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 198, "col_offset": 33, "nodeName": "a2", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "a2", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 200, "col_offset": 34, "nodeName": "a1", "type": "Any"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "a2", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "OneHotEncoder", "type": "Type[autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "todense", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 211, "col_offset": 14, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "input", "type": "Any"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "OneHotEncoder", "type": "Type[autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "ips", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 215, "col_offset": 38, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "todense", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "OneHotEncoder", "type": "Type[autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder]"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "DecisionTreeClassifier", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "train_test_split", "type": "Any"}, {"lineNumber": 246, "col_offset": 54, "nodeName": "X", "type": "List[Union[List[float], List[Any]]]"}, {"lineNumber": 246, "col_offset": 57, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "fit_transform", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 248, "col_offset": 17, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 32, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "todense", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "todense", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "todense", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "todense", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "todense", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "todense", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "todense", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "input", "type": "Any"}, {"lineNumber": 159, "col_offset": 49, "nodeName": "categorical_features", "type": "Any"}, {"lineNumber": 160, "col_offset": 45, "nodeName": "minimum_fraction", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 162, "col_offset": 46, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "astype", "type": "Any"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "todense", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 168, "col_offset": 50, "nodeName": "categorical_features", "type": "Any"}, {"lineNumber": 169, "col_offset": 46, "nodeName": "minimum_fraction", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "ohe2", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "ohe2", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "todense", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "input", "type": "Any"}, {"lineNumber": 180, "col_offset": 49, "nodeName": "categorical_features", "type": "Any"}, {"lineNumber": 181, "col_offset": 59, "nodeName": "minimum_fraction", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 187, "col_offset": 50, "nodeName": "categorical_features", "type": "Any"}, {"lineNumber": 188, "col_offset": 60, "nodeName": "minimum_fraction", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "ohe2", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "ohe2", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 191, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 208, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 211, "col_offset": 14, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "tree", "type": "Any"}, {"lineNumber": 225, "col_offset": 54, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 229, "col_offset": 54, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "cross_validation", "type": "Any"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "TestOneHotEncoder"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "sparse1_1h", "type": "Any"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "sparse1_1h", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "sparse1_paratial_1h", "type": "Any"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "sparse2_1h", "type": "Any"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "sparse2_1h", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "sparse2_csr_1h", "type": "Any"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "sparse2_csr_1h", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 162, "col_offset": 46, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "a1", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "a2", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 211, "col_offset": 14, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 31, "nodeName": "tds", "type": "Any"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 225, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 33, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 33, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "ohe", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "predict", "type": "Any"}, {"lineNumber": 250, "col_offset": 57, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 253, "col_offset": 43, "nodeName": "predict", "type": "Any"}, {"lineNumber": 253, "col_offset": 56, "nodeName": "X_test_", "type": "Any"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "tree", "type": "Any"}, {"lineNumber": 253, "col_offset": 43, "nodeName": "tree", "type": "Any"}]