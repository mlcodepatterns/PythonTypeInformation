[{"lineNumber": 16, "col_offset": 20, "nodeName": "AutoSklearnPreprocessingAlgorithm", "type": "Type[autosklearn.pipeline.components.base.AutoSklearnPreprocessingAlgorithm]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "use_minimum_fraction", "type": "Any"}, {"lineNumber": 21, "col_offset": 36, "nodeName": "use_minimum_fraction", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "minimum_fraction", "type": "Any"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "minimum_fraction", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "categorical_features", "type": "Any"}, {"lineNumber": 23, "col_offset": 36, "nodeName": "categorical_features", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "use_minimum_fraction", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "is_sparse", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "is_sparse", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "is_sparse", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "is_sparse", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "cs", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "check_for_bool", "type": "Callable[[Any], bool]"}, {"lineNumber": 26, "col_offset": 51, "nodeName": "use_minimum_fraction", "type": "bool"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "use_minimum_fraction", "type": "bool"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "minimum_fraction", "type": "None"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "minimum_fraction", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "check_none", "type": "Callable[[Any], bool]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "categorical_features", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "categorical_features", "type": "List[nothing]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "categorical_features", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "categorical_features", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "OneHotEncoder", "type": "Type[autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "fit_transform", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "X", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "_fit", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "X", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "X", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "_fit", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "X", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "preprocessor", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "UniformFloatHyperparameter", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "add_hyperparameters", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "add_condition", "type": "Any"}, {"lineNumber": 26, "col_offset": 51, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "minimum_fraction", "type": "float"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "OneHotEncoder", "type": "module"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "minimum_fraction", "type": "Optional[float]"}, {"lineNumber": 39, "col_offset": 48, "nodeName": "categorical_features", "type": "Union[List[nothing], Any]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "preprocessor", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "preprocessor", "type": "autosklearn.pipeline.implementations.OneHotEncoder.OneHotEncoder"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "DENSE", "type": "int"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "SPARSE", "type": "int"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "UNSIGNED_DATA", "type": "int"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "INPUT", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "use_minimum_fraction", "type": "Any"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "minimum_fraction", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "EqualsCondition", "type": "Any"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "minimum_fraction", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "use_minimum_fraction", "type": "Any"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "implementations", "type": "module"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "OneHotEncoder"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "pipeline", "type": "module"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "autosklearn", "type": "module"}]