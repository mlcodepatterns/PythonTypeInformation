[{"lineNumber": 20, "col_offset": 42, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 20, "col_offset": 42, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "PCA", "type": "Type[ParamSklearn.components.preprocessing.pca.PCA]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "classifiers", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.classification.random_forest.RandomForest], Type[ParamSklearn.components.classification.liblinear_svc.LibLinear_SVC]]]"}, {"lineNumber": 27, "col_offset": 39, "nodeName": "RandomForest", "type": "Type[ParamSklearn.components.classification.random_forest.RandomForest]"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "TruncatedSVD", "type": "Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD]"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "NoPreprocessing", "type": "Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing]"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "LibLinear_SVC", "type": "Type[ParamSklearn.components.classification.liblinear_svc.LibLinear_SVC]"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "RandomTreesEmbedding", "type": "Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "c_keep", "type": "Set[Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "r_keep", "type": "Set[Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "preprocessors_list", "type": "List[str]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "preprocessors", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "classifier_list", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "classifiers", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "m", "type": "numpy.ndarray"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "preprocessors_list", "type": "List[str]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "classifier_list", "type": "List[str]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "classifiers", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.classification.random_forest.RandomForest], Type[ParamSklearn.components.classification.liblinear_svc.LibLinear_SVC]]]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "get_match_array", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "get_match_array", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "get_match_array", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "get_match_array", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "get_match_array", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "get_match_array", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "classifiers", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.classification.random_forest.RandomForest], Type[ParamSklearn.components.classification.liblinear_svc.LibLinear_SVC]]]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "get_match_array", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "get_match_array", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "get_match_array", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "get_match_array", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "row", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "_get_idx_to_keep", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 100, "col_offset": 73, "nodeName": "m", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "col", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "row", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "col_idx", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "row_idx", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "sanitize_arrays", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any, Any, Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "class_idx", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "pre_idx", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "sanitize_arrays", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any, Any, Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "preprocessors_list", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 49, "nodeName": "new_preprocessors_list", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 51, "nodeName": "new_classifier_list", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "add_hyperparameter", "type": "Any"}, {"lineNumber": 174, "col_offset": 30, "nodeName": "preprocessor", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "add_hyperparameter", "type": "Any"}, {"lineNumber": 175, "col_offset": 30, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "add_forbidden", "type": "Callable"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 30, "nodeName": "new_cs", "type": "Any"}, {"lineNumber": 180, "col_offset": 38, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "m", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "add_forbidden", "type": "Callable"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "new_cs", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "classifiers", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.classification.random_forest.RandomForest], Type[ParamSklearn.components.classification.liblinear_svc.LibLinear_SVC]]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "m", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 34, "col_offset": 52, "nodeName": "classifiers", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.classification.random_forest.RandomForest], Type[ParamSklearn.components.classification.liblinear_svc.LibLinear_SVC]]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "classifiers", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.classification.random_forest.RandomForest], Type[ParamSklearn.components.classification.liblinear_svc.LibLinear_SVC]]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "classifiers", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.classification.random_forest.RandomForest], Type[ParamSklearn.components.classification.liblinear_svc.LibLinear_SVC]]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 53, "col_offset": 52, "nodeName": "classifiers", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.classification.random_forest.RandomForest], Type[ParamSklearn.components.classification.liblinear_svc.LibLinear_SVC]]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "classifiers", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.classification.random_forest.RandomForest], Type[ParamSklearn.components.classification.liblinear_svc.LibLinear_SVC]]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 68, "col_offset": 52, "nodeName": "classifiers", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.classification.random_forest.RandomForest], Type[ParamSklearn.components.classification.liblinear_svc.LibLinear_SVC]]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "classifiers", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.classification.random_forest.RandomForest], Type[ParamSklearn.components.classification.liblinear_svc.LibLinear_SVC]]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 83, "col_offset": 52, "nodeName": "classifiers", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.classification.random_forest.RandomForest], Type[ParamSklearn.components.classification.liblinear_svc.LibLinear_SVC]]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "preprocessors", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.preprocessing.pca.PCA], Type[ParamSklearn.components.preprocessing.truncatedSVD.TruncatedSVD], Type[ParamSklearn.components.preprocessing.no_preprocessing.NoPreprocessing], Type[ParamSklearn.components.preprocessing.random_trees_embedding.RandomTreesEmbedding]]]"}, {"lineNumber": 91, "col_offset": 52, "nodeName": "classifiers", "type": "collections.OrderedDict[str, Union[Type[ParamSklearn.components.classification.random_forest.RandomForest], Type[ParamSklearn.components.classification.liblinear_svc.LibLinear_SVC]]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "col_idx", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "row_idx", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "col", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "row", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "_get_idx_to_keep", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 113, "col_offset": 77, "nodeName": "m", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "col", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "row", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "m", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "preprocessors", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "preprocessors_list", "type": "List[str]"}, {"lineNumber": 130, "col_offset": 66, "nodeName": "classifiers", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "classifier_list", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "new_m", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "sanitize_arrays", "type": "Callable[[Any, Any, Any, Any, Any], Tuple[Any, Any, Any, Dict[Any, Any], Dict[Any, Any]]]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 55, "nodeName": "new_preprocessors_list", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 55, "nodeName": "preprocessors", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 54, "nodeName": "new_classifier_list", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 54, "nodeName": "classifiers", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "m", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "preprocessors", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 156, "col_offset": 35, "nodeName": "preprocessors_list", "type": "List[str]"}, {"lineNumber": 156, "col_offset": 66, "nodeName": "classifiers", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "classifier_list", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "p", "type": "str"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "preprocessors", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "p", "type": "str"}, {"lineNumber": 159, "col_offset": 50, "nodeName": "preprocessors_list", "type": "List[str]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "classifier_list", "type": "List[str]"}, {"lineNumber": 161, "col_offset": 9, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "c", "type": "Any"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "classifiers", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "c", "type": "Any"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "new_classifier_list", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 171, "col_offset": 57, "nodeName": "preprocessors_list", "type": "List[str]"}, {"lineNumber": 173, "col_offset": 55, "nodeName": "classifier_list", "type": "List[str]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "cs", "type": "Any"}, {"lineNumber": 177, "col_offset": 40, "nodeName": "preprocessors_list", "type": "List[str]"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "classifier_list", "type": "List[str]"}, {"lineNumber": 178, "col_offset": 46, "nodeName": "m", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "forbidden_clauses", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "cs", "type": "Any"}, {"lineNumber": 184, "col_offset": 40, "nodeName": "preprocessors_list", "type": "List[str]"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "classifier_list", "type": "List[str]"}, {"lineNumber": 185, "col_offset": 46, "nodeName": "m", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "forbidden_clauses", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "_get_pipeline", "type": "Callable[[], List[str]]"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "_get_pipeline", "type": "Callable[[], List[str]]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "_get_pipeline", "type": "Callable[[], List[str]]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "_get_pipeline", "type": "Callable[[], List[str]]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "_get_pipeline", "type": "Callable[[], List[str]]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "_get_pipeline", "type": "Callable[[], List[str]]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "_get_pipeline", "type": "Callable[[], List[str]]"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "_get_pipeline", "type": "Callable[[], List[str]]"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "_get_pipeline", "type": "Callable[[], List[str]]"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "_get_pipeline", "type": "Callable[[], List[str]]"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "m", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "randint", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "c_keep", "type": "Set[Any]"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "randint", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "r_keep", "type": "Set[Any]"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 114, "col_offset": 45, "nodeName": "c_keep", "type": "Set[Any]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 115, "col_offset": 45, "nodeName": "r_keep", "type": "Set[Any]"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "c", "type": "Any"}, {"lineNumber": 116, "col_offset": 54, "nodeName": "c_keep", "type": "Set[Any]"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 49, "nodeName": "r", "type": "Any"}, {"lineNumber": 117, "col_offset": 54, "nodeName": "r_keep", "type": "Set[Any]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "new_classifier_list", "type": "Any"}, {"lineNumber": 133, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 56, "nodeName": "new_preprocessors_list", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "new_preproc", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 134, "col_offset": 48, "nodeName": "new_class", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "randint", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "randint", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "create_searchspace_util", "type": "module"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 143, "col_offset": 39, "nodeName": "preprocessors", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "preprocessors_list", "type": "List[str]"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "classifiers", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 145, "col_offset": 60, "nodeName": "classifier_list", "type": "List[str]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "preprocessors_list", "type": "List[str]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "preprocessors_list", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "classifier_list", "type": "List[str]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "classifier_list", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 161, "col_offset": 9, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "m", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "new_m", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "m", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "new_m", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "new_cs", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "new_cs", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "components", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "components", "type": "Any"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "ParamSklearnClassifier", "type": "Type[ParamSklearn.classification.ParamSklearnClassifier]"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "ParamSklearnClassifier", "type": "Type[ParamSklearn.classification.ParamSklearnClassifier]"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "ParamSklearnClassifier", "type": "Type[ParamSklearn.classification.ParamSklearnClassifier]"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "ParamSklearnClassifier", "type": "Type[ParamSklearn.classification.ParamSklearnClassifier]"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "ParamSklearnClassifier", "type": "Type[ParamSklearn.classification.ParamSklearnClassifier]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "ParamSklearnClassifier", "type": "Type[ParamSklearn.classification.ParamSklearnClassifier]"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "ParamSklearnClassifier", "type": "Type[ParamSklearn.classification.ParamSklearnClassifier]"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "ParamSklearnClassifier", "type": "Type[ParamSklearn.classification.ParamSklearnClassifier]"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "ParamSklearnClassifier", "type": "Type[ParamSklearn.classification.ParamSklearnClassifier]"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "ParamSklearnClassifier", "type": "Type[ParamSklearn.classification.ParamSklearnClassifier]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "row_idx", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "col_idx", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "c", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "self", "type": "TestCreateClassificationSearchspace"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "r", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 140, "col_offset": 14, "nodeName": "pre_idx", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "class_idx", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "ParamSklearn", "type": "module"}, {"lineNumber": 146, "col_offset": 45, "nodeName": "pre_idx", "type": "Any"}, {"lineNumber": 147, "col_offset": 45, "nodeName": "pre_idx", "type": "Any"}, {"lineNumber": 148, "col_offset": 42, "nodeName": "class_idx", "type": "Any"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "class_idx", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 138, "col_offset": 57, "nodeName": "shape", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "numpy", "type": "module"}, {"lineNumber": 139, "col_offset": 55, "nodeName": "shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "new_m", "type": "Any"}, {"lineNumber": 150, "col_offset": 46, "nodeName": "new_m", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "forbidden_clauses", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "forbidden_clauses", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "m", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "m", "type": "Any"}, {"lineNumber": 138, "col_offset": 57, "nodeName": "m", "type": "Any"}, {"lineNumber": 139, "col_offset": 55, "nodeName": "m", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "new_cs", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "new_cs", "type": "Any"}]