[{"lineNumber": 9, "col_offset": 33, "nodeName": "AutoSklearnRegressionAlgorithm", "type": "Type[autosklearn.pipeline.components.base.AutoSklearnRegressionAlgorithm]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "n_neighbors", "type": "Any"}, {"lineNumber": 11, "col_offset": 27, "nodeName": "n_neighbors", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 12, "col_offset": 23, "nodeName": "weights", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 13, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 14, "col_offset": 28, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "n_neighbors", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "self", "type": "KNearestNeighborsRegressor"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "n_neighbors", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "cs", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "KNearestNeighborsRegressor"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "KNearestNeighborsRegressor"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "KNearestNeighborsRegressor"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "KNearestNeighborsRegressor"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "KNearestNeighborsRegressor"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "n_neighbors", "type": "int"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "KNearestNeighborsRegressor"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "p", "type": "int"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "KNeighborsRegressor", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "Y", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "predict", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "UniformIntegerHyperparameter", "type": "Any"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "add_hyperparameters", "type": "Any"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "self", "type": "KNearestNeighborsRegressor"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "self", "type": "KNearestNeighborsRegressor"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "neighbors", "type": "Any"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "n_neighbors", "type": "int"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "weights", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "p", "type": "int"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "self", "type": "KNearestNeighborsRegressor"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "DENSE", "type": "int"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "SPARSE", "type": "int"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "UNSIGNED_DATA", "type": "int"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "PREDICTIONS", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "n_neighbors", "type": "Any"}, {"lineNumber": 58, "col_offset": 45, "nodeName": "weights", "type": "Any"}, {"lineNumber": 58, "col_offset": 54, "nodeName": "p", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "sklearn", "type": "Any"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "self", "type": "KNearestNeighborsRegressor"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "self", "type": "KNearestNeighborsRegressor"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "self", "type": "KNearestNeighborsRegressor"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "KNearestNeighborsRegressor"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "self", "type": "KNearestNeighborsRegressor"}]