[{"lineNumber": 17, "col_offset": 0, "nodeName": "this_directory", "type": "str"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 438, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 504, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 17, "col_offset": 33, "nodeName": "__file__", "type": "str"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "append", "type": "Callable"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "this_directory", "type": "str"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 438, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 504, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "this_directory", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "manager", "type": "unittest.mock.NonCallableMock"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "array", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "manager", "type": "unittest.mock.NonCallableMock"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "success", "type": "bool"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "ensemble_nbest", "type": "int"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "read_preds", "type": "Dict[str, Dict[Union[str, int], Union[int, bool]]]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "max_models_on_disc", "type": "float"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "to_test", "type": "Tuple[Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 193, "col_offset": 48, "nodeName": "to_test", "type": "Tuple[Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[float, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "to_test", "type": "Tuple[Tuple[float, int, int], Tuple[float, float, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, float, int], Tuple[int, float, int]]"}, {"lineNumber": 218, "col_offset": 64, "nodeName": "to_test", "type": "Tuple[Tuple[float, int, int], Tuple[float, float, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, float, int], Tuple[int, float, int]]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "fixture", "type": "str"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "d1", "type": "str"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "d2", "type": "str"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "d3", "type": "str"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "SAVE2DISC", "type": "bool"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "d2", "type": "str"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "ensemble", "type": "Optional[autosklearn.ensembles.ensemble_selection.EnsembleSelection]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "y_valid", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "y_valid_d2", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "SAVE2DISC", "type": "bool"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "run_history", "type": "List[Any]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "expected_performance", "type": "Dict[str, float]"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "ensbuilder", "type": "EnsembleBuilderMemMock"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "SAVE2DISC", "type": "bool"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "ensemble", "type": "autosklearn.ensembles.ensemble_selection.EnsembleSelection"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "per_model_pred", "type": "numpy.ndarray"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "weights_", "type": "List[float]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "pred", "type": "numpy.ndarray"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "truth", "type": "numpy.ndarray"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "per_model_pred", "type": "numpy.ndarray"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "weights_", "type": "List[float]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "pred", "type": "numpy.ndarray"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "truth", "type": "numpy.ndarray"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "per_model_pred", "type": "numpy.ndarray"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "weights_", "type": "List[float]"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "run_history", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "ensemble", "type": "autosklearn.ensembles.singlebest_ensemble.SingleBest"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "ensemble", "type": "autosklearn.ensembles.singlebest_ensemble.SingleBest"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "this_directory", "type": "str"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "load", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "get", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "BackendMock", "type": "Type[BackendMock]"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "score_ensemble_preds", "type": "Callable[[], bool]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "success", "type": "bool"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "fixture", "type": "str"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 71, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "performance_range_threshold", "type": "Any"}, {"lineNumber": 193, "col_offset": 41, "nodeName": "exp", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "performance_range_threshold", "type": "Any"}, {"lineNumber": 218, "col_offset": 41, "nodeName": "ensemble_nbest", "type": "Any"}, {"lineNumber": 218, "col_offset": 57, "nodeName": "exp", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "score_ensemble_preds", "type": "Callable[[], bool]"}, {"lineNumber": 255, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 275, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 280, "col_offset": 38, "nodeName": "fixture", "type": "str"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "score_ensemble_preds", "type": "Callable[[], bool]"}, {"lineNumber": 296, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 304, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "get_valid_test_preds", "type": "Callable[[List[Any]], Tuple[List[Any], List[Any]]]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 325, "col_offset": 21, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "score_ensemble_preds", "type": "Callable[[], bool]"}, {"lineNumber": 338, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 343, "col_offset": 19, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 19, "nodeName": "fit_ensemble", "type": "Callable[[List[Any]], Optional[autosklearn.ensembles.ensemble_selection.EnsembleSelection]]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 347, "col_offset": 14, "nodeName": "ensemble", "type": "Optional[autosklearn.ensembles.ensemble_selection.EnsembleSelection]"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "n_sel_valid", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 21, "nodeName": "n_sel_test", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 34, "nodeName": "get_valid_test_preds", "type": "Callable[[List[Any]], Tuple[List[Any], List[Any]]]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "n_sel_valid", "type": "List[Any]"}, {"lineNumber": 353, "col_offset": 38, "nodeName": "n_sel_test", "type": "List[Any]"}, {"lineNumber": 355, "col_offset": 18, "nodeName": "predict", "type": "Callable[[str, autosklearn.ensembles.abstract_ensemble.AbstractEnsemble, List[Any], int, int], Any]"}, {"lineNumber": 362, "col_offset": 17, "nodeName": "predict", "type": "Callable[[str, autosklearn.ensembles.abstract_ensemble.AbstractEnsemble, List[Any], int, int], Any]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 372, "col_offset": 45, "nodeName": "y_valid", "type": "Any"}, {"lineNumber": 372, "col_offset": 54, "nodeName": "y_test", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 378, "col_offset": 45, "nodeName": "y_valid", "type": "Any"}, {"lineNumber": 378, "col_offset": 54, "nodeName": "y_valid_d2", "type": "Any"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "main", "type": "Callable[..., Optional[Tuple[Any, Any]]]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 398, "col_offset": 29, "nodeName": "last_hash", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 399, "col_offset": 29, "nodeName": "y_true_ensemble", "type": "Any"}, {"lineNumber": 402, "col_offset": 22, "nodeName": "get_ensemble_history", "type": "Callable[[], List[Any]]"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "assertDictContainsSubset", "type": "Callable[..., None]"}, {"lineNumber": 414, "col_offset": 38, "nodeName": "expected_performance", "type": "Dict[str, float]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 416, "col_offset": 59, "nodeName": "Timestamp", "type": "Any"}, {"lineNumber": 419, "col_offset": 21, "nodeName": "EnsembleBuilderMemMock", "type": "Type[EnsembleBuilderMemMock]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "ensbuilder", "type": "EnsembleBuilderMemMock"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "run", "type": "Callable[[], None]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "ensemble_nbest", "type": "Union[float, int]"}, {"lineNumber": 450, "col_offset": 19, "nodeName": "EnsembleSelection", "type": "Type[autosklearn.ensembles.ensemble_selection.EnsembleSelection]"}, {"lineNumber": 456, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "ensemble", "type": "autosklearn.ensembles.ensemble_selection.EnsembleSelection"}, {"lineNumber": 466, "col_offset": 15, "nodeName": "predict", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 466, "col_offset": 32, "nodeName": "per_model_pred", "type": "numpy.ndarray"}, {"lineNumber": 467, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 472, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "ensemble", "type": "autosklearn.ensembles.ensemble_selection.EnsembleSelection"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "predict", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 482, "col_offset": 32, "nodeName": "per_model_pred", "type": "numpy.ndarray"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 488, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "ensemble", "type": "autosklearn.ensembles.ensemble_selection.EnsembleSelection"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "self", "type": "SingleBestTest"}, {"lineNumber": 506, "col_offset": 27, "nodeName": "RunHistory", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "_add", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "_add", "type": "Any"}, {"lineNumber": 551, "col_offset": 19, "nodeName": "SingleBest", "type": "Type[autosklearn.ensembles.singlebest_ensemble.SingleBest]"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 561, "col_offset": 14, "nodeName": "num_run", "type": "Any"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "budget", "type": "Any"}, {"lineNumber": 561, "col_offset": 32, "nodeName": "identifiers_", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 562, "col_offset": 25, "nodeName": "num_run", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 563, "col_offset": 25, "nodeName": "seed", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 564, "col_offset": 25, "nodeName": "budget", "type": "Any"}, {"lineNumber": 567, "col_offset": 19, "nodeName": "SingleBest", "type": "Type[autosklearn.ensembles.singlebest_ensemble.SingleBest]"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 577, "col_offset": 14, "nodeName": "num_run", "type": "Any"}, {"lineNumber": 577, "col_offset": 23, "nodeName": "budget", "type": "Any"}, {"lineNumber": 577, "col_offset": 32, "nodeName": "identifiers_", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 578, "col_offset": 25, "nodeName": "num_run", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 579, "col_offset": 25, "nodeName": "seed", "type": "Any"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 580, "col_offset": 25, "nodeName": "budget", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "__file__", "type": "str"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "mock", "type": "module"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "this_directory", "type": "str"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "load", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "fp", "type": "BinaryIO"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "roc_auc", "type": "autosklearn.metrics.Scorer"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "score_ensemble_preds", "type": "Callable[[], bool]"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "fixture", "type": "str"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 153, "col_offset": 59, "nodeName": "mock", "type": "unittest.mock.MagicMock"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "roc_auc", "type": "autosklearn.metrics.Scorer"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "EnsembleBuilder", "type": "Type[autosklearn.ensemble_builder.EnsembleBuilder]"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 44, "nodeName": "exp", "type": "Any"}, {"lineNumber": 244, "col_offset": 45, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 247, "col_offset": 44, "nodeName": "roc_auc", "type": "autosklearn.metrics.Scorer"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 255, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 275, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 288, "col_offset": 44, "nodeName": "roc_auc", "type": "autosklearn.metrics.Scorer"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 296, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 304, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 311, "col_offset": 54, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 329, "col_offset": 19, "nodeName": "roc_auc", "type": "autosklearn.metrics.Scorer"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 338, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 343, "col_offset": 19, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 344, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 344, "col_offset": 31, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 346, "col_offset": 19, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 346, "col_offset": 57, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 34, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 349, "col_offset": 80, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 352, "col_offset": 31, "nodeName": "n_sel_valid", "type": "List[Any]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 355, "col_offset": 18, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 357, "col_offset": 21, "nodeName": "ensemble", "type": "Optional[autosklearn.ensembles.ensemble_selection.EnsembleSelection]"}, {"lineNumber": 358, "col_offset": 26, "nodeName": "n_sel_valid", "type": "List[Any]"}, {"lineNumber": 362, "col_offset": 17, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "ensemble", "type": "Optional[autosklearn.ensembles.ensemble_selection.EnsembleSelection]"}, {"lineNumber": 365, "col_offset": 26, "nodeName": "n_sel_test", "type": "List[Any]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 386, "col_offset": 19, "nodeName": "roc_auc", "type": "autosklearn.metrics.Scorer"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 397, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 397, "col_offset": 29, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 398, "col_offset": 29, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 399, "col_offset": 29, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 402, "col_offset": 22, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 405, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 405, "col_offset": 29, "nodeName": "run_history", "type": "List[Any]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 414, "col_offset": 60, "nodeName": "run_history", "type": "List[Any]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 415, "col_offset": 35, "nodeName": "run_history", "type": "List[Any]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 416, "col_offset": 59, "nodeName": "pd", "type": "Any"}, {"lineNumber": 419, "col_offset": 52, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 422, "col_offset": 51, "nodeName": "roc_auc", "type": "autosklearn.metrics.Scorer"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "ensbuilder", "type": "EnsembleBuilderMemMock"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "ensbuilder", "type": "EnsembleBuilderMemMock"}, {"lineNumber": 453, "col_offset": 44, "nodeName": "accuracy", "type": "autosklearn.metrics.Scorer"}, {"lineNumber": 456, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 466, "col_offset": 15, "nodeName": "ensemble", "type": "autosklearn.ensembles.ensemble_selection.EnsembleSelection"}, {"lineNumber": 467, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "self", "type": "EnsembleSelectionTest"}, {"lineNumber": 469, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 469, "col_offset": 36, "nodeName": "pred", "type": "numpy.ndarray"}, {"lineNumber": 469, "col_offset": 42, "nodeName": "truth", "type": "numpy.ndarray"}, {"lineNumber": 472, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "ensemble", "type": "autosklearn.ensembles.ensemble_selection.EnsembleSelection"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "self", "type": "EnsembleSelectionTest"}, {"lineNumber": 485, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 485, "col_offset": 36, "nodeName": "pred", "type": "numpy.ndarray"}, {"lineNumber": 485, "col_offset": 42, "nodeName": "truth", "type": "numpy.ndarray"}, {"lineNumber": 488, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 500, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 500, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "predict", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 501, "col_offset": 29, "nodeName": "per_model_pred", "type": "numpy.ndarray"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "run_history", "type": "Any"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "RunKey", "type": "Any"}, {"lineNumber": 514, "col_offset": 12, "nodeName": "RunValue", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "run_history", "type": "Any"}, {"lineNumber": 529, "col_offset": 12, "nodeName": "RunKey", "type": "Any"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "RunValue", "type": "Any"}, {"lineNumber": 552, "col_offset": 20, "nodeName": "accuracy", "type": "autosklearn.metrics.Scorer"}, {"lineNumber": 554, "col_offset": 25, "nodeName": "run_history", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "self", "type": "SingleBestTest"}, {"lineNumber": 558, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 558, "col_offset": 29, "nodeName": "identifiers_", "type": "Any"}, {"lineNumber": 561, "col_offset": 32, "nodeName": "ensemble", "type": "autosklearn.ensembles.singlebest_ensemble.SingleBest"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "self", "type": "SingleBestTest"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "self", "type": "SingleBestTest"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "self", "type": "SingleBestTest"}, {"lineNumber": 568, "col_offset": 20, "nodeName": "log_loss", "type": "autosklearn.metrics.Scorer"}, {"lineNumber": 570, "col_offset": 25, "nodeName": "run_history", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "self", "type": "SingleBestTest"}, {"lineNumber": 574, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 574, "col_offset": 29, "nodeName": "identifiers_", "type": "Any"}, {"lineNumber": 577, "col_offset": 32, "nodeName": "ensemble", "type": "autosklearn.ensembles.singlebest_ensemble.SingleBest"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "self", "type": "SingleBestTest"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "self", "type": "SingleBestTest"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "self", "type": "SingleBestTest"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "manager", "type": "unittest.mock.NonCallableMock"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "temporary_directory", "type": "str"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "roc_auc", "type": "autosklearn.metrics.Scorer"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "ensemble_nbest", "type": "Any"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "models_on_disc", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "roc_auc", "type": "autosklearn.metrics.Scorer"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "ensemble_nbest", "type": "int"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "test_case", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "mock", "type": "unittest.mock.MagicMock"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "score_ensemble_preds", "type": "Callable[[], bool]"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "get_n_best_preds", "type": "Callable[[], List[Any]]"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 48, "nodeName": "exp", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "roc_auc", "type": "autosklearn.metrics.Scorer"}, {"lineNumber": 202, "col_offset": 44, "nodeName": "performance_range_threshold", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "backend", "type": "BackendMock"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "roc_auc", "type": "autosklearn.metrics.Scorer"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "ensemble_nbest", "type": "Any"}, {"lineNumber": 227, "col_offset": 44, "nodeName": "performance_range_threshold", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 239, "col_offset": 33, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 244, "col_offset": 45, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 255, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "filename", "type": "str"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 265, "col_offset": 30, "nodeName": "filename", "type": "str"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 271, "col_offset": 30, "nodeName": "filename", "type": "str"}, {"lineNumber": 275, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 296, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 304, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 314, "col_offset": 26, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 314, "col_offset": 52, "nodeName": "Y_VALID", "type": "int"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 315, "col_offset": 52, "nodeName": "Y_TEST", "type": "int"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 316, "col_offset": 52, "nodeName": "Y_VALID", "type": "int"}, {"lineNumber": 317, "col_offset": 26, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 317, "col_offset": 52, "nodeName": "Y_TEST", "type": "int"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 320, "col_offset": 55, "nodeName": "Y_VALID", "type": "int"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 321, "col_offset": 55, "nodeName": "Y_TEST", "type": "int"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 338, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 359, "col_offset": 24, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 377, "col_offset": 21, "nodeName": "read_preds", "type": "Dict[Any, Dict[Union[int, str], Any]]"}, {"lineNumber": 377, "col_offset": 47, "nodeName": "Y_VALID", "type": "int"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 397, "col_offset": 29, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 416, "col_offset": 30, "nodeName": "run_history", "type": "List[Any]"}, {"lineNumber": 419, "col_offset": 52, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 452, "col_offset": 50, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 469, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 485, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 500, "col_offset": 13, "nodeName": "self", "type": "EnsembleSelectionTest"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "ensemble", "type": "autosklearn.ensembles.ensemble_selection.EnsembleSelection"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "self", "type": "SingleBestTest"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "self", "type": "SingleBestTest"}, {"lineNumber": 554, "col_offset": 25, "nodeName": "self", "type": "SingleBestTest"}, {"lineNumber": 558, "col_offset": 29, "nodeName": "ensemble", "type": "autosklearn.ensembles.singlebest_ensemble.SingleBest"}, {"lineNumber": 570, "col_offset": 25, "nodeName": "self", "type": "SingleBestTest"}, {"lineNumber": 574, "col_offset": 29, "nodeName": "ensemble", "type": "autosklearn.ensembles.singlebest_ensemble.SingleBest"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "BackendMock"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "filename", "type": "str"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "filename", "type": "str"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "mock", "type": "module"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "sel_keys", "type": "List[Any]"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "self", "type": "EnsembleTest"}, {"lineNumber": 314, "col_offset": 26, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 314, "col_offset": 48, "nodeName": "d1", "type": "str"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 315, "col_offset": 48, "nodeName": "d1", "type": "str"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 316, "col_offset": 48, "nodeName": "d3", "type": "str"}, {"lineNumber": 317, "col_offset": 26, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 317, "col_offset": 48, "nodeName": "d3", "type": "str"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 320, "col_offset": 51, "nodeName": "d2", "type": "str"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 321, "col_offset": 51, "nodeName": "d2", "type": "str"}, {"lineNumber": 377, "col_offset": 21, "nodeName": "ensbuilder", "type": "autosklearn.ensemble_builder.EnsembleBuilder"}, {"lineNumber": 377, "col_offset": 43, "nodeName": "d2", "type": "str"}, {"lineNumber": 452, "col_offset": 50, "nodeName": "random", "type": "Any"}, {"lineNumber": 518, "col_offset": 26, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 519, "col_offset": 24, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 539, "col_offset": 26, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 540, "col_offset": 24, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 173, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 173, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 452, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 518, "col_offset": 26, "nodeName": "time", "type": "module"}, {"lineNumber": 519, "col_offset": 24, "nodeName": "time", "type": "module"}, {"lineNumber": 539, "col_offset": 26, "nodeName": "time", "type": "module"}, {"lineNumber": 540, "col_offset": 24, "nodeName": "time", "type": "module"}]