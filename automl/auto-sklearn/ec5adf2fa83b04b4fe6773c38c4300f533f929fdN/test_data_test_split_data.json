[{"lineNumber": 12, "col_offset": 11, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "unittest", "type": "module"}, {"lineNumber": 91, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "n_points", "type": "int"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "n_dims", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "randint", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "n_points", "type": "int"}, {"lineNumber": 18, "col_offset": 37, "nodeName": "n_dims", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "n_points", "type": "int"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "X_valid", "type": "Any"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "Y_valid", "type": "Any"}, {"lineNumber": 21, "col_offset": 45, "nodeName": "split_data", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 21, "col_offset": 56, "nodeName": "X", "type": "Any"}, {"lineNumber": 21, "col_offset": 59, "nodeName": "y", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "n_dims", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "n_dims", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "split_data", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 53, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "X_valid", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "Y_valid", "type": "Any"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "split_data", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 48, "col_offset": 56, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 59, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "split_data", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 62, "col_offset": 56, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "X_valid", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "Y_valid", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "split_data", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 77, "col_offset": 56, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 59, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "X_valid", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "_split_regular", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "_split_regular_classification", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "_stratify", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "X_valid", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "Y_valid", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "Y_valid", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "X_valid", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "Y_valid", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "Y_valid", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "Y_valid", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "X_valid", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "Y_valid", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "X_valid", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "Test"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "Test"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "Test"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "Y_train", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "X_valid", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "X_valid", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "Y_valid", "type": "Any"}]