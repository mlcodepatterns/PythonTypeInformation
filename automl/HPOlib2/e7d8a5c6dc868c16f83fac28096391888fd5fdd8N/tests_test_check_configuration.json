[{"lineNumber": 123, "col_offset": 0, "nodeName": "test_remove_inactive_parameter", "type": "Callable[[], Any]"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "hp1", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "hp2", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "hp3", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "not_condition", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "allowed_cfg", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "not_allowed", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "transformed", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "transformed", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "transformed", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "transformed", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "foo", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "sample_fidel", "type": "Dict[Any, Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "less_fidel", "type": "Dict[str, int]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "foo", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "hps", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "configuration", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 126, "col_offset": 10, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 127, "col_offset": 10, "nodeName": "UniformIntegerHyperparameter", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "add_hyperparameters", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "NotEqualsCondition", "type": "Any"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "hp2", "type": "Any"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "hp1", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "add_condition", "type": "Any"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "not_condition", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "Configuration", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "_check_and_cast_configuration", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 66, "nodeName": "allowed_cfg", "type": "Any"}, {"lineNumber": 141, "col_offset": 79, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "_check_and_cast_configuration", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 96, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "Configuration", "type": "Any"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "_check_and_cast_configuration", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 66, "nodeName": "not_allowed_cs", "type": "Any"}, {"lineNumber": 151, "col_offset": 82, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "_check_and_cast_configuration", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 66, "nodeName": "not_allowed", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 155, "col_offset": 79, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "flt", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "cat", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "itg", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "fidelity_space", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "f1", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "f2", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "f3", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "_check_and_cast_configuration", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "_check_and_cast_configuration", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "_check_and_cast_fidelity", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "_check_and_cast_fidelity", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "Dummy", "type": "Type[Any]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "configuration", "type": "Dict[Any, Any]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "ret", "type": "Any"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "configuration", "type": "Dict[Any, Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "ret", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "sample_fidel", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "ret", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "sample_fidel", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "ret", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "sample_fidel", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "hp1", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "hp2", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "hp3", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "_check_and_cast_configuration", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 44, "nodeName": "_check_and_cast_configuration", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "_check_and_cast_fidelity", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "_check_and_cast_fidelity", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "fidelity_space", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest2"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "Dummy", "type": "Type[Any]"}, {"lineNumber": 114, "col_offset": 14, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "Configuration", "type": "Any"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 115, "col_offset": 68, "nodeName": "hps", "type": "Dict[Any, Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "fidel", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "fidel", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 128, "col_offset": 45, "nodeName": "hp1", "type": "Any"}, {"lineNumber": 128, "col_offset": 50, "nodeName": "hp2", "type": "Any"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "hp3", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "Configuration", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "not_allowed", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "AbstractBenchmark", "type": "Type[hpobench.abstract_benchmark.AbstractBenchmark]"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "get_dictionary", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "AbstractBenchmark", "type": "Type[hpobench.abstract_benchmark.AbstractBenchmark]"}, {"lineNumber": 145, "col_offset": 66, "nodeName": "get_dictionary", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "get_dictionary", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "AbstractBenchmark", "type": "Type[hpobench.abstract_benchmark.AbstractBenchmark]"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "get_dictionary", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "AbstractBenchmark", "type": "Type[hpobench.abstract_benchmark.AbstractBenchmark]"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "get_dictionary", "type": "Any"}, {"lineNumber": 19, "col_offset": 34, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "UniformFloatHyperparameter", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "UniformIntegerHyperparameter", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "add_hyperparameters", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "UniformFloatHyperparameter", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "UniformIntegerHyperparameter", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "add_hyperparameters", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "fidelity_space", "type": "Any"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "AbstractBenchmark", "type": "Type[hpobench.abstract_benchmark.AbstractBenchmark]"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "AbstractBenchmark", "type": "Type[hpobench.abstract_benchmark.AbstractBenchmark]"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 41, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "foo", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "foo", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "foo", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 54, "col_offset": 51, "nodeName": "foo", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 55, "col_offset": 51, "nodeName": "foo", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 56, "col_offset": 51, "nodeName": "foo", "type": "Any"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 60, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "configuration", "type": "Dict[Any, Any]"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "fidelity", "type": "Dict[Any, Any]"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "get_default_configuration", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "foo", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "sample_fidel", "type": "Dict[Any, Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "foo", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "less_fidel", "type": "Dict[str, int]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "foo", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 84, "col_offset": 51, "nodeName": "foo", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "foo", "type": "Any"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "UniformFloatHyperparameter", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "UniformFloatHyperparameter", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "UniformFloatHyperparameter", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "add_hyperparameters", "type": "Any"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "add_hyperparameter", "type": "Any"}, {"lineNumber": 111, "col_offset": 69, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "configuration", "type": "Union[Dict[Any, Any], numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "fidelity", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "foo", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "foo", "type": "Any"}, {"lineNumber": 116, "col_offset": 57, "nodeName": "configuration", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "fidel", "type": "Any"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "transformed", "type": "Any"}, {"lineNumber": 145, "col_offset": 66, "nodeName": "allowed_cfg", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "transformed", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "transformed", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "transformed", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 23, "col_offset": 53, "nodeName": "flt", "type": "Any"}, {"lineNumber": 23, "col_offset": 58, "nodeName": "cat", "type": "Any"}, {"lineNumber": 23, "col_offset": 63, "nodeName": "itg", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "fidelity_space", "type": "Any"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "f1", "type": "Any"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "f2", "type": "Any"}, {"lineNumber": 29, "col_offset": 56, "nodeName": "f3", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 54, "col_offset": 51, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 55, "col_offset": 51, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 56, "col_offset": 51, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "foo", "type": "Any"}, {"lineNumber": 84, "col_offset": 51, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 85, "col_offset": 60, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 88, "col_offset": 60, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 100, "col_offset": 53, "nodeName": "hp1", "type": "Any"}, {"lineNumber": 100, "col_offset": 58, "nodeName": "hp2", "type": "Any"}, {"lineNumber": 100, "col_offset": 63, "nodeName": "hp3", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "fidelity_space", "type": "Any"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "UniformFloatHyperparameter", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "Union", "type": "Any"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "self", "type": "TestCheckUnittest2"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "self", "type": "TestCheckUnittest2"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "get_fidelity_space", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 85, "col_offset": 60, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 88, "col_offset": 60, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "foo", "type": "Any"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "foo", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "foo", "type": "Any"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "foo", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "foo", "type": "Any"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "foo", "type": "Any"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 85, "col_offset": 60, "nodeName": "foo", "type": "Any"}, {"lineNumber": 88, "col_offset": 60, "nodeName": "foo", "type": "Any"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "foo", "type": "Any"}, {"lineNumber": 85, "col_offset": 60, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 88, "col_offset": 60, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "self", "type": "TestCheckUnittest"}]