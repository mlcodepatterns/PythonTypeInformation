[{"lineNumber": 13, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "foo", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "sample_fidel", "type": "Dict[Any, Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "less_fidel", "type": "Dict[str, int]"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "flt", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "cat", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "itg", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "fidelity_space", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "f1", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "f2", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "f3", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "Dummy", "type": "Type[Any]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "configuration", "type": "Dict[Any, Any]"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "ret", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "configuration", "type": "Dict[Any, Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "ret", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "sample_fidel", "type": "Dict[Any, Any]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "ret", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "sample_fidel", "type": "Dict[Any, Any]"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "ret", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "sample_fidel", "type": "Dict[Any, Any]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "UniformFloatHyperparameter", "type": "Any"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "UniformIntegerHyperparameter", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "add_hyperparameters", "type": "Any"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "UniformFloatHyperparameter", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "UniformIntegerHyperparameter", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "add_hyperparameters", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "fidelity_space", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "foo", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "foo", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "foo", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 47, "col_offset": 51, "nodeName": "foo", "type": "Any"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 51, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "configuration", "type": "Dict[Any, Any]"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "fidelity", "type": "Dict[Any, Any]"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "get_default_configuration", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "foo", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "sample_fidel", "type": "Dict[Any, Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "foo", "type": "Any"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "less_fidel", "type": "Dict[str, int]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "foo", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "tmp", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 21, "col_offset": 53, "nodeName": "flt", "type": "Any"}, {"lineNumber": 21, "col_offset": 58, "nodeName": "cat", "type": "Any"}, {"lineNumber": 21, "col_offset": 63, "nodeName": "itg", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "fidelity_space", "type": "Any"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "f1", "type": "Any"}, {"lineNumber": 27, "col_offset": 52, "nodeName": "f2", "type": "Any"}, {"lineNumber": 27, "col_offset": 56, "nodeName": "f3", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 47, "col_offset": 51, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "foo", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "get_fidelity_space", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "__str__", "type": "Callable[[], str]"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "foo", "type": "Any"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "foo", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "foo", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "foo", "type": "Any"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "foo", "type": "Any"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "foo", "type": "Any"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "configuration_space", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "e", "type": "ValueError"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "self", "type": "TestCheckUnittest"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "foo", "type": "Any"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "self", "type": "TestCheckUnittest"}]