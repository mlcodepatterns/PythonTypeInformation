[{"lineNumber": 19, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "incumbent", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "restore_incumbent", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "stats", "type": "smac.stats.stats.Stats"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "stats", "type": "smac.stats.stats.Stats"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "runhistory", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "runhistory", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "rh2EPM", "type": "smac.runhistory.runhistory2epm.AbstractRunHistory2EPM"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "runhistory2epm", "type": "smac.runhistory.runhistory2epm.AbstractRunHistory2EPM"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "model", "type": "smac.epm.rf_with_instances.RandomForestWithInstances"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "model", "type": "smac.epm.rf_with_instances.RandomForestWithInstances"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "acq_optimizer", "type": "smac.optimizer.ei_optimization.AcquisitionFunctionMaximizer"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "acq_optimizer", "type": "smac.optimizer.ei_optimization.AcquisitionFunctionMaximizer"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "acquisition_func", "type": "smac.optimizer.acquisition.AbstractAcquisitionFunction"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "acquisition_func", "type": "smac.optimizer.acquisition.AbstractAcquisitionFunction"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "rng", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "rng", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "random_configuration_chooser", "type": "smac.optimizer.random_configuration_chooser.RandomConfigurationChooser"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "random_configuration_chooser", "type": "smac.optimizer.random_configuration_chooser.RandomConfigurationChooser"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "initial_design_configs", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "predict_x_best", "type": "bool"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "predict_x_best", "type": "bool"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "min_samples_model", "type": "int"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "min_samples_model", "type": "int"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "currently_considered_budgets", "type": "List[float]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "available_budgets", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "run_key", "type": "smac.runhistory.runhistory.RunKey"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "available_budgets", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "available_budgets", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "List", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "challengers", "type": "Iterator[Any]"}, {"lineNumber": 114, "col_offset": 60, "nodeName": "Iterator", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "predict", "type": "bool"}, {"lineNumber": 167, "col_offset": 59, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 30, "col_offset": 90, "nodeName": "ChooserNoCoolDown", "type": "Type[smac.optimizer.random_configuration_chooser.ChooserNoCoolDown]"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "RandomSearch", "type": "Type[smac.optimizer.ei_optimization.RandomSearch]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "acquisition_func", "type": "smac.optimizer.acquisition.AbstractAcquisitionFunction"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "cs", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "rng", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "typing", "type": "module"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "get_all_configs_per_budget", "type": "Callable[..., List[Any]]"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "typing", "type": "module"}, {"lineNumber": 111, "col_offset": 52, "nodeName": "Configuration", "type": "Any"}, {"lineNumber": 114, "col_offset": 43, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "X_configurations", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "_collect_data_to_train_model", "type": "Callable[[], Tuple[numpy.ndarray, numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "train", "type": "Callable"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "incumbent_value", "type": "float"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "best_observation", "type": "float"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "incumbent_value", "type": "float"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "x_best_array", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "maximize", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 114, "col_offset": 60, "nodeName": "typing", "type": "module"}, {"lineNumber": 114, "col_offset": 76, "nodeName": "Configuration", "type": "Any"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "costs", "type": "List[nothing]"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "x_best_array", "type": "nothing"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "best_observation", "type": "nothing"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "all_configs", "type": "List[Any]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "x_best", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "incumbent", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "x_best_array", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "best_observation", "type": "float"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "best_observation_as_array", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "best_observation", "type": "numpy.ndarray"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "best_observation", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "x_best_array", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "best_observation", "type": "Any"}, {"lineNumber": 167, "col_offset": 59, "nodeName": "typing", "type": "module"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "logging", "type": "module"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "data", "type": "Dict[smac.runhistory.runhistory.RunKey, smac.runhistory.runhistory.`namedtuple-RunValue-cost-time-status-additional_info`]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "budget", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "transform", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "runhistory", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "min_samples_model", "type": "int"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "currently_considered_budgets", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "empty", "type": "Any"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "empty", "type": "Any"}, {"lineNumber": 109, "col_offset": 62, "nodeName": "empty", "type": "Any"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 91, "col_offset": 71, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 91, "col_offset": 83, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "runhistory", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 112, "col_offset": 72, "nodeName": "currently_considered_budgets", "type": "Union[List[float], List[Any]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "maximize", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "model", "type": "smac.epm.rf_with_instances.RandomForestWithInstances"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "acquisition_func", "type": "smac.optimizer.acquisition.AbstractAcquisitionFunction"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "model", "type": "smac.epm.rf_with_instances.RandomForestWithInstances"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "best_observation", "type": "float"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "x_best_array", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "X_configurations", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "acq_optimizer", "type": "smac.optimizer.ei_optimization.AcquisitionFunctionMaximizer"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "runhistory", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "stats", "type": "smac.stats.stats.Stats"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "acq_opt_challengers", "type": "Any"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "random_configuration_chooser", "type": "smac.optimizer.random_configuration_chooser.RandomConfigurationChooser"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "costs", "type": "List[nothing]"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "get_all_configs_per_budget", "type": "Callable[..., List[Any]]"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 200, "col_offset": 27, "nodeName": "convert_configurations_to_array", "type": "Callable[[List[Any]], numpy.ndarray]"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "get_cost", "type": "Callable[[Any], float]"}, {"lineNumber": 201, "col_offset": 56, "nodeName": "x_best", "type": "Any"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "transform_response_values", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 69, "nodeName": "best_observation_as_array", "type": "Any"}, {"lineNumber": 167, "col_offset": 72, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 167, "col_offset": 79, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "__module__", "type": "str"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "runhistory", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "available_budgets", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "run_key", "type": "smac.runhistory.runhistory.RunKey"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "available_budgets", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "rh2EPM", "type": "smac.runhistory.runhistory2epm.AbstractRunHistory2EPM"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 104, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "get_configurations", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "runhistory", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "configs_array", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 71, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 83, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 112, "col_offset": 72, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "_random_search", "type": "smac.optimizer.ei_optimization.RandomSearch"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "runhistory", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 138, "col_offset": 50, "nodeName": "stats", "type": "smac.stats.stats.Stats"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "map", "type": "Callable"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "costs", "type": "List[nothing]"}, {"lineNumber": 195, "col_offset": 31, "nodeName": "costs", "type": "List[nothing]"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "runhistory", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 198, "col_offset": 83, "nodeName": "currently_considered_budgets", "type": "Union[List[float], List[Any]]"}, {"lineNumber": 200, "col_offset": 60, "nodeName": "all_configs", "type": "List[Any]"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "runhistory", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "rh2EPM", "type": "smac.runhistory.runhistory2epm.AbstractRunHistory2EPM"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "best_observation", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 79, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 102, "col_offset": 73, "nodeName": "b", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "rh2EPM", "type": "smac.runhistory.runhistory2epm.AbstractRunHistory2EPM"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 106, "col_offset": 51, "nodeName": "currently_considered_budgets", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 138, "col_offset": 50, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "_get_evaluated_configs", "type": "Callable[[], List[Any]]"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 198, "col_offset": 83, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 202, "col_offset": 49, "nodeName": "best_observation", "type": "float"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 106, "col_offset": 51, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 193, "col_offset": 48, "nodeName": "t", "type": "Any"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "predict_marginalized_over_instances", "type": "Callable[[numpy.ndarray], Tuple[numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "model", "type": "smac.epm.rf_with_instances.RandomForestWithInstances"}, {"lineNumber": 188, "col_offset": 67, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "self", "type": "EPMChooser"}, {"lineNumber": 188, "col_offset": 67, "nodeName": "x", "type": "Any"}]