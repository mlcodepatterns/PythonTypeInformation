[{"lineNumber": 26, "col_offset": 23, "nodeName": "Scenario", "type": "Type[smac.scenario.scenario.Scenario]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 213, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "_groups", "type": "collections.defaultdict[nothing, Set[Any]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "base_directory", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "test_dict", "type": "Dict[str, int]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "test_dict", "type": "Dict[str, int]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "scenario", "type": "InitFreeScenario"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "scenario_2", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "feature_dict", "type": "Dict[str, List[int]]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "rh_merge", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "rh_base", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "runs", "type": "List[smac.runhistory.runhistory.`namedtuple-InstSeedKey-instance-seed`]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "packed_scenario", "type": "bytes"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "unpacked_scenario", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "scenario_dict", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "test_scenario_dict", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "InitFreeScenario"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "basicConfig", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "setLevel", "type": "Callable[[Union[int, str]], None]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "DEBUG", "type": "int"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "chdir", "type": "Callable[[Union[int, bytes, str, _PathLike[Any]]], None]"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "base_directory", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "chdir", "type": "Callable[[Union[int, bytes, str, _PathLike[Any]]], None]"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "s", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "Scenario", "type": "Type[smac.scenario.scenario.Scenario]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "ta", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "execdir", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "deterministic", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "pcs_fn", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "overall_obj", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "algo_runs_timelimit", "type": "Any"}, {"lineNumber": 80, "col_offset": 56, "nodeName": "inf", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "wallclock_limit", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "par_factor", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "train_insts", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "test_insts", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "feature_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "test_dict", "type": "Dict[str, int]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "Scenario", "type": "Type[smac.scenario.scenario.Scenario]"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "test_scenario_dict", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "ta", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "execdir", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "deterministic", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "pcs_fn", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "overall_obj", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "algo_runs_timelimit", "type": "Any"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "inf", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "wallclock_limit", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "par_factor", "type": "int"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "train_insts", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "test_insts", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "feature_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "test_dict", "type": "Dict[str, int]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "Scenario", "type": "Type[smac.scenario.scenario.Scenario]"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "InitFreeScenario", "type": "Type[InitFreeScenario]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "add_argument", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertRaisesRegexp", "type": "Callable"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "add_argument", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "Scenario", "type": "Type[smac.scenario.scenario.Scenario]"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "test_scenario_dict", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "Scenario", "type": "Type[smac.scenario.scenario.Scenario]"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "test_scenario_dict", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "scenario_2", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "add_hyperparameter", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "add_hyperparameter", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "RunHistory", "type": "Type[smac.runhistory.runhistory.RunHistory]"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "Configuration", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "cs", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "RunHistory", "type": "Type[smac.runhistory.runhistory.RunHistory]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "merge_foreign_data", "type": "Callable[[smac.scenario.scenario.Scenario, smac.runhistory.runhistory.RunHistory, List[smac.scenario.scenario.Scenario], List[smac.runhistory.runhistory.RunHistory]], Tuple[smac.scenario.scenario.Scenario, smac.runhistory.runhistory.RunHistory]]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "get_runs_for_config", "type": "Callable[[Any], List[smac.runhistory.runhistory.`namedtuple-InstSeedKey-instance-seed`]]"}, {"lineNumber": 174, "col_offset": 43, "nodeName": "config", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "merge_foreign_data", "type": "Callable[[smac.scenario.scenario.Scenario, smac.runhistory.runhistory.RunHistory, List[smac.scenario.scenario.Scenario], List[smac.runhistory.runhistory.RunHistory]], Tuple[smac.scenario.scenario.Scenario, smac.runhistory.runhistory.RunHistory]]"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "Scenario", "type": "Type[smac.scenario.scenario.Scenario]"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "test_scenario_dict", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "dumps", "type": "Callable[..., bytes]"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "packed_scenario", "type": "bytes"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 41, "nodeName": "packed_scenario", "type": "bytes"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "unpacked_scenario", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "logger", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "name", "type": "str"}, {"lineNumber": 194, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "scenario_dict", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "Scenario", "type": "Type[smac.scenario.scenario.Scenario]"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "scenario_dict", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "initial_incumbent", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "add_argument", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "scenario_dict", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "logging", "type": "module"}, {"lineNumber": 36, "col_offset": 64, "nodeName": "__name__", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "logging", "type": "module"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "split", "type": "Callable"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "__file__", "type": "str"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "base_directory", "type": "str"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "Scenario", "type": "Type[smac.scenario.scenario.Scenario]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 80, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "feature_array", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "feature_array", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "scenario", "type": "InitFreeScenario"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "scenario", "type": "InitFreeScenario"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "UniformIntegerHyperparameter", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "UniformIntegerHyperparameter", "type": "Any"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "average_cost", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "rh_merge", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "SUCCESS", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "rh_merge", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "SUCCESS", "type": "Any"}, {"lineNumber": 163, "col_offset": 44, "nodeName": "average_cost", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 36, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 165, "col_offset": 57, "nodeName": "rh_base", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "rh_base", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "rh_merge", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 177, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "SUCCESS", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "pickle", "type": "module"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "pickle", "type": "module"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "unpacked_scenario", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 194, "col_offset": 47, "nodeName": "logger", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "__module__", "type": "str"}, {"lineNumber": 36, "col_offset": 64, "nodeName": "__class__", "type": "Type[ScenarioTest]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "StatusType", "type": "Type[smac.tae.execute_ta_run.StatusType]"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "StatusType", "type": "Type[smac.tae.execute_ta_run.StatusType]"}, {"lineNumber": 166, "col_offset": 45, "nodeName": "scenario_2", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 166, "col_offset": 78, "nodeName": "rh_merge", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "data", "type": "collections.OrderedDict[smac.runhistory.runhistory.`namedtuple-RunKey-config_id-instance_id-seed`, smac.runhistory.runhistory.`namedtuple-RunValue-cost-time-status-additional_info`]"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "get_cost", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 50, "nodeName": "config", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "runs", "type": "List[smac.runhistory.runhistory.`namedtuple-InstSeedKey-instance-seed`]"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "StatusType", "type": "Type[smac.tae.execute_ta_run.StatusType]"}, {"lineNumber": 182, "col_offset": 72, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 182, "col_offset": 95, "nodeName": "rh_base", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "scenario", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 194, "col_offset": 47, "nodeName": "unpacked_scenario", "type": "Any"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 36, "col_offset": 64, "nodeName": "self", "type": "ScenarioTest"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "rh_base", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "rh_base", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 182, "col_offset": 124, "nodeName": "scenario_2", "type": "smac.scenario.scenario.Scenario"}, {"lineNumber": 182, "col_offset": 159, "nodeName": "rh_merge", "type": "smac.runhistory.runhistory.RunHistory"}]