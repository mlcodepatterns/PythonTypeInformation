[{"lineNumber": 33, "col_offset": 0, "nodeName": "rosenbrock_4d", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "x3", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "x4", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "val", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 241, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "test_files_dir", "type": "str"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "x1", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "x4", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "ls", "type": "smac.optimizer.ei_optimization.LocalSearch"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "start_point", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "acq_val_start_point", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "pcs_file", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "runhistory", "type": "unittest.mock.Mock"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "data", "type": "List[None]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "start_point", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "ls", "type": "smac.optimizer.ei_optimization.LocalSearch"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "runhistory", "type": "List[None]"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "side_effect", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "rand_confs", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "rand_confs", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "acq_func", "type": "smac.optimizer.acquisition.EI"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "ls", "type": "smac.optimizer.ei_optimization.LocalSearch"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "runhistory", "type": "unittest.mock.Mock"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "data", "type": "List[None]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "rval", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "side_effect", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "return_value", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "rval", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "runhistory", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "random_configs", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "minimizer", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "minima", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "values", "type": "Tuple[int, int, int, int, int, int, int, int, int, int]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "return_value", "type": "List[ConfigurationMock]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "return_value", "type": "numpy.ndarray"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "ei", "type": "smac.optimizer.acquisition.EI"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "rs", "type": "smac.optimizer.ei_optimization.RandomSearch"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 28, "nodeName": "side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "ei", "type": "smac.optimizer.acquisition.EI"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "rs", "type": "smac.optimizer.ei_optimization.RandomSearch"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "ConfigurationMock"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "__file__", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestLocalSearch"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "current_dir", "type": "str"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "randint", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestLocalSearch"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "UniformFloatHyperparameter", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "add_hyperparameter", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "x1", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "UniformIntegerHyperparameter", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "add_hyperparameter", "type": "Any"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "x2", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "CategoricalHyperparameter", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "add_hyperparameter", "type": "Any"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "x3", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "UniformIntegerHyperparameter", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "add_hyperparameter", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "x4", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "rval", "type": "List[List[Any]]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "point", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "points", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "LocalSearch", "type": "Type[smac.optimizer.ei_optimization.LocalSearch]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "acquisition_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "cs", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "acquisition_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "acq_val_incumbent", "type": "float"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "_", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "acq_val_start_point", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "acq_val_incumbent", "type": "float"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "test_files_dir", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "randint", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "runhistory", "type": "unittest.mock.Mock"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "fh", "type": "TextIO"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "config_space", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "get_default_configuration", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "_get_initial_points_patch", "type": "Any"}, {"lineNumber": 100, "col_offset": 50, "nodeName": "start_point", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "LocalSearch", "type": "Type[smac.optimizer.ei_optimization.LocalSearch]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "acquisition_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "config_space", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "ls", "type": "smac.optimizer.ei_optimization.LocalSearch"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "acq_val_incumbent", "type": "Any"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "incumbent", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "patch", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "SideEffect", "type": "Type[Any]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "get_branin_config_space", "type": "Callable[[], Any]"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "_get_initial_points_patch", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "EI", "type": "Type[smac.optimizer.acquisition.EI]"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "LocalSearch", "type": "Type[smac.optimizer.ei_optimization.LocalSearch]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "acq_func", "type": "smac.optimizer.acquisition.EI"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "cs", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "runhistory", "type": "unittest.mock.Mock"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "_maximize", "type": "Callable[..., List[Tuple[float, Any]]]"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "runhistory", "type": "unittest.mock.Mock"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "patch", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "SideEffect", "type": "Type[Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "_get_initial_points_patch", "type": "Any"}, {"lineNumber": 151, "col_offset": 65, "nodeName": "rand_confs", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "_maximize", "type": "Callable[..., List[Tuple[float, Any]]]"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "runhistory", "type": "unittest.mock.Mock"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "model", "type": "None"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "LocalSearch", "type": "Type[smac.optimizer.ei_optimization.LocalSearch]"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "RunHistory", "type": "Type[smac.runhistory.runhistory.RunHistory]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "sample_configuration", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "random_config", "type": "Any"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "cost", "type": "Any"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "random_configs", "type": "Any"}, {"lineNumber": 185, "col_offset": 55, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "maximize", "type": "Callable[..., Iterable[Any]]"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "runhistory", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "patch_sample", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "patch_ei", "type": "Any"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "patch_impute", "type": "Any"}, {"lineNumber": 203, "col_offset": 45, "nodeName": "values", "type": "Tuple[int, int, int, int, int, int, int, int, int, int]"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "EI", "type": "Type[smac.optimizer.acquisition.EI]"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "RandomSearch", "type": "Type[smac.optimizer.ei_optimization.RandomSearch]"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "ei", "type": "smac.optimizer.acquisition.EI"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "cs", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "_maximize", "type": "Callable[..., List[Tuple[float, Any]]]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "patch", "type": "Any"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "ConfigurationSpace", "type": "Any"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "EI", "type": "Type[smac.optimizer.acquisition.EI]"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "RandomSearch", "type": "Type[smac.optimizer.ei_optimization.RandomSearch]"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "ei", "type": "smac.optimizer.acquisition.EI"}, {"lineNumber": 230, "col_offset": 30, "nodeName": "cs", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "_maximize", "type": "Callable[..., List[Tuple[float, Any]]]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "self", "type": "ConfigurationMock"}, {"lineNumber": 40, "col_offset": 74, "nodeName": "x3", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "seed", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "opt", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "rval", "type": "List[List[Any]]"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "self", "type": "TestLocalSearch"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "cs", "type": "Any"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "start_point", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "_do_search", "type": "Callable[..., List[Tuple[float, Any]]]"}, {"lineNumber": 75, "col_offset": 45, "nodeName": "start_point", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestLocalSearch"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "mock", "type": "module"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "pcs_file", "type": "str"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "read", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "seed", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "config_space", "type": "Any"}, {"lineNumber": 105, "col_offset": 39, "nodeName": "_maximize", "type": "Callable[..., List[Tuple[float, Any]]]"}, {"lineNumber": 105, "col_offset": 52, "nodeName": "runhistory", "type": "unittest.mock.Mock"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "rval", "type": "List[Tuple[int, ConfigurationMock]]"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "rval", "type": "List[Tuple[int, ConfigurationMock]]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "test_helpers", "type": "module"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "cs", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "mock", "type": "module"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "ls", "type": "smac.optimizer.ei_optimization.LocalSearch"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "rval", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "patch", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "ConfigurationMock", "type": "Type[ConfigurationMock]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "value", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "origin", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "ls", "type": "smac.optimizer.ei_optimization.LocalSearch"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "rval", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "patch", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "origin", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "rval", "type": "List[List[Any]]"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "array", "type": "Any"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "cs", "type": "Any"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "inf", "type": "Any"}, {"lineNumber": 180, "col_offset": 47, "nodeName": "average_cost", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "cs", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "cs", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "rosenbrock_4d", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "random_config", "type": "Any"}, {"lineNumber": 183, "col_offset": 50, "nodeName": "random_config", "type": "Any"}, {"lineNumber": 183, "col_offset": 67, "nodeName": "random_configs", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestLocalSearch"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "min", "type": "Any"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "ls", "type": "smac.optimizer.ei_optimization.LocalSearch"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "m", "type": "Any"}, {"lineNumber": 188, "col_offset": 45, "nodeName": "minimizer", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestLocalSearch"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "minima", "type": "List[Any]"}, {"lineNumber": 201, "col_offset": 37, "nodeName": "ConfigurationMock", "type": "Type[ConfigurationMock]"}, {"lineNumber": 201, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 201, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 201, "col_offset": 67, "nodeName": "values", "type": "Tuple[int, int, int, int, int, int, int, int, int, int]"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 70, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "rs", "type": "smac.optimizer.ei_optimization.RandomSearch"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "rval", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 212, "col_offset": 46, "nodeName": "ConfigurationMock", "type": "Type[ConfigurationMock]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "value", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 215, "col_offset": 29, "nodeName": "origin", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 219, "col_offset": 36, "nodeName": "value", "type": "Any"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 220, "col_offset": 44, "nodeName": "values", "type": "Tuple[int, int, int, int, int, int, int, int, int, int]"}, {"lineNumber": 225, "col_offset": 43, "nodeName": "size", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "rs", "type": "smac.optimizer.ei_optimization.RandomSearch"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "rval", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 236, "col_offset": 46, "nodeName": "ConfigurationMock", "type": "Type[ConfigurationMock]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "origin", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestLocalSearch"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestLocalSearch"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestLocalSearch"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestLocalSearch"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "self", "type": "TestLocalSearch"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "ls", "type": "smac.optimizer.ei_optimization.LocalSearch"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "pcs", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "config_space", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 39, "nodeName": "ls", "type": "smac.optimizer.ei_optimization.LocalSearch"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "incumbent", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "rval", "type": "List[List[Any]]"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "AcquisitionFunction", "type": "Type[Any]"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "self", "type": "TestLocalSearch"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestLocalSearch"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "self", "type": "TestLocalSearch"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "runhistory", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "random_config", "type": "Any"}, {"lineNumber": 186, "col_offset": 54, "nodeName": "cost", "type": "Any"}, {"lineNumber": 186, "col_offset": 75, "nodeName": "SUCCESS", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "rosenbrock_4d", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "m", "type": "Any"}, {"lineNumber": 202, "col_offset": 43, "nodeName": "_", "type": "int"}, {"lineNumber": 202, "col_offset": 50, "nodeName": "_", "type": "int"}, {"lineNumber": 202, "col_offset": 55, "nodeName": "values", "type": "Tuple[int, int, int, int, int, int, int, int, int, int]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 36, "nodeName": "v", "type": "Any"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "v", "type": "Any"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "x2", "type": "Any"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "x4", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "rval", "type": "List[List[Any]]"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "fh", "type": "TextIO"}, {"lineNumber": 97, "col_offset": 71, "nodeName": "point", "type": "Any"}, {"lineNumber": 97, "col_offset": 80, "nodeName": "points", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "get_hyperparameters", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "rval", "type": "Any"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "rval", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 75, "nodeName": "StatusType", "type": "Type[smac.tae.execute_ta_run.StatusType]"}, {"lineNumber": 212, "col_offset": 34, "nodeName": "rval", "type": "Any"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "rval", "type": "Any"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "ConfigurationMock", "type": "Type[ConfigurationMock]"}, {"lineNumber": 236, "col_offset": 34, "nodeName": "rval", "type": "Any"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "rval", "type": "Any"}, {"lineNumber": 40, "col_offset": 57, "nodeName": "x3", "type": "Any"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "count_nonzero", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "config_space", "type": "Any"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "rval", "type": "List[Tuple[int, ConfigurationMock]]"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "rval", "type": "Any"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "rval", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "rval", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "rval", "type": "List[List[Any]]"}, {"lineNumber": 212, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "rval", "type": "Any"}, {"lineNumber": 214, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 215, "col_offset": 29, "nodeName": "rval", "type": "Any"}, {"lineNumber": 219, "col_offset": 53, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "rval", "type": "Any"}, {"lineNumber": 238, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "x3", "type": "Any"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "euclidean", "type": "Any"}, {"lineNumber": 67, "col_offset": 59, "nodeName": "opt", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "ConfigurationMock", "type": "Type[ConfigurationMock]"}, {"lineNumber": 125, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "patch", "type": "Any"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 215, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 219, "col_offset": 53, "nodeName": "patch_ei", "type": "Any"}, {"lineNumber": 237, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "x2", "type": "Any"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "get_array", "type": "Any"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "point", "type": "Any"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "rosenbrock_4d", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "point", "type": "Any"}]