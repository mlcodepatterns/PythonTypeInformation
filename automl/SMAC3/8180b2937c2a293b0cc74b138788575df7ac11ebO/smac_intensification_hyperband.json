[{"lineNumber": 14, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "__copyright__", "type": "str"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "__license__", "type": "str"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "SuccessiveHalving", "type": "Type[smac.intensification.successive_halving.SuccessiveHalving]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "hb_iters", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "s_max", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "sh_initial_budget", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "n_challengers", "type": "int"}, {"lineNumber": 108, "col_offset": 44, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "tae_runner", "type": "smac.tae.execute_ta_run.ExecuteTARun"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "stats", "type": "smac.stats.stats.Stats"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "traj_logger", "type": "smac.utils.io.traj_logging.TrajLogger"}, {"lineNumber": 80, "col_offset": 57, "nodeName": "rng", "type": "Any"}, {"lineNumber": 80, "col_offset": 62, "nodeName": "instances", "type": "List[str]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "instance_specifics", "type": "Mapping[str, numpy.ndarray]"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "cutoff", "type": "Optional[int]"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "deterministic", "type": "bool"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "initial_budget", "type": "Optional[float]"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "max_budget", "type": "Optional[float]"}, {"lineNumber": 82, "col_offset": 53, "nodeName": "eta", "type": "float"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "run_obj_time", "type": "bool"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "n_seeds", "type": "Optional[int]"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "instance_order", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "adaptive_capping_slackfactor", "type": "float"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "_init_hb_params", "type": "Callable[[], None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "floor", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "floor", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "MAXINT", "type": "int"}, {"lineNumber": 141, "col_offset": 48, "nodeName": "max_budget", "type": "Any"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "SuccessiveHalving", "type": "Type[smac.intensification.successive_halving.SuccessiveHalving]"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "tae_runner", "type": "smac.tae.execute_ta_run.ExecuteTARun"}, {"lineNumber": 149, "col_offset": 60, "nodeName": "stats", "type": "smac.stats.stats.Stats"}, {"lineNumber": 149, "col_offset": 72, "nodeName": "traj_logger", "type": "smac.utils.io.traj_logging.TrajLogger"}, {"lineNumber": 149, "col_offset": 90, "nodeName": "rs", "type": "Any"}, {"lineNumber": 149, "col_offset": 99, "nodeName": "instances", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 43, "nodeName": "instance_specifics", "type": "Mapping[str, numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 68, "nodeName": "cutoff", "type": "Any"}, {"lineNumber": 150, "col_offset": 81, "nodeName": "deterministic", "type": "bool"}, {"lineNumber": 151, "col_offset": 43, "nodeName": "sh_initial_budget", "type": "Any"}, {"lineNumber": 151, "col_offset": 62, "nodeName": "max_budget", "type": "Any"}, {"lineNumber": 151, "col_offset": 79, "nodeName": "eta", "type": "Any"}, {"lineNumber": 151, "col_offset": 89, "nodeName": "n_challengers", "type": "int"}, {"lineNumber": 152, "col_offset": 43, "nodeName": "run_obj_time", "type": "bool"}, {"lineNumber": 152, "col_offset": 62, "nodeName": "n_seeds", "type": "int"}, {"lineNumber": 152, "col_offset": 76, "nodeName": "instance_order", "type": "Any"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "adaptive_capping_slackfactor", "type": "float"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "intensify", "type": "Callable[..., Tuple[Any, float]]"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "s", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "s_max", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "hb_iters", "type": "int"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "incumbent", "type": "Any"}, {"lineNumber": 171, "col_offset": 26, "nodeName": "inc_perf", "type": "float"}, {"lineNumber": 108, "col_offset": 44, "nodeName": "typing", "type": "module"}, {"lineNumber": 84, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "logging", "type": "module"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "eta", "type": "Any"}, {"lineNumber": 141, "col_offset": 48, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 149, "col_offset": 60, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 149, "col_offset": 72, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 149, "col_offset": 90, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 149, "col_offset": 99, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 150, "col_offset": 43, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 150, "col_offset": 68, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 150, "col_offset": 81, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 151, "col_offset": 62, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 151, "col_offset": 79, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 152, "col_offset": 43, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 152, "col_offset": 62, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 152, "col_offset": 76, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 154, "col_offset": 59, "nodeName": "inst_seed_pairs", "type": "Any"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "sh_intensifier", "type": "smac.intensification.successive_halving.SuccessiveHalving"}, {"lineNumber": 158, "col_offset": 67, "nodeName": "challengers", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 65, "nodeName": "incumbent", "type": "Any"}, {"lineNumber": 160, "col_offset": 67, "nodeName": "run_history", "type": "smac.runhistory.runhistory.RunHistory"}, {"lineNumber": 161, "col_offset": 70, "nodeName": "aggregate_func", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 66, "nodeName": "time_bound", "type": "float"}, {"lineNumber": 162, "col_offset": 87, "nodeName": "log_traj", "type": "bool"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 108, "col_offset": 57, "nodeName": "Configuration", "type": "Any"}, {"lineNumber": 108, "col_offset": 72, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "__module__", "type": "str"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "log", "type": "Any"}, {"lineNumber": 100, "col_offset": 78, "nodeName": "log", "type": "Any"}, {"lineNumber": 100, "col_offset": 85, "nodeName": "eta", "type": "Any"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "log", "type": "Any"}, {"lineNumber": 101, "col_offset": 74, "nodeName": "log", "type": "Any"}, {"lineNumber": 101, "col_offset": 81, "nodeName": "eta", "type": "Any"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "s", "type": "Any"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "floor", "type": "Any"}, {"lineNumber": 143, "col_offset": 70, "nodeName": "eta", "type": "Any"}, {"lineNumber": 143, "col_offset": 80, "nodeName": "s", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "sh_initial_budget", "type": "Any"}, {"lineNumber": 154, "col_offset": 59, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "max_budget", "type": "Any"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "initial_budget", "type": "Any"}, {"lineNumber": 100, "col_offset": 78, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 85, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "max_budget", "type": "Any"}, {"lineNumber": 101, "col_offset": 51, "nodeName": "initial_budget", "type": "Any"}, {"lineNumber": 101, "col_offset": 74, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 81, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 70, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 143, "col_offset": 80, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "hb_iters", "type": "int"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 101, "col_offset": 51, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "s_max", "type": "Any"}, {"lineNumber": 143, "col_offset": 55, "nodeName": "s", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "s_max", "type": "Any"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "s", "type": "Any"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 143, "col_offset": 55, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "self", "type": "Hyperband"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "self", "type": "Hyperband"}]