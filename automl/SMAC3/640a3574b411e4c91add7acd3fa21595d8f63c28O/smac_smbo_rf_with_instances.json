[{"lineNumber": 8, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "__copyright__", "type": "str"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "__license__", "type": "str"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "__maintainer__", "type": "str"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "__email__", "type": "str"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "__version__", "type": "str"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "instance_features", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "instance_features", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "types", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "types", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "rf", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "num_trees", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "num_trees", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "seed", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "do_bootstrapping", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "do_bootstrapping", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "num_data_points_per_tree", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "n_points_per_tree", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "max_features", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "min_samples_to_split", "type": "Any"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "min_samples_in_leaf", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "epsilon_purity", "type": "Any"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "eps_purity", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "max_num_nodes", "type": "Any"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "max_num_nodes", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "seed", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "dub_filter", "type": "smac.utils.duplicate_filter_logging.DuplicateFilter"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "X", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "Y", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "Y", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "mean", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "mean", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "binary_rss", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "rf", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "rf", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "rf", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "rf", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "rf", "type": "Any"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "rf", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "rf", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "rf", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "rf", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "rf", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "num_trees", "type": "Any"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "max_num_nodes", "type": "Any"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "do_bootstrapping", "type": "Any"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "n_points_per_tree", "type": "Any"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "ratio_features", "type": "Any"}, {"lineNumber": 83, "col_offset": 58, "nodeName": "min_samples_split", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "min_samples_leaf", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "eps_purity", "type": "Any"}, {"lineNumber": 84, "col_offset": 64, "nodeName": "seed", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "DuplicateFilter", "type": "Type[smac.utils.duplicate_filter_logging.DuplicateFilter]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "addFilter", "type": "Callable[[Union[logging.Filter, Callable[[logging.LogRecord], int]]], None]"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "dub_filter", "type": "smac.utils.duplicate_filter_logging.DuplicateFilter"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "numpy_data_container", "type": "Any"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "X", "type": "Any"}, {"lineNumber": 110, "col_offset": 53, "nodeName": "types", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "X_", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "Xtest", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "nfeats", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "X_", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "mean", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "regression", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 74, "col_offset": 52, "nodeName": "ratio_features", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "logging", "type": "module"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "regression", "type": "Any"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 109, "col_offset": 53, "nodeName": "Y", "type": "Any"}, {"lineNumber": 110, "col_offset": 53, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "rf", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "instance_features", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "predict", "type": "Any"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "mean", "type": "Any"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "var", "type": "Any"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "mean", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "pyrfr", "type": "Any"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "pyrfr", "type": "Any"}, {"lineNumber": 109, "col_offset": 53, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 49, "nodeName": "instance_features", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "instance_features", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "instance_features", "type": "Any"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "X_", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "X_", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "var", "type": "Any"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "rf", "type": "Any"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "types", "type": "Any"}, {"lineNumber": 133, "col_offset": 49, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "tile", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "Xtest", "type": "Any"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "self", "type": "RandomForestWithInstances"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "nfeats", "type": "Any"}]