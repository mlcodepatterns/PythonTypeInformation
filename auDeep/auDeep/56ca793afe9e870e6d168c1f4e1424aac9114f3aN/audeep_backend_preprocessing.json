[{"lineNumber": 30, "col_offset": 20, "nodeName": "Enum", "type": "Type[enum.Enum]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "LoggingMixin", "type": "Type[audeep.backend.log.LoggingMixin]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "MEAN", "type": "int"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "DIFF", "type": "int"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "LEFT", "type": "int"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "RIGHT", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "_channel_fusion", "type": "ChannelFusion"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "channel_fusion", "type": "ChannelFusion"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "_pre_emphasis", "type": "bool"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "pre_emphasis", "type": "bool"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_window_width", "type": "float"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "window_width", "type": "float"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_window_overlap", "type": "float"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "window_overlap", "type": "float"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_mel_bands", "type": "int"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "mel_bands", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "_clip_power_above", "type": "int"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "clip_power_above", "type": "int"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "_clip_power_below", "type": "int"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "clip_power_below", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "_chunk_length", "type": "float"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "chunk_length", "type": "float"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "_chunk_count", "type": "int"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "chunk_count", "type": "int"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "_mel_fbanks", "type": "Dict[Any, Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "_freq_points", "type": "Dict[Any, Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "_fixed_length", "type": "float"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "fixed_length", "type": "float"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "_center_fixed", "type": "bool"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "center_fixed", "type": "bool"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "_mean_norm", "type": "bool"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "mean_norm", "type": "bool"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "_pre_emphasis", "type": "bool"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "window_width_samples", "type": "int"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "window_overlap_samples", "type": "int"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "window_step_samples", "type": "int"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "sxx", "type": "numpy.ndarray"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "_mean_norm", "type": "bool"}, {"lineNumber": 109, "col_offset": 50, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "fs", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "read", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "_fixed_length", "type": "float"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "fixed_length_samples", "type": "int"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 54, "nodeName": "file", "type": "pathlib.Path"}, {"lineNumber": 156, "col_offset": 78, "nodeName": "fs", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "_fixed_length", "type": "float"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "expected_step", "type": "float"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "expected_num_frames", "type": "int"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "actual_step", "type": "int"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "actual_num_frames", "type": "Any"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "window_width_samples", "type": "int"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "window_overlap_samples", "type": "int"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "sxx", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "power_spectrum", "type": "Callable[[numpy.ndarray, int, int, int], Tuple[Any, Any, Any]]"}, {"lineNumber": 200, "col_offset": 44, "nodeName": "samples", "type": "Any"}, {"lineNumber": 200, "col_offset": 53, "nodeName": "fs", "type": "Any"}, {"lineNumber": 200, "col_offset": 57, "nodeName": "window_width_samples", "type": "int"}, {"lineNumber": 200, "col_offset": 79, "nodeName": "window_overlap_samples", "type": "int"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "_mel_bands", "type": "int"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "sxx", "type": "numpy.ndarray"}, {"lineNumber": 222, "col_offset": 14, "nodeName": "power_to_db", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "sxx", "type": "numpy.ndarray"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "_chunk_length", "type": "float"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "chunk_length_frames", "type": "int"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "chunk_length_windows", "type": "int"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "num_windows", "type": "int"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "indices", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "sxx", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "sxx", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "sxx", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "sxx_min", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "sxx_max", "type": "List[Any]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "List", "type": "Any"}, {"lineNumber": 109, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 62, "nodeName": "List", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "exists", "type": "Callable[[], bool]"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "IOError", "type": "Type[OSError]"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "soundfile", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "file", "type": "pathlib.Path"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "fixed_length_samples", "type": "int"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "_center_fixed", "type": "bool"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "samples", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "_center_fixed", "type": "bool"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 156, "col_offset": 60, "nodeName": "shape", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "_channel_fusion", "type": "ChannelFusion"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "MEAN", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "samples", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "pre_emphasis_filter", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 173, "col_offset": 51, "nodeName": "samples", "type": "Any"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "fs", "type": "Any"}, {"lineNumber": 177, "col_offset": 40, "nodeName": "_window_width", "type": "float"}, {"lineNumber": 178, "col_offset": 37, "nodeName": "fs", "type": "Any"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "_window_overlap", "type": "float"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "_window_width", "type": "float"}, {"lineNumber": 181, "col_offset": 49, "nodeName": "_window_overlap", "type": "float"}, {"lineNumber": 182, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "window_width_samples", "type": "int"}, {"lineNumber": 184, "col_offset": 49, "nodeName": "window_overlap_samples", "type": "int"}, {"lineNumber": 185, "col_offset": 79, "nodeName": "actual_step", "type": "int"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "actual_num_frames", "type": "Any"}, {"lineNumber": 187, "col_offset": 35, "nodeName": "expected_num_frames", "type": "int"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "window_overlap_samples", "type": "int"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "spectral", "type": "module"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "fs", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "_mel_fbanks", "type": "Dict[Any, Any]"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "valid_banks", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "zero_count", "type": "int"}, {"lineNumber": 215, "col_offset": 40, "nodeName": "freq_points", "type": "Any"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "mel_fbank", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "_freq_points", "type": "Dict[Any, Any]"}, {"lineNumber": 219, "col_offset": 18, "nodeName": "mel_spectrum", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 219, "col_offset": 40, "nodeName": "sxx", "type": "Any"}, {"lineNumber": 222, "col_offset": 14, "nodeName": "spectral", "type": "module"}, {"lineNumber": 222, "col_offset": 51, "nodeName": "_clip_power_above", "type": "int"}, {"lineNumber": 222, "col_offset": 86, "nodeName": "_clip_power_below", "type": "int"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 227, "col_offset": 35, "nodeName": "chunk_length_frames", "type": "int"}, {"lineNumber": 227, "col_offset": 58, "nodeName": "window_step_samples", "type": "int"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 231, "col_offset": 32, "nodeName": "chunk_length_windows", "type": "int"}, {"lineNumber": 231, "col_offset": 54, "nodeName": "num_windows", "type": "int"}, {"lineNumber": 231, "col_offset": 67, "nodeName": "chunk_length_windows", "type": "int"}, {"lineNumber": 232, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 232, "col_offset": 27, "nodeName": "sxx", "type": "numpy.ndarray"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "sxx", "type": "Any"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "x_max", "type": "Any"}, {"lineNumber": 252, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 252, "col_offset": 39, "nodeName": "sxx", "type": "List[Any]"}, {"lineNumber": 252, "col_offset": 44, "nodeName": "sxx_min", "type": "List[Any]"}, {"lineNumber": 252, "col_offset": 53, "nodeName": "sxx_max", "type": "List[Any]"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "t", "type": "Any"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "sxx", "type": "Any"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "f", "type": "Any"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "t", "type": "Any"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 109, "col_offset": 67, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "file", "type": "pathlib.Path"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 128, "col_offset": 67, "nodeName": "file", "type": "pathlib.Path"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "_fixed_length", "type": "float"}, {"lineNumber": 134, "col_offset": 60, "nodeName": "fs", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "samples", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "offset", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "offset", "type": "int"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "samples", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "pad_start", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "pad_end", "type": "Any"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "pad_start", "type": "int"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "pad_end", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "pad", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 156, "col_offset": 60, "nodeName": "samples", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "samples", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "ChannelFusion", "type": "Type[ChannelFusion]"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "mean", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "samples", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "_channel_fusion", "type": "ChannelFusion"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "DIFF", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "samples", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "spectral", "type": "module"}, {"lineNumber": 177, "col_offset": 40, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 181, "col_offset": 49, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 182, "col_offset": 84, "nodeName": "expected_step", "type": "float"}, {"lineNumber": 185, "col_offset": 52, "nodeName": "window_overlap_samples", "type": "int"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "actual_num_frames", "type": "Any"}, {"lineNumber": 192, "col_offset": 37, "nodeName": "expected_num_frames", "type": "int"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "window_overlap_samples", "type": "int"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "mel_filter_bank", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 205, "col_offset": 66, "nodeName": "fs", "type": "Any"}, {"lineNumber": 205, "col_offset": 70, "nodeName": "window_width_samples", "type": "int"}, {"lineNumber": 206, "col_offset": 66, "nodeName": "_mel_bands", "type": "int"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "_mel_bands", "type": "int"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "zero_count", "type": "int"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "_freq_points", "type": "Dict[Any, Any]"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "_mel_fbanks", "type": "Dict[Any, Any]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 218, "col_offset": 34, "nodeName": "fs", "type": "Any"}, {"lineNumber": 219, "col_offset": 18, "nodeName": "spectral", "type": "module"}, {"lineNumber": 222, "col_offset": 51, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 222, "col_offset": 86, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 226, "col_offset": 38, "nodeName": "fs", "type": "Any"}, {"lineNumber": 226, "col_offset": 43, "nodeName": "_chunk_length", "type": "float"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "sxx", "type": "numpy.ndarray"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 52, "nodeName": "indices", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 48, "nodeName": "indices", "type": "Any"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 238, "col_offset": 23, "nodeName": "_chunk_count", "type": "int"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "_chunk_count", "type": "int"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 246, "col_offset": 43, "nodeName": "sxx", "type": "Any"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "min", "type": "Any"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 247, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 247, "col_offset": 42, "nodeName": "sxx", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "max", "type": "Any"}, {"lineNumber": 248, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 248, "col_offset": 42, "nodeName": "sxx", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "offset", "type": "Any"}, {"lineNumber": 148, "col_offset": 67, "nodeName": "pad_start", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "fixed_length_samples", "type": "int"}, {"lineNumber": 151, "col_offset": 53, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "ChannelFusion", "type": "Type[ChannelFusion]"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "_channel_fusion", "type": "ChannelFusion"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "LEFT", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "samples", "type": "Any"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "_fixed_length", "type": "float"}, {"lineNumber": 182, "col_offset": 60, "nodeName": "_window_overlap", "type": "float"}, {"lineNumber": 185, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "spectral", "type": "module"}, {"lineNumber": 206, "col_offset": 66, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "mel_fbank", "type": "Any"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 68, "nodeName": "zero_count", "type": "int"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 215, "col_offset": 34, "nodeName": "fs", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "fs", "type": "Any"}, {"lineNumber": 219, "col_offset": 55, "nodeName": "_mel_fbanks", "type": "Dict[Any, Any]"}, {"lineNumber": 226, "col_offset": 43, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 235, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 235, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 235, "col_offset": 59, "nodeName": "sxx", "type": "Any"}, {"lineNumber": 235, "col_offset": 66, "nodeName": "_chunk_count", "type": "int"}, {"lineNumber": 236, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 238, "col_offset": 23, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "mean", "type": "Any"}, {"lineNumber": 246, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "fixed_length_samples", "type": "int"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "offset", "type": "Any"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "fixed_length_samples", "type": "int"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "fixed_length_samples", "type": "int"}, {"lineNumber": 147, "col_offset": 56, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "fixed_length_samples", "type": "int"}, {"lineNumber": 148, "col_offset": 53, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "samples", "type": "Any"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "samples", "type": "Any"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "ChannelFusion", "type": "Type[ChannelFusion]"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "samples", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "_channel_fusion", "type": "ChannelFusion"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "RIGHT", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "samples", "type": "Any"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 182, "col_offset": 60, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 185, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 219, "col_offset": 55, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 219, "col_offset": 72, "nodeName": "fs", "type": "Any"}, {"lineNumber": 235, "col_offset": 66, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 236, "col_offset": 87, "nodeName": "_chunk_count", "type": "int"}, {"lineNumber": 236, "col_offset": 110, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 236, "col_offset": 114, "nodeName": "sxx", "type": "Any"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "x_max", "type": "Any"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 256, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 256, "col_offset": 38, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 153, "col_offset": 54, "nodeName": "pad_start", "type": "Any"}, {"lineNumber": 153, "col_offset": 65, "nodeName": "pad_end", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "ChannelFusion", "type": "Type[ChannelFusion]"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "samples", "type": "Any"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "nonzero", "type": "Any"}, {"lineNumber": 209, "col_offset": 62, "nodeName": "valid_banks", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "sxx", "type": "Any"}, {"lineNumber": 235, "col_offset": 35, "nodeName": "sxx", "type": "Any"}, {"lineNumber": 236, "col_offset": 87, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 169, "col_offset": 78, "nodeName": "_channel_fusion", "type": "ChannelFusion"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 53, "nodeName": "x_max", "type": "Any"}, {"lineNumber": 254, "col_offset": 61, "nodeName": "x_min", "type": "Any"}, {"lineNumber": 169, "col_offset": 78, "nodeName": "self", "type": "Preprocessor"}, {"lineNumber": 254, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 254, "col_offset": 43, "nodeName": "x_min", "type": "Any"}]