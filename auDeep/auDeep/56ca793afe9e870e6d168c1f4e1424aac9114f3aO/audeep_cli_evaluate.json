[{"lineNumber": 35, "col_offset": 26, "nodeName": "LoggingMixin", "type": "Type[audeep.backend.log.LoggingMixin]"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "Command", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "EvaluateBaseCommand", "type": "Type[EvaluateBaseCommand]"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "EvaluateBaseCommand", "type": "Type[EvaluateBaseCommand]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "__metaclass__", "type": "Type[abc.ABCMeta]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "ABCMeta", "type": "Type[abc.ABCMeta]"}, {"lineNumber": 119, "col_offset": 43, "nodeName": "LearnerBase", "type": "Type[audeep.backend.learners.LearnerBase]"}, {"lineNumber": 235, "col_offset": 43, "nodeName": "LearnerBase", "type": "Type[audeep.backend.learners.LearnerBase]"}, {"lineNumber": 265, "col_offset": 43, "nodeName": "LearnerBase", "type": "Type[audeep.backend.learners.LearnerBase]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "abc", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "_learner", "type": "None"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "parser", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "cm_norm", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "tick_marks", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "thresh", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "_learner", "type": "audeep.backend.learners.LearnerBase"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "data_set", "type": "audeep.backend.data.data_set.DataSet"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "accuracies", "type": "List[float]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "uars", "type": "List[float]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "confusion_matrices", "type": "List[numpy.ndarray]"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "cross_validate", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "confusion_matrix", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "formatter", "type": "audeep.backend.formatters.ConfusionMatrixFormatter"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "parser", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "checkpoint_dir", "type": "pathlib.Path"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "parser", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "app", "type": "Any"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "app_args", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "EvaluateBaseCommand"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "get_parser", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "prog_name", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "imshow", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "cm_norm", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "title", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "title", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "colorbar", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "arange", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "xticks", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "tick_marks", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "classes", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "yticks", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "tick_marks", "type": "Any"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "classes", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "cm", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "cm_norm", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "j", "type": "int"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "product", "type": "Callable"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "tight_layout", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "ylabel", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "xlabel", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "show", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "EvaluateBaseCommand"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "_get_learner", "type": "Callable[[Any], audeep.backend.learners.LearnerBase]"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "cross_validate", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "load", "type": "Callable[[pathlib.Path], audeep.backend.data.data_set.DataSet]"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "input", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "accuracy_confidence_intervals", "type": "List[float]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "uar_confidence_intervals", "type": "List[float]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "accuracy_confidence_interval", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "uar", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "uar_confidence_interval", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "uar", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 188, "col_offset": 34, "nodeName": "confusion_matrices", "type": "List[numpy.ndarray]"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "ConfusionMatrixFormatter", "type": "Type[audeep.backend.formatters.ConfusionMatrixFormatter]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "verbose_level", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "get_parser", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 36, "nodeName": "prog_name", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "parent", "type": "Any"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "TensorflowMLPLearner", "type": "Type[audeep.backend.learners.TensorflowMLPLearner]"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "get_parser", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 36, "nodeName": "prog_name", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "LibLINEARLearner", "type": "Type[audeep.backend.learners.LibLINEARLearner]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "plt", "type": "Any"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "cmap", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "plt", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "plt", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "classes", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "plt", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "plt", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "max", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "itertools", "type": "module"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 103, "col_offset": 58, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "plt", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "plt", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "plt", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "plt", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "self", "type": "EvaluateBaseCommand"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "exists", "type": "Any"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "IOError", "type": "Type[OSError]"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "train_partitions", "type": "Any"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "eval_partitions", "type": "Any"}, {"lineNumber": 128, "col_offset": 96, "nodeName": "cross_validate", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "cross_validate", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "mean", "type": "Any"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "accuracies", "type": "List[float]"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "mean", "type": "Any"}, {"lineNumber": 160, "col_offset": 51, "nodeName": "accuracy_confidence_intervals", "type": "List[float]"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "uars", "type": "List[float]"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "mean", "type": "Any"}, {"lineNumber": 162, "col_offset": 46, "nodeName": "uar_confidence_intervals", "type": "List[float]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "mean", "type": "Any"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "accuracies", "type": "List[float]"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "uars", "type": "List[float]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 191, "col_offset": 47, "nodeName": "format", "type": "Callable[[numpy.ndarray, Mapping[str, int]], str]"}, {"lineNumber": 191, "col_offset": 64, "nodeName": "confusion_matrix", "type": "Any"}, {"lineNumber": 191, "col_offset": 82, "nodeName": "label_map", "type": "Any"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "app_args", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "plot_confusion_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "confusion_matrix", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 222, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 226, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "exists", "type": "Callable[[], bool]"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 241, "col_offset": 51, "nodeName": "checkpoint_dir", "type": "pathlib.Path"}, {"lineNumber": 242, "col_offset": 47, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 243, "col_offset": 46, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 244, "col_offset": 50, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 245, "col_offset": 47, "nodeName": "num_epochs", "type": "Any"}, {"lineNumber": 246, "col_offset": 46, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 247, "col_offset": 53, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 266, "col_offset": 43, "nodeName": "complexity", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "EnumType", "type": "Type[audeep.backend.enum_parser.EnumType]"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "Partition", "type": "Type[audeep.backend.data.data_set.Partition]"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "EnumType", "type": "Type[audeep.backend.enum_parser.EnumType]"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "Partition", "type": "Type[audeep.backend.data.data_set.Partition]"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "cm", "type": "Any"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "sum", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "cm", "type": "Any"}, {"lineNumber": 103, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 103, "col_offset": 64, "nodeName": "shape", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "j", "type": "int"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "j", "type": "int"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "input", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 126, "col_offset": 66, "nodeName": "input", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 128, "col_offset": 96, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "train_partitions", "type": "Any"}, {"lineNumber": 130, "col_offset": 56, "nodeName": "eval_partitions", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 133, "col_offset": 48, "nodeName": "train_partitions", "type": "Any"}, {"lineNumber": 134, "col_offset": 54, "nodeName": "eval_partitions", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "CrossValidatedEvaluation", "type": "Type[audeep.backend.evaluation.CrossValidatedEvaluation]"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "run", "type": "Callable[[audeep.backend.data.data_set.DataSet], None]"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "data_set", "type": "audeep.backend.data.data_set.DataSet"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "accuracy", "type": "float"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "uar", "type": "float"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 155, "col_offset": 53, "nodeName": "accuracy_confidence_interval", "type": "float"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 156, "col_offset": 48, "nodeName": "uar_confidence_interval", "type": "float"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 157, "col_offset": 42, "nodeName": "confusion_matrix", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 164, "col_offset": 84, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "accuracy_confidence_interval", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 166, "col_offset": 79, "nodeName": "uar", "type": "Any"}, {"lineNumber": 166, "col_offset": 90, "nodeName": "uar_confidence_interval", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "PartitionedEvaluation", "type": "Type[audeep.backend.evaluation.PartitionedEvaluation]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "run", "type": "Callable[[audeep.backend.data.data_set.DataSet], None]"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "data_set", "type": "audeep.backend.data.data_set.DataSet"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "accuracy", "type": "float"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "uar", "type": "float"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "confusion_matrix", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "EvaluateBaseCommand"}, {"lineNumber": 191, "col_offset": 47, "nodeName": "formatter", "type": "audeep.backend.formatters.ConfusionMatrixFormatter"}, {"lineNumber": 191, "col_offset": 82, "nodeName": "data_set", "type": "audeep.backend.data.data_set.DataSet"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "self", "type": "EvaluateBaseCommand"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "self", "type": "EvaluateBaseCommand"}, {"lineNumber": 198, "col_offset": 57, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "checkpoint_dir", "type": "pathlib.Path"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "checkpoint_dir", "type": "pathlib.Path"}, {"lineNumber": 242, "col_offset": 47, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 243, "col_offset": 46, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 244, "col_offset": 50, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 245, "col_offset": 47, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 246, "col_offset": 46, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 247, "col_offset": 53, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 266, "col_offset": 43, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "cm", "type": "Any"}, {"lineNumber": 91, "col_offset": 57, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 103, "col_offset": 44, "nodeName": "cm", "type": "Any"}, {"lineNumber": 103, "col_offset": 64, "nodeName": "cm", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "plt", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "plt", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 126, "col_offset": 66, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 130, "col_offset": 56, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 133, "col_offset": 48, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 134, "col_offset": 54, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 148, "col_offset": 62, "nodeName": "_learner", "type": "audeep.backend.learners.LearnerBase"}, {"lineNumber": 149, "col_offset": 63, "nodeName": "upsample", "type": "Any"}, {"lineNumber": 150, "col_offset": 68, "nodeName": "majority_vote", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "evaluation", "type": "audeep.backend.evaluation.CrossValidatedEvaluation"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "accuracies", "type": "List[float]"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "evaluation", "type": "audeep.backend.evaluation.CrossValidatedEvaluation"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "uars", "type": "List[float]"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "evaluation", "type": "audeep.backend.evaluation.CrossValidatedEvaluation"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "accuracy_confidence_intervals", "type": "List[float]"}, {"lineNumber": 155, "col_offset": 53, "nodeName": "evaluation", "type": "audeep.backend.evaluation.CrossValidatedEvaluation"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "uar_confidence_intervals", "type": "List[float]"}, {"lineNumber": 156, "col_offset": 48, "nodeName": "evaluation", "type": "audeep.backend.evaluation.CrossValidatedEvaluation"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "confusion_matrices", "type": "List[numpy.ndarray]"}, {"lineNumber": 157, "col_offset": 42, "nodeName": "evaluation", "type": "audeep.backend.evaluation.CrossValidatedEvaluation"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "self", "type": "EvaluateBaseCommand"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "self", "type": "EvaluateBaseCommand"}, {"lineNumber": 170, "col_offset": 59, "nodeName": "_learner", "type": "audeep.backend.learners.LearnerBase"}, {"lineNumber": 171, "col_offset": 68, "nodeName": "train_partitions", "type": "Any"}, {"lineNumber": 172, "col_offset": 67, "nodeName": "eval_partitions", "type": "Any"}, {"lineNumber": 173, "col_offset": 60, "nodeName": "upsample", "type": "Any"}, {"lineNumber": 174, "col_offset": 65, "nodeName": "majority_vote", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "evaluation", "type": "audeep.backend.evaluation.PartitionedEvaluation"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "accuracies", "type": "List[float]"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "evaluation", "type": "audeep.backend.evaluation.PartitionedEvaluation"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "uars", "type": "List[float]"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "evaluation", "type": "audeep.backend.evaluation.PartitionedEvaluation"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "confusion_matrices", "type": "List[numpy.ndarray]"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "evaluation", "type": "audeep.backend.evaluation.PartitionedEvaluation"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "EvaluateBaseCommand"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "uar", "type": "Any"}, {"lineNumber": 198, "col_offset": 64, "nodeName": "keys", "type": "Any"}, {"lineNumber": 91, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "cm", "type": "Any"}, {"lineNumber": 148, "col_offset": 62, "nodeName": "self", "type": "EvaluateBaseCommand"}, {"lineNumber": 149, "col_offset": 63, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 150, "col_offset": 68, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 170, "col_offset": 59, "nodeName": "self", "type": "EvaluateBaseCommand"}, {"lineNumber": 171, "col_offset": 68, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 172, "col_offset": 67, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 173, "col_offset": 60, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 174, "col_offset": 65, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 186, "col_offset": 81, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 186, "col_offset": 97, "nodeName": "uar", "type": "Any"}, {"lineNumber": 198, "col_offset": 64, "nodeName": "label_map", "type": "Any"}, {"lineNumber": 107, "col_offset": 53, "nodeName": "thresh", "type": "Any"}, {"lineNumber": 111, "col_offset": 53, "nodeName": "thresh", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 198, "col_offset": 64, "nodeName": "data_set", "type": "audeep.backend.data.data_set.DataSet"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "j", "type": "int"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "cm", "type": "Any"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "j", "type": "int"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "cm", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "p", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "eval_partitions", "type": "Any"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "parsed_args", "type": "Any"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "j", "type": "int"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "j", "type": "int"}]