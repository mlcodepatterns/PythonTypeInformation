[{"lineNumber": 7, "col_offset": 0, "nodeName": "PROJECT", "type": "str"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "VERSION", "type": "str"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "LICENSE", "type": "str"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "AUTHOR", "type": "str"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "AUTHOR_EMAIL", "type": "str"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "tensorflow_found", "type": "bool"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "tensorflow_found", "type": "bool"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "nvcc_version_regex", "type": "Pattern[str]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "use_gpu", "type": "bool"}, {"lineNumber": 58, "col_offset": 7, "nodeName": "use_gpu", "type": "bool"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "setup", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "tensorflow_found", "type": "bool"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "output", "type": "str"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "version_string", "type": "Match[str]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "version_string", "type": "Match[str]"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "CalledProcessError", "type": "Type[subprocess.CalledProcessError]"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "PROJECT", "type": "str"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "VERSION", "type": "str"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "LICENSE", "type": "str"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "AUTHOR", "type": "str"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "AUTHOR_EMAIL", "type": "str"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "dependencies", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "re", "type": "module"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "search", "type": "Callable"}, {"lineNumber": 39, "col_offset": 51, "nodeName": "output", "type": "str"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "major", "type": "int"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "minor", "type": "int"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "find_packages", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "check_output", "type": "Callable[..., str]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "nvcc_version_regex", "type": "Pattern[str]"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "major", "type": "int"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "use_gpu", "type": "bool"}, {"lineNumber": 56, "col_offset": 49, "nodeName": "e", "type": "Exception"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "dependencies", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "dependencies", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "group", "type": "Callable"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "group", "type": "Callable"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "version_string", "type": "Match[str]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "version_string", "type": "Match[str]"}, {"lineNumber": 46, "col_offset": 68, "nodeName": "major", "type": "int"}, {"lineNumber": 46, "col_offset": 75, "nodeName": "minor", "type": "int"}, {"lineNumber": 48, "col_offset": 66, "nodeName": "major", "type": "int"}, {"lineNumber": 48, "col_offset": 73, "nodeName": "minor", "type": "int"}]