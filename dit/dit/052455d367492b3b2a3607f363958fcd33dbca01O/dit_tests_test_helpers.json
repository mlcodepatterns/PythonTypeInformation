[{"lineNumber": 14, "col_offset": 0, "nodeName": "test_construct_alphabets1", "type": "Callable[[], Any]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "test_construct_alphabets2", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "test_construct_alphabets3", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "test_construct_alphabets4", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "test_parse_rvs1", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "test_parse_rvs2", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "test_parse_rvs3", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "test_reorder1", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "test_reorder2", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "test_reorder_cp1", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_reorder_cp2", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "test_reorder_cp3", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "test_reorder_cp4", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "test_reorder_cp5", "type": "Callable[[], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "outcomes", "type": "int"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "outcomes", "type": "List[int]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "sample_space", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "new", "type": "Tuple[Any, Any, Dict[Any, Any]]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "sample_space", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "product", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "new", "type": "Tuple[Any, Any, Dict[Any, Any]]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "product", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "new", "type": "Tuple[Any, Any, Dict[Any, Any]]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "product", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "new", "type": "Tuple[Any, Any, Dict[Any, Any]]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "product", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "product", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "construct_alphabets", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 33, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "construct_alphabets", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 50, "nodeName": "outcomes", "type": "int"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "construct_alphabets", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 53, "nodeName": "outcomes", "type": "List[int]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "construct_alphabets", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 53, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "parse_rvs", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "d", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "set_rv_names", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "parse_rvs", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 42, "col_offset": 43, "nodeName": "d", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "parse_rvs", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "d", "type": "Any"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "reorder", "type": "Callable[..., Tuple[Any, Any, Dict[Any, Any]]]"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "sample_space", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "InvalidDistribution", "type": "Type[dit.exceptions.InvalidDistribution]"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "reorder", "type": "Callable[..., Tuple[Any, Any, Dict[Any, Any]]]"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 58, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 61, "col_offset": 63, "nodeName": "sample_space", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "construct_alphabets", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "get_product_func", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "reorder_cp", "type": "Callable[..., Tuple[Any, Any, Dict[Any, Any]]]"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 68, "col_offset": 44, "nodeName": "product", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "construct_alphabets", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "get_product_func", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "reorder_cp", "type": "Callable[..., Tuple[Any, Any, Dict[Any, Any]]]"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "product", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "construct_alphabets", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "get_product_func", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 84, "col_offset": 10, "nodeName": "reorder_cp", "type": "Callable[..., Tuple[Any, Any, Dict[Any, Any]]]"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "product", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "construct_alphabets", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "get_product_func", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "InvalidDistribution", "type": "Type[dit.exceptions.InvalidDistribution]"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "reorder_cp", "type": "Callable[..., Tuple[Any, Any, Dict[Any, Any]]]"}, {"lineNumber": 92, "col_offset": 51, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 92, "col_offset": 61, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 92, "col_offset": 66, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 92, "col_offset": 74, "nodeName": "product", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "construct_alphabets", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "get_product_func", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "reorder_cp", "type": "Callable[..., Tuple[Any, Any, Dict[Any, Any]]]"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 99, "col_offset": 51, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 99, "col_offset": 64, "nodeName": "product", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "new", "type": "Tuple[Any, Any, Dict[Any, Any]]"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "new", "type": "Tuple[Any, Any, Dict[Any, Any]]"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "new", "type": "Tuple[Any, Any, Dict[Any, Any]]"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "new", "type": "Tuple[Any, Any, Dict[Any, Any]]"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "outcomes", "type": "List[str]"}]