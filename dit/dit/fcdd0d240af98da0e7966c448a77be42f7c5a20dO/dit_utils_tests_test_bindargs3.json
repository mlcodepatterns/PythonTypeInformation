[{"lineNumber": 6, "col_offset": 0, "nodeName": "F1", "type": "Callable[..., Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "F2", "type": "Callable[..., Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "F3", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "test_bindcallargs1", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "test_bindcallargs2", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "test_bindcallargs3", "type": "Callable[[], Any]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "out", "type": "Tuple[Tuple[Any, ...], Dict[str, Any]]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "out_", "type": "Tuple[Tuple[int, int, int], Dict[str, Union[str, int]]]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "out", "type": "Tuple[Tuple[Any, ...], Dict[str, Any]]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "out_", "type": "Tuple[Tuple[()], Dict[str, int]]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "out", "type": "Tuple[Tuple[Any, ...], Dict[str, Any]]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "out_", "type": "Tuple[Tuple[()], Dict[str, int]]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "out", "type": "Tuple[Tuple[Any, ...], Dict[str, Any]]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "out_", "type": "Tuple[Tuple[int, int, int, int, int, int], Dict[str, int]]"}, {"lineNumber": 19, "col_offset": 10, "nodeName": "bindcallargs", "type": "Callable[..., Tuple[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "F1", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "out", "type": "Tuple[Tuple[Any, ...], Dict[str, Any]]"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "out_", "type": "Tuple[Tuple[int, int, int], Dict[str, Union[str, int]]]"}, {"lineNumber": 25, "col_offset": 10, "nodeName": "bindcallargs", "type": "Callable[..., Tuple[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "F2", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "out", "type": "Tuple[Tuple[Any, ...], Dict[str, Any]]"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "out_", "type": "Tuple[Tuple[()], Dict[str, int]]"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "bindcallargs", "type": "Callable[..., Tuple[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "F2", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "out", "type": "Tuple[Tuple[Any, ...], Dict[str, Any]]"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "out_", "type": "Tuple[Tuple[()], Dict[str, int]]"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "bindcallargs", "type": "Callable[..., Tuple[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "F3", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "out", "type": "Tuple[Tuple[Any, ...], Dict[str, Any]]"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "out_", "type": "Tuple[Tuple[int, int, int, int, int, int], Dict[str, int]]"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "bindcallargs", "type": "Callable[..., Tuple[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "F2", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "pytest", "type": "Any"}]