[{"lineNumber": 8, "col_offset": 0, "nodeName": "bernoulli", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "binomial", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "pp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "outcomes", "type": "List[int]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "probs", "type": "List[Any]"}, {"lineNumber": 11, "col_offset": 11, "nodeName": "binomial", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "ScalarDistribution", "type": "Any"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "outcomes", "type": "List[int]"}, {"lineNumber": 23, "col_offset": 40, "nodeName": "probs", "type": "List[Any]"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "n", "type": "int"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "pp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "n", "type": "int"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "k", "type": "int"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "k", "type": "int"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "outcomes", "type": "List[int]"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "is_integer", "type": "Any"}, {"lineNumber": 16, "col_offset": 22, "nodeName": "n", "type": "int"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 17, "col_offset": 65, "nodeName": "n", "type": "int"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "is_number", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 18, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 19, "col_offset": 65, "nodeName": "p", "type": "Any"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "n", "type": "int"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "n", "type": "Any"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "k", "type": "int"}, {"lineNumber": 20, "col_offset": 43, "nodeName": "p", "type": "Any"}, {"lineNumber": 20, "col_offset": 46, "nodeName": "k", "type": "int"}, {"lineNumber": 20, "col_offset": 53, "nodeName": "p", "type": "Any"}, {"lineNumber": 20, "col_offset": 58, "nodeName": "n", "type": "Any"}, {"lineNumber": 20, "col_offset": 60, "nodeName": "k", "type": "int"}]