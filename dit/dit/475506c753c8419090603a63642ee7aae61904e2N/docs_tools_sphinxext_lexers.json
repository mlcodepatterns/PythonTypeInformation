[{"lineNumber": 60, "col_offset": 0, "nodeName": "build_ipy_lexer", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "line_re", "type": "Pattern[str]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "ipython_tokens", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "IPython3Lexer", "type": "Type[IPython3Lexer]"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "IPythonLexer", "type": "Type[IPythonLexer]"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "RegexLexer", "type": "Any"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "DelegatingLexer", "type": "Any"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "Lexer", "type": "Any"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "Lexer", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 76, "col_offset": 7, "nodeName": "python3", "type": "bool"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "attrs", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "build_ipy_lexer", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "build_ipy_lexer", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "tokens", "type": "Dict[str, List[Tuple[str, Any]]]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "mimetypes", "type": "List[str]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "in1_regex", "type": "str"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "in2_regex", "type": "str"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "out_regex", "type": "str"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "ipytb_start", "type": "Pattern[str]"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "re", "type": "module"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "PyLexer", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "Python3Lexer", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "clsname", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "doc", "type": "str"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "PyLexer", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "PythonLexer", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "clsname", "type": "str"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "doc", "type": "str"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "ipython_tokens", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "name", "type": "str"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "doc", "type": "str"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "attrs", "type": "Dict[str, Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "python3", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "python3", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "python3", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "python3", "type": "Any"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "python3", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "in1_regex", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "in2_regex", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "out_regex", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "in1_regex_rstrip", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "in2_regex_rstrip", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "out_regex_rstrip", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "attrs", "type": "List[str]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "attr", "type": "str"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "attrs", "type": "List[str]"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "python3", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "pylexer", "type": "Union[IPythonLexer, IPython3Lexer]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "tblexer", "type": "IPythonTracebackLexer"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "buffer", "type": "str"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "insertions", "type": "List[nothing]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "buffer", "type": "str"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "insertions", "type": "List[nothing]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "in2_match", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "in2_match_rstrip", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "out_match", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "out_match_rstrip", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "in1_match", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "in1_match_rstrip", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "code", "type": "Any"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "insertion", "type": "None"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "python3", "type": "Any"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "python3", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "IPythonLexer", "type": "IPythonLexer"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "IPythonConsoleLexer", "type": "Any"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "token", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "bygroups", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "Operator", "type": "Any"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "Keyword", "type": "Any"}, {"lineNumber": 55, "col_offset": 57, "nodeName": "Text", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "bygroups", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "Operator", "type": "Any"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "Keyword", "type": "Any"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "bygroups", "type": "Any"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "Operator", "type": "Any"}, {"lineNumber": 57, "col_offset": 57, "nodeName": "Text", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "PyLexer", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "IPythonTracebackLexer"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "get_bool_opt", "type": "Any"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "self", "type": "IPythonTracebackLexer"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "self", "type": "IPythonTracebackLexer"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "IPyLexer", "type": "Type[IPython3Lexer]"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "IPython3Lexer", "type": "Type[IPython3Lexer]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "IPyLexer", "type": "Type[IPythonLexer]"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "IPythonLexer", "type": "Type[IPythonLexer]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "self", "type": "IPythonTracebackLexer"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "IPyLexer", "type": "Union[Type[IPythonLexer], Type[IPython3Lexer]]"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "IPythonPartialTracebackLexer", "type": "Type[IPythonPartialTracebackLexer]"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "re", "type": "module"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 23, "nodeName": "get_bool_opt", "type": "Any"}, {"lineNumber": 261, "col_offset": 36, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 267, "col_offset": 45, "nodeName": "in1_regex", "type": "Any"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 268, "col_offset": 45, "nodeName": "in2_regex", "type": "Any"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 269, "col_offset": 45, "nodeName": "out_regex", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 289, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "pylexer", "type": "Type[IPython3Lexer]"}, {"lineNumber": 292, "col_offset": 22, "nodeName": "IPython3Lexer", "type": "Type[IPython3Lexer]"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "tblexer", "type": "Type[IPythonTracebackLexer]"}, {"lineNumber": 293, "col_offset": 22, "nodeName": "IPythonTracebackLexer", "type": "Type[IPythonTracebackLexer]"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "pylexer", "type": "Type[IPythonLexer]"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "IPythonLexer", "type": "Type[IPythonLexer]"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "tblexer", "type": "Type[IPythonTracebackLexer]"}, {"lineNumber": 296, "col_offset": 22, "nodeName": "IPythonTracebackLexer", "type": "Type[IPythonTracebackLexer]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 298, "col_offset": 23, "nodeName": "pylexer", "type": "Union[Type[IPythonLexer], Type[IPython3Lexer]]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "tblexer", "type": "Type[IPythonTracebackLexer]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 315, "col_offset": 11, "nodeName": "mode", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "tokens", "type": "List[Tuple[int, Any, Any]]"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 322, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 322, "col_offset": 18, "nodeName": "v", "type": "Any"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "do_insertions", "type": "Any"}, {"lineNumber": 322, "col_offset": 37, "nodeName": "insertions", "type": "Any"}, {"lineNumber": 322, "col_offset": 54, "nodeName": "tokens", "type": "Union[Any, List[Tuple[int, Any, Any]]]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "buffer", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "match", "type": "Any"}, {"lineNumber": 355, "col_offset": 41, "nodeName": "line", "type": "Any"}, {"lineNumber": 356, "col_offset": 27, "nodeName": "match", "type": "Any"}, {"lineNumber": 356, "col_offset": 55, "nodeName": "line", "type": "Any"}, {"lineNumber": 358, "col_offset": 11, "nodeName": "in2_match_rstrip", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "end_input", "type": "bool"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "end_input", "type": "bool"}, {"lineNumber": 362, "col_offset": 11, "nodeName": "end_input", "type": "bool"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "mode", "type": "str"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "code", "type": "str"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "insertion", "type": "Tuple[int, Any, Any]"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "match", "type": "Any"}, {"lineNumber": 371, "col_offset": 41, "nodeName": "line", "type": "Any"}, {"lineNumber": 372, "col_offset": 27, "nodeName": "match", "type": "Any"}, {"lineNumber": 372, "col_offset": 55, "nodeName": "line", "type": "Any"}, {"lineNumber": 373, "col_offset": 11, "nodeName": "out_match", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "out_match_rstrip", "type": "Any"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "mode", "type": "str"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "out_match", "type": "Any"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "insertion", "type": "Tuple[int, Any, Any]"}, {"lineNumber": 387, "col_offset": 20, "nodeName": "match", "type": "Any"}, {"lineNumber": 387, "col_offset": 41, "nodeName": "line", "type": "Any"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "in1_match", "type": "Any"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "mode", "type": "str"}, {"lineNumber": 393, "col_offset": 15, "nodeName": "in1_match", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "insertion", "type": "Tuple[int, Any, Any]"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "match", "type": "Any"}, {"lineNumber": 402, "col_offset": 55, "nodeName": "line", "type": "Any"}, {"lineNumber": 403, "col_offset": 11, "nodeName": "in1_match_rstrip", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "mode", "type": "str"}, {"lineNumber": 408, "col_offset": 15, "nodeName": "in1_match_rstrip", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "insertion", "type": "Tuple[int, Any, Any]"}, {"lineNumber": 417, "col_offset": 11, "nodeName": "match", "type": "Any"}, {"lineNumber": 417, "col_offset": 34, "nodeName": "line", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "mode", "type": "str"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 419, "col_offset": 19, "nodeName": "line", "type": "Any"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "insertion", "type": "None"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "mode", "type": "Any"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "mode", "type": "str"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "mode", "type": "str"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "mode", "type": "str"}, {"lineNumber": 446, "col_offset": 21, "nodeName": "code", "type": "Any"}, {"lineNumber": 446, "col_offset": 27, "nodeName": "insertion", "type": "None"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 450, "col_offset": 21, "nodeName": "finditer", "type": "Callable"}, {"lineNumber": 450, "col_offset": 38, "nodeName": "text", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "insertion", "type": "Any"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "buffer", "type": "Any"}, {"lineNumber": 462, "col_offset": 27, "nodeName": "code", "type": "Any"}, {"lineNumber": 464, "col_offset": 16, "nodeName": "token", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "self", "type": "IPyLexer"}, {"lineNumber": 483, "col_offset": 23, "nodeName": "get_bool_opt", "type": "Any"}, {"lineNumber": 483, "col_offset": 36, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "self", "type": "IPyLexer"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 489, "col_offset": 23, "nodeName": "self", "type": "IPyLexer"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "self", "type": "IPyLexer"}, {"lineNumber": 491, "col_offset": 28, "nodeName": "IPythonLexer", "type": "Type[IPythonLexer]"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "self", "type": "IPyLexer"}, {"lineNumber": 492, "col_offset": 35, "nodeName": "IPythonConsoleLexer", "type": "Any"}, {"lineNumber": 495, "col_offset": 11, "nodeName": "match", "type": "Callable"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "lex", "type": "Any"}, {"lineNumber": 496, "col_offset": 18, "nodeName": "IPythonConsoleLexer", "type": "Any"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "lex", "type": "IPythonLexer"}, {"lineNumber": 498, "col_offset": 18, "nodeName": "IPythonLexer", "type": "IPythonLexer"}, {"lineNumber": 499, "col_offset": 21, "nodeName": "get_tokens_unprocessed", "type": "Any"}, {"lineNumber": 499, "col_offset": 48, "nodeName": "text", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "using", "type": "Any"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "BashLexer", "type": "Any"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "using", "type": "Any"}, {"lineNumber": 57, "col_offset": 45, "nodeName": "BashLexer", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "PyLexer", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "Other", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "self", "type": "IPythonTracebackLexer"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "self", "type": "IPythonTracebackLexer"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "DelegatingLexer", "type": "Any"}, {"lineNumber": 183, "col_offset": 65, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 267, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 268, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 269, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 27, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 280, "col_offset": 27, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 281, "col_offset": 27, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "__setattr__", "type": "Any"}, {"lineNumber": 287, "col_offset": 29, "nodeName": "attr", "type": "str"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "Lexer", "type": "Any"}, {"lineNumber": 289, "col_offset": 31, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 299, "col_offset": 33, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 315, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 317, "col_offset": 13, "nodeName": "mode", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 322, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "in2_regex", "type": "Any"}, {"lineNumber": 356, "col_offset": 27, "nodeName": "in2_regex_rstrip", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "in2_match", "type": "Any"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "mode", "type": "Any"}, {"lineNumber": 367, "col_offset": 28, "nodeName": "Prompt", "type": "Any"}, {"lineNumber": 367, "col_offset": 44, "nodeName": "line", "type": "Any"}, {"lineNumber": 368, "col_offset": 19, "nodeName": "mode", "type": "str"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "code", "type": "str"}, {"lineNumber": 368, "col_offset": 31, "nodeName": "insertion", "type": "Tuple[int, Any, Any]"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "out_regex", "type": "Any"}, {"lineNumber": 372, "col_offset": 27, "nodeName": "out_regex_rstrip", "type": "Any"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "idx", "type": "Any"}, {"lineNumber": 378, "col_offset": 16, "nodeName": "idx", "type": "Any"}, {"lineNumber": 379, "col_offset": 19, "nodeName": "line", "type": "Any"}, {"lineNumber": 382, "col_offset": 28, "nodeName": "Heading", "type": "Any"}, {"lineNumber": 383, "col_offset": 19, "nodeName": "mode", "type": "str"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "code", "type": "Any"}, {"lineNumber": 383, "col_offset": 31, "nodeName": "insertion", "type": "Tuple[int, Any, Any]"}, {"lineNumber": 387, "col_offset": 20, "nodeName": "in1_regex", "type": "Any"}, {"lineNumber": 388, "col_offset": 25, "nodeName": "in2_match", "type": "Any"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "idx", "type": "Any"}, {"lineNumber": 396, "col_offset": 16, "nodeName": "idx", "type": "Any"}, {"lineNumber": 397, "col_offset": 19, "nodeName": "line", "type": "Any"}, {"lineNumber": 398, "col_offset": 28, "nodeName": "Prompt", "type": "Any"}, {"lineNumber": 399, "col_offset": 19, "nodeName": "mode", "type": "str"}, {"lineNumber": 399, "col_offset": 25, "nodeName": "code", "type": "Any"}, {"lineNumber": 399, "col_offset": 31, "nodeName": "insertion", "type": "Tuple[int, Any, Any]"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "in1_regex_rstrip", "type": "Any"}, {"lineNumber": 403, "col_offset": 32, "nodeName": "in2_match_rstrip", "type": "Any"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "idx", "type": "Any"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "idx", "type": "Any"}, {"lineNumber": 412, "col_offset": 19, "nodeName": "line", "type": "Any"}, {"lineNumber": 413, "col_offset": 28, "nodeName": "Prompt", "type": "Any"}, {"lineNumber": 414, "col_offset": 19, "nodeName": "mode", "type": "str"}, {"lineNumber": 414, "col_offset": 25, "nodeName": "code", "type": "Any"}, {"lineNumber": 414, "col_offset": 31, "nodeName": "insertion", "type": "Tuple[int, Any, Any]"}, {"lineNumber": 417, "col_offset": 11, "nodeName": "ipytb_start", "type": "Any"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "mode", "type": "str"}, {"lineNumber": 421, "col_offset": 25, "nodeName": "code", "type": "Any"}, {"lineNumber": 421, "col_offset": 31, "nodeName": "insertion", "type": "None"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 450, "col_offset": 21, "nodeName": "line_re", "type": "Pattern[str]"}, {"lineNumber": 451, "col_offset": 19, "nodeName": "group", "type": "Callable"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "mode", "type": "Any"}, {"lineNumber": 452, "col_offset": 18, "nodeName": "code", "type": "Any"}, {"lineNumber": 452, "col_offset": 24, "nodeName": "insertion", "type": "Any"}, {"lineNumber": 452, "col_offset": 36, "nodeName": "get_mci", "type": "Any"}, {"lineNumber": 452, "col_offset": 49, "nodeName": "line", "type": "str"}, {"lineNumber": 454, "col_offset": 15, "nodeName": "mode", "type": "Any"}, {"lineNumber": 454, "col_offset": 23, "nodeName": "mode", "type": "Any"}, {"lineNumber": 456, "col_offset": 20, "nodeName": "token", "type": "Any"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "mode", "type": "Any"}, {"lineNumber": 458, "col_offset": 28, "nodeName": "mode", "type": "Any"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 464, "col_offset": 25, "nodeName": "buffered_tokens", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "self", "type": "IPyLexer"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "self", "type": "IPyLexer"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "Lexer", "type": "Any"}, {"lineNumber": 489, "col_offset": 31, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 491, "col_offset": 43, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 492, "col_offset": 57, "nodeName": "options", "type": "Dict[str, Any]"}, {"lineNumber": 495, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 495, "col_offset": 41, "nodeName": "strip", "type": "Any"}, {"lineNumber": 496, "col_offset": 18, "nodeName": "self", "type": "IPyLexer"}, {"lineNumber": 498, "col_offset": 18, "nodeName": "self", "type": "IPyLexer"}, {"lineNumber": 499, "col_offset": 21, "nodeName": "lex", "type": "Any"}, {"lineNumber": 500, "col_offset": 18, "nodeName": "token", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "bygroups", "type": "Any"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "Error", "type": "Any"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "Traceback", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "bygroups", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "Traceback", "type": "Any"}, {"lineNumber": 125, "col_offset": 41, "nodeName": "Namespace", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "Traceback", "type": "Any"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "Integer", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "bygroups", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "Exception", "type": "Any"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "Whitespace", "type": "Any"}, {"lineNumber": 130, "col_offset": 58, "nodeName": "Text", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "bygroups", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "Namespace", "type": "Any"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "Text", "type": "Any"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "Entity", "type": "Any"}, {"lineNumber": 134, "col_offset": 57, "nodeName": "Tag", "type": "Any"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "bygroups", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "Whitespace", "type": "Any"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "Integer", "type": "Any"}, {"lineNumber": 137, "col_offset": 66, "nodeName": "Other", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "bygroups", "type": "Any"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "Exception", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "Integer", "type": "Any"}, {"lineNumber": 141, "col_offset": 62, "nodeName": "Other", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "bygroups", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "Exception", "type": "Any"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "Text", "type": "Any"}, {"lineNumber": 279, "col_offset": 27, "nodeName": "in1_regex", "type": "Any"}, {"lineNumber": 280, "col_offset": 27, "nodeName": "in2_regex", "type": "Any"}, {"lineNumber": 281, "col_offset": 27, "nodeName": "out_regex", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 287, "col_offset": 35, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "Output", "type": "Any"}, {"lineNumber": 316, "col_offset": 42, "nodeName": "buffer", "type": "Any"}, {"lineNumber": 317, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "get_tokens_unprocessed", "type": "Any"}, {"lineNumber": 318, "col_offset": 57, "nodeName": "buffer", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "get_tokens_unprocessed", "type": "Any"}, {"lineNumber": 320, "col_offset": 57, "nodeName": "buffer", "type": "Any"}, {"lineNumber": 324, "col_offset": 34, "nodeName": "t", "type": "Any"}, {"lineNumber": 324, "col_offset": 37, "nodeName": "v", "type": "Any"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 356, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 367, "col_offset": 28, "nodeName": "Generic", "type": "Any"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 372, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 376, "col_offset": 22, "nodeName": "end", "type": "Any"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "end", "type": "Any"}, {"lineNumber": 379, "col_offset": 24, "nodeName": "idx", "type": "Any"}, {"lineNumber": 382, "col_offset": 28, "nodeName": "Generic", "type": "Any"}, {"lineNumber": 382, "col_offset": 45, "nodeName": "line", "type": "Any"}, {"lineNumber": 387, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 388, "col_offset": 39, "nodeName": "mode", "type": "Any"}, {"lineNumber": 394, "col_offset": 22, "nodeName": "end", "type": "Any"}, {"lineNumber": 396, "col_offset": 22, "nodeName": "end", "type": "Any"}, {"lineNumber": 397, "col_offset": 24, "nodeName": "idx", "type": "Any"}, {"lineNumber": 398, "col_offset": 28, "nodeName": "Generic", "type": "Any"}, {"lineNumber": 398, "col_offset": 44, "nodeName": "line", "type": "Any"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 403, "col_offset": 53, "nodeName": "mode", "type": "Any"}, {"lineNumber": 409, "col_offset": 22, "nodeName": "end", "type": "Any"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "end", "type": "Any"}, {"lineNumber": 412, "col_offset": 24, "nodeName": "idx", "type": "Any"}, {"lineNumber": 413, "col_offset": 28, "nodeName": "Generic", "type": "Any"}, {"lineNumber": 413, "col_offset": 44, "nodeName": "line", "type": "Any"}, {"lineNumber": 417, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 451, "col_offset": 19, "nodeName": "match", "type": "Match[str]"}, {"lineNumber": 452, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 454, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 456, "col_offset": 29, "nodeName": "buffered_tokens", "type": "Any"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 464, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 465, "col_offset": 22, "nodeName": "token", "type": "Any"}, {"lineNumber": 495, "col_offset": 41, "nodeName": "text", "type": "Any"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "Generic", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "Generic", "type": "Any"}, {"lineNumber": 125, "col_offset": 41, "nodeName": "Name", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "Generic", "type": "Any"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "Number", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "Name", "type": "Any"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "Generic", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "Name", "type": "Any"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "Name", "type": "Any"}, {"lineNumber": 134, "col_offset": 57, "nodeName": "Name", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "Generic", "type": "Any"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "Number", "type": "Any"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "Name", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "Number", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "Name", "type": "Any"}, {"lineNumber": 287, "col_offset": 35, "nodeName": "re", "type": "module"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "Generic", "type": "Any"}, {"lineNumber": 316, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "pylexer", "type": "Any"}, {"lineNumber": 318, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "tblexer", "type": "Any"}, {"lineNumber": 320, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "index", "type": "Any"}, {"lineNumber": 324, "col_offset": 31, "nodeName": "i", "type": "Any"}, {"lineNumber": 357, "col_offset": 26, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 357, "col_offset": 56, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 376, "col_offset": 22, "nodeName": "out_match", "type": "Any"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "out_match_rstrip", "type": "Any"}, {"lineNumber": 382, "col_offset": 51, "nodeName": "idx", "type": "Any"}, {"lineNumber": 388, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 394, "col_offset": 22, "nodeName": "in1_match", "type": "Any"}, {"lineNumber": 396, "col_offset": 22, "nodeName": "in2_match", "type": "Any"}, {"lineNumber": 398, "col_offset": 50, "nodeName": "idx", "type": "Any"}, {"lineNumber": 403, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 409, "col_offset": 22, "nodeName": "in1_match_rstrip", "type": "Any"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "in2_match_rstrip", "type": "Any"}, {"lineNumber": 413, "col_offset": 50, "nodeName": "idx", "type": "Any"}, {"lineNumber": 456, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 457, "col_offset": 26, "nodeName": "token", "type": "Any"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "insertions", "type": "Any"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "Literal", "type": "Any"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "Literal", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "Literal", "type": "Any"}, {"lineNumber": 287, "col_offset": 46, "nodeName": "locals", "type": "Callable[[], Dict[str, object]]"}, {"lineNumber": 287, "col_offset": 55, "nodeName": "attr", "type": "str"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 357, "col_offset": 56, "nodeName": "line", "type": "Any"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 461, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 461, "col_offset": 44, "nodeName": "buffer", "type": "Any"}, {"lineNumber": 461, "col_offset": 59, "nodeName": "insertion", "type": "Any"}, {"lineNumber": 357, "col_offset": 26, "nodeName": "group", "type": "Any"}, {"lineNumber": 461, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 357, "col_offset": 26, "nodeName": "in2_match", "type": "Any"}]