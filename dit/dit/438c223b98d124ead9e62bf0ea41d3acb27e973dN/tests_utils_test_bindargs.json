[{"lineNumber": 8, "col_offset": 0, "nodeName": "F0", "type": "Callable[..., Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "F1", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "F2", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "test_bindcallargs0", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "test_bindcallargs1", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "test_bindcallargs2", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "out", "type": "Tuple[Tuple[Any, ...], Dict[str, Any]]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "out_", "type": "Tuple[Tuple[int, int, int, int, int], Dict[str, str]]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "out", "type": "Tuple[Tuple[Any, ...], Dict[str, Any]]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "out_", "type": "Tuple[Tuple[int, int, int, int, int], Dict[str, str]]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "out", "type": "Tuple[Tuple[Any, ...], Dict[str, Any]]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "out_", "type": "Tuple[Tuple[int, int], Dict[nothing, nothing]]"}, {"lineNumber": 21, "col_offset": 10, "nodeName": "bindcallargs", "type": "Callable[..., Tuple[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 21, "col_offset": 23, "nodeName": "F0", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "out", "type": "Tuple[Tuple[Any, ...], Dict[str, Any]]"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "out_", "type": "Tuple[Tuple[int, int, int, int, int], Dict[str, str]]"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "bindcallargs", "type": "Callable[..., Tuple[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "F1", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "out", "type": "Tuple[Tuple[Any, ...], Dict[str, Any]]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "out_", "type": "Tuple[Tuple[int, int, int, int, int], Dict[str, str]]"}, {"lineNumber": 33, "col_offset": 10, "nodeName": "bindcallargs", "type": "Callable[..., Tuple[Tuple[Any, ...], Dict[str, Any]]]"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "F2", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "out", "type": "Tuple[Tuple[Any, ...], Dict[str, Any]]"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "out_", "type": "Tuple[Tuple[int, int], Dict[nothing, nothing]]"}]