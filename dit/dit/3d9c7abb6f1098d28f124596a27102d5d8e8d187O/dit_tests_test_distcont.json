[{"lineNumber": 11, "col_offset": 0, "nodeName": "test_mixture_distribution_weights", "type": "Callable[[], Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "test_mixture_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "test_mixture_distribution_log", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "test_mixture_distribution2", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "test_mixture_distribution3", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "test_mixture_distribution4", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_mixture_distribution5", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "test_random_scalar_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "test_random_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "test_uniform_scalar_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "test_uniform_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "d1", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "prng", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "prng", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "mixture_distribution2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 21, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 23, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "set_base", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "set_base", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "log2", "type": "Any"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "log2", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "weights", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "InvalidOutcome", "type": "Type[dit.exceptions.InvalidOutcome]"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "mixture_distribution2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assert_true", "type": "Any"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "mixture_distribution2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "assert_false", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "make_sparse", "type": "Any"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "assert_true", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "mixture_distribution2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assert_true", "type": "Any"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "prng", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "random_scalar_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "random_scalar_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 99, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "random_scalar_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "prng", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "uniform_scalar_distribution", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "uniform_scalar_distribution", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 153, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "uniform_distribution", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 157, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "dit", "type": "module"}, {"lineNumber": 15, "col_offset": 59, "nodeName": "d", "type": "Any"}, {"lineNumber": 15, "col_offset": 62, "nodeName": "d2", "type": "Any"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "dit", "type": "module"}, {"lineNumber": 16, "col_offset": 60, "nodeName": "d", "type": "Any"}, {"lineNumber": 16, "col_offset": 63, "nodeName": "d2", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 21, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 23, "col_offset": 37, "nodeName": "d2", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "d3", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "d2", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "d3", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "dit", "type": "module"}, {"lineNumber": 43, "col_offset": 61, "nodeName": "d", "type": "Any"}, {"lineNumber": 43, "col_offset": 63, "nodeName": "d2", "type": "Any"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "dit", "type": "module"}, {"lineNumber": 45, "col_offset": 58, "nodeName": "d", "type": "Any"}, {"lineNumber": 45, "col_offset": 60, "nodeName": "d2", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "d2", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "d", "type": "Any"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "d2", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "d2", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "dit", "type": "module"}, {"lineNumber": 69, "col_offset": 58, "nodeName": "d", "type": "Any"}, {"lineNumber": 69, "col_offset": 60, "nodeName": "d2", "type": "Any"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "d1", "type": "Any"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "d2", "type": "Any"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "math", "type": "module"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "random_scalar_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "dit", "type": "module"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "math", "type": "module"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "dit", "type": "module"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "dit", "type": "module"}, {"lineNumber": 129, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "dit", "type": "module"}, {"lineNumber": 139, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 142, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 142, "col_offset": 44, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 153, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "d3", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "d3", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "d3", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "d3", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "dit", "type": "module"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "prng", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "dit", "type": "module"}, {"lineNumber": 84, "col_offset": 51, "nodeName": "prng", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "dit", "type": "module"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "prng", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "dit", "type": "module"}, {"lineNumber": 108, "col_offset": 47, "nodeName": "prng", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "math", "type": "module"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "math", "type": "module"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "dit", "type": "module"}]