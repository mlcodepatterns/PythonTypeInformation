[{"lineNumber": 10, "col_offset": 0, "nodeName": "test_bernoulli1", "type": "Callable[[], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "test_bernoulli2", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "test_bernoulli3", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "test_binomial1", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "test_binomial2", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "test_uniform1", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "test_uniform2", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "test_hypergeometric1", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "test_hypergeometric2", "type": "Callable[[], Any]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "p", "type": "float"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "p", "type": "Union[int, float, str, Type[int], List[nothing]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "n", "type": "Union[int, float, str, Type[int], List[nothing]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "v", "type": "Union[int, float, str, Type[int], List[nothing]]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "vals", "type": "List[Union[Tuple[int, int, int], Tuple[int, int, float], Tuple[int, float, int], Tuple[float, int, int], Tuple[int, int, str], Tuple[int, str, int], Tuple[str, int, int], Tuple[int, int, Type[int]], Tuple[int, Type[int], int], Tuple[Type[int], int, int], Tuple[int, int, List[nothing]], Tuple[int, List[nothing], int], Tuple[List[nothing], int, int]]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "val", "type": "Union[Tuple[int, int, int], Tuple[int, int, float], Tuple[int, float, int], Tuple[float, int, int], Tuple[int, int, str], Tuple[int, str, int], Tuple[str, int, int], Tuple[int, int, Type[int]], Tuple[int, Type[int], int], Tuple[Type[int], int, int], Tuple[int, int, List[nothing]], Tuple[int, List[nothing], int], Tuple[List[nothing], int, int]]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "vals", "type": "List[Union[Tuple[int, int, int], Tuple[int, int, float], Tuple[int, float, int], Tuple[float, int, int], Tuple[int, int, str], Tuple[int, str, int], Tuple[str, int, int], Tuple[int, int, Type[int]], Tuple[int, Type[int], int], Tuple[Type[int], int, int], Tuple[int, int, List[nothing]], Tuple[int, List[nothing], int], Tuple[List[nothing], int, int]]]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "bernoulli", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 12, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "hypergeometric", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 12, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 13, "col_offset": 28, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "bernoulli", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "p", "type": "float"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 19, "col_offset": 34, "nodeName": "p", "type": "float"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "bernoulli", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 45, "nodeName": "p", "type": "Union[int, float, str, Type[int], List[nothing]]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "binomial", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "n", "type": "int"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "binomial", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "n", "type": "Union[int, float, str, Type[int], List[nothing]]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "uniform", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "n", "type": "int"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "uniform", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "v", "type": "Union[int, float, str, Type[int], List[nothing]]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "hypergeometric", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 13, "col_offset": 28, "nodeName": "d", "type": "Any"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "d", "type": "Any"}, {"lineNumber": 18, "col_offset": 36, "nodeName": "p", "type": "float"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "d", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "d", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "n", "type": "int"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "entropy", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "d", "type": "Any"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "log2", "type": "Any"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "n", "type": "int"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "val", "type": "Union[Tuple[int, int, int], Tuple[int, int, float], Tuple[int, float, int], Tuple[float, int, int], Tuple[int, int, str], Tuple[int, str, int], Tuple[str, int, int], Tuple[int, int, Type[int]], Tuple[int, Type[int], int], Tuple[Type[int], int, int], Tuple[int, int, List[nothing]], Tuple[int, List[nothing], int], Tuple[List[nothing], int, int]]"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "d", "type": "Any"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 38, "col_offset": 45, "nodeName": "n", "type": "int"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 45, "nodeName": "n", "type": "int"}]