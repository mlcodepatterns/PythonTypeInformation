[{"lineNumber": 15, "col_offset": 0, "nodeName": "test_mixture_distribution_weights", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "test_mixture_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "test_mixture_distribution_log", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "test_mixture_distribution2", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "test_mixture_distribution3", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "test_mixture_distribution4", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "test_mixture_distribution5", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "test_random_scalar_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "test_random_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "test_simplex_grid1", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "test_simplex_grid2", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "test_simplex_grid3", "type": "Callable[[], Any]"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "test_simplex_grid4", "type": "Callable[[], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "test_simplex_grid5", "type": "Callable[[], Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "test_simplex_grid6", "type": "Callable[[], Any]"}, {"lineNumber": 194, "col_offset": 0, "nodeName": "test_uniform_scalar_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 208, "col_offset": 0, "nodeName": "test_uniform_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 215, "col_offset": 0, "nodeName": "test_rvfunctions1", "type": "Callable[[], Any]"}, {"lineNumber": 223, "col_offset": 0, "nodeName": "test_rvfunctions2", "type": "Callable[[], Any]"}, {"lineNumber": 231, "col_offset": 0, "nodeName": "test_rvfunctions3", "type": "Callable[[], Any]"}, {"lineNumber": 241, "col_offset": 0, "nodeName": "test_rvfunctions4", "type": "Callable[[], Any]"}, {"lineNumber": 253, "col_offset": 0, "nodeName": "test_insert_rvf1", "type": "Callable[[], Any]"}, {"lineNumber": 270, "col_offset": 0, "nodeName": "test_insert_rvf2", "type": "Callable[[], Any]"}, {"lineNumber": 283, "col_offset": 0, "nodeName": "test_RVFunctions_from_mapping1", "type": "Callable[[], Any]"}, {"lineNumber": 291, "col_offset": 0, "nodeName": "test_RVFunctions_from_mapping2", "type": "Callable[[], Any]"}, {"lineNumber": 299, "col_offset": 0, "nodeName": "test_RVFunctions_from_partition", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "d1", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "prng", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "prng", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "g", "type": "Generator[Any, Any, None]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "d_", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "outcomes", "type": "List[Tuple[int, ...]]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[Tuple[int, ...], ...]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int, int, int, int, int], Tuple[int, int, int, int, int, int], Tuple[int, int, int, int, int, int], Tuple[int, int, int, int, int, int]]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "mapping", "type": "Dict[str, str]"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "mapping", "type": "Dict[Tuple[int, int], int]"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int]]"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "partition", "type": "Tuple[Tuple[str, str], Tuple[str, str]]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "mixture_distribution2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 25, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "set_base", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "set_base", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "log2", "type": "Any"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "log2", "type": "Any"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "weights", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "mixture_distribution2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "assert_true", "type": "Any"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "mixture_distribution2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "assert_false", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "make_sparse", "type": "Any"}, {"lineNumber": 67, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "assert_true", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "mixture_distribution2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assert_true", "type": "Any"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "prng", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "random_scalar_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "random_scalar_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "random_scalar_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "prng", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 118, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 150, "col_offset": 31, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "simplex_grid", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "next", "type": "Callable"}, {"lineNumber": 164, "col_offset": 46, "nodeName": "g", "type": "Generator[Any, Any, None]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 34, "nodeName": "d_", "type": "numpy.ndarray"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "uniform_scalar_distribution", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "uniform_scalar_distribution", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 40, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 205, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 209, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "uniform_distribution", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 218, "col_offset": 9, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 226, "col_offset": 9, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 235, "col_offset": 35, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "outcomes", "type": "List[Tuple[int, ...]]"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[Tuple[int, ...], ...]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "uniform_distribution", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "o", "type": "int"}, {"lineNumber": 261, "col_offset": 9, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 268, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int, int, int, int, int], Tuple[int, int, int, int, int, int], Tuple[int, int, int, int, int, int], Tuple[int, int, int, int, int, int]]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "uniform_distribution", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "modify_outcomes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "d", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "o", "type": "str"}, {"lineNumber": 279, "col_offset": 9, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "outcomes", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 285, "col_offset": 9, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 289, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 289, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 293, "col_offset": 9, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int]]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 301, "col_offset": 9, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 305, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "dit", "type": "module"}, {"lineNumber": 19, "col_offset": 59, "nodeName": "d", "type": "Any"}, {"lineNumber": 19, "col_offset": 62, "nodeName": "d2", "type": "Any"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "dit", "type": "module"}, {"lineNumber": 20, "col_offset": 60, "nodeName": "d", "type": "Any"}, {"lineNumber": 20, "col_offset": 63, "nodeName": "d2", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 25, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "d2", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "d3", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "d2", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "d3", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "dit", "type": "module"}, {"lineNumber": 47, "col_offset": 58, "nodeName": "d", "type": "Any"}, {"lineNumber": 47, "col_offset": 61, "nodeName": "d2", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "d2", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "d", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "d2", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 67, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "d2", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "dit", "type": "module"}, {"lineNumber": 71, "col_offset": 58, "nodeName": "d", "type": "Any"}, {"lineNumber": 71, "col_offset": 61, "nodeName": "d2", "type": "Any"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "d1", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "d2", "type": "Any"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "math", "type": "module"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "random_scalar_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 97, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "dit", "type": "module"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "math", "type": "module"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 112, "col_offset": 42, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "dit", "type": "module"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "dit", "type": "module"}, {"lineNumber": 131, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "dit", "type": "module"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "d", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 198, "col_offset": 44, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 209, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 218, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "xor", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "xor", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 226, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "xor", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "xor", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 237, "col_offset": 26, "nodeName": "from_hexes", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 244, "col_offset": 39, "nodeName": "o", "type": "str"}, {"lineNumber": 244, "col_offset": 44, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "from_hexes", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "o", "type": "int"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "o", "type": "int"}, {"lineNumber": 261, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "xor", "type": "Callable[[Any], Any]"}, {"lineNumber": 261, "col_offset": 33, "nodeName": "xor", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 17, "nodeName": "d2", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "o", "type": "str"}, {"lineNumber": 279, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "xor", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 33, "nodeName": "xor", "type": "Callable[[Any], Any]"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "d2", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 285, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "from_mapping", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 287, "col_offset": 42, "nodeName": "mapping", "type": "Dict[str, str]"}, {"lineNumber": 289, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 293, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "from_mapping", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 295, "col_offset": 42, "nodeName": "mapping", "type": "Dict[Tuple[int, int], int]"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 301, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 303, "col_offset": 26, "nodeName": "from_partition", "type": "Callable[[Any], Any]"}, {"lineNumber": 303, "col_offset": 44, "nodeName": "partition", "type": "Tuple[Tuple[str, str], Tuple[str, str]]"}, {"lineNumber": 305, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "d3", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "d3", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "d3", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "d3", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "dit", "type": "module"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "prng", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "dit", "type": "module"}, {"lineNumber": 86, "col_offset": 51, "nodeName": "prng", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "dit", "type": "module"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "prng", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "dit", "type": "module"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "prng", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "simplex_grid", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "d", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "d", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "simplex_grid", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 237, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 244, "col_offset": 22, "nodeName": "map", "type": "Callable"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 244, "col_offset": 31, "nodeName": "o", "type": "str"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "o", "type": "str"}, {"lineNumber": 250, "col_offset": 49, "nodeName": "outcomes", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 303, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "math", "type": "module"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "math", "type": "module"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "dit", "type": "module"}, {"lineNumber": 140, "col_offset": 60, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 147, "col_offset": 39, "nodeName": "simplex_grid", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "simplex_grid", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "simplex_grid", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "dit", "type": "module"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "map", "type": "Callable"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 250, "col_offset": 36, "nodeName": "o", "type": "str"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "outcome", "type": "Any"}, {"lineNumber": 257, "col_offset": 30, "nodeName": "outcome", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 147, "col_offset": 39, "nodeName": "dit", "type": "module"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "dit", "type": "module"}, {"lineNumber": 155, "col_offset": 71, "nodeName": "d", "type": "Any"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "dit", "type": "module"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "outcome", "type": "Any"}, {"lineNumber": 275, "col_offset": 34, "nodeName": "outcome", "type": "Any"}]