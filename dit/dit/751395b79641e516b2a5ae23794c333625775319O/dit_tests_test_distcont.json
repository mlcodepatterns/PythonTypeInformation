[{"lineNumber": 17, "col_offset": 0, "nodeName": "test_mixture_distribution_weights", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "test_mixture_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "test_mixture_distribution_log", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "test_mixture_distribution2", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "test_mixture_distribution3", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "test_mixture_distribution4", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "test_mixture_distribution5", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "test_random_scalar_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "test_random_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "test_simplex_grid1", "type": "Callable[[], Any]"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "test_simplex_grid2", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "test_simplex_grid3", "type": "Callable[[], Any]"}, {"lineNumber": 162, "col_offset": 0, "nodeName": "test_simplex_grid4", "type": "Callable[[], Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "test_simplex_grid5", "type": "Callable[[], Any]"}, {"lineNumber": 175, "col_offset": 0, "nodeName": "test_simplex_grid6", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 0, "nodeName": "test_simplex_grid_bad_n", "type": "Callable[[], Any]"}, {"lineNumber": 196, "col_offset": 0, "nodeName": "test_simplex_grid_bad_subdivisions", "type": "Callable[[], Any]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "test_uniform_scalar_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 215, "col_offset": 0, "nodeName": "test_uniform_distribution", "type": "Callable[[], Any]"}, {"lineNumber": 222, "col_offset": 0, "nodeName": "test_rvfunctions1", "type": "Callable[[], Any]"}, {"lineNumber": 230, "col_offset": 0, "nodeName": "test_rvfunctions2", "type": "Callable[[], Any]"}, {"lineNumber": 238, "col_offset": 0, "nodeName": "test_rvfunctions3", "type": "Callable[[], Any]"}, {"lineNumber": 248, "col_offset": 0, "nodeName": "test_rvfunctions4", "type": "Callable[[], Any]"}, {"lineNumber": 260, "col_offset": 0, "nodeName": "test_rvfunctions_scalardist", "type": "Callable[[], Any]"}, {"lineNumber": 264, "col_offset": 0, "nodeName": "test_rvfunctions_ints", "type": "Callable[[], Any]"}, {"lineNumber": 273, "col_offset": 0, "nodeName": "test_rvfunctions_toolarge", "type": "Callable[[], Any]"}, {"lineNumber": 282, "col_offset": 0, "nodeName": "test_insert_rvf1", "type": "Callable[[], Any]"}, {"lineNumber": 299, "col_offset": 0, "nodeName": "test_insert_rvf2", "type": "Callable[[], Any]"}, {"lineNumber": 312, "col_offset": 0, "nodeName": "test_RVFunctions_from_mapping1", "type": "Callable[[], Any]"}, {"lineNumber": 320, "col_offset": 0, "nodeName": "test_RVFunctions_from_mapping2", "type": "Callable[[], Any]"}, {"lineNumber": 328, "col_offset": 0, "nodeName": "test_RVFunctions_from_partition", "type": "Callable[[], Any]"}, {"lineNumber": 336, "col_offset": 0, "nodeName": "test_product", "type": "Callable[[], Any]"}, {"lineNumber": 347, "col_offset": 0, "nodeName": "test_product_nonjoint", "type": "Callable[[], Any]"}, {"lineNumber": 355, "col_offset": 0, "nodeName": "test_product_with_rvs1", "type": "Callable[[], Any]"}, {"lineNumber": 366, "col_offset": 0, "nodeName": "test_product_with_rvs2", "type": "Callable[[], Any]"}, {"lineNumber": 377, "col_offset": 0, "nodeName": "test_product_with_badrvs", "type": "Callable[[], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "d1", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "d3", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "prng", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "prng", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "g", "type": "Generator[Any, Any, None]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "d_", "type": "numpy.ndarray"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "x", "type": "Generator[Any, Any, None]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "x", "type": "Generator[Any, Any, None]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "outcomes", "type": "List[Tuple[int, ...]]"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[Tuple[int, ...], ...]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "rvf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "partition", "type": "List[Tuple[Any]]"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int]]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "letters", "type": "str"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "outcomes", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "rvf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "partition", "type": "List[Tuple[Any]]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int, int, int, int, int], Tuple[int, int, int, int, int, int], Tuple[int, int, int, int, int, int], Tuple[int, int, int, int, int, int]]"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "mapping", "type": "Dict[str, str]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "mapping", "type": "Dict[Tuple[int, int], int]"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int]]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "partition", "type": "Tuple[Tuple[str, str], Tuple[str, str]]"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "outcomes", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "d_iid", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "d_truth", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "d_truth", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "d_iid", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "d_truth", "type": "Any"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "d_truth", "type": "Any"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "d_iid", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "d_truth", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "d_truth", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "mixture_distribution2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "set_base", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "set_base", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "log2", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "log2", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "weights", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "mixture_distribution2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "assert_true", "type": "Any"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "mixture_distribution2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assert_false", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "make_sparse", "type": "Any"}, {"lineNumber": 69, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "assert_true", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "mixture_distribution2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "mixture_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assert_true", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "prng", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "random_scalar_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "random_scalar_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "random_scalar_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "prng", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 38, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "simplex_grid", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "next", "type": "Callable"}, {"lineNumber": 166, "col_offset": 46, "nodeName": "g", "type": "Generator[Any, Any, None]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "dists", "type": "numpy.ndarray"}, {"lineNumber": 173, "col_offset": 38, "nodeName": "dists_", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 190, "col_offset": 34, "nodeName": "d_", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "simplex_grid", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 194, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "x", "type": "Generator[Any, Any, None]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "simplex_grid", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "x", "type": "Generator[Any, Any, None]"}, {"lineNumber": 203, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "uniform_scalar_distribution", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "uniform_scalar_distribution", "type": "Callable[[Any], Any]"}, {"lineNumber": 211, "col_offset": 40, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 216, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "uniform_distribution", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 220, "col_offset": 38, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 225, "col_offset": 9, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 233, "col_offset": 9, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 234, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 242, "col_offset": 35, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 243, "col_offset": 9, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "outcomes", "type": "List[Tuple[int, ...]]"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "pmf", "type": "List[float]"}, {"lineNumber": 254, "col_offset": 9, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 255, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 258, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[Tuple[int, ...], ...]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "ScalarDistribution", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "ditException", "type": "Type[dit.exceptions.ditException]"}, {"lineNumber": 262, "col_offset": 32, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 262, "col_offset": 49, "nodeName": "d", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "uniform_distribution", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 266, "col_offset": 10, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "from_partition", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "partition", "type": "List[Tuple[Any]]"}, {"lineNumber": 269, "col_offset": 9, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 269, "col_offset": 27, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 271, "col_offset": 30, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int]]"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "product", "type": "Callable"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "letters", "type": "str"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 278, "col_offset": 10, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 278, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 280, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "from_partition", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 59, "nodeName": "partition", "type": "List[Tuple[Any]]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "uniform_distribution", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "o", "type": "int"}, {"lineNumber": 290, "col_offset": 9, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 297, "col_offset": 30, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int, int, int, int, int], Tuple[int, int, int, int, int, int], Tuple[int, int, int, int, int, int], Tuple[int, int, int, int, int, int]]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "uniform_distribution", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "modify_outcomes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "d", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "o", "type": "str"}, {"lineNumber": 308, "col_offset": 9, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "outcomes", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 314, "col_offset": 9, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 318, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 322, "col_offset": 9, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 326, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 326, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int], Tuple[int, int, int]]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 330, "col_offset": 9, "nodeName": "RVFunctions", "type": "Type[dit.distconst.RVFunctions]"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "insert_rvf", "type": "Callable[..., Any]"}, {"lineNumber": 332, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 334, "col_offset": 29, "nodeName": "outcomes", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "Xor", "type": "Callable[[], Any]"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "product_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 342, "col_offset": 37, "nodeName": "d", "type": "Any"}, {"lineNumber": 343, "col_offset": 14, "nodeName": "uniform_distribution", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 344, "col_offset": 14, "nodeName": "modify_outcomes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 344, "col_offset": 34, "nodeName": "d_truth", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "assert_true", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "ScalarDistribution", "type": "Any"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 353, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 353, "col_offset": 29, "nodeName": "product_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 353, "col_offset": 55, "nodeName": "d", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "Xor", "type": "Callable[[], Any]"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "product_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 361, "col_offset": 37, "nodeName": "d", "type": "Any"}, {"lineNumber": 362, "col_offset": 14, "nodeName": "uniform_distribution", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 363, "col_offset": 14, "nodeName": "modify_outcomes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 363, "col_offset": 34, "nodeName": "d_truth", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "assert_true", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "Xor", "type": "Callable[[], Any]"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "product_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 372, "col_offset": 37, "nodeName": "d", "type": "Any"}, {"lineNumber": 373, "col_offset": 14, "nodeName": "uniform_distribution", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 374, "col_offset": 14, "nodeName": "modify_outcomes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 374, "col_offset": 34, "nodeName": "d_truth", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "assert_true", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "Xor", "type": "Callable[[], Any]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 383, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "product_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 383, "col_offset": 55, "nodeName": "d", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "dit", "type": "module"}, {"lineNumber": 21, "col_offset": 59, "nodeName": "d", "type": "Any"}, {"lineNumber": 21, "col_offset": 62, "nodeName": "d2", "type": "Any"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "dit", "type": "module"}, {"lineNumber": 22, "col_offset": 60, "nodeName": "d", "type": "Any"}, {"lineNumber": 22, "col_offset": 63, "nodeName": "d2", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "d2", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "d3", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "d2", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "d3", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "dit", "type": "module"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "d", "type": "Any"}, {"lineNumber": 49, "col_offset": 61, "nodeName": "d2", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 58, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "d2", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "d", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "d2", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "d2", "type": "Any"}, {"lineNumber": 69, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "d2", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "dit", "type": "module"}, {"lineNumber": 73, "col_offset": 58, "nodeName": "d", "type": "Any"}, {"lineNumber": 73, "col_offset": 61, "nodeName": "d2", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "d1", "type": "Any"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "d2", "type": "Any"}, {"lineNumber": 80, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "math", "type": "module"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "random_scalar_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "dit", "type": "module"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "math", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "random_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "outcomes", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 114, "col_offset": 42, "nodeName": "pmf", "type": "numpy.ndarray"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "dit", "type": "module"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "dit", "type": "module"}, {"lineNumber": 133, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "dit", "type": "module"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 165, "col_offset": 40, "nodeName": "d", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "pmf", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 203, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 206, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 206, "col_offset": 44, "nodeName": "outcomes", "type": "Tuple[int, int, int]"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 216, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "prng", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "testing", "type": "module"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 225, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "xor", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "xor", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 233, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "xor", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "xor", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 243, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "from_hexes", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "o", "type": "str"}, {"lineNumber": 251, "col_offset": 44, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 254, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 255, "col_offset": 26, "nodeName": "from_hexes", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 261, "col_offset": 31, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 262, "col_offset": 32, "nodeName": "dit", "type": "module"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 266, "col_offset": 10, "nodeName": "dit", "type": "module"}, {"lineNumber": 267, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "rvf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 269, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "d2", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "itertools", "type": "module"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "map", "type": "Callable"}, {"lineNumber": 276, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 276, "col_offset": 33, "nodeName": "outcomes", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 278, "col_offset": 10, "nodeName": "dit", "type": "module"}, {"lineNumber": 279, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "rvf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "o", "type": "int"}, {"lineNumber": 288, "col_offset": 18, "nodeName": "o", "type": "int"}, {"lineNumber": 290, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 290, "col_offset": 28, "nodeName": "xor", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 33, "nodeName": "xor", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "d2", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "o", "type": "str"}, {"lineNumber": 308, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "xor", "type": "Callable[[Any], Any]"}, {"lineNumber": 308, "col_offset": 33, "nodeName": "xor", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "d2", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 314, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "from_mapping", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 316, "col_offset": 42, "nodeName": "mapping", "type": "Dict[str, str]"}, {"lineNumber": 318, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 322, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 324, "col_offset": 26, "nodeName": "from_mapping", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 324, "col_offset": 42, "nodeName": "mapping", "type": "Dict[Tuple[int, int], int]"}, {"lineNumber": 326, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 330, "col_offset": 9, "nodeName": "dit", "type": "module"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 332, "col_offset": 26, "nodeName": "from_partition", "type": "Callable[[Any], Any]"}, {"lineNumber": 332, "col_offset": 44, "nodeName": "partition", "type": "Tuple[Tuple[str, str], Tuple[str, str]]"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "d", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "example_dists", "type": "module"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "dit", "type": "module"}, {"lineNumber": 343, "col_offset": 14, "nodeName": "dit", "type": "module"}, {"lineNumber": 344, "col_offset": 14, "nodeName": "dit", "type": "module"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "is_approx_equal", "type": "Any"}, {"lineNumber": 345, "col_offset": 40, "nodeName": "d_iid", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 353, "col_offset": 29, "nodeName": "dit", "type": "module"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "example_dists", "type": "module"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "dit", "type": "module"}, {"lineNumber": 362, "col_offset": 14, "nodeName": "dit", "type": "module"}, {"lineNumber": 363, "col_offset": 14, "nodeName": "dit", "type": "module"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "is_approx_equal", "type": "Any"}, {"lineNumber": 364, "col_offset": 40, "nodeName": "d_iid", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "example_dists", "type": "module"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "dit", "type": "module"}, {"lineNumber": 373, "col_offset": 14, "nodeName": "dit", "type": "module"}, {"lineNumber": 374, "col_offset": 14, "nodeName": "dit", "type": "module"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "is_approx_equal", "type": "Any"}, {"lineNumber": 375, "col_offset": 40, "nodeName": "d_iid", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "example_dists", "type": "module"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "dit", "type": "module"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "d3", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "d3", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "d3", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "d3", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "dit", "type": "module"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "prng", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "dit", "type": "module"}, {"lineNumber": 88, "col_offset": 51, "nodeName": "prng", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "dit", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "prng", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "dit", "type": "module"}, {"lineNumber": 112, "col_offset": 47, "nodeName": "prng", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "testing", "type": "module"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "simplex_grid", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "d", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "d", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "simplex_grid", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "math", "type": "module"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "map", "type": "Callable"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 251, "col_offset": 31, "nodeName": "o", "type": "str"}, {"lineNumber": 255, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 257, "col_offset": 44, "nodeName": "o", "type": "str"}, {"lineNumber": 257, "col_offset": 49, "nodeName": "outcomes", "type": "Tuple[str, str, str, str, str, str, str, str]"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 267, "col_offset": 43, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 279, "col_offset": 18, "nodeName": "outcomes", "type": "Any"}, {"lineNumber": 279, "col_offset": 43, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 324, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 332, "col_offset": 26, "nodeName": "bf", "type": "dit.distconst.RVFunctions"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "d_truth", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "d_truth", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "d_truth", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "math", "type": "module"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "math", "type": "module"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "dit", "type": "module"}, {"lineNumber": 142, "col_offset": 60, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "simplex_grid", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "simplex_grid", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 171, "col_offset": 39, "nodeName": "simplex_grid", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "dit", "type": "module"}, {"lineNumber": 189, "col_offset": 51, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "dit", "type": "module"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "map", "type": "Callable"}, {"lineNumber": 257, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 257, "col_offset": 36, "nodeName": "o", "type": "str"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "d", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 267, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 267, "col_offset": 53, "nodeName": "d", "type": "Any"}, {"lineNumber": 279, "col_offset": 18, "nodeName": "d", "type": "Any"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 279, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 279, "col_offset": 53, "nodeName": "d", "type": "Any"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "outcome", "type": "Any"}, {"lineNumber": 286, "col_offset": 30, "nodeName": "outcome", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "dit", "type": "module"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "dit", "type": "module"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "dit", "type": "module"}, {"lineNumber": 157, "col_offset": 71, "nodeName": "d", "type": "Any"}, {"lineNumber": 171, "col_offset": 39, "nodeName": "dit", "type": "module"}, {"lineNumber": 189, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "outcome", "type": "Any"}, {"lineNumber": 304, "col_offset": 34, "nodeName": "outcome", "type": "Any"}]