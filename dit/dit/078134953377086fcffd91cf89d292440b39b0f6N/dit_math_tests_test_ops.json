[{"lineNumber": 10, "col_offset": 0, "nodeName": "test_linear_add", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "test_linear_add_reduce", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "test_linear_mult", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "test_linear_invert", "type": "Callable[[], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "test_linear_mult_reduce", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "test_exp_func", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "test_log_func", "type": "Callable[[], Any]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "prods", "type": "List[int]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "bad_bases", "type": "List[Union[str, int]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "b", "type": "Union[str, int]"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "bad_bases", "type": "List[Union[str, int]]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "bad_bases", "type": "List[Union[str, int]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "b", "type": "Union[str, int]"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "bad_bases", "type": "List[Union[str, int]]"}, {"lineNumber": 11, "col_offset": 10, "nodeName": "LinearOperations", "type": "Type[dit.math.ops.LinearOperations]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 23, "col_offset": 10, "nodeName": "LinearOperations", "type": "Type[dit.math.ops.LinearOperations]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "LinearOperations", "type": "Type[dit.math.ops.LinearOperations]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "LinearOperations", "type": "Type[dit.math.ops.LinearOperations]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "LinearOperations", "type": "Type[dit.math.ops.LinearOperations]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "p", "type": "int"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "prods", "type": "List[int]"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 14, "col_offset": 24, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "add_reduce", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "add_reduce", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "add_reduce", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "add_reduce", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "add_reduce", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "add_reduce", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "mult", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "mult", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "mult", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "mult", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "mult", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "mult", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "mult", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "mult", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "mult", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "mult", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "mult", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "mult", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "invert", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "invert", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "invert", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "invert", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 57, "col_offset": 57, "nodeName": "p", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "InvalidBase", "type": "Type[dit.exceptions.InvalidBase]"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "exp_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "b", "type": "Union[str, int]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "InvalidBase", "type": "Type[dit.exceptions.InvalidBase]"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "log_func", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "b", "type": "Union[str, int]"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 14, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 27, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "mult_reduce", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "ops", "type": "dit.math.ops.LinearOperations"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "arange", "type": "Any"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "i", "type": "int"}]