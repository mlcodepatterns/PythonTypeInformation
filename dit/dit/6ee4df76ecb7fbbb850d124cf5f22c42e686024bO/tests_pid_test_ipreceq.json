[{"lineNumber": 12, "col_offset": 0, "nodeName": "test_pid_preceq1", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "test_pid_preceq2", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "test_pid_preceq3", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "pid", "type": "dit.pid.measures.ipreceq.PID_Preceq"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "pid", "type": "dit.pid.measures.ipreceq.PID_Preceq"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "events", "type": "List[str]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "d", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "ko", "type": "dit.pid.measures.ipreceq.KolchinskiOptimizer"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "bivariates", "type": "Dict[str, Any]"}, {"lineNumber": 18, "col_offset": 10, "nodeName": "PID_Preceq", "type": "Type[dit.pid.measures.ipreceq.PID_Preceq]"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "bivariates", "type": "Dict[str, Any]"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "PID_Preceq", "type": "Type[dit.pid.measures.ipreceq.PID_Preceq]"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "Distribution", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "events", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "KolchinskiOptimizer", "type": "Type[dit.pid.measures.ipreceq.KolchinskiOptimizer]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "d", "type": "Any"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "optimize", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "pid", "type": "dit.pid.measures.ipreceq.PID_Preceq"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "approx", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "pid", "type": "dit.pid.measures.ipreceq.PID_Preceq"}, {"lineNumber": 20, "col_offset": 27, "nodeName": "approx", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "pid", "type": "dit.pid.measures.ipreceq.PID_Preceq"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "approx", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "pid", "type": "dit.pid.measures.ipreceq.PID_Preceq"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "approx", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "pid", "type": "dit.pid.measures.ipreceq.PID_Preceq"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "approx", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "pid", "type": "dit.pid.measures.ipreceq.PID_Preceq"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "approx", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "pid", "type": "dit.pid.measures.ipreceq.PID_Preceq"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "approx", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "pid", "type": "dit.pid.measures.ipreceq.PID_Preceq"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "approx", "type": "Any"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "ko", "type": "dit.pid.measures.ipreceq.KolchinskiOptimizer"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "fun", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "approx", "type": "Any"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 20, "col_offset": 27, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "pytest", "type": "Any"}]