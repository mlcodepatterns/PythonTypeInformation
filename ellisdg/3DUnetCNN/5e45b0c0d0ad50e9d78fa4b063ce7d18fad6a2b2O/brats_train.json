[{"lineNumber": 49, "col_offset": 0, "nodeName": "fetch_training_data_files", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 10, "col_offset": 9, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 17, "col_offset": 32, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "training_data_files", "type": "List[Tuple[str, ...]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "subject_dir", "type": "str"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "training_data_files", "type": "List[Tuple[str, ...]]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "hdf5_file_opened", "type": "Any"}, {"lineNumber": 112, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "path", "type": "module"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "subject_files", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "modality", "type": "str"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "overwrite", "type": "Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "training_files", "type": "List[Tuple[str, ...]]"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "open_data_file", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "train_generator", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "validation_generator", "type": "Any"}, {"lineNumber": 78, "col_offset": 43, "nodeName": "n_train_steps", "type": "Any"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "n_validation_steps", "type": "Any"}, {"lineNumber": 78, "col_offset": 79, "nodeName": "get_training_and_validation_generators", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "hdf5_file_opened", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "train_model", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "os", "type": "module"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "glob", "type": "module"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "fetch_training_data_files", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "write_data_to_file", "type": "Callable"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "training_files", "type": "List[Tuple[str, ...]]"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "overwrite", "type": "Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "load_old_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "unet_model_3d", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "overwrite", "type": "Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "train_generator", "type": "Any"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "validation_generator", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "n_train_steps", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "n_validation_steps", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "hdf5_file_opened", "type": "Any"}, {"lineNumber": 20, "col_offset": 60, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 22, "col_offset": 60, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "path", "type": "module"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 51, "col_offset": 62, "nodeName": "__file__", "type": "str"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "training_data_files", "type": "List[Tuple[str, ...]]"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "subject_files", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 20, "col_offset": 65, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 22, "col_offset": 65, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "os", "type": "module"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "path", "type": "module"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "subject_files", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 54, "col_offset": 46, "nodeName": "subject_dir", "type": "str"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 64, "col_offset": 76, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 74, "col_offset": 52, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], Tuple[int, int, int, int], int, List[str], Tuple[Union[str, Tuple[int, int, int], Tuple[int, int, int, int], List[str], int], ...], bool, float, str]]]"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "os", "type": "module"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "path", "type": "module"}, {"lineNumber": 54, "col_offset": 59, "nodeName": "modality", "type": "str"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "os", "type": "module"}]