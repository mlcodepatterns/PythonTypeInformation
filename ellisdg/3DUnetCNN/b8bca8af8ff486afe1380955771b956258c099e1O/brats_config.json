[{"lineNumber": 4, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 4, "col_offset": 9, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 5, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 10, "col_offset": 21, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 10, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 10, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 23, "col_offset": 56, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}, {"lineNumber": 23, "col_offset": 61, "nodeName": "config", "type": "Dict[str, Union[Tuple[int, int, int], int, str, float, List[str], Tuple[Union[List[str], Tuple[int, int, int], int, float, str], ...], bool]]"}]