[{"lineNumber": 11, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "tmp_files", "type": "List[nothing]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "data_file", "type": "None"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "data_file", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "data_file_path", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "training_keys_file", "type": "str"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "validation_keys_file", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "tmp_files", "type": "List[str]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "n_channels", "type": "Any"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "n_channels", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "image_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "data_size", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "truth", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "affine", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "tmp_file", "type": "str"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "tmp_files", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "x_dim", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "label_map", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "binary_labels", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "label", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "labels", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "validation_batch_size", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "generators", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 83, "col_offset": 89, "nodeName": "generators", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "n_validation_samples", "type": "int"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "validation_samples", "type": "List[int]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "validation_batch_size", "type": "int"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "patch_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "generators", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 122, "col_offset": 89, "nodeName": "generators", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "expected_training_samples", "type": "int"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "expected_validation_samples", "type": "int"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "validation_batch_size", "type": "int"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "patch_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "random_start", "type": "Tuple[int, int, int]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "overlap", "type": "int"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "generators", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 155, "col_offset": 89, "nodeName": "generators", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "expected_training_samples", "type": "int"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "expected_validation_samples", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "permutations", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "key", "type": "Tuple[Tuple[int, ...], int, int, int, int]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "generators", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 189, "col_offset": 89, "nodeName": "generators", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "permutation_key", "type": "Tuple[Tuple[int, ...], int, int, int, int]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 13, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "rm_tmp_files", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "data_file_path", "type": "str"}, {"lineNumber": 25, "col_offset": 47, "nodeName": "training_keys_file", "type": "str"}, {"lineNumber": 25, "col_offset": 72, "nodeName": "validation_keys_file", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "rm_tmp_files", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "len_x", "type": "Any"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "len_y", "type": "Any"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "len_z", "type": "Any"}, {"lineNumber": 34, "col_offset": 71, "nodeName": "len_z", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "image_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "diag", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "affine", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "data_storage", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "truth_storage", "type": "Any"}, {"lineNumber": 41, "col_offset": 53, "nodeName": "affine_storage", "type": "Any"}, {"lineNumber": 41, "col_offset": 70, "nodeName": "create_data_file", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 41, "col_offset": 87, "nodeName": "data_file_path", "type": "str"}, {"lineNumber": 42, "col_offset": 87, "nodeName": "n_channels", "type": "Any"}, {"lineNumber": 42, "col_offset": 104, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 43, "col_offset": 87, "nodeName": "image_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "get_multi_class_labels", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "label_map", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 58, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 63, "col_offset": 68, "nodeName": "labels", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "create_data_file", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "get_training_and_validation_generators", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "training_generator", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "validation_generator", "type": "Any"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "n_training_steps", "type": "Any"}, {"lineNumber": 83, "col_offset": 68, "nodeName": "n_validation_steps", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "verify_generator", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "training_generator", "type": "Any"}, {"lineNumber": 85, "col_offset": 50, "nodeName": "n_training_steps", "type": "Any"}, {"lineNumber": 85, "col_offset": 68, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "verify_generator", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "validation_generator", "type": "Any"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "n_validation_steps", "type": "Any"}, {"lineNumber": 88, "col_offset": 72, "nodeName": "validation_batch_size", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "rm_tmp_files", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "steps", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "hash_x", "type": "int"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "n_validation_samples", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "n_validation_samples", "type": "Union[Any, int]"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "expected_samples", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "create_data_file", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "get_training_and_validation_generators", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 116, "col_offset": 60, "nodeName": "data_file", "type": "Any"}, {"lineNumber": 116, "col_offset": 76, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 116, "col_offset": 88, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 117, "col_offset": 60, "nodeName": "training_keys_file", "type": "str"}, {"lineNumber": 117, "col_offset": 85, "nodeName": "validation_keys_file", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "training_generator", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "validation_generator", "type": "Any"}, {"lineNumber": 122, "col_offset": 50, "nodeName": "n_training_steps", "type": "Any"}, {"lineNumber": 122, "col_offset": 68, "nodeName": "n_validation_steps", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "verify_generator", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "training_generator", "type": "Any"}, {"lineNumber": 126, "col_offset": 50, "nodeName": "n_training_steps", "type": "Any"}, {"lineNumber": 126, "col_offset": 68, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 126, "col_offset": 80, "nodeName": "expected_training_samples", "type": "int"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "verify_generator", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "validation_generator", "type": "Any"}, {"lineNumber": 130, "col_offset": 52, "nodeName": "n_validation_steps", "type": "Any"}, {"lineNumber": 130, "col_offset": 72, "nodeName": "validation_batch_size", "type": "int"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "expected_validation_samples", "type": "int"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "rm_tmp_files", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "create_data_file", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "get_training_and_validation_generators", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 146, "col_offset": 60, "nodeName": "data_file", "type": "Any"}, {"lineNumber": 146, "col_offset": 76, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 146, "col_offset": 88, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 147, "col_offset": 60, "nodeName": "training_keys_file", "type": "str"}, {"lineNumber": 147, "col_offset": 85, "nodeName": "validation_keys_file", "type": "str"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "training_generator", "type": "Any"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "validation_generator", "type": "Any"}, {"lineNumber": 155, "col_offset": 50, "nodeName": "n_training_steps", "type": "Any"}, {"lineNumber": 155, "col_offset": 68, "nodeName": "n_validation_steps", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "verify_generator", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "training_generator", "type": "Any"}, {"lineNumber": 159, "col_offset": 50, "nodeName": "n_training_steps", "type": "Any"}, {"lineNumber": 159, "col_offset": 68, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 159, "col_offset": 80, "nodeName": "expected_training_samples", "type": "int"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "verify_generator", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 30, "nodeName": "validation_generator", "type": "Any"}, {"lineNumber": 163, "col_offset": 52, "nodeName": "n_validation_steps", "type": "Any"}, {"lineNumber": 163, "col_offset": 72, "nodeName": "validation_batch_size", "type": "int"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "expected_validation_samples", "type": "int"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "rm_tmp_files", "type": "Callable[[], Any]"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "generate_permutation_keys", "type": "Callable[[], Set[Tuple[Tuple[int, ...], int, int, int, int]]]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "create_data_file", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "get_training_and_validation_generators", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 186, "col_offset": 60, "nodeName": "data_file", "type": "Any"}, {"lineNumber": 186, "col_offset": 76, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 186, "col_offset": 88, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 187, "col_offset": 60, "nodeName": "training_keys_file", "type": "str"}, {"lineNumber": 187, "col_offset": 85, "nodeName": "validation_keys_file", "type": "str"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "training_generator", "type": "Any"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "validation_generator", "type": "Any"}, {"lineNumber": 189, "col_offset": 50, "nodeName": "n_training_steps", "type": "Any"}, {"lineNumber": 189, "col_offset": 68, "nodeName": "n_validation_steps", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "next", "type": "Callable"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "training_generator", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "rm_tmp_files", "type": "Callable[[], Any]"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 197, "col_offset": 54, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 198, "col_offset": 31, "nodeName": "generate_permutation_keys", "type": "Callable[[], Set[Tuple[Tuple[int, ...], int, int, int, int]]]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "permuted_data", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "reversed_permutation", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "close", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 25, "col_offset": 47, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 25, "col_offset": 72, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 34, "col_offset": 63, "nodeName": "len_y", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "int16", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 38, "col_offset": 58, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 38, "col_offset": 76, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 38, "col_offset": 91, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 38, "col_offset": 106, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 41, "col_offset": 87, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 42, "col_offset": 87, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 42, "col_offset": 104, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "add_data_to_storage", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], None]"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "data_storage", "type": "Any"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "truth_storage", "type": "Any"}, {"lineNumber": 46, "col_offset": 61, "nodeName": "affine_storage", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "tmp_file", "type": "str"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 75, "col_offset": 70, "nodeName": "data_file", "type": "Any"}, {"lineNumber": 76, "col_offset": 71, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 77, "col_offset": 69, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 78, "col_offset": 79, "nodeName": "training_keys_file", "type": "str"}, {"lineNumber": 79, "col_offset": 81, "nodeName": "validation_keys_file", "type": "str"}, {"lineNumber": 80, "col_offset": 71, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 81, "col_offset": 82, "nodeName": "validation_batch_size", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "round", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "round", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "data_file", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "next", "type": "Callable"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "generator", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "hash_x", "type": "int"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "validation_samples", "type": "List[int]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "hash_x", "type": "int"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "steps", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 116, "col_offset": 60, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 116, "col_offset": 88, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 117, "col_offset": 60, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 117, "col_offset": 85, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 118, "col_offset": 71, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 119, "col_offset": 82, "nodeName": "validation_batch_size", "type": "int"}, {"lineNumber": 120, "col_offset": 72, "nodeName": "patch_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "data_file", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 146, "col_offset": 60, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 146, "col_offset": 88, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 147, "col_offset": 60, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 147, "col_offset": 85, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 148, "col_offset": 71, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 149, "col_offset": 82, "nodeName": "validation_batch_size", "type": "int"}, {"lineNumber": 150, "col_offset": 72, "nodeName": "patch_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 151, "col_offset": 88, "nodeName": "random_start", "type": "Tuple[int, int, int]"}, {"lineNumber": 152, "col_offset": 85, "nodeName": "overlap", "type": "int"}, {"lineNumber": 157, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "data_file", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "permutations", "type": "List[Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 186, "col_offset": 60, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 186, "col_offset": 88, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 187, "col_offset": 60, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 187, "col_offset": 85, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "permute_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 199, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 199, "col_offset": 47, "nodeName": "permutation_key", "type": "Tuple[Tuple[int, ...], int, int, int, int]"}, {"lineNumber": 200, "col_offset": 35, "nodeName": "reverse_permute_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 200, "col_offset": 56, "nodeName": "permuted_data", "type": "Any"}, {"lineNumber": 200, "col_offset": 71, "nodeName": "permutation_key", "type": "Tuple[Tuple[int, ...], int, int, int, int]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "data_file", "type": "Any"}, {"lineNumber": 34, "col_offset": 55, "nodeName": "len_x", "type": "Any"}, {"lineNumber": 35, "col_offset": 56, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 35, "col_offset": 72, "nodeName": "n_channels", "type": "Any"}, {"lineNumber": 35, "col_offset": 89, "nodeName": "len_x", "type": "Any"}, {"lineNumber": 35, "col_offset": 96, "nodeName": "len_y", "type": "Any"}, {"lineNumber": 35, "col_offset": 103, "nodeName": "len_z", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "int8", "type": "Any"}, {"lineNumber": 38, "col_offset": 58, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 76, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 91, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 106, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 47, "col_offset": 92, "nodeName": "affine", "type": "Any"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "n_channels", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "int16", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "tmp_file", "type": "str"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 75, "col_offset": 70, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 77, "col_offset": 69, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 78, "col_offset": 79, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 79, "col_offset": 81, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 64, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "validation_samples", "type": "List[int]"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "round", "type": "Any"}, {"lineNumber": 128, "col_offset": 42, "nodeName": "round", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "round", "type": "Any"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "round", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "permutations", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "permute_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 45, "nodeName": "data", "type": "Any"}, {"lineNumber": 174, "col_offset": 51, "nodeName": "key", "type": "Tuple[Tuple[int, ...], int, int, int, int]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "generate_permutation_keys", "type": "Callable[[], Set[Tuple[Tuple[int, ...], int, int, int, int]]]"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "n_channels", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "arange", "type": "Any"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "data_size", "type": "Any"}, {"lineNumber": 35, "col_offset": 56, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 35, "col_offset": 72, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "x_dim", "type": "int"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 89, "col_offset": 64, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 124, "col_offset": 66, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 128, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 51, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 49, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 157, "col_offset": 66, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 51, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 58, "nodeName": "shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "all", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "sum", "type": "Any"}, {"lineNumber": 178, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 178, "col_offset": 47, "nodeName": "sum", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "prod", "type": "Any"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "data_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 201, "col_offset": 43, "nodeName": "reversed_permutation", "type": "Any"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 61, "nodeName": "truth", "type": "Any"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "data_storage", "type": "Any"}, {"lineNumber": 50, "col_offset": 58, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "truth_storage", "type": "Any"}, {"lineNumber": 51, "col_offset": 59, "nodeName": "truth", "type": "Any"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 128, "col_offset": 51, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 128, "col_offset": 73, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 157, "col_offset": 49, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 161, "col_offset": 51, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 161, "col_offset": 73, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 40, "nodeName": "array", "type": "Any"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 54, "nodeName": "permutations", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 53, "nodeName": "index", "type": "int"}, {"lineNumber": 47, "col_offset": 67, "nodeName": "index", "type": "int"}, {"lineNumber": 50, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 50, "col_offset": 63, "nodeName": "index", "type": "int"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "index", "type": "int"}, {"lineNumber": 51, "col_offset": 65, "nodeName": "index", "type": "int"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "arange", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "binary_labels", "type": "Any"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "permutations", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 49, "nodeName": "permutations", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 66, "col_offset": 82, "nodeName": "label", "type": "Any"}, {"lineNumber": 66, "col_offset": 63, "nodeName": "label_map", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 52, "nodeName": "label", "type": "Any"}]