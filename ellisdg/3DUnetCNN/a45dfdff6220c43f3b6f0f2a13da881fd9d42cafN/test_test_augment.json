[{"lineNumber": 11, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "test_scale_affine", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_permutations", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "affine", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "scale", "type": "Tuple[float, float, float]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "new_affine", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "new_image", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "new_affine", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "new_image", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "permutation_keys", "type": "Set[Tuple[Sequence[int], int, int, int, int]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "permutations", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "key", "type": "Tuple[Sequence[int], int, int, int, int]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "permutation_keys", "type": "Set[Tuple[Sequence[int], int, int, int, int]]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "diag", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 15, "col_offset": 20, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 15, "col_offset": 75, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "Nifti1Image", "type": "Any"}, {"lineNumber": 16, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 16, "col_offset": 48, "nodeName": "affine", "type": "Any"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "scale_affine", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 34, "nodeName": "affine", "type": "Any"}, {"lineNumber": 20, "col_offset": 47, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 20, "col_offset": 59, "nodeName": "scale", "type": "Tuple[float, float, float]"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "resample", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "image", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "get_data", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "affine", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "Nifti1Image", "type": "Any"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 48, "nodeName": "affine", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "scale_affine", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "affine", "type": "Any"}, {"lineNumber": 32, "col_offset": 47, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 32, "col_offset": 59, "nodeName": "scale", "type": "Tuple[float, float, float]"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "resample", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "image", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "get_data", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "generate_permutation_keys", "type": "Callable[[], Set[Tuple[Sequence[int], int, int, int, int]]]"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 30, "nodeName": "ones", "type": "Any"}, {"lineNumber": 15, "col_offset": 75, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "nib", "type": "Any"}, {"lineNumber": 16, "col_offset": 37, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 16, "col_offset": 48, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 20, "col_offset": 34, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 20, "col_offset": 47, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 21, "col_offset": 55, "nodeName": "new_affine", "type": "Any"}, {"lineNumber": 21, "col_offset": 80, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "new_image", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "nib", "type": "Any"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 31, "col_offset": 48, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 32, "col_offset": 47, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 33, "col_offset": 55, "nodeName": "new_affine", "type": "Any"}, {"lineNumber": 33, "col_offset": 80, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "new_image", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "permutation_keys", "type": "Set[Tuple[Sequence[int], int, int, int, int]]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "permute_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "key", "type": "Tuple[Sequence[int], int, int, int, int]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 14, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 21, "col_offset": 80, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 32, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 33, "col_offset": 80, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "permutations", "type": "List[Any]"}, {"lineNumber": 15, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 30, "nodeName": "prod", "type": "Any"}, {"lineNumber": 15, "col_offset": 38, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 15, "col_offset": 57, "nodeName": "float", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "other", "type": "nothing"}, {"lineNumber": 49, "col_offset": 52, "nodeName": "other", "type": "nothing"}, {"lineNumber": 49, "col_offset": 61, "nodeName": "permutations", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 50, "col_offset": 101, "nodeName": "key", "type": "Tuple[Sequence[int], int, int, int, int]"}, {"lineNumber": 15, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 38, "nodeName": "self", "type": "TestAugmentation"}, {"lineNumber": 15, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "np", "type": "module"}]