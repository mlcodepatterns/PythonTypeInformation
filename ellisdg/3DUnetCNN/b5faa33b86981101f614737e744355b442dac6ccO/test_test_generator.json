[{"lineNumber": 10, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "x_dim", "type": "int"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "label_map", "type": "numpy.ndarray"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "binary_labels", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "label", "type": "Any"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "labels", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "data_file_path", "type": "str"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "training_keys_file", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "validation_keys_file", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "tmp_files", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "len_x", "type": "int"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "len_y", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "len_z", "type": "int"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "image_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "data_size", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "truth", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "affine", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "generators", "type": "Tuple[Any, Any, Any, int]"}, {"lineNumber": 62, "col_offset": 89, "nodeName": "generators", "type": "Tuple[Any, Any, Any, int]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "n_training_samples", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "training_samples", "type": "List[int]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "n_validation_samples", "type": "int"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "validation_samples", "type": "List[int]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "get_multi_class_labels", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 47, "nodeName": "label_map", "type": "numpy.ndarray"}, {"lineNumber": 17, "col_offset": 58, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 17, "col_offset": 68, "nodeName": "labels", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "data_file_path", "type": "str"}, {"lineNumber": 26, "col_offset": 37, "nodeName": "training_keys_file", "type": "str"}, {"lineNumber": 26, "col_offset": 57, "nodeName": "validation_keys_file", "type": "str"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "tmp_file", "type": "str"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "tmp_files", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "rm_tmp_files", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "len_x", "type": "int"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "len_y", "type": "int"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "len_z", "type": "int"}, {"lineNumber": 44, "col_offset": 61, "nodeName": "len_z", "type": "int"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "image_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "int8", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "diag", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "affine", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "data_file", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "data_storage", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "truth_storage", "type": "Any"}, {"lineNumber": 50, "col_offset": 48, "nodeName": "affine_storage", "type": "Any"}, {"lineNumber": 50, "col_offset": 65, "nodeName": "create_data_file", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 50, "col_offset": 82, "nodeName": "data_file_path", "type": "str"}, {"lineNumber": 50, "col_offset": 98, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 50, "col_offset": 110, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 51, "col_offset": 82, "nodeName": "image_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "get_training_and_validation_generators", "type": "Callable[..., Tuple[Any, Any, Any, int]]"}, {"lineNumber": 60, "col_offset": 60, "nodeName": "data_file", "type": "Any"}, {"lineNumber": 60, "col_offset": 71, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 60, "col_offset": 83, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 60, "col_offset": 93, "nodeName": "training_keys_file", "type": "str"}, {"lineNumber": 61, "col_offset": 60, "nodeName": "validation_keys_file", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "training_generator", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "validation_generator", "type": "Any"}, {"lineNumber": 62, "col_offset": 50, "nodeName": "n_training_steps", "type": "Any"}, {"lineNumber": 62, "col_offset": 68, "nodeName": "n_validation_steps", "type": "int"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "n_training_steps", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "hash_x", "type": "int"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "n_training_samples", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "n_training_samples", "type": "Union[Any, int]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "n_validation_steps", "type": "int"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "hash_x", "type": "int"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "n_validation_samples", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "n_training_samples", "type": "Union[Any, int]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "rm_tmp_files", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 30, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 53, "nodeName": "len_y", "type": "int"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 45, "col_offset": 108, "nodeName": "int16", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "add_data_to_storage", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], None]"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "data_storage", "type": "Any"}, {"lineNumber": 54, "col_offset": 46, "nodeName": "truth_storage", "type": "Any"}, {"lineNumber": 54, "col_offset": 61, "nodeName": "affine_storage", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 93, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "next", "type": "Callable"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "training_generator", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "hash_x", "type": "int"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "training_samples", "type": "List[int]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "hash_x", "type": "int"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 73, "col_offset": 57, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "next", "type": "Callable"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "validation_generator", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "hash_x", "type": "int"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "assertNotIn", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "hash_x", "type": "int"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "validation_samples", "type": "List[int]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "hash_x", "type": "int"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "validation_split", "type": "float"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "tmp_file", "type": "str"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "len_x", "type": "int"}, {"lineNumber": 45, "col_offset": 56, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 45, "col_offset": 67, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 45, "col_offset": 79, "nodeName": "len_x", "type": "int"}, {"lineNumber": 45, "col_offset": 86, "nodeName": "len_y", "type": "int"}, {"lineNumber": 45, "col_offset": 93, "nodeName": "len_z", "type": "int"}, {"lineNumber": 45, "col_offset": 108, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 89, "nodeName": "affine", "type": "Any"}, {"lineNumber": 55, "col_offset": 108, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "int16", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "training_samples", "type": "List[int]"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "TestDataGenerator"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "validation_samples", "type": "List[int]"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 16, "col_offset": 59, "nodeName": "x_dim", "type": "int"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "tmp_file", "type": "str"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "arange", "type": "Any"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "data_size", "type": "int"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "stack", "type": "Any"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "data_storage", "type": "Any"}, {"lineNumber": 57, "col_offset": 58, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 35, "nodeName": "truth_storage", "type": "Any"}, {"lineNumber": 58, "col_offset": 59, "nodeName": "truth", "type": "Any"}, {"lineNumber": 16, "col_offset": 34, "nodeName": "arange", "type": "Any"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "binary_labels", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 55, "nodeName": "truth", "type": "Any"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 57, "col_offset": 63, "nodeName": "index", "type": "int"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "index", "type": "int"}, {"lineNumber": 58, "col_offset": 65, "nodeName": "index", "type": "int"}, {"lineNumber": 16, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 16, "col_offset": 44, "nodeName": "n_labels", "type": "int"}, {"lineNumber": 20, "col_offset": 82, "nodeName": "label", "type": "Any"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "index", "type": "int"}, {"lineNumber": 55, "col_offset": 61, "nodeName": "index", "type": "int"}, {"lineNumber": 20, "col_offset": 63, "nodeName": "label_map", "type": "numpy.ndarray"}, {"lineNumber": 20, "col_offset": 52, "nodeName": "label", "type": "Any"}]