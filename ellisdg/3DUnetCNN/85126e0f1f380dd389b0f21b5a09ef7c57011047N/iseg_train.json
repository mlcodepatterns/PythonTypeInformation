[{"lineNumber": 36, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 11, "col_offset": 9, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "hdf5_file_opened", "type": "Any"}, {"lineNumber": 69, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "training_files", "type": "List[Tuple[str, str, str]]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "label_file", "type": "str"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "open_file", "type": "Any"}, {"lineNumber": 46, "col_offset": 7, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "train_generator", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "validation_generator", "type": "Any"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "nb_train_samples", "type": "Any"}, {"lineNumber": 55, "col_offset": 61, "nodeName": "nb_test_samples", "type": "int"}, {"lineNumber": 55, "col_offset": 79, "nodeName": "get_training_and_validation_generators", "type": "Callable[..., Tuple[Any, Any, Any, int]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "hdf5_file_opened", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "train_model", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], None]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 55, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "write_data_to_file", "type": "Callable"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "training_files", "type": "List[Tuple[str, str, str]]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "tables", "type": "Any"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 46, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "load_old_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "unet_model_3d", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 62, "col_offset": 81, "nodeName": "train_generator", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "validation_generator", "type": "Any"}, {"lineNumber": 63, "col_offset": 75, "nodeName": "nb_train_samples", "type": "Any"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "nb_test_samples", "type": "int"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "hdf5_file_opened", "type": "Any"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 28, "col_offset": 60, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "glob", "type": "module"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 42, "col_offset": 43, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 46, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 56, "col_offset": 70, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 57, "col_offset": 75, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 58, "col_offset": 70, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 59, "col_offset": 71, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 64, "col_offset": 72, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 66, "col_offset": 92, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "training_files", "type": "List[Tuple[str, str, str]]"}, {"lineNumber": 40, "col_offset": 105, "nodeName": "label_file", "type": "str"}, {"lineNumber": 42, "col_offset": 76, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 50, "col_offset": 74, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "config", "type": "Dict[str, Optional[Union[Tuple[int, int, int], int, float, str, Tuple[Union[float, int, str, Tuple[int, int, int]], ...], bool, List[nothing]]]]"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 40, "col_offset": 70, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "label_file", "type": "str"}, {"lineNumber": 40, "col_offset": 70, "nodeName": "label_file", "type": "str"}]