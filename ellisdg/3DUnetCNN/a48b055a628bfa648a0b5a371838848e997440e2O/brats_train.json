[{"lineNumber": 12, "col_offset": 0, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "hdf5_file_opened", "type": "Any"}, {"lineNumber": 36, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 14, "col_offset": 7, "nodeName": "overwrite", "type": "bool"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "open_file", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "train_generator", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "test_generator", "type": "Any"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "nb_train_samples", "type": "Any"}, {"lineNumber": 28, "col_offset": 55, "nodeName": "nb_test_samples", "type": "Any"}, {"lineNumber": 28, "col_offset": 73, "nodeName": "get_training_and_testing_generators", "type": "Callable[..., Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "hdf5_file_opened", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "train_model", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], None]"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "train_generator", "type": "Any"}, {"lineNumber": 32, "col_offset": 62, "nodeName": "test_generator", "type": "Any"}, {"lineNumber": 32, "col_offset": 78, "nodeName": "nb_train_samples", "type": "Any"}, {"lineNumber": 32, "col_offset": 96, "nodeName": "nb_test_samples", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "write_data_to_file", "type": "Callable"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "tables", "type": "Any"}, {"lineNumber": 19, "col_offset": 40, "nodeName": "config", "type": "Dict[str, Union[float, int, str, List[str], Tuple[Union[float, int, str, List[str], Tuple[int, int, int]], ...]]]"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "overwrite", "type": "bool"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "load_old_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "unet_model_3d", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 108, "nodeName": "overwrite", "type": "bool"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "config", "type": "Dict[str, Union[float, int, str, List[str], Tuple[Union[float, int, str, List[str], Tuple[int, int, int]], ...]]]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "hdf5_file_opened", "type": "Any"}, {"lineNumber": 14, "col_offset": 24, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "config", "type": "Dict[str, Union[float, int, str, List[str], Tuple[Union[float, int, str, List[str], Tuple[int, int, int]], ...]]]"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "config", "type": "Dict[str, Union[float, int, str, List[str], Tuple[Union[float, int, str, List[str], Tuple[int, int, int]], ...]]]"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 21, "col_offset": 40, "nodeName": "config", "type": "Dict[str, Union[float, int, str, List[str], Tuple[Union[float, int, str, List[str], Tuple[int, int, int]], ...]]]"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "config", "type": "Dict[str, Union[float, int, str, List[str], Tuple[Union[float, int, str, List[str], Tuple[int, int, int]], ...]]]"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[float, int, str, List[str], Tuple[Union[float, int, str, List[str], Tuple[int, int, int]], ...]]]"}, {"lineNumber": 29, "col_offset": 70, "nodeName": "config", "type": "Dict[str, Union[float, int, str, List[str], Tuple[Union[float, int, str, List[str], Tuple[int, int, int]], ...]]]"}, {"lineNumber": 14, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 14, "col_offset": 39, "nodeName": "config", "type": "Dict[str, Union[float, int, str, List[str], Tuple[Union[float, int, str, List[str], Tuple[int, int, int]], ...]]]"}, {"lineNumber": 17, "col_offset": 39, "nodeName": "config", "type": "Dict[str, Union[float, int, str, List[str], Tuple[Union[float, int, str, List[str], Tuple[int, int, int]], ...]]]"}, {"lineNumber": 18, "col_offset": 38, "nodeName": "config", "type": "Dict[str, Union[float, int, str, List[str], Tuple[Union[float, int, str, List[str], Tuple[int, int, int]], ...]]]"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 14, "col_offset": 24, "nodeName": "os", "type": "module"}]