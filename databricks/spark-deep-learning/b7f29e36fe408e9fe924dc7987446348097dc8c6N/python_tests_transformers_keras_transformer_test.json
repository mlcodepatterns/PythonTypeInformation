[{"lineNumber": 28, "col_offset": 27, "nodeName": "SparkDLTempDirTestCase", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "RANDOM_SEED", "type": "int"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "input_col", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "output_col", "type": "str"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "id_col", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "save_filename", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "model_path", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "input_shape", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "final_df", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "sparkdl_predictions", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "keras_predictions", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "max_pred_diff", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "diff_tolerance", "type": "float"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "data_shape", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "train_rows", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "input_col_type", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "schema", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "path", "type": "str"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "path", "type": "str"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "collected", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "rows", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "x_predict", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "_test_keras_transformer_helper", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "_test_keras_transformer_helper", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "model_filename", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "_writeKerasModelFile", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 47, "nodeName": "model", "type": "Any"}, {"lineNumber": 69, "col_offset": 54, "nodeName": "save_filename", "type": "str"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "KerasTransformer", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "_getInputDF", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "sql", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "transform", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "df", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "_convertOutputToComparables", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 63, "nodeName": "final_df", "type": "Any"}, {"lineNumber": 77, "col_offset": 73, "nodeName": "id_col", "type": "str"}, {"lineNumber": 77, "col_offset": 81, "nodeName": "output_col", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertDfHasCols", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "final_df", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "_executeKerasModelLocally", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "sparkdl_predictions", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 48, "nodeName": "keras_predictions", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "glorot_uniform", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "RANDOM_SEED", "type": "int"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "example_shape", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "_createNumpyData", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "input_col_type", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "StructType", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "createDataFrame", "type": "Any"}, {"lineNumber": 115, "col_offset": 42, "nodeName": "train_rows", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 115, "col_offset": 54, "nodeName": "schema", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "tempdir", "type": "Any"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "filename", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "path", "type": "str"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "collect", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "sort", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "collect", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "sort", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "predict", "type": "Any"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "x_predict", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "Reshape", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "input_col", "type": "str"}, {"lineNumber": 70, "col_offset": 69, "nodeName": "output_col", "type": "str"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "model_path", "type": "str"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 75, "col_offset": 51, "nodeName": "input_shape", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 73, "nodeName": "input_col", "type": "str"}, {"lineNumber": 75, "col_offset": 90, "nodeName": "id_col", "type": "str"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "input_col", "type": "str"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "output_col", "type": "str"}, {"lineNumber": 79, "col_offset": 63, "nodeName": "id_col", "type": "str"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "columns", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 83, "col_offset": 62, "nodeName": "df", "type": "Any"}, {"lineNumber": 83, "col_offset": 72, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 69, "nodeName": "input_col", "type": "str"}, {"lineNumber": 84, "col_offset": 87, "nodeName": "id_col", "type": "str"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "abs", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 72, "nodeName": "diff_tolerance", "type": "float"}, {"lineNumber": 90, "col_offset": 63, "nodeName": "max_pred_diff", "type": "Any"}, {"lineNumber": 90, "col_offset": 78, "nodeName": "diff_tolerance", "type": "float"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "RANDOM_SEED", "type": "int"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 109, "col_offset": 71, "nodeName": "inputShape", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "idCol", "type": "Any"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "inputCol", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 68, "nodeName": "i", "type": "int"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "inputShape", "type": "Any"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "input_col_type", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "sqlContext", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "final_df", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "collected", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "rows", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 55, "col_offset": 64, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "final_df", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "sparkdl_predictions", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 60, "nodeName": "keras_predictions", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 110, "col_offset": 73, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "StructField", "type": "Any"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "idCol", "type": "Any"}, {"lineNumber": 114, "col_offset": 64, "nodeName": "StructField", "type": "Any"}, {"lineNumber": 114, "col_offset": 76, "nodeName": "inputCol", "type": "Any"}, {"lineNumber": 114, "col_offset": 86, "nodeName": "input_col_type", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "row", "type": "Any"}, {"lineNumber": 137, "col_offset": 45, "nodeName": "row", "type": "Any"}, {"lineNumber": 137, "col_offset": 52, "nodeName": "collected", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "select", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "input_col", "type": "Any"}, {"lineNumber": 145, "col_offset": 36, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "row", "type": "Any"}, {"lineNumber": 148, "col_offset": 49, "nodeName": "row", "type": "Any"}, {"lineNumber": 148, "col_offset": 56, "nodeName": "rows", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "_getKerasModelWeightInitializer", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "_getKerasModelWeightInitializer", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 50, "nodeName": "_getKerasModelWeightInitializer", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "_getKerasModelWeightInitializer", "type": "Callable[[], Any]"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "data_shape", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 79, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 83, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 114, "col_offset": 48, "nodeName": "IntegerType", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "output_col", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "input_col", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 43, "col_offset": 50, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "self", "type": "KerasTransformerTest"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 110, "col_offset": 51, "nodeName": "i", "type": "int"}]