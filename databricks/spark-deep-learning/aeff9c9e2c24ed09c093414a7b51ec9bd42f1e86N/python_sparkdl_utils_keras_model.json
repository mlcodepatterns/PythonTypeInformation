[{"lineNumber": 29, "col_offset": 0, "nodeName": "model_to_bytes", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "bytes_to_h5file", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "bytes_to_model", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "_get_loss_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "is_valid_loss_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "_get_optimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "is_valid_optimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "temp_path", "type": "str"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "file_bytes", "type": "bytes"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "temp_path", "type": "str"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "temp_path", "type": "str"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "temp_path", "type": "str"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "fout", "type": "BinaryIO"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "bytes_to_h5file", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "modelBytes", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "remove_temp_path", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "identifier", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "_loss", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "identifier", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "_optim", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "temp_path", "type": "str"}, {"lineNumber": 39, "col_offset": 43, "nodeName": "fin", "type": "BinaryIO"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "file_bytes", "type": "bytes"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "temp_path", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "modelBytes", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "_load_keras_hdf5_model", "type": "Any"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "temp_path", "type": "str"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "losses", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "_get_loss_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "identifier", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "_loss", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "_get_optimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "identifier", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "_optim", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "temp_path", "type": "str"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "read", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "fout", "type": "BinaryIO"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "temp_path", "type": "str"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "temp_dir", "type": "str"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "fin", "type": "BinaryIO"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "os", "type": "module"}]