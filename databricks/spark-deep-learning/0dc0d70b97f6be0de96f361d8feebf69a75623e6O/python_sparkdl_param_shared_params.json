[{"lineNumber": 32, "col_offset": 0, "nodeName": "keyword_only", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "Params", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "Params", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "Params", "type": "Any"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "Params", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "Params", "type": "Any"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "Params", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "Params", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "inputCol", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "outputCol", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "outputNodeName", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "labelCol", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "modelFile", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "kerasFitParams", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "kerasOptimizer", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "kerasLoss", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_input_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "Param", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "Param", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "converter", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "Param", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "Param", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "Param", "type": "Any"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "Param", "type": "Any"}, {"lineNumber": 209, "col_offset": 21, "nodeName": "Param", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "Param", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "_dummy", "type": "Any"}, {"lineNumber": 53, "col_offset": 86, "nodeName": "toString", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "_set", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "getOrDefault", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "inputCol", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "_dummy", "type": "Any"}, {"lineNumber": 77, "col_offset": 72, "nodeName": "toString", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "_setDefault", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "_set", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "getOrDefault", "type": "Any"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "outputCol", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "is_valid_loss_function", "type": "Any"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "value", "type": "Any"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "is_valid_optimizer", "type": "Any"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "value", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "_dummy", "type": "Any"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "toString", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "_set", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "getOrDefault", "type": "Any"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "outputNodeName", "type": "Any"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "_dummy", "type": "Any"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "toString", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "_set", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "getOrDefault", "type": "Any"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "labelCol", "type": "Any"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "_dummy", "type": "Any"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "toString", "type": "Any"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "_dummy", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "_setDefault", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "_set", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "getOrDefault", "type": "Any"}, {"lineNumber": 198, "col_offset": 33, "nodeName": "modelFile", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "_set", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "getOrDefault", "type": "Any"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "kerasFitParams", "type": "Any"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "_dummy", "type": "Any"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "toKerasOptimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "_setDefault", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "_set", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "getOrDefault", "type": "Any"}, {"lineNumber": 222, "col_offset": 33, "nodeName": "kerasOptimizer", "type": "Any"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "_dummy", "type": "Any"}, {"lineNumber": 229, "col_offset": 36, "nodeName": "toKerasLoss", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "_set", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "getOrDefault", "type": "Any"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "kerasLoss", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "Params", "type": "Any"}, {"lineNumber": 53, "col_offset": 86, "nodeName": "TypeConverters", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "self", "type": "HasInputCol"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "self", "type": "HasInputCol"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "self", "type": "HasInputCol"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "Params", "type": "Any"}, {"lineNumber": 77, "col_offset": 72, "nodeName": "TypeConverters", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "HasOutputCol"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "self", "type": "HasOutputCol"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "value", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "self", "type": "HasOutputCol"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "self", "type": "HasOutputCol"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "supportedList", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "value", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "kmutil", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 135, "col_offset": 68, "nodeName": "value", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "kmutil", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 142, "col_offset": 73, "nodeName": "value", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "Params", "type": "Any"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "TypeConverters", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "self", "type": "HasOutputNodeName"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "value", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "self", "type": "HasOutputNodeName"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "self", "type": "HasOutputNodeName"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "Params", "type": "Any"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "TypeConverters", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "self", "type": "HasLabelCol"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "self", "type": "HasLabelCol"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "self", "type": "HasLabelCol"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "Params", "type": "Any"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "TypeConverters", "type": "Any"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "Params", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "HasKerasModel"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "self", "type": "HasKerasModel"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "value", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "self", "type": "HasKerasModel"}, {"lineNumber": 198, "col_offset": 33, "nodeName": "self", "type": "HasKerasModel"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "self", "type": "HasKerasModel"}, {"lineNumber": 201, "col_offset": 40, "nodeName": "value", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "self", "type": "HasKerasModel"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "self", "type": "HasKerasModel"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "Params", "type": "Any"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "SparkDLTypeConverters", "type": "Type[SparkDLTypeConverters]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "HasKerasOptimizer"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "self", "type": "HasKerasOptimizer"}, {"lineNumber": 219, "col_offset": 40, "nodeName": "value", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "self", "type": "HasKerasOptimizer"}, {"lineNumber": 222, "col_offset": 33, "nodeName": "self", "type": "HasKerasOptimizer"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "Params", "type": "Any"}, {"lineNumber": 229, "col_offset": 36, "nodeName": "SparkDLTypeConverters", "type": "Type[SparkDLTypeConverters]"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "self", "type": "HasKerasLoss"}, {"lineNumber": 232, "col_offset": 35, "nodeName": "value", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "self", "type": "HasKerasLoss"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "self", "type": "HasKerasLoss"}, {"lineNumber": 42, "col_offset": 68, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "HasInputCol", "type": "Type[HasInputCol]"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "self", "type": "HasInputCol"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "HasOutputCol", "type": "Type[HasOutputCol]"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "self", "type": "HasOutputCol"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "uid", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "toString", "type": "Any"}, {"lineNumber": 107, "col_offset": 47, "nodeName": "value", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 135, "col_offset": 75, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 135, "col_offset": 80, "nodeName": "value", "type": "Any"}, {"lineNumber": 142, "col_offset": 80, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 142, "col_offset": 85, "nodeName": "value", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "HasKerasModel", "type": "Type[HasKerasModel]"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "self", "type": "HasKerasModel"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 214, "col_offset": 14, "nodeName": "HasKerasOptimizer", "type": "Type[HasKerasOptimizer]"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "self", "type": "HasKerasOptimizer"}, {"lineNumber": 42, "col_offset": 68, "nodeName": "func", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "self", "type": "HasOutputCol"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "TypeConverters", "type": "Any"}, {"lineNumber": 118, "col_offset": 78, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 118, "col_offset": 83, "nodeName": "value", "type": "Any"}, {"lineNumber": 126, "col_offset": 85, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 126, "col_offset": 89, "nodeName": "value", "type": "Any"}, {"lineNumber": 126, "col_offset": 72, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 126, "col_offset": 77, "nodeName": "value", "type": "Any"}]