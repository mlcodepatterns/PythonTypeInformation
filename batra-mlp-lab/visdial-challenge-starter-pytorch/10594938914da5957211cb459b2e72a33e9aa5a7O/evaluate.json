[{"lineNumber": 19, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "benchmark", "type": "bool"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "deterministic", "type": "bool"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "config", "type": "Any"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "device", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "arg", "type": "str"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "val_dataset", "type": "Any"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "load_epoch", "type": "int"}, {"lineNumber": 124, "col_offset": 3, "nodeName": "use_gt", "type": "bool"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "manual_seed_all", "type": "Any"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "VisDialDataset", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "eval_json", "type": "Any"}, {"lineNumber": 85, "col_offset": 64, "nodeName": "overfit", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "val_dataset", "type": "Any"}, {"lineNumber": 90, "col_offset": 3, "nodeName": "use_gt", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "use_gt", "type": "bool"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "to", "type": "Any"}, {"lineNumber": 100, "col_offset": 62, "nodeName": "device", "type": "Any"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "to", "type": "Any"}, {"lineNumber": 101, "col_offset": 62, "nodeName": "device", "type": "Any"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "gpu_ids", "type": "Any"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "gpu_ids", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "load_checkpoint", "type": "Any"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "load_epoch", "type": "int"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 110, "col_offset": 61, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "eval", "type": "Any"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "eval", "type": "Any"}, {"lineNumber": 124, "col_offset": 3, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "ranks_json", "type": "List[Dict[str, Any]]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "argparse", "type": "module"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "backends", "type": "Any"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "backends", "type": "Any"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "yaml", "type": "module"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "config_yml", "type": "Any"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 73, "col_offset": 76, "nodeName": "device", "type": "Any"}, {"lineNumber": 76, "col_offset": 6, "nodeName": "dump", "type": "Callable"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "config", "type": "Any"}, {"lineNumber": 85, "col_offset": 64, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 87, "col_offset": 72, "nodeName": "cpu_workers", "type": "Any"}, {"lineNumber": 90, "col_offset": 3, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "checkpointing_utils", "type": "module"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "load_pthpath", "type": "Any"}, {"lineNumber": 112, "col_offset": 6, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "load_pthpath", "type": "Any"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 114, "col_offset": 6, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "batch", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "batch", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "ranks", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "ranks", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "ranks_json", "type": "List[Dict[str, Any]]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "torch", "type": "Any"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "torch", "type": "Any"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 73, "col_offset": 50, "nodeName": "gpu_ids", "type": "Any"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "gpu_ids", "type": "Any"}, {"lineNumber": 73, "col_offset": 76, "nodeName": "torch", "type": "Any"}, {"lineNumber": 76, "col_offset": 6, "nodeName": "yaml", "type": "module"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "arg", "type": "str"}, {"lineNumber": 87, "col_offset": 72, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "Encoder", "type": "Callable[..., visdialch.encoders.lf.LateFusionEncoder]"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "vocabulary", "type": "Any"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "Decoder", "type": "Callable[..., visdialch.decoders.disc.DiscriminativeDecoder]"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "vocabulary", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "path", "type": "module"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "val_dataloader", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "decoder_output", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "scores_to_ranks", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "decoder_output", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "view", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 175, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 175, "col_offset": 39, "nodeName": "save_ranks_path", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "save_ranks_path", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "json", "type": "module"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "save_ranks_path", "type": "Any"}, {"lineNumber": 73, "col_offset": 50, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "arg", "type": "str"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "config", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "val_dataset", "type": "Any"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "config", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "val_dataset", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "split", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "batch", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 154, "col_offset": 53, "nodeName": "batch", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "ranks", "type": "Any"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "split", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "j", "type": "int"}, {"lineNumber": 175, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "load_pthpath", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "batch", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "to", "type": "Any"}, {"lineNumber": 150, "col_offset": 43, "nodeName": "device", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "batch", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "val_dataset", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "key", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "ranks_json", "type": "List[Dict[str, Any]]"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "key", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "item", "type": "Any"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 168, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "ranks_json", "type": "List[Dict[str, Any]]"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "item", "type": "Any"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "rank", "type": "Any"}, {"lineNumber": 170, "col_offset": 36, "nodeName": "item", "type": "Any"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "rank", "type": "Any"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "j", "type": "int"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "item", "type": "Any"}, {"lineNumber": 172, "col_offset": 50, "nodeName": "rank", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "batch", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 165, "col_offset": 54, "nodeName": "ranks", "type": "Any"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "rank", "type": "Any"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "batch", "type": "Any"}, {"lineNumber": 164, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 165, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 170, "col_offset": 36, "nodeName": "batch", "type": "Any"}, {"lineNumber": 170, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 172, "col_offset": 58, "nodeName": "ranks", "type": "Any"}, {"lineNumber": 172, "col_offset": 67, "nodeName": "j", "type": "int"}, {"lineNumber": 172, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 165, "col_offset": 63, "nodeName": "batch", "type": "Any"}, {"lineNumber": 165, "col_offset": 83, "nodeName": "i", "type": "int"}]