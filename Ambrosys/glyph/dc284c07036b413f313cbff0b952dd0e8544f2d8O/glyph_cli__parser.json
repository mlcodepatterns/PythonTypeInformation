[{"lineNumber": 116, "col_offset": 0, "nodeName": "get_parser", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "MyGooeyMixin", "type": "Type[MyGooeyMixin]"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "MyGooeyMixin", "type": "Type[MyGooeyMixin]"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "_ArgumentGroup", "type": "Type[argparse._ArgumentGroup]"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "MyGooeyMixin", "type": "Type[MyGooeyMixin]"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "_MutuallyExclusiveGroup", "type": "Type[argparse._MutuallyExclusiveGroup]"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "GUI_AVAILABLE", "type": "bool"}, {"lineNumber": 57, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "POSITIVE_INT", "type": "Dict[str, Dict[str, Union[str, Callable[..., Any]]]]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "NON_NEGATIVE_INT", "type": "Dict[str, Dict[str, Union[str, Callable[..., Any]]]]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "READABLE_FILE", "type": "Dict[str, Dict[str, Union[str, Callable[..., Any]]]]"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "argparse", "type": "module"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "argparse", "type": "module"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "argparse", "type": "module"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "gui_active", "type": "bool"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "config", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "group", "type": "Union[MutuallyExclusiveGroup, Any]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "cp_group", "type": "Union[MutuallyExclusiveGroup, Any]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "group_breeding", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "break_condition", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "constraints", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "observer", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "probably_fork", "type": "bool"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "parser", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "GUI_AVAILABLE", "type": "bool"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "GUI_UNAVAILABLE_MSG", "type": "str"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "group", "type": "MutuallyExclusiveGroup"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "group", "type": "MutuallyExclusiveGroup"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "group", "type": "ArgumentGroup"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "group", "type": "ArgumentGroup"}, {"lineNumber": 117, "col_offset": 7, "nodeName": "parser", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "parser", "type": "Parser"}, {"lineNumber": 119, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "Parser", "type": "Type[Parser]"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "GUI_AVAILABLE", "type": "bool"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 160, "col_offset": 13, "nodeName": "add_argument_group", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "add_mutually_exclusive_group", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "add_options", "type": "Callable[[Any], None]"}, {"lineNumber": 185, "col_offset": 46, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "add_mutually_exclusive_group", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "add_options", "type": "Callable[[Any], None]"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "add_argument_group", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "add_options", "type": "Callable[[Any], None]"}, {"lineNumber": 211, "col_offset": 46, "nodeName": "group_breeding", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "add_options", "type": "Callable[[Any], None]"}, {"lineNumber": 212, "col_offset": 48, "nodeName": "group_breeding", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "add_options", "type": "Callable[[Any], None]"}, {"lineNumber": 213, "col_offset": 48, "nodeName": "group_breeding", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "add_options", "type": "Callable[[glyph.application.CreateFactory], None]"}, {"lineNumber": 214, "col_offset": 48, "nodeName": "group_breeding", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "add_argument_group", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "add_argument_group", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 353, "col_offset": 18, "nodeName": "add_argument_group", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "add_options", "type": "Callable[[Any], None]"}, {"lineNumber": 354, "col_offset": 53, "nodeName": "constraints", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "add_argument_group", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "__file__", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "probably_fork", "type": "bool"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "GooeyParser", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "e", "type": "ImportError"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "MutuallyExclusiveGroup", "type": "Type[MutuallyExclusiveGroup]"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "self", "type": "MyGooeyMixin"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "group", "type": "MutuallyExclusiveGroup"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "ArgumentGroup", "type": "Type[ArgumentGroup]"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "self", "type": "MyGooeyMixin"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "group", "type": "ArgumentGroup"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "Parser", "type": "Type[Parser]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "add_argument", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 122, "col_offset": 46, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 122, "col_offset": 54, "nodeName": "GooeyParser", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "positive_int", "type": "Callable[[Any], int]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 160, "col_offset": 13, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "config", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "gui_active", "type": "bool"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "group", "type": "Union[MutuallyExclusiveGroup, Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "group", "type": "Union[MutuallyExclusiveGroup, Any]"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "readable_yaml_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "Application", "type": "Type[glyph.application.Application]"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "gui_active", "type": "bool"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "cp_group", "type": "Union[MutuallyExclusiveGroup, Any]"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "positive_int", "type": "Callable[[Any], int]"}, {"lineNumber": 189, "col_offset": 80, "nodeName": "POSITIVE_INT", "type": "Dict[str, Dict[str, Union[str, Callable[..., Any]]]]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "cp_group", "type": "Union[MutuallyExclusiveGroup, Any]"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "readable_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "READABLE_FILE", "type": "Dict[str, Dict[str, Union[str, Callable[..., Any]]]]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "cp_group", "type": "Union[MutuallyExclusiveGroup, Any]"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "AlgorithmFactory", "type": "Type[glyph.application.AlgorithmFactory]"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "add_argument_group", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "MateFactory", "type": "Type[glyph.application.MateFactory]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "MutateFactory", "type": "Type[glyph.application.MutateFactory]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "SelectFactory", "type": "Type[glyph.application.SelectFactory]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "CreateFactory", "type": "Type[glyph.application.CreateFactory]"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 243, "col_offset": 13, "nodeName": "non_negative_int", "type": "Callable[[Any], int]"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "NON_NEGATIVE_INT", "type": "Dict[str, Dict[str, Union[str, Callable[..., Any]]]]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "positive_int", "type": "Callable[[Any], int]"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "POSITIVE_INT", "type": "Dict[str, Dict[str, Union[str, Callable[..., Any]]]]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 257, "col_offset": 13, "nodeName": "non_negative_int", "type": "Callable[[Any], int]"}, {"lineNumber": 260, "col_offset": 22, "nodeName": "NON_NEGATIVE_INT", "type": "Dict[str, Dict[str, Union[str, Callable[..., Any]]]]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 285, "col_offset": 13, "nodeName": "non_negative_int", "type": "Callable[[Any], int]"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "NON_NEGATIVE_INT", "type": "Dict[str, Dict[str, Union[str, Callable[..., Any]]]]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "non_negative_int", "type": "Callable[[Any], int]"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "NON_NEGATIVE_INT", "type": "Dict[str, Dict[str, Union[str, Callable[..., Any]]]]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "non_negative_int", "type": "Callable[[Any], int]"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "NON_NEGATIVE_INT", "type": "Dict[str, Dict[str, Union[str, Callable[..., Any]]]]"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 306, "col_offset": 13, "nodeName": "positive_int", "type": "Callable[[Any], int]"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "POSITIVE_INT", "type": "Dict[str, Dict[str, Union[str, Callable[..., Any]]]]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "ass_group", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "break_condition", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 333, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "break_condition", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 338, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "break_condition", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "np_infinity_int", "type": "Callable[[Any], Any]"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "infty", "type": "Any"}, {"lineNumber": 353, "col_offset": 18, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "ConstraintsFactory", "type": "Type[glyph.application.ConstraintsFactory]"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "observer", "type": "Union[ArgumentGroup, Any]"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "gooey", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "__file__", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "prog", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "catch_and_log", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "positive_int", "type": "Callable[[Any], int]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "catch_and_log", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "non_negative_int", "type": "Callable[[Any], int]"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "catch_and_log", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "readable_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 94, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_mutually_exclusive_groups", "type": "Any"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "_action_groups", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "application", "type": "module"}, {"lineNumber": 189, "col_offset": 80, "nodeName": "GooeyOptionsArg", "type": "Type[GooeyOptionsArg]"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "GooeyOptionsArg", "type": "Type[GooeyOptionsArg]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "application", "type": "module"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "parser", "type": "Union[Parser, Any]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "application", "type": "module"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "application", "type": "module"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "application", "type": "module"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "application", "type": "module"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "GooeyOptionsArg", "type": "Type[GooeyOptionsArg]"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "GooeyOptionsArg", "type": "Type[GooeyOptionsArg]"}, {"lineNumber": 260, "col_offset": 22, "nodeName": "GooeyOptionsArg", "type": "Type[GooeyOptionsArg]"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "GooeyOptionsArg", "type": "Type[GooeyOptionsArg]"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "GooeyOptionsArg", "type": "Type[GooeyOptionsArg]"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "GooeyOptionsArg", "type": "Type[GooeyOptionsArg]"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "GooeyOptionsArg", "type": "Type[GooeyOptionsArg]"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "application", "type": "module"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "gooey", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "MyGooeyMixin"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "MyGooeyMixin"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "glyph", "type": "module"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "glyph", "type": "module"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "glyph", "type": "module"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "glyph", "type": "module"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "glyph", "type": "module"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "glyph", "type": "module"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "glyph", "type": "module"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "key", "type": "str"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "catch_and_log", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "positive_int", "type": "Callable[[Any], int]"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "catch_and_log", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "readable_yaml_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 347, "col_offset": 28, "nodeName": "catch_and_log", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 347, "col_offset": 42, "nodeName": "np_infinity_int", "type": "Callable[[Any], Any]"}]