[{"lineNumber": 9, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 9, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 300, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 303, "col_offset": 2, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "methods", "type": "List[str]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "m", "type": "str"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "methods", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "Y", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "centers", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "Y", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "centers", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "methods", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "m", "type": "str"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "methods", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "A", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "B", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "A", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "B", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "A", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "B", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "dist", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "integral", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "integral", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "mu1", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "alpha", "type": "float"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "VaR_est", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "VaR_true", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "mu1", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "alpha", "type": "float"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "VaR_est", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "VaR_true", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "mu", "type": "int"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "sigma", "type": "int"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "mu1", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "alpha", "type": "float"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "CVaR_true", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "CVaR_est", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "mu", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "mu", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "Y", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "model", "type": "cde.density_estimator.MDN.MixtureDensityNetwork"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 301, "col_offset": 2, "nodeName": "filterwarnings", "type": "Any"}, {"lineNumber": 303, "col_offset": 10, "nodeName": "TestSuite", "type": "Type[unittest.suite.TestSuite]"}, {"lineNumber": 307, "col_offset": 2, "nodeName": "addTest", "type": "Callable[[Union[unittest.case.TestCase, unittest.suite.TestSuite]], None]"}, {"lineNumber": 309, "col_offset": 2, "nodeName": "run", "type": "Callable[[unittest.result.TestResult], unittest.result.TestResult]"}, {"lineNumber": 16, "col_offset": 6, "nodeName": "Y", "type": "Any"}, {"lineNumber": 17, "col_offset": 6, "nodeName": "centers", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "sample_center_points", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "Y", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "sample_center_points", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "Y", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "Y", "type": "Any"}, {"lineNumber": 35, "col_offset": 6, "nodeName": "centers", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "norm_along_axis_1", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "B", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "norm_along_axis_1", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "B", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "asarray", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "norm_along_axis_1", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "B", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "norm_along_axis_1", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "A", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "B", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "norm_along_axis_1", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "A", "type": "Any"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "B", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "mc_integration_cauchy", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "mc_integration_cauchy", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "array", "type": "Any"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "value_at_risk", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "ppf", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "alpha", "type": "float"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "VaR_true", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "VaR_true", "type": "Any"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "array", "type": "Any"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "value_at_risk", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "ppf", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "alpha", "type": "float"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "VaR_true", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "VaR_true", "type": "Any"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "array", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "sigma", "type": "int"}, {"lineNumber": 107, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "mu", "type": "int"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "conditional_value_at_risk", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "CVaR_true", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "CVaR_true", "type": "Any"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "array", "type": "Any"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "mean_", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "array", "type": "Any"}, {"lineNumber": 131, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "mean_", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "normal", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "MixtureDensityNetwork", "type": "Type[cde.density_estimator.MDN.MixtureDensityNetwork]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "X", "type": "Any"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "Y", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "mean_", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 301, "col_offset": 2, "nodeName": "warnings", "type": "module"}, {"lineNumber": 303, "col_offset": 10, "nodeName": "unittest", "type": "module"}, {"lineNumber": 307, "col_offset": 2, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "TestRiskMeasures", "type": "Type[TestRiskMeasures]"}, {"lineNumber": 309, "col_offset": 2, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 16, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "sample_center_points", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 37, "nodeName": "Y", "type": "Any"}, {"lineNumber": 18, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 18, "col_offset": 37, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 19, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "self", "type": "TestHelpers"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "mean", "type": "Any"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "mean", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "self", "type": "TestHelpers"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "mean", "type": "Any"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "mean", "type": "Any"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "sample_center_points", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "Y", "type": "Any"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "self", "type": "TestHelpers"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "self", "type": "TestHelpers"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "self", "type": "TestHelpers"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "dist1", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "self", "type": "TestHelpers"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "dist2", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "self", "type": "TestHelpers"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "dist", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "self", "type": "TestHelpers"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "integral", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "TestHelpers"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "integral", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "TestHelpers"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "integral", "type": "Any"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "mu1", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 84, "col_offset": 62, "nodeName": "alpha", "type": "float"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "norm", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "VaR_est", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "VaR_est", "type": "Any"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "mu1", "type": "Any"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 96, "col_offset": 63, "nodeName": "alpha", "type": "float"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "norm", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "VaR_est", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "VaR_est", "type": "Any"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "mu", "type": "int"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "mu1", "type": "Any"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 112, "col_offset": 76, "nodeName": "alpha", "type": "float"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "CVaR_est", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "CVaR_est", "type": "Any"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "identity", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "mu", "type": "Any"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "mu", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 125, "col_offset": 43, "nodeName": "mu", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "identity", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "mu", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 134, "col_offset": 43, "nodeName": "mu", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 135, "col_offset": 43, "nodeName": "mu", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "model", "type": "cde.density_estimator.MDN.MixtureDensityNetwork"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "model", "type": "cde.density_estimator.MDN.MixtureDensityNetwork"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 16, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 17, "col_offset": 47, "nodeName": "m", "type": "str"}, {"lineNumber": 18, "col_offset": 6, "nodeName": "self", "type": "TestHelpers"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "centers", "type": "Any"}, {"lineNumber": 18, "col_offset": 37, "nodeName": "Y", "type": "Any"}, {"lineNumber": 19, "col_offset": 6, "nodeName": "self", "type": "TestHelpers"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "Y", "type": "Any"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "centers", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "Y", "type": "Any"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "centers", "type": "Any"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 47, "nodeName": "m", "type": "str"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "self", "type": "TestHelpers"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "centers", "type": "Any"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "Y", "type": "Any"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "self", "type": "TestHelpers"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "pdf", "type": "Any"}, {"lineNumber": 66, "col_offset": 66, "nodeName": "y", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "array", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "sigma", "type": "int"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "alpha", "type": "float"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "pdf", "type": "Any"}, {"lineNumber": 112, "col_offset": 52, "nodeName": "array", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "array", "type": "Any"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "array", "type": "Any"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "array", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 16, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "centers", "type": "Any"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "Y", "type": "Any"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "centers", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "Y", "type": "Any"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "norm", "type": "Any"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "ppf", "type": "Any"}, {"lineNumber": 111, "col_offset": 53, "nodeName": "alpha", "type": "float"}, {"lineNumber": 112, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "stats", "type": "Any"}, {"lineNumber": 66, "col_offset": 86, "nodeName": "diag", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "pdf", "type": "Any"}, {"lineNumber": 71, "col_offset": 78, "nodeName": "y", "type": "Any"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "norm", "type": "Any"}, {"lineNumber": 66, "col_offset": 86, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "stats", "type": "Any"}, {"lineNumber": 71, "col_offset": 98, "nodeName": "diag", "type": "Any"}, {"lineNumber": 71, "col_offset": 98, "nodeName": "np", "type": "module"}]