[{"lineNumber": 78, "col_offset": 0, "nodeName": "find_root_newton_method", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "find_root_by_bounding", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "optimizer", "type": "AdamOptimizer"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "n_iter", "type": "int"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "percentage_roots_found", "type": "float"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "x", "type": "Optional[Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "n_iter", "type": "int"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "approx_error", "type": "float"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "middle", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "allowed_kwargs", "type": "Set[str]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "iterations", "type": "int"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "lr", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "beta_1", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "beta_1", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "beta_2", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "beta_2", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "decay", "type": "Any"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "decay", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "initial_decay", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "decay", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "original_shapes", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "grads", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "lr", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "lr_t", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "ret", "type": "List[Optional[Any]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "iterations", "type": "int"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "ret", "type": "List[Optional[Any]]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "fun", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "AdamOptimizer", "type": "Type[AdamOptimizer]"}, {"lineNumber": 102, "col_offset": 10, "nodeName": "percentage_roots_found", "type": "float"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "newton_step", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "newton_step", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "x", "type": "Optional[Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "approx_error", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "percentage_roots_found", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "n_iter", "type": "int"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "fun", "type": "Any"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "approx_error", "type": "float"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "eps", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "middle", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "left_of_zero", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "approx_error", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "n_iter", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "initial_decay", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "iterations", "type": "int"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "lr", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "ms", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "vs", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "g", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "m", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 62, "col_offset": 53, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 61, "nodeName": "grads", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 68, "nodeName": "ms", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 77, "nodeName": "vs", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "m_t", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "v_t", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "p_t", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "m_t", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "v_t", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "p_t", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "fun", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "clip", "type": "Any"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "newton_step", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "abs", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "f", "type": "Any"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "mean", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "n_iter", "type": "int"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "fun", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "middle", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "middle", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "right", "type": "Any"}, {"lineNumber": 142, "col_offset": 46, "nodeName": "middle", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "n_iter", "type": "int"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "NaN", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "k", "type": "str"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "allowed_kwargs", "type": "Set[str]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "params", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "grads", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 62, "col_offset": 68, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 62, "col_offset": 77, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "p", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "ms", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "vs", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "ret", "type": "List[Optional[Any]]"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "ret", "type": "List[Optional[Any]]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "ret", "type": "List[Optional[Any]]"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "f", "type": "Any"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "g", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "get_update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 41, "nodeName": "approx_error", "type": "Any"}, {"lineNumber": 110, "col_offset": 56, "nodeName": "eps", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "right", "type": "Any"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "left", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "left_of_zero", "type": "Any"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "left_of_zero", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "left", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "right", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "mean", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 58, "col_offset": 45, "nodeName": "p", "type": "Any"}, {"lineNumber": 58, "col_offset": 50, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "p", "type": "Any"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "beta_1", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "m", "type": "Any"}, {"lineNumber": 63, "col_offset": 59, "nodeName": "g", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "beta_2", "type": "Any"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "original_shapes", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "optimizer", "type": "AdamOptimizer"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 107, "col_offset": 39, "nodeName": "newton_step", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "f", "type": "Any"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "logical_not", "type": "Any"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "left_of_zero", "type": "Any"}, {"lineNumber": 142, "col_offset": 53, "nodeName": "logical_not", "type": "Any"}, {"lineNumber": 142, "col_offset": 68, "nodeName": "left_of_zero", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "abs", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "decay", "type": "Any"}, {"lineNumber": 51, "col_offset": 43, "nodeName": "iterations", "type": "int"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "power", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "beta_1", "type": "Any"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "t", "type": "int"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "p", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "p", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "beta_1", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "beta_2", "type": "Any"}, {"lineNumber": 64, "col_offset": 59, "nodeName": "square", "type": "Any"}, {"lineNumber": 64, "col_offset": 69, "nodeName": "g", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "lr_t", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "m_t", "type": "Any"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "ret", "type": "List[Optional[Any]]"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "right", "type": "Any"}, {"lineNumber": 146, "col_offset": 44, "nodeName": "left", "type": "Any"}, {"lineNumber": 24, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 24, "col_offset": 62, "nodeName": "k", "type": "str"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 51, "col_offset": 43, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "power", "type": "Any"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "beta_2", "type": "Any"}, {"lineNumber": 54, "col_offset": 56, "nodeName": "t", "type": "int"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 64, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "v_t", "type": "Any"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "self", "type": "AdamOptimizer"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "np", "type": "module"}]