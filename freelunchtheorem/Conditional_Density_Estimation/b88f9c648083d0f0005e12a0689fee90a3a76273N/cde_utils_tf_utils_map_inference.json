[{"lineNumber": 7, "col_offset": 20, "nodeName": "MAP", "type": "Any"}, {"lineNumber": 9, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 13, "col_offset": 2, "nodeName": "build_loss_and_gradients", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 7, "col_offset": 20, "nodeName": "ed", "type": "Any"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "scope", "type": "Any"}, {"lineNumber": 10, "col_offset": 17, "nodeName": "scope", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "scope", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "p_log_prob", "type": "float"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "reg_penalty", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "grads", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "grads_and_vars", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "self", "type": "MAP_inference"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "unique_name", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "qx", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "iterkeys", "type": "Callable"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "latent_vars", "type": "Any"}, {"lineNumber": 33, "col_offset": 6, "nodeName": "z_copy", "type": "Any"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "iterkeys", "type": "Callable"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "reg_penalty", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "loss", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "var_list", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "grads_and_vars", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 11, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "six", "type": "module"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "self", "type": "MAP_inference"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "RandomVariable", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "six", "type": "module"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "self", "type": "MAP_inference"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "copy", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "z", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "dict_swap", "type": "Dict[Any, Any]"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "six", "type": "module"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "self", "type": "MAP_inference"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "RandomVariable", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "dict_swap", "type": "Dict[Any, Any]"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "get_regularization_losses", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "p_log_prob", "type": "Union[Any, float]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "grads", "type": "Any"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "var_list", "type": "Any"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 11, "col_offset": 10, "nodeName": "MAP_inference", "type": "Type[MAP_inference]"}, {"lineNumber": 11, "col_offset": 25, "nodeName": "self", "type": "MAP_inference"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "z", "type": "Any"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "qz", "type": "Any"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 23, "col_offset": 44, "nodeName": "latent_vars", "type": "Any"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "ed", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "qx", "type": "Any"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "RandomVariable", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "qx", "type": "Any"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "scope", "type": "Any"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "ed", "type": "Any"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "x_copy", "type": "Any"}, {"lineNumber": 42, "col_offset": 10, "nodeName": "x_copy", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "losses", "type": "Any"}, {"lineNumber": 46, "col_offset": 74, "nodeName": "scope", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "six", "type": "module"}, {"lineNumber": 23, "col_offset": 44, "nodeName": "self", "type": "MAP_inference"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "ed", "type": "Any"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "dict_swap", "type": "Dict[Any, Any]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "dict_swap", "type": "Dict[Any, Any]"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "get", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "z", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "dict_swap", "type": "Dict[Any, Any]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 74, "nodeName": "self", "type": "MAP_inference"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "qx", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "scale", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "z_copy", "type": "Any"}, {"lineNumber": 35, "col_offset": 51, "nodeName": "dict_swap", "type": "Dict[Any, Any]"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "scope", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "get", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "self", "type": "MAP_inference"}, {"lineNumber": 35, "col_offset": 61, "nodeName": "z", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "x_copy", "type": "Any"}, {"lineNumber": 44, "col_offset": 53, "nodeName": "dict_swap", "type": "Dict[Any, Any]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "MAP_inference"}, {"lineNumber": 44, "col_offset": 63, "nodeName": "x", "type": "Any"}]